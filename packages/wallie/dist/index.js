(function(){"use strict";try{if(typeof document<"u"){var t=document.createElement("style");t.appendChild(document.createTextNode('@import"https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&family=Poppins:wght@400;500;600;700&display=swap";/*! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.wallie-fixed{position:fixed}.wallie-relative{position:relative}.wallie-inset-0{top:0;right:0;bottom:0;left:0}.wallie-z-10{z-index:10}.wallie-z-50{z-index:50}.wallie-mx-auto{margin-left:auto;margin-right:auto}.wallie--mt-1{margin-top:-.25rem}.wallie-mb-1{margin-bottom:.25rem}.wallie-ml-auto{margin-left:auto}.wallie-block{display:block}.wallie-inline-block{display:inline-block}.wallie-flex{display:flex}.wallie-hidden{display:none}.wallie-h-\\[19px\\]{height:19px}.wallie-h-screen{height:100vh}.wallie-min-h-full{min-height:100%}.wallie-w-5{width:1.25rem}.wallie-w-6{width:1.5rem}.wallie-w-\\[19px\\]{width:19px}.wallie-w-full{width:100%}.wallie-scale-100{--tw-scale-x:1;--tw-scale-y:1}.wallie-scale-100,.wallie-scale-95{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.wallie-scale-95{--tw-scale-x:.95;--tw-scale-y:.95}.wallie-transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.wallie-flex-row{flex-direction:row}.wallie-flex-col{flex-direction:column}.wallie-items-end{align-items:flex-end}.wallie-items-center{align-items:center}.wallie-justify-center{justify-content:center}.wallie-justify-between{justify-content:space-between}.wallie-space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.5rem*var(--tw-space-x-reverse))}.wallie-space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(1rem*var(--tw-space-x-reverse))}.wallie-space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1rem*var(--tw-space-y-reverse));margin-top:calc(1rem*(1 - var(--tw-space-y-reverse)))}.wallie-overflow-hidden{overflow:hidden}.wallie-overflow-y-auto{overflow-y:auto}.wallie-break-all{word-break:break-all}.wallie-rounded-full{border-radius:9999px}.wallie-rounded-lg{border-radius:.5rem}.wallie-bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0/var(--tw-bg-opacity))}.wallie-bg-ord-blue-600{--tw-bg-opacity:1;background-color:rgb(23 30 45/var(--tw-bg-opacity))}.wallie-bg-ord-light-blue{--tw-bg-opacity:1;background-color:rgb(48 55 70/var(--tw-bg-opacity))}.wallie-bg-ord-light-blue-400{--tw-bg-opacity:1;background-color:rgb(73 82 102/var(--tw-bg-opacity))}.wallie-bg-ord-orange{--tw-bg-opacity:1;background-color:rgb(255 108 58/var(--tw-bg-opacity))}.wallie-bg-opacity-90{--tw-bg-opacity:.9}.wallie-p-1{padding:.25rem}.wallie-p-2{padding:.5rem}.wallie-p-4{padding:1rem}.wallie-p-8{padding:2rem}.wallie-px-1{padding-left:.25rem;padding-right:.25rem}.wallie-py-3{padding-bottom:.75rem;padding-top:.75rem}.wallie-pb-4{padding-bottom:1rem}.wallie-pr-2{padding-right:.5rem}.wallie-pr-3{padding-right:.75rem}.wallie-pt-4{padding-top:1rem}.wallie-text-left{text-align:left}.wallie-text-\\[21px\\]{font-size:21px}.wallie-text-lg{font-size:1.125rem;line-height:1.75rem}.wallie-text-sm{font-size:.875rem;line-height:1.25rem}.wallie-font-medium{font-weight:500}.wallie-leading-8{line-height:2rem}.wallie-text-ord-alert{--tw-text-opacity:1;color:rgb(248 242 94/var(--tw-text-opacity))}.wallie-text-ord-blue{--tw-text-opacity:1;color:rgb(17 22 33/var(--tw-text-opacity))}.wallie-text-ord-gray{--tw-text-opacity:1;color:rgb(137 138 149/var(--tw-text-opacity))}.wallie-text-ord-light-blue-400{--tw-text-opacity:1;color:rgb(73 82 102/var(--tw-text-opacity))}.wallie-text-ord-light-gray{--tw-text-opacity:1;color:rgb(217 213 210/var(--tw-text-opacity))}.wallie-opacity-0{opacity:0}.wallie-opacity-100{opacity:1}.wallie-transition-all{transition-duration:.15s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}.wallie-transition-opacity{transition-duration:.15s;transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.wallie-duration-100{transition-duration:.1s}.wallie-duration-200{transition-duration:.2s}.wallie-duration-300{transition-duration:.3s}.wallie-ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}.wallie-ease-out{transition-timing-function:cubic-bezier(0,0,.2,1)}body,html{font-family:Outfit,sans-serif;margin:0;padding:0;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;scroll-behavior:smooth}@media (min-width:640px){.sm\\:wallie-items-center{align-items:center}.sm\\:wallie-p-0{padding:0}}@media (min-width:768px){.md\\:wallie-block{display:block}.md\\:wallie-w-7{width:1.75rem}.md\\:wallie-w-8{width:2rem}.md\\:wallie-w-96{width:24rem}.md\\:wallie-space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.5rem*var(--tw-space-x-reverse))}.md\\:wallie-bg-opacity-75{--tw-bg-opacity:.75}.md\\:wallie-px-3{padding-left:.75rem}.md\\:wallie-pr-3,.md\\:wallie-px-3{padding-right:.75rem}.md\\:wallie-text-xl{font-size:1.25rem;line-height:1.75rem}}')),document.head.appendChild(t)}}catch(e){console.error("vite-plugin-css-injected-by-js",e)}})();
var sn = Object.defineProperty;
var an = (B, L, V) => L in B ? sn(B, L, { enumerable: !0, configurable: !0, writable: !0, value: V }) : B[L] = V;
var Ir = (B, L, V) => an(B, typeof L != "symbol" ? L + "" : L, V);
import * as C$3 from "react";
import C__default, { useState, useEffect, useCallback, createContext, useMemo, useContext, useLayoutEffect, useRef, forwardRef, Fragment, isValidElement, cloneElement, createElement, useReducer, createRef } from "react";
import { createPortal } from "react-dom";
function _mergeNamespaces(B, L) {
  for (var V = 0; V < L.length; V++) {
    const J = L[V];
    if (typeof J != "string" && !Array.isArray(J)) {
      for (const re in J) if (re !== "default" && !(re in B)) {
        const ne = Object.getOwnPropertyDescriptor(J, re);
        ne && Object.defineProperty(B, re, ne.get ? ne : { enumerable: !0, get: () => J[re] });
      }
    }
  }
  return Object.freeze(Object.defineProperty(B, Symbol.toStringTag, { value: "Module" }));
}
function getDefaultExportFromCjs$1(B) {
  return B && B.__esModule && Object.prototype.hasOwnProperty.call(B, "default") ? B.default : B;
}
var browser$c = { exports: {} }, process = browser$c.exports = {}, cachedSetTimeout, cachedClearTimeout;
function defaultSetTimout() {
  throw new Error("setTimeout has not been defined");
}
function defaultClearTimeout() {
  throw new Error("clearTimeout has not been defined");
}
function runTimeout(B) {
  if (cachedSetTimeout === setTimeout) return setTimeout(B, 0);
  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) return cachedSetTimeout = setTimeout, setTimeout(B, 0);
  try {
    return cachedSetTimeout(B, 0);
  } catch {
    try {
      return cachedSetTimeout.call(null, B, 0);
    } catch {
      return cachedSetTimeout.call(this, B, 0);
    }
  }
}
function runClearTimeout(B) {
  if (cachedClearTimeout === clearTimeout) return clearTimeout(B);
  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) return cachedClearTimeout = clearTimeout, clearTimeout(B);
  try {
    return cachedClearTimeout(B);
  } catch {
    try {
      return cachedClearTimeout.call(null, B);
    } catch {
      return cachedClearTimeout.call(this, B);
    }
  }
}
(function() {
  try {
    cachedSetTimeout = typeof setTimeout == "function" ? setTimeout : defaultSetTimout;
  } catch {
    cachedSetTimeout = defaultSetTimout;
  }
  try {
    cachedClearTimeout = typeof clearTimeout == "function" ? clearTimeout : defaultClearTimeout;
  } catch {
    cachedClearTimeout = defaultClearTimeout;
  }
})();
var queue = [], draining = !1, currentQueue, queueIndex = -1;
function cleanUpNextTick() {
  draining && currentQueue && (draining = !1, currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1, queue.length && drainQueue());
}
function drainQueue() {
  if (!draining) {
    var B = runTimeout(cleanUpNextTick);
    draining = !0;
    for (var L = queue.length; L; ) {
      for (currentQueue = queue, queue = []; ++queueIndex < L; ) currentQueue && currentQueue[queueIndex].run();
      queueIndex = -1, L = queue.length;
    }
    currentQueue = null, draining = !1, runClearTimeout(B);
  }
}
function Item(B, L) {
  this.fun = B, this.array = L;
}
function noop$2() {
}
process.nextTick = function(B) {
  var L = new Array(arguments.length - 1);
  if (arguments.length > 1) for (var V = 1; V < arguments.length; V++) L[V - 1] = arguments[V];
  queue.push(new Item(B, L)), queue.length !== 1 || draining || runTimeout(drainQueue);
}, Item.prototype.run = function() {
  this.fun.apply(null, this.array);
}, process.title = "browser", process.browser = !0, process.env = {}, process.argv = [], process.version = "", process.versions = {}, process.on = noop$2, process.addListener = noop$2, process.once = noop$2, process.off = noop$2, process.removeListener = noop$2, process.removeAllListeners = noop$2, process.emit = noop$2, process.prependListener = noop$2, process.prependOnceListener = noop$2, process.listeners = function(B) {
  return [];
}, process.binding = function(B) {
  throw new Error("process.binding is not supported");
}, process.cwd = function() {
  return "/";
}, process.chdir = function(B) {
  throw new Error("process.chdir is not supported");
}, process.umask = function() {
  return 0;
};
var browserExports$1 = browser$c.exports;
const process$1 = getDefaultExportFromCjs$1(browserExports$1);
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(B) {
  return B && B.__esModule && Object.prototype.hasOwnProperty.call(B, "default") ? B.default : B;
}
function getAugmentedNamespace(B) {
  if (B.__esModule) return B;
  var L = B.default;
  if (typeof L == "function") {
    var V = function J() {
      return this instanceof J ? Reflect.construct(L, arguments, this.constructor) : L.apply(this, arguments);
    };
    V.prototype = L.prototype;
  } else V = {};
  return Object.defineProperty(V, "__esModule", { value: !0 }), Object.keys(B).forEach(function(J) {
    var re = Object.getOwnPropertyDescriptor(B, J);
    Object.defineProperty(V, J, re.get ? re : { enumerable: !0, get: function() {
      return B[J];
    } });
  }), V;
}
var jsxRuntime = { exports: {} }, reactJsxRuntime_production_min = {}, hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var B = C__default, L = Symbol.for("react.element"), V = Symbol.for("react.fragment"), J = Object.prototype.hasOwnProperty, re = B.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, ne = { key: !0, ref: !0, __self: !0, __source: !0 };
  function ie(oe, pe, ce) {
    var Oe, rt = {}, ut = null, dt = null;
    for (Oe in ce !== void 0 && (ut = "" + ce), pe.key !== void 0 && (ut = "" + pe.key), pe.ref !== void 0 && (dt = pe.ref), pe) J.call(pe, Oe) && !ne.hasOwnProperty(Oe) && (rt[Oe] = pe[Oe]);
    if (oe && oe.defaultProps) for (Oe in pe = oe.defaultProps) rt[Oe] === void 0 && (rt[Oe] = pe[Oe]);
    return { $$typeof: L, type: oe, key: ut, ref: dt, props: rt, _owner: re.current };
  }
  return reactJsxRuntime_production_min.Fragment = V, reactJsxRuntime_production_min.jsx = ie, reactJsxRuntime_production_min.jsxs = ie, reactJsxRuntime_production_min;
}
var reactJsxRuntime_development = {}, hasRequiredReactJsxRuntime_development;
function requireReactJsxRuntime_development() {
  return hasRequiredReactJsxRuntime_development || (hasRequiredReactJsxRuntime_development = 1, process$1.env.NODE_ENV !== "production" && function() {
    var B = C__default, L = Symbol.for("react.element"), V = Symbol.for("react.portal"), J = Symbol.for("react.fragment"), re = Symbol.for("react.strict_mode"), ne = Symbol.for("react.profiler"), ie = Symbol.for("react.provider"), oe = Symbol.for("react.context"), pe = Symbol.for("react.forward_ref"), ce = Symbol.for("react.suspense"), Oe = Symbol.for("react.suspense_list"), rt = Symbol.for("react.memo"), ut = Symbol.for("react.lazy"), dt = Symbol.for("react.offscreen"), ht = Symbol.iterator, bt = "@@iterator", Tt = B.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function wt(jt) {
      for (var zt = arguments.length, Xt = new Array(zt > 1 ? zt - 1 : 0), rr = 1; rr < zt; rr++) Xt[rr - 1] = arguments[rr];
      (function(Qt, ar, or) {
        var nr = Tt.ReactDebugCurrentFrame, yr = nr.getStackAddendum();
        yr !== "" && (ar += "%s", or = or.concat([yr]));
        var vr = or.map(function(fr) {
          return String(fr);
        });
        vr.unshift("Warning: " + ar), Function.prototype.apply.call(console[Qt], console, vr);
      })("error", jt, Xt);
    }
    var Et, Rt = !1, Bt = !1, Pt = !1, Dt = !1, Gt = !1;
    function at(jt) {
      return jt.displayName || "Context";
    }
    function lt(jt) {
      if (jt == null) return null;
      if (typeof jt.tag == "number" && wt("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof jt == "function") return jt.displayName || jt.name || null;
      if (typeof jt == "string") return jt;
      switch (jt) {
        case J:
          return "Fragment";
        case V:
          return "Portal";
        case ne:
          return "Profiler";
        case re:
          return "StrictMode";
        case ce:
          return "Suspense";
        case Oe:
          return "SuspenseList";
      }
      if (typeof jt == "object") switch (jt.$$typeof) {
        case oe:
          return at(jt) + ".Consumer";
        case ie:
          return at(jt._context) + ".Provider";
        case pe:
          return function(ar, or, nr) {
            var yr = ar.displayName;
            if (yr) return yr;
            var vr = or.displayName || or.name || "";
            return vr !== "" ? nr + "(" + vr + ")" : nr;
          }(jt, jt.render, "ForwardRef");
        case rt:
          var zt = jt.displayName || null;
          return zt !== null ? zt : lt(jt.type) || "Memo";
        case ut:
          var Xt = jt, rr = Xt._payload, Qt = Xt._init;
          try {
            return lt(Qt(rr));
          } catch {
            return null;
          }
      }
      return null;
    }
    Et = Symbol.for("react.module.reference");
    var Ce, st, it, nt, ot, ke, ct, yt = Object.assign, $t = 0;
    function gt() {
    }
    gt.__reactDisabledLog = !0;
    var xt, At = Tt.ReactCurrentDispatcher;
    function mt(jt, zt, Xt) {
      if (xt === void 0) try {
        throw Error();
      } catch (Qt) {
        var rr = Qt.stack.trim().match(/\n( *(at )?)/);
        xt = rr && rr[1] || "";
      }
      return `
` + xt + jt;
    }
    var St, Mt = !1, It = typeof WeakMap == "function" ? WeakMap : Map;
    function Ft(jt, zt) {
      if (!jt || Mt) return "";
      var Xt, rr = St.get(jt);
      if (rr !== void 0) return rr;
      Mt = !0;
      var Qt, ar = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0, Qt = At.current, At.current = null, function() {
        if ($t === 0) {
          Ce = console.log, st = console.info, it = console.warn, nt = console.error, ot = console.group, ke = console.groupCollapsed, ct = console.groupEnd;
          var $r = { configurable: !0, enumerable: !0, value: gt, writable: !0 };
          Object.defineProperties(console, { info: $r, log: $r, warn: $r, error: $r, group: $r, groupCollapsed: $r, groupEnd: $r });
        }
        $t++;
      }();
      try {
        if (zt) {
          var or = function() {
            throw Error();
          };
          if (Object.defineProperty(or.prototype, "props", { set: function() {
            throw Error();
          } }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(or, []);
            } catch ($r) {
              Xt = $r;
            }
            Reflect.construct(jt, [], or);
          } else {
            try {
              or.call();
            } catch ($r) {
              Xt = $r;
            }
            jt.call(or.prototype);
          }
        } else {
          try {
            throw Error();
          } catch ($r) {
            Xt = $r;
          }
          jt();
        }
      } catch ($r) {
        if ($r && Xt && typeof $r.stack == "string") {
          for (var nr = $r.stack.split(`
`), yr = Xt.stack.split(`
`), vr = nr.length - 1, fr = yr.length - 1; vr >= 1 && fr >= 0 && nr[vr] !== yr[fr]; ) fr--;
          for (; vr >= 1 && fr >= 0; vr--, fr--) if (nr[vr] !== yr[fr]) {
            if (vr !== 1 || fr !== 1) do
              if (vr--, --fr < 0 || nr[vr] !== yr[fr]) {
                var gr = `
` + nr[vr].replace(" at new ", " at ");
                return jt.displayName && gr.includes("<anonymous>") && (gr = gr.replace("<anonymous>", jt.displayName)), typeof jt == "function" && St.set(jt, gr), gr;
              }
            while (vr >= 1 && fr >= 0);
            break;
          }
        }
      } finally {
        Mt = !1, At.current = Qt, function() {
          if (--$t == 0) {
            var $r = { configurable: !0, enumerable: !0, writable: !0 };
            Object.defineProperties(console, { log: yt({}, $r, { value: Ce }), info: yt({}, $r, { value: st }), warn: yt({}, $r, { value: it }), error: yt({}, $r, { value: nt }), group: yt({}, $r, { value: ot }), groupCollapsed: yt({}, $r, { value: ke }), groupEnd: yt({}, $r, { value: ct }) });
          }
          $t < 0 && wt("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }(), Error.prepareStackTrace = ar;
      }
      var Er = jt ? jt.displayName || jt.name : "", br = Er ? mt(Er) : "";
      return typeof jt == "function" && St.set(jt, br), br;
    }
    function Vt(jt, zt, Xt) {
      if (jt == null) return "";
      if (typeof jt == "function") return Ft(jt, !(!(rr = jt.prototype) || !rr.isReactComponent));
      var rr;
      if (typeof jt == "string") return mt(jt);
      switch (jt) {
        case ce:
          return mt("Suspense");
        case Oe:
          return mt("SuspenseList");
      }
      if (typeof jt == "object") switch (jt.$$typeof) {
        case pe:
          return Ft(jt.render, !1);
        case rt:
          return Vt(jt.type, zt, Xt);
        case ut:
          var Qt = jt, ar = Qt._payload, or = Qt._init;
          try {
            return Vt(or(ar), zt, Xt);
          } catch {
          }
      }
      return "";
    }
    St = new It();
    var qt = Object.prototype.hasOwnProperty, er = {}, tr = Tt.ReactDebugCurrentFrame;
    function Jt(jt) {
      if (jt) {
        var zt = jt._owner, Xt = Vt(jt.type, jt._source, zt ? zt.type : null);
        tr.setExtraStackFrame(Xt);
      } else tr.setExtraStackFrame(null);
    }
    var ur = Array.isArray;
    function pr(jt) {
      return ur(jt);
    }
    function dr(jt) {
      return "" + jt;
    }
    function Pr(jt) {
      if (function(zt) {
        try {
          return dr(zt), !1;
        } catch {
          return !0;
        }
      }(jt)) return wt("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", function(zt) {
        return typeof Symbol == "function" && Symbol.toStringTag && zt[Symbol.toStringTag] || zt.constructor.name || "Object";
      }(jt)), dr(jt);
    }
    var Sr, lr, kr, pt = Tt.ReactCurrentOwner, vt = { key: !0, ref: !0, __self: !0, __source: !0 };
    kr = {};
    var kt = function(jt, zt, Xt, rr, Qt, ar, or) {
      var nr = { $$typeof: L, type: jt, key: zt, ref: Xt, props: or, _owner: ar, _store: {} };
      return Object.defineProperty(nr._store, "validated", { configurable: !1, enumerable: !1, writable: !0, value: !1 }), Object.defineProperty(nr, "_self", { configurable: !1, enumerable: !1, writable: !1, value: rr }), Object.defineProperty(nr, "_source", { configurable: !1, enumerable: !1, writable: !1, value: Qt }), Object.freeze && (Object.freeze(nr.props), Object.freeze(nr)), nr;
    };
    function Ct(jt, zt, Xt, rr, Qt) {
      var ar, or = {}, nr = null, yr = null;
      for (ar in Xt !== void 0 && (Pr(Xt), nr = "" + Xt), function(gr) {
        if (qt.call(gr, "key")) {
          var Er = Object.getOwnPropertyDescriptor(gr, "key").get;
          if (Er && Er.isReactWarning) return !1;
        }
        return gr.key !== void 0;
      }(zt) && (Pr(zt.key), nr = "" + zt.key), function(gr) {
        if (qt.call(gr, "ref")) {
          var Er = Object.getOwnPropertyDescriptor(gr, "ref").get;
          if (Er && Er.isReactWarning) return !1;
        }
        return gr.ref !== void 0;
      }(zt) && (yr = zt.ref, function(gr, Er) {
        if (typeof gr.ref == "string" && pt.current && Er && pt.current.stateNode !== Er) {
          var br = lt(pt.current.type);
          kr[br] || (wt('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', lt(pt.current.type), gr.ref), kr[br] = !0);
        }
      }(zt, Qt)), zt) qt.call(zt, ar) && !vt.hasOwnProperty(ar) && (or[ar] = zt[ar]);
      if (jt && jt.defaultProps) {
        var vr = jt.defaultProps;
        for (ar in vr) or[ar] === void 0 && (or[ar] = vr[ar]);
      }
      if (nr || yr) {
        var fr = typeof jt == "function" ? jt.displayName || jt.name || "Unknown" : jt;
        nr && function(gr, Er) {
          var br = function() {
            Sr || (Sr = !0, wt("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Er));
          };
          br.isReactWarning = !0, Object.defineProperty(gr, "key", { get: br, configurable: !0 });
        }(or, fr), yr && function(gr, Er) {
          var br = function() {
            lr || (lr = !0, wt("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Er));
          };
          br.isReactWarning = !0, Object.defineProperty(gr, "ref", { get: br, configurable: !0 });
        }(or, fr);
      }
      return kt(jt, nr, yr, Qt, rr, pt.current, or);
    }
    var Ht, Kt = Tt.ReactCurrentOwner, Yt = Tt.ReactDebugCurrentFrame;
    function ir(jt) {
      if (jt) {
        var zt = jt._owner, Xt = Vt(jt.type, jt._source, zt ? zt.type : null);
        Yt.setExtraStackFrame(Xt);
      } else Yt.setExtraStackFrame(null);
    }
    function wr(jt) {
      return typeof jt == "object" && jt !== null && jt.$$typeof === L;
    }
    function _r() {
      if (Kt.current) {
        var jt = lt(Kt.current.type);
        if (jt) return `

Check the render method of \`` + jt + "`.";
      }
      return "";
    }
    Ht = !1;
    var cr = {};
    function Tr(jt, zt) {
      if (jt._store && !jt._store.validated && jt.key == null) {
        jt._store.validated = !0;
        var Xt = function(Qt) {
          var ar = _r();
          if (!ar) {
            var or = typeof Qt == "string" ? Qt : Qt.displayName || Qt.name;
            or && (ar = `

Check the top-level render call using <` + or + ">.");
          }
          return ar;
        }(zt);
        if (!cr[Xt]) {
          cr[Xt] = !0;
          var rr = "";
          jt && jt._owner && jt._owner !== Kt.current && (rr = " It was passed a child from " + lt(jt._owner.type) + "."), ir(jt), wt('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Xt, rr), ir(null);
        }
      }
    }
    function Lt(jt, zt) {
      if (typeof jt == "object") {
        if (pr(jt)) for (var Xt = 0; Xt < jt.length; Xt++) {
          var rr = jt[Xt];
          wr(rr) && Tr(rr, zt);
        }
        else if (wr(jt)) jt._store && (jt._store.validated = !0);
        else if (jt) {
          var Qt = function(nr) {
            if (nr === null || typeof nr != "object") return null;
            var yr = ht && nr[ht] || nr[bt];
            return typeof yr == "function" ? yr : null;
          }(jt);
          if (typeof Qt == "function" && Qt !== jt.entries) for (var ar, or = Qt.call(jt); !(ar = or.next()).done; ) wr(ar.value) && Tr(ar.value, zt);
        }
      }
    }
    function Ot(jt) {
      var zt, Xt = jt.type;
      if (Xt != null && typeof Xt != "string") {
        if (typeof Xt == "function") zt = Xt.propTypes;
        else {
          if (typeof Xt != "object" || Xt.$$typeof !== pe && Xt.$$typeof !== rt) return;
          zt = Xt.propTypes;
        }
        if (zt) {
          var rr = lt(Xt);
          (function(Qt, ar, or, nr, yr) {
            var vr = Function.call.bind(qt);
            for (var fr in Qt) if (vr(Qt, fr)) {
              var gr = void 0;
              try {
                if (typeof Qt[fr] != "function") {
                  var Er = Error((nr || "React class") + ": " + or + " type `" + fr + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof Qt[fr] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw Er.name = "Invariant Violation", Er;
                }
                gr = Qt[fr](ar, fr, nr, or, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (br) {
                gr = br;
              }
              !gr || gr instanceof Error || (Jt(yr), wt("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", nr || "React class", or, fr, typeof gr), Jt(null)), gr instanceof Error && !(gr.message in er) && (er[gr.message] = !0, Jt(yr), wt("Failed %s type: %s", or, gr.message), Jt(null));
            }
          })(zt, jt.props, "prop", rr, jt);
        } else Xt.PropTypes !== void 0 && !Ht && (Ht = !0, wt("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", lt(Xt) || "Unknown"));
        typeof Xt.getDefaultProps != "function" || Xt.getDefaultProps.isReactClassApproved || wt("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    var Nt = {};
    function Ut(jt, zt, Xt, rr, Qt, ar) {
      var or = function(Ar) {
        return typeof Ar == "string" || typeof Ar == "function" || !!(Ar === J || Ar === ne || Gt || Ar === re || Ar === ce || Ar === Oe || Dt || Ar === dt || Rt || Bt || Pt) || typeof Ar == "object" && Ar !== null && (Ar.$$typeof === ut || Ar.$$typeof === rt || Ar.$$typeof === ie || Ar.$$typeof === oe || Ar.$$typeof === pe || Ar.$$typeof === Et || Ar.getModuleId !== void 0);
      }(jt);
      if (!or) {
        var nr = "";
        (jt === void 0 || typeof jt == "object" && jt !== null && Object.keys(jt).length === 0) && (nr += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
        var yr;
        nr += _r(), jt === null ? yr = "null" : pr(jt) ? yr = "array" : jt !== void 0 && jt.$$typeof === L ? (yr = "<" + (lt(jt.type) || "Unknown") + " />", nr = " Did you accidentally export a JSX literal instead of a component?") : yr = typeof jt, wt("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", yr, nr);
      }
      var vr = Ct(jt, zt, Xt, Qt, ar);
      if (vr == null) return vr;
      if (or) {
        var fr = zt.children;
        if (fr !== void 0) if (rr) if (pr(fr)) {
          for (var gr = 0; gr < fr.length; gr++) Lt(fr[gr], jt);
          Object.freeze && Object.freeze(fr);
        } else wt("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
        else Lt(fr, jt);
      }
      if (qt.call(zt, "key")) {
        var Er = lt(jt), br = Object.keys(zt).filter(function(Ar) {
          return Ar !== "key";
        }), $r = br.length > 0 ? "{key: someKey, " + br.join(": ..., ") + ": ...}" : "{key: someKey}";
        Nt[Er + $r] || (wt(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, $r, Er, br.length > 0 ? "{" + br.join(": ..., ") + ": ...}" : "{}", Er), Nt[Er + $r] = !0);
      }
      return jt === J ? function(Ar) {
        for (var Br = Object.keys(Ar.props), Mr = 0; Mr < Br.length; Mr++) {
          var Or = Br[Mr];
          if (Or !== "children" && Or !== "key") {
            ir(Ar), wt("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Or), ir(null);
            break;
          }
        }
        Ar.ref !== null && (ir(Ar), wt("Invalid attribute `ref` supplied to `React.Fragment`."), ir(null));
      }(vr) : Ot(vr), vr;
    }
    var Wt = function(jt, zt, Xt) {
      return Ut(jt, zt, Xt, !1);
    }, Zt = function(jt, zt, Xt) {
      return Ut(jt, zt, Xt, !0);
    };
    reactJsxRuntime_development.Fragment = J, reactJsxRuntime_development.jsx = Wt, reactJsxRuntime_development.jsxs = Zt;
  }()), reactJsxRuntime_development;
}
process$1.env.NODE_ENV === "production" ? jsxRuntime.exports = requireReactJsxRuntime_production_min() : jsxRuntime.exports = requireReactJsxRuntime_development();
var jsxRuntimeExports = jsxRuntime.exports;
function useHasMounted() {
  const [B, L] = useState(!1);
  return useEffect(() => {
    L(!0);
  }, []), B;
}
const KEY_PREFIX = "wallie";
function isBrowser() {
  return typeof window < "u";
}
function getItemFromLocalStorage(B) {
  if (!isBrowser()) return null;
  typeof window > "u" && console.warn(`Attempted to read local storage key ${B} even though environment is not a browser.`);
  const L = `${KEY_PREFIX}_${B}`;
  try {
    const V = window.localStorage.getItem(L);
    return V != null ? JSON.parse(V) : null;
  } catch (V) {
    return console.error(`Error retrieving ${L} from localStorage`, V), null;
  }
}
function setItemToLocalStorage(B, L) {
  if (!isBrowser()) return;
  typeof window > "u" && console.warn(`Attempted to set local storage key ${B} even though environment is not a browser.`);
  const V = `${KEY_PREFIX}_${B}`;
  try {
    L ? window.localStorage.setItem(V, JSON.stringify(L)) : window.localStorage.removeItem(V);
  } catch (J) {
    console.error(`Error saving ${V} to localStorage`, J);
  }
}
function useLocalStorage(B, L, V = {}) {
  const { initializeWithValue: J = !0 } = V, re = useCallback(() => getItemFromLocalStorage(B) || (setItemToLocalStorage(B, L), L), [L, B]), [ne, ie] = useState(() => J ? re() : L), oe = useCallback((pe) => {
    setItemToLocalStorage(B, pe), ie(pe);
  }, [B]);
  return useEffect(() => {
    ie(re());
  }, [B]), [ne, oe];
}
var Network = ((B) => (B.MAINNET = "mainnet", B.TESTNET = "testnet", B.SIGNET = "signet", B))(Network || {}), Wallet = ((B) => (B.UNISAT = "unisat", B.XVERSE = "xverse", B.MAGICEDEN = "magiceden", B.LEATHER = "leather", B.OKX = "okx", B))(Wallet || {});
const EMPTY_BIADDRESS_OBJECT = { payments: null, ordinals: null }, WallieContext = createContext(void 0), ADDRESS = "address", WALLET = "wallet", PUBLIC_KEY = "publicKey", FORMAT = "format";
function WallieProvider({ children: B, initialNetwork: L, ssr: V = !1 }) {
  if (!L) throw new Error("Initial network cannot be empty");
  const [J, re] = useState(L), [ne, ie] = useLocalStorage(ADDRESS, EMPTY_BIADDRESS_OBJECT, { initializeWithValue: !V }), [oe, pe] = useLocalStorage(WALLET, null, { initializeWithValue: !V }), [ce, Oe] = useLocalStorage(PUBLIC_KEY, EMPTY_BIADDRESS_OBJECT, { initializeWithValue: !V }), [rt, ut] = useLocalStorage(FORMAT, EMPTY_BIADDRESS_OBJECT, { initializeWithValue: !V }), [dt, ht] = useState(!1), bt = useCallback(() => ht(!0), []), Tt = useCallback(() => ht(!1), []), wt = useCallback(() => {
    ie(EMPTY_BIADDRESS_OBJECT), Oe(EMPTY_BIADDRESS_OBJECT), ut(EMPTY_BIADDRESS_OBJECT), pe(null);
  }, [ie, ut, Oe, pe]), Et = useMemo(() => ({ address: ne, updateAddress: ie, publicKey: ce, updatePublicKey: Oe, network: J, updateNetwork: re, wallet: oe, updateWallet: pe, isModalOpen: dt, openModal: bt, closeModal: Tt, format: rt, updateFormat: ut, disconnectWallet: wt }), [ne, ie, ce, Oe, J, re, oe, pe, dt, bt, Tt, rt, ut, wt]);
  return useEffect(() => {
    re(L);
  }, [L]), jsxRuntimeExports.jsx(WallieContext.Provider, { value: Et, children: B });
}
function useWallie() {
  const B = useContext(WallieContext);
  if (!B) throw new Error("useWallie must be used within WallieProvider");
  return B;
}
var i$7 = Object.defineProperty, d$6 = (B, L, V) => L in B ? i$7(B, L, { enumerable: !0, configurable: !0, writable: !0, value: V }) : B[L] = V, r$5 = (B, L, V) => (d$6(B, typeof L != "symbol" ? L + "" : L, V), V);
let o$7 = class {
  constructor() {
    r$5(this, "current", this.detect()), r$5(this, "handoffState", "pending"), r$5(this, "currentId", 0);
  }
  set(B) {
    this.current !== B && (this.handoffState = "pending", this.currentId = 0, this.current = B);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
}, s$b = new o$7(), l$6 = (B, L) => {
  s$b.isServer ? useEffect(B, L) : useLayoutEffect(B, L);
};
function s$a(B) {
  let L = useRef(B);
  return l$6(() => {
    L.current = B;
  }, [B]), L;
}
let o$6 = function(B) {
  let L = s$a(B);
  return C__default.useCallback((...V) => L.current(...V), [L]);
};
function t$8(B) {
  typeof queueMicrotask == "function" ? queueMicrotask(B) : Promise.resolve().then(B).catch((L) => setTimeout(() => {
    throw L;
  }));
}
function o$5() {
  let B = [], L = { addEventListener: (V, J, re, ne) => (V.addEventListener(J, re, ne), L.add(() => V.removeEventListener(J, re, ne))), requestAnimationFrame(...V) {
    let J = requestAnimationFrame(...V);
    return L.add(() => cancelAnimationFrame(J));
  }, nextFrame: (...V) => L.requestAnimationFrame(() => L.requestAnimationFrame(...V)), setTimeout(...V) {
    let J = setTimeout(...V);
    return L.add(() => clearTimeout(J));
  }, microTask(...V) {
    let J = { current: !0 };
    return t$8(() => {
      J.current && V[0]();
    }), L.add(() => {
      J.current = !1;
    });
  }, style(V, J, re) {
    let ne = V.style.getPropertyValue(J);
    return Object.assign(V.style, { [J]: re }), this.add(() => {
      Object.assign(V.style, { [J]: ne });
    });
  }, group(V) {
    let J = o$5();
    return V(J), this.add(() => J.dispose());
  }, add: (V) => (B.push(V), () => {
    let J = B.indexOf(V);
    if (J >= 0) for (let re of B.splice(J, 1)) re();
  }), dispose() {
    for (let V of B.splice(0)) V();
  } };
  return L;
}
function p$4() {
  let [B] = useState(o$5);
  return useEffect(() => () => B.dispose(), [B]), B;
}
function s$9() {
  let B = typeof document > "u";
  return "useSyncExternalStore" in C$3 && C$3.useSyncExternalStore(() => () => {
  }, () => !1, () => !B);
}
function l$5() {
  let B = s$9(), [L, V] = C$3.useState(s$b.isHandoffComplete);
  return L && s$b.isHandoffComplete === !1 && V(!1), C$3.useEffect(() => {
    L !== !0 && V(!0);
  }, [L]), C$3.useEffect(() => s$b.handoff(), []), !B && L;
}
var o$4;
let I$6 = (o$4 = C__default.useId) != null ? o$4 : function() {
  let B = l$5(), [L, V] = C__default.useState(B ? () => s$b.nextId() : null);
  return l$6(() => {
    L === null && V(s$b.nextId());
  }, [L]), L != null ? "" + L : void 0;
};
function u$7(B, L, ...V) {
  if (B in L) {
    let re = L[B];
    return typeof re == "function" ? re(...V) : re;
  }
  let J = new Error(`Tried to handle "${B}" but there is no handler defined. Only defined handlers are: ${Object.keys(L).map((re) => `"${re}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(J, u$7), J;
}
function o$3(B) {
  return s$b.isServer ? null : B instanceof Node ? B.ownerDocument : B != null && B.hasOwnProperty("current") && B.current instanceof Node ? B.current.ownerDocument : document;
}
let c$6 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((B) => `${B}:not([tabindex='-1'])`).join(",");
var M$2 = ((B) => (B[B.First = 1] = "First", B[B.Previous = 2] = "Previous", B[B.Next = 4] = "Next", B[B.Last = 8] = "Last", B[B.WrapAround = 16] = "WrapAround", B[B.NoScroll = 32] = "NoScroll", B))(M$2 || {}), N$2 = ((B) => (B[B.Error = 0] = "Error", B[B.Overflow = 1] = "Overflow", B[B.Success = 2] = "Success", B[B.Underflow = 3] = "Underflow", B))(N$2 || {}), F$3 = ((B) => (B[B.Previous = -1] = "Previous", B[B.Next = 1] = "Next", B))(F$3 || {});
function f$8(B = document.body) {
  return B == null ? [] : Array.from(B.querySelectorAll(c$6)).sort((L, V) => Math.sign((L.tabIndex || Number.MAX_SAFE_INTEGER) - (V.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var T$2 = ((B) => (B[B.Strict = 0] = "Strict", B[B.Loose = 1] = "Loose", B))(T$2 || {});
function h$6(B, L = 0) {
  var V;
  return B !== ((V = o$3(B)) == null ? void 0 : V.body) && u$7(L, { 0: () => B.matches(c$6), 1() {
    let J = B;
    for (; J !== null; ) {
      if (J.matches(c$6)) return !0;
      J = J.parentElement;
    }
    return !1;
  } });
}
function D$3(B) {
  let L = o$3(B);
  o$5().nextFrame(() => {
    L && !h$6(L.activeElement, 0) && y$4(B);
  });
}
var w$3 = ((B) => (B[B.Keyboard = 0] = "Keyboard", B[B.Mouse = 1] = "Mouse", B))(w$3 || {});
function y$4(B) {
  B == null || B.focus({ preventScroll: !0 });
}
typeof window < "u" && typeof document < "u" && (document.addEventListener("keydown", (B) => {
  B.metaKey || B.altKey || B.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, !0), document.addEventListener("click", (B) => {
  B.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : B.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, !0));
let S$5 = ["textarea", "input"].join(",");
function H(B) {
  var L, V;
  return (V = (L = B == null ? void 0 : B.matches) == null ? void 0 : L.call(B, S$5)) != null && V;
}
function I$5(B, L = (V) => V) {
  return B.slice().sort((V, J) => {
    let re = L(V), ne = L(J);
    if (re === null || ne === null) return 0;
    let ie = re.compareDocumentPosition(ne);
    return ie & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : ie & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function _$3(B, L) {
  return O$2(f$8(), L, { relativeTo: B });
}
function O$2(B, L, { sorted: V = !0, relativeTo: J = null, skipElements: re = [] } = {}) {
  let ne = Array.isArray(B) ? B.length > 0 ? B[0].ownerDocument : document : B.ownerDocument, ie = Array.isArray(B) ? V ? I$5(B) : B : f$8(B);
  re.length > 0 && ie.length > 1 && (ie = ie.filter((dt) => !re.includes(dt))), J = J ?? ne.activeElement;
  let oe, pe = (() => {
    if (5 & L) return 1;
    if (10 & L) return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), ce = (() => {
    if (1 & L) return 0;
    if (2 & L) return Math.max(0, ie.indexOf(J)) - 1;
    if (4 & L) return Math.max(0, ie.indexOf(J)) + 1;
    if (8 & L) return ie.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), Oe = 32 & L ? { preventScroll: !0 } : {}, rt = 0, ut = ie.length;
  do {
    if (rt >= ut || rt + ut <= 0) return 0;
    let dt = ce + rt;
    if (16 & L) dt = (dt + ut) % ut;
    else {
      if (dt < 0) return 3;
      if (dt >= ut) return 1;
    }
    oe = ie[dt], oe == null || oe.focus(Oe), rt += pe;
  } while (oe !== ne.activeElement);
  return 6 & L && H(oe) && oe.select(), 2;
}
function t$7() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function i$6() {
  return /Android/gi.test(window.navigator.userAgent);
}
function n$4() {
  return t$7() || i$6();
}
function d$5(B, L, V) {
  let J = s$a(L);
  useEffect(() => {
    function re(ne) {
      J.current(ne);
    }
    return document.addEventListener(B, re, V), () => document.removeEventListener(B, re, V);
  }, [B, V]);
}
function s$8(B, L, V) {
  let J = s$a(L);
  useEffect(() => {
    function re(ne) {
      J.current(ne);
    }
    return window.addEventListener(B, re, V), () => window.removeEventListener(B, re, V);
  }, [B, V]);
}
function y$3(B, L, V = !0) {
  let J = useRef(!1);
  function re(ie, oe) {
    if (!J.current || ie.defaultPrevented) return;
    let pe = oe(ie);
    if (pe === null || !pe.getRootNode().contains(pe) || !pe.isConnected) return;
    let ce = function Oe(rt) {
      return typeof rt == "function" ? Oe(rt()) : Array.isArray(rt) || rt instanceof Set ? rt : [rt];
    }(B);
    for (let Oe of ce) {
      if (Oe === null) continue;
      let rt = Oe instanceof HTMLElement ? Oe : Oe.current;
      if (rt != null && rt.contains(pe) || ie.composed && ie.composedPath().includes(rt)) return;
    }
    return !h$6(pe, T$2.Loose) && pe.tabIndex !== -1 && ie.preventDefault(), L(ie, pe);
  }
  useEffect(() => {
    requestAnimationFrame(() => {
      J.current = V;
    });
  }, [V]);
  let ne = useRef(null);
  d$5("pointerdown", (ie) => {
    var oe, pe;
    J.current && (ne.current = ((pe = (oe = ie.composedPath) == null ? void 0 : oe.call(ie)) == null ? void 0 : pe[0]) || ie.target);
  }, !0), d$5("mousedown", (ie) => {
    var oe, pe;
    J.current && (ne.current = ((pe = (oe = ie.composedPath) == null ? void 0 : oe.call(ie)) == null ? void 0 : pe[0]) || ie.target);
  }, !0), d$5("click", (ie) => {
    n$4() || ne.current && (re(ie, () => ne.current), ne.current = null);
  }, !0), d$5("touchend", (ie) => re(ie, () => ie.target instanceof HTMLElement ? ie.target : null), !0), s$8("blur", (ie) => re(ie, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), !0);
}
function n$3(...B) {
  return useMemo(() => o$3(...B), [...B]);
}
function i$5(B) {
  var L;
  if (B.type) return B.type;
  let V = (L = B.as) != null ? L : "button";
  return typeof V == "string" && V.toLowerCase() === "button" ? "button" : void 0;
}
function T$1(B, L) {
  let [V, J] = useState(() => i$5(B));
  return l$6(() => {
    J(i$5(B));
  }, [B.type, B.as]), l$6(() => {
    V || L.current && L.current instanceof HTMLButtonElement && !L.current.hasAttribute("type") && J("button");
  }, [V, L]), V;
}
let u$6 = Symbol();
function T(B, L = !0) {
  return Object.assign(B, { [u$6]: L });
}
function y$2(...B) {
  let L = useRef(B);
  useEffect(() => {
    L.current = B;
  }, [B]);
  let V = o$6((J) => {
    for (let re of L.current) re != null && (typeof re == "function" ? re(J) : re.current = J);
  });
  return B.every((J) => J == null || (J == null ? void 0 : J[u$6])) ? void 0 : V;
}
function t$6(B) {
  return [B.screenX, B.screenY];
}
function u$5() {
  let B = useRef([-1, -1]);
  return { wasMoved(L) {
    let V = t$6(L);
    return (B.current[0] !== V[0] || B.current[1] !== V[1]) && (B.current = V, !0);
  }, update(L) {
    B.current = t$6(L);
  } };
}
function F$2({ container: B, accept: L, walk: V, enabled: J = !0 }) {
  let re = useRef(L), ne = useRef(V);
  useEffect(() => {
    re.current = L, ne.current = V;
  }, [L, V]), l$6(() => {
    if (!B || !J) return;
    let ie = o$3(B);
    if (!ie) return;
    let oe = re.current, pe = ne.current, ce = Object.assign((rt) => oe(rt), { acceptNode: oe }), Oe = ie.createTreeWalker(B, NodeFilter.SHOW_ELEMENT, ce, !1);
    for (; Oe.nextNode(); ) pe(Oe.currentNode);
  }, [B, J, re, ne]);
}
function m$3(B, L) {
  let V = useRef([]), J = o$6(B);
  useEffect(() => {
    let re = [...V.current];
    for (let [ne, ie] of L.entries()) if (V.current[ne] !== ie) {
      let oe = J(L, re);
      return V.current = L, oe;
    }
  }, [J, ...L]);
}
function t$5(...B) {
  return Array.from(new Set(B.flatMap((L) => typeof L == "string" ? L.split(" ") : []))).filter(Boolean).join(" ");
}
var O$1 = ((B) => (B[B.None = 0] = "None", B[B.RenderStrategy = 1] = "RenderStrategy", B[B.Static = 2] = "Static", B))(O$1 || {}), v$2 = ((B) => (B[B.Unmount = 0] = "Unmount", B[B.Hidden = 1] = "Hidden", B))(v$2 || {});
function C$2({ ourProps: B, theirProps: L, slot: V, defaultTag: J, features: re, visible: ne = !0, name: ie, mergeRefs: oe }) {
  oe = oe ?? k$1;
  let pe = R$1(L, B);
  if (ne) return m$2(pe, V, J, ie, oe);
  let ce = re ?? 0;
  if (2 & ce) {
    let { static: Oe = !1, ...rt } = pe;
    if (Oe) return m$2(rt, V, J, ie, oe);
  }
  if (1 & ce) {
    let { unmount: Oe = !0, ...rt } = pe;
    return u$7(Oe ? 0 : 1, { 0: () => null, 1: () => m$2({ ...rt, hidden: !0, style: { display: "none" } }, V, J, ie, oe) });
  }
  return m$2(pe, V, J, ie, oe);
}
function m$2(B, L = {}, V, J, re) {
  let { as: ne = V, children: ie, refName: oe = "ref", ...pe } = F$1(B, ["unmount", "static"]), ce = B.ref !== void 0 ? { [oe]: B.ref } : {}, Oe = typeof ie == "function" ? ie(L) : ie;
  "className" in pe && pe.className && typeof pe.className == "function" && (pe.className = pe.className(L));
  let rt = {};
  if (L) {
    let ut = !1, dt = [];
    for (let [ht, bt] of Object.entries(L)) typeof bt == "boolean" && (ut = !0), bt === !0 && dt.push(ht);
    ut && (rt["data-headlessui-state"] = dt.join(" "));
  }
  if (ne === Fragment && Object.keys(x$2(pe)).length > 0) {
    if (!isValidElement(Oe) || Array.isArray(Oe) && Oe.length > 1) throw new Error(['Passing props on "Fragment"!', "", `The current component <${J} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(pe).map((bt) => `  - ${bt}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((bt) => `  - ${bt}`).join(`
`)].join(`
`));
    let ut = Oe.props, dt = typeof (ut == null ? void 0 : ut.className) == "function" ? (...bt) => t$5(ut == null ? void 0 : ut.className(...bt), pe.className) : t$5(ut == null ? void 0 : ut.className, pe.className), ht = dt ? { className: dt } : {};
    return cloneElement(Oe, Object.assign({}, R$1(Oe.props, x$2(F$1(pe, ["ref"]))), rt, ce, { ref: re(Oe.ref, ce.ref) }, ht));
  }
  return createElement(ne, Object.assign({}, F$1(pe, ["ref"]), ne !== Fragment && ce, ne !== Fragment && rt), Oe);
}
function k$1(...B) {
  return B.every((L) => L == null) ? void 0 : (L) => {
    for (let V of B) V != null && (typeof V == "function" ? V(L) : V.current = L);
  };
}
function R$1(...B) {
  if (B.length === 0) return {};
  if (B.length === 1) return B[0];
  let L = {}, V = {};
  for (let J of B) for (let re in J) re.startsWith("on") && typeof J[re] == "function" ? (V[re] != null || (V[re] = []), V[re].push(J[re])) : L[re] = J[re];
  if (L.disabled || L["aria-disabled"]) return Object.assign(L, Object.fromEntries(Object.keys(V).map((J) => [J, void 0])));
  for (let J in V) Object.assign(L, { [J](re, ...ne) {
    let ie = V[J];
    for (let oe of ie) {
      if ((re instanceof Event || (re == null ? void 0 : re.nativeEvent) instanceof Event) && re.defaultPrevented) return;
      oe(re, ...ne);
    }
  } });
  return L;
}
function U$3(B) {
  var L;
  return Object.assign(forwardRef(B), { displayName: (L = B.displayName) != null ? L : B.name });
}
function x$2(B) {
  let L = Object.assign({}, B);
  for (let V in L) L[V] === void 0 && delete L[V];
  return L;
}
function F$1(B, L = []) {
  let V = Object.assign({}, B);
  for (let J of L) J in V && delete V[J];
  return V;
}
let p$3 = "div";
var s$7 = ((B) => (B[B.None = 1] = "None", B[B.Focusable = 2] = "Focusable", B[B.Hidden = 4] = "Hidden", B))(s$7 || {});
function l$4(B, L) {
  var V;
  let { features: J = 1, ...re } = B;
  return C$2({ ourProps: { ref: L, "aria-hidden": !(2 & ~J) || ((V = re["aria-hidden"]) != null ? V : void 0), hidden: !(4 & ~J) || void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...!(4 & ~J) && !!(2 & ~J) && { display: "none" } } }, theirProps: re, slot: {}, defaultTag: p$3, name: "Hidden" });
}
let u$4 = U$3(l$4), n$2 = createContext(null);
n$2.displayName = "OpenClosedContext";
var d$4 = ((B) => (B[B.Open = 1] = "Open", B[B.Closed = 2] = "Closed", B[B.Closing = 4] = "Closing", B[B.Opening = 8] = "Opening", B))(d$4 || {});
function u$3() {
  return useContext(n$2);
}
function s$6({ value: B, children: L }) {
  return C__default.createElement(n$2.Provider, { value: B }, L);
}
function t$4(B) {
  function L() {
    document.readyState !== "loading" && (B(), document.removeEventListener("DOMContentLoaded", L));
  }
  typeof window < "u" && typeof document < "u" && (document.addEventListener("DOMContentLoaded", L), L());
}
let t$3 = [];
function r$4(B) {
  let L = B.parentElement, V = null;
  for (; L && !(L instanceof HTMLFieldSetElement); ) L instanceof HTMLLegendElement && (V = L), L = L.parentElement;
  let J = (L == null ? void 0 : L.getAttribute("disabled")) === "";
  return (!J || !i$4(V)) && J;
}
function i$4(B) {
  if (!B) return !1;
  let L = B.previousElementSibling;
  for (; L !== null; ) {
    if (L instanceof HTMLLegendElement) return !1;
    L = L.previousElementSibling;
  }
  return !0;
}
function u$2(B) {
  throw new Error("Unexpected object: " + B);
}
t$4(() => {
  function B(L) {
    L.target instanceof HTMLElement && L.target !== document.body && t$3[0] !== L.target && (t$3.unshift(L.target), t$3 = t$3.filter((V) => V != null && V.isConnected), t$3.splice(10));
  }
  window.addEventListener("click", B, { capture: !0 }), window.addEventListener("mousedown", B, { capture: !0 }), window.addEventListener("focus", B, { capture: !0 }), document.body.addEventListener("click", B, { capture: !0 }), document.body.addEventListener("mousedown", B, { capture: !0 }), document.body.addEventListener("focus", B, { capture: !0 });
});
var c$5 = ((B) => (B[B.First = 0] = "First", B[B.Previous = 1] = "Previous", B[B.Next = 2] = "Next", B[B.Last = 3] = "Last", B[B.Specific = 4] = "Specific", B[B.Nothing = 5] = "Nothing", B))(c$5 || {});
function f$7(B, L) {
  let V = L.resolveItems();
  if (V.length <= 0) return null;
  let J = L.resolveActiveIndex(), re = J ?? -1;
  switch (B.focus) {
    case 0:
      for (let ne = 0; ne < V.length; ++ne) if (!L.resolveDisabled(V[ne], ne, V)) return ne;
      return J;
    case 1:
      for (let ne = re - 1; ne >= 0; --ne) if (!L.resolveDisabled(V[ne], ne, V)) return ne;
      return J;
    case 2:
      for (let ne = re + 1; ne < V.length; ++ne) if (!L.resolveDisabled(V[ne], ne, V)) return ne;
      return J;
    case 3:
      for (let ne = V.length - 1; ne >= 0; --ne) if (!L.resolveDisabled(V[ne], ne, V)) return ne;
      return J;
    case 4:
      for (let ne = 0; ne < V.length; ++ne) if (L.resolveId(V[ne], ne, V) === B.id) return ne;
      return J;
    case 5:
      return null;
    default:
      u$2(B);
  }
}
var o$2 = ((B) => (B.Space = " ", B.Enter = "Enter", B.Escape = "Escape", B.Backspace = "Backspace", B.Delete = "Delete", B.ArrowLeft = "ArrowLeft", B.ArrowUp = "ArrowUp", B.ArrowRight = "ArrowRight", B.ArrowDown = "ArrowDown", B.Home = "Home", B.End = "End", B.PageUp = "PageUp", B.PageDown = "PageDown", B.Tab = "Tab", B))(o$2 || {});
function E$1(B, L, V, J) {
  let re = s$a(V);
  useEffect(() => {
    function ne(ie) {
      re.current(ie);
    }
    return (B = B ?? window).addEventListener(L, ne, J), () => B.removeEventListener(L, ne, J);
  }, [B, L, J]);
}
function f$6() {
  let B = useRef(!1);
  return l$6(() => (B.current = !0, () => {
    B.current = !1;
  }), []), B;
}
function c$4(B) {
  let L = o$6(B), V = useRef(!1);
  useEffect(() => (V.current = !1, () => {
    V.current = !0, t$8(() => {
      V.current && L();
    });
  }), [L]);
}
var s$5 = ((B) => (B[B.Forwards = 0] = "Forwards", B[B.Backwards = 1] = "Backwards", B))(s$5 || {});
function n$1() {
  let B = useRef(0);
  return s$8("keydown", (L) => {
    L.key === "Tab" && (B.current = L.shiftKey ? 1 : 0);
  }, !0), B;
}
function P(B) {
  if (!B) return /* @__PURE__ */ new Set();
  if (typeof B == "function") return new Set(B());
  let L = /* @__PURE__ */ new Set();
  for (let V of B.current) V.current instanceof HTMLElement && L.add(V.current);
  return L;
}
let X = "div";
var _$2 = ((B) => (B[B.None = 1] = "None", B[B.InitialFocus = 2] = "InitialFocus", B[B.TabLock = 4] = "TabLock", B[B.FocusLock = 8] = "FocusLock", B[B.RestoreFocus = 16] = "RestoreFocus", B[B.All = 30] = "All", B))(_$2 || {});
function z$1(B, L) {
  let V = useRef(null), J = y$2(V, L), { initialFocus: re, containers: ne, features: ie = 30, ...oe } = B;
  l$5() || (ie = 1);
  let pe = n$3(V);
  Y({ ownerDocument: pe }, !!(16 & ie));
  let ce = Z({ ownerDocument: pe, container: V, initialFocus: re }, !!(2 & ie));
  $({ ownerDocument: pe, container: V, containers: ne, previousActiveElement: ce }, !!(8 & ie));
  let Oe = n$1(), rt = o$6((bt) => {
    let Tt = V.current;
    Tt && u$7(Oe.current, { [s$5.Forwards]: () => {
      O$2(Tt, M$2.First, { skipElements: [bt.relatedTarget] });
    }, [s$5.Backwards]: () => {
      O$2(Tt, M$2.Last, { skipElements: [bt.relatedTarget] });
    } });
  }), ut = p$4(), dt = useRef(!1), ht = { ref: J, onKeyDown(bt) {
    bt.key == "Tab" && (dt.current = !0, ut.requestAnimationFrame(() => {
      dt.current = !1;
    }));
  }, onBlur(bt) {
    let Tt = P(ne);
    V.current instanceof HTMLElement && Tt.add(V.current);
    let wt = bt.relatedTarget;
    wt instanceof HTMLElement && wt.dataset.headlessuiFocusGuard !== "true" && (S$4(Tt, wt) || (dt.current ? O$2(V.current, u$7(Oe.current, { [s$5.Forwards]: () => M$2.Next, [s$5.Backwards]: () => M$2.Previous }) | M$2.WrapAround, { relativeTo: bt.target }) : bt.target instanceof HTMLElement && y$4(bt.target)));
  } };
  return C__default.createElement(C__default.Fragment, null, !!(4 & ie) && C__default.createElement(u$4, { as: "button", type: "button", "data-headlessui-focus-guard": !0, onFocus: rt, features: s$7.Focusable }), C$2({ ourProps: ht, theirProps: oe, defaultTag: X, name: "FocusTrap" }), !!(4 & ie) && C__default.createElement(u$4, { as: "button", type: "button", "data-headlessui-focus-guard": !0, onFocus: rt, features: s$7.Focusable }));
}
let D$2 = U$3(z$1), de$1 = Object.assign(D$2, { features: _$2 });
function Q(B = !0) {
  let L = useRef(t$3.slice());
  return m$3(([V], [J]) => {
    J === !0 && V === !1 && t$8(() => {
      L.current.splice(0);
    }), J === !1 && V === !0 && (L.current = t$3.slice());
  }, [B, t$3, L]), o$6(() => {
    var V;
    return (V = L.current.find((J) => J != null && J.isConnected)) != null ? V : null;
  });
}
function Y({ ownerDocument: B }, L) {
  let V = Q(L);
  m$3(() => {
    L || (B == null ? void 0 : B.activeElement) === (B == null ? void 0 : B.body) && y$4(V());
  }, [L]), c$4(() => {
    L && y$4(V());
  });
}
function Z({ ownerDocument: B, container: L, initialFocus: V }, J) {
  let re = useRef(null), ne = f$6();
  return m$3(() => {
    if (!J) return;
    let ie = L.current;
    ie && t$8(() => {
      if (!ne.current) return;
      let oe = B == null ? void 0 : B.activeElement;
      if (V != null && V.current) {
        if ((V == null ? void 0 : V.current) === oe) return void (re.current = oe);
      } else if (ie.contains(oe)) return void (re.current = oe);
      V != null && V.current ? y$4(V.current) : O$2(ie, M$2.First) === N$2.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), re.current = B == null ? void 0 : B.activeElement;
    });
  }, [J]), re;
}
function $({ ownerDocument: B, container: L, containers: V, previousActiveElement: J }, re) {
  let ne = f$6();
  E$1(B == null ? void 0 : B.defaultView, "focus", (ie) => {
    if (!re || !ne.current) return;
    let oe = P(V);
    L.current instanceof HTMLElement && oe.add(L.current);
    let pe = J.current;
    if (!pe) return;
    let ce = ie.target;
    ce && ce instanceof HTMLElement ? S$4(oe, ce) ? (J.current = ce, y$4(ce)) : (ie.preventDefault(), ie.stopPropagation(), y$4(pe)) : y$4(J.current);
  }, !0);
}
function S$4(B, L) {
  for (let V of B) if (V.contains(L)) return !0;
  return !1;
}
let e$1 = createContext(!1);
function a$6() {
  return useContext(e$1);
}
function l$3(B) {
  return C__default.createElement(e$1.Provider, { value: B.force }, B.children);
}
function F(B) {
  let L = a$6(), V = useContext(_$1), J = n$3(B), [re, ne] = useState(() => {
    if (!L && V !== null || s$b.isServer) return null;
    let ie = J == null ? void 0 : J.getElementById("headlessui-portal-root");
    if (ie) return ie;
    if (J === null) return null;
    let oe = J.createElement("div");
    return oe.setAttribute("id", "headlessui-portal-root"), J.body.appendChild(oe);
  });
  return useEffect(() => {
    re !== null && (J != null && J.body.contains(re) || J == null || J.body.appendChild(re));
  }, [re, J]), useEffect(() => {
    L || V !== null && ne(V.current);
  }, [V, ne, L]), re;
}
let U$2 = Fragment;
function N$1(B, L) {
  let V = B, J = useRef(null), re = y$2(T((Oe) => {
    J.current = Oe;
  }), L), ne = n$3(J), ie = F(J), [oe] = useState(() => {
    var Oe;
    return s$b.isServer ? null : (Oe = ne == null ? void 0 : ne.createElement("div")) != null ? Oe : null;
  }), pe = useContext(f$5), ce = l$5();
  return l$6(() => {
    !ie || !oe || ie.contains(oe) || (oe.setAttribute("data-headlessui-portal", ""), ie.appendChild(oe));
  }, [ie, oe]), l$6(() => {
    if (oe && pe) return pe.register(oe);
  }, [pe, oe]), c$4(() => {
    var Oe;
    !ie || !oe || (oe instanceof Node && ie.contains(oe) && ie.removeChild(oe), ie.childNodes.length <= 0 && ((Oe = ie.parentElement) == null || Oe.removeChild(ie)));
  }), ce && ie && oe ? createPortal(C$2({ ourProps: { ref: re }, theirProps: V, defaultTag: U$2, name: "Portal" }), oe) : null;
}
let S$3 = Fragment, _$1 = createContext(null);
function j(B, L) {
  let { target: V, ...J } = B, re = { ref: y$2(L) };
  return C__default.createElement(_$1.Provider, { value: V }, C$2({ ourProps: re, theirProps: J, defaultTag: S$3, name: "Popover.Group" }));
}
let f$5 = createContext(null);
function ee() {
  let B = useContext(f$5), L = useRef([]), V = o$6((ne) => (L.current.push(ne), B && B.register(ne), () => J(ne))), J = o$6((ne) => {
    let ie = L.current.indexOf(ne);
    ie !== -1 && L.current.splice(ie, 1), B && B.unregister(ne);
  }), re = useMemo(() => ({ register: V, unregister: J, portals: L }), [V, J, L]);
  return [L, useMemo(() => function({ children: ne }) {
    return C__default.createElement(f$5.Provider, { value: re }, ne);
  }, [re])];
}
let D$1 = U$3(N$1), I$4 = U$3(j), te = Object.assign(D$1, { Group: I$4 });
function i$3(B, L) {
  return B === L && (B !== 0 || 1 / B == 1 / L) || B != B && L != L;
}
const d$3 = typeof Object.is == "function" ? Object.is : i$3, { useState: u$1, useEffect: h$5, useLayoutEffect: f$4, useDebugValue: p$2 } = C$3;
function y$1(B, L, V) {
  const J = L(), [{ inst: re }, ne] = u$1({ inst: { value: J, getSnapshot: L } });
  return f$4(() => {
    re.value = J, re.getSnapshot = L, r$3(re) && ne({ inst: re });
  }, [B, J, L]), h$5(() => (r$3(re) && ne({ inst: re }), B(() => {
    r$3(re) && ne({ inst: re });
  })), [B]), p$2(J), J;
}
function r$3(B) {
  const L = B.getSnapshot, V = B.value;
  try {
    const J = L();
    return !d$3(V, J);
  } catch {
    return !0;
  }
}
function t$2(B, L, V) {
  return L();
}
const r$2 = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, s$4 = !r$2, c$3 = s$4 ? t$2 : y$1, a$5 = "useSyncExternalStore" in C$3 ? C$3.useSyncExternalStore : c$3;
function S$2(B) {
  return a$5(B.subscribe, B.getSnapshot, B.getSnapshot);
}
function a$4(B, L) {
  let V = B(), J = /* @__PURE__ */ new Set();
  return { getSnapshot: () => V, subscribe: (re) => (J.add(re), () => J.delete(re)), dispatch(re, ...ne) {
    let ie = L[re].call(V, ...ne);
    ie && (V = ie, J.forEach((oe) => oe()));
  } };
}
function c$2() {
  let B;
  return { before({ doc: L }) {
    var V;
    let J = L.documentElement;
    B = ((V = L.defaultView) != null ? V : window).innerWidth - J.clientWidth;
  }, after({ doc: L, d: V }) {
    let J = L.documentElement, re = J.clientWidth - J.offsetWidth, ne = B - re;
    V.style(J, "paddingRight", `${ne}px`);
  } };
}
function d$2() {
  return t$7() ? { before({ doc: B, d: L, meta: V }) {
    function J(re) {
      return V.containers.flatMap((ne) => ne()).some((ne) => ne.contains(re));
    }
    L.microTask(() => {
      var re;
      if (window.getComputedStyle(B.documentElement).scrollBehavior !== "auto") {
        let oe = o$5();
        oe.style(B.documentElement, "scrollBehavior", "auto"), L.add(() => L.microTask(() => oe.dispose()));
      }
      let ne = (re = window.scrollY) != null ? re : window.pageYOffset, ie = null;
      L.addEventListener(B, "click", (oe) => {
        if (oe.target instanceof HTMLElement) try {
          let pe = oe.target.closest("a");
          if (!pe) return;
          let { hash: ce } = new URL(pe.href), Oe = B.querySelector(ce);
          Oe && !J(Oe) && (ie = Oe);
        } catch {
        }
      }, !0), L.addEventListener(B, "touchstart", (oe) => {
        if (oe.target instanceof HTMLElement) if (J(oe.target)) {
          let pe = oe.target;
          for (; pe.parentElement && J(pe.parentElement); ) pe = pe.parentElement;
          L.style(pe, "overscrollBehavior", "contain");
        } else L.style(oe.target, "touchAction", "none");
      }), L.addEventListener(B, "touchmove", (oe) => {
        if (oe.target instanceof HTMLElement) if (J(oe.target)) {
          let pe = oe.target;
          for (; pe.parentElement && pe.dataset.headlessuiPortal !== "" && !(pe.scrollHeight > pe.clientHeight || pe.scrollWidth > pe.clientWidth); ) pe = pe.parentElement;
          pe.dataset.headlessuiPortal === "" && oe.preventDefault();
        } else oe.preventDefault();
      }, { passive: !1 }), L.add(() => {
        var oe;
        let pe = (oe = window.scrollY) != null ? oe : window.pageYOffset;
        ne !== pe && window.scrollTo(0, ne), ie && ie.isConnected && (ie.scrollIntoView({ block: "nearest" }), ie = null);
      });
    });
  } } : {};
}
function l$2() {
  return { before({ doc: B, d: L }) {
    L.style(B.documentElement, "overflow", "hidden");
  } };
}
function m$1(B) {
  let L = {};
  for (let V of B) Object.assign(L, V(L));
  return L;
}
let a$3 = a$4(() => /* @__PURE__ */ new Map(), { PUSH(B, L) {
  var V;
  let J = (V = this.get(B)) != null ? V : { doc: B, count: 0, d: o$5(), meta: /* @__PURE__ */ new Set() };
  return J.count++, J.meta.add(L), this.set(B, J), this;
}, POP(B, L) {
  let V = this.get(B);
  return V && (V.count--, V.meta.delete(L)), this;
}, SCROLL_PREVENT({ doc: B, d: L, meta: V }) {
  let J = { doc: B, d: L, meta: m$1(V) }, re = [d$2(), c$2(), l$2()];
  re.forEach(({ before: ne }) => ne == null ? void 0 : ne(J)), re.forEach(({ after: ne }) => ne == null ? void 0 : ne(J));
}, SCROLL_ALLOW({ d: B }) {
  B.dispose();
}, TEARDOWN({ doc: B }) {
  this.delete(B);
} });
function p$1(B, L, V) {
  let J = S$2(a$3), re = B ? J.get(B) : void 0, ne = !!re && re.count > 0;
  return l$6(() => {
    if (B && L) return a$3.dispatch("PUSH", B, V), () => a$3.dispatch("POP", B, V);
  }, [L, B]), ne;
}
a$3.subscribe(() => {
  let B = a$3.getSnapshot(), L = /* @__PURE__ */ new Map();
  for (let [V] of B) L.set(V, V.documentElement.style.overflow);
  for (let V of B.values()) {
    let J = L.get(V.doc) === "hidden", re = V.count !== 0;
    (re && !J || !re && J) && a$3.dispatch(V.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", V), V.count === 0 && a$3.dispatch("TEARDOWN", V);
  }
});
let u = /* @__PURE__ */ new Map(), t$1 = /* @__PURE__ */ new Map();
function b$4(B, L = !0) {
  l$6(() => {
    var V;
    if (!L) return;
    let J = typeof B == "function" ? B() : B.current;
    if (!J) return;
    let re = (V = t$1.get(J)) != null ? V : 0;
    return t$1.set(J, re + 1), re !== 0 || (u.set(J, { "aria-hidden": J.getAttribute("aria-hidden"), inert: J.inert }), J.setAttribute("aria-hidden", "true"), J.inert = !0), function() {
      var ne;
      if (!J) return;
      let ie = (ne = t$1.get(J)) != null ? ne : 1;
      if (ie === 1 ? t$1.delete(J) : t$1.set(J, ie - 1), ie !== 1) return;
      let oe = u.get(J);
      oe && (oe["aria-hidden"] === null ? J.removeAttribute("aria-hidden") : J.setAttribute("aria-hidden", oe["aria-hidden"]), J.inert = oe.inert, u.delete(J));
    };
  }, [B, L]);
}
function N({ defaultContainers: B = [], portals: L, mainTreeNodeRef: V } = {}) {
  var J;
  let re = useRef((J = V == null ? void 0 : V.current) != null ? J : null), ne = n$3(re), ie = o$6(() => {
    var oe, pe, ce;
    let Oe = [];
    for (let rt of B) rt !== null && (rt instanceof HTMLElement ? Oe.push(rt) : "current" in rt && rt.current instanceof HTMLElement && Oe.push(rt.current));
    if (L != null && L.current) for (let rt of L.current) Oe.push(rt);
    for (let rt of (oe = ne == null ? void 0 : ne.querySelectorAll("html > *, body > *")) != null ? oe : []) rt !== document.body && rt !== document.head && rt instanceof HTMLElement && rt.id !== "headlessui-portal-root" && (rt.contains(re.current) || rt.contains((ce = (pe = re.current) == null ? void 0 : pe.getRootNode()) == null ? void 0 : ce.host) || Oe.some((ut) => rt.contains(ut)) || Oe.push(rt));
    return Oe;
  });
  return { resolveContainers: ie, contains: o$6((oe) => ie().some((pe) => pe.contains(oe))), mainTreeNodeRef: re, MainTreeNode: useMemo(() => function() {
    return V != null ? null : C__default.createElement(u$4, { features: s$7.Hidden, ref: re });
  }, [re, V]) };
}
let a$2 = createContext(() => {
});
a$2.displayName = "StackContext";
var s$3 = ((B) => (B[B.Add = 0] = "Add", B[B.Remove = 1] = "Remove", B))(s$3 || {});
function x$1() {
  return useContext(a$2);
}
function b$3({ children: B, onUpdate: L, type: V, element: J, enabled: re }) {
  let ne = x$1(), ie = o$6((...oe) => {
    L == null || L(...oe), ne(...oe);
  });
  return l$6(() => {
    let oe = re === void 0 || re === !0;
    return oe && ie(0, V, J), () => {
      oe && ie(1, V, J);
    };
  }, [ie, V, J, re]), C__default.createElement(a$2.Provider, { value: ie }, B);
}
let d$1 = createContext(null);
function f$3() {
  let B = useContext(d$1);
  if (B === null) {
    let L = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(L, f$3), L;
  }
  return B;
}
function w$2() {
  let [B, L] = useState([]);
  return [B.length > 0 ? B.join(" ") : void 0, useMemo(() => function(V) {
    let J = o$6((ne) => (L((ie) => [...ie, ne]), () => L((ie) => {
      let oe = ie.slice(), pe = oe.indexOf(ne);
      return pe !== -1 && oe.splice(pe, 1), oe;
    }))), re = useMemo(() => ({ register: J, slot: V.slot, name: V.name, props: V.props }), [J, V.slot, V.name, V.props]);
    return C__default.createElement(d$1.Provider, { value: re }, V.children);
  }, [L])];
}
let I$3 = "p";
function S$1(B, L) {
  let V = I$6(), { id: J = `headlessui-description-${V}`, ...re } = B, ne = f$3(), ie = y$2(L);
  return l$6(() => ne.register(J), [J, ne.register]), C$2({ ourProps: { ref: ie, ...ne.props, id: J }, theirProps: re, slot: ne.slot || {}, defaultTag: I$3, name: ne.name || "Description" });
}
let h$4 = U$3(S$1), G$1 = Object.assign(h$4, {});
var Me$1 = ((B) => (B[B.Open = 0] = "Open", B[B.Closed = 1] = "Closed", B))(Me$1 || {}), we = ((B) => (B[B.SetTitleId = 0] = "SetTitleId", B))(we || {});
let He$1 = { 0: (B, L) => B.titleId === L.id ? B : { ...B, titleId: L.id } }, I$2 = createContext(null);
function b$2(B) {
  let L = useContext(I$2);
  if (L === null) {
    let V = new Error(`<${B} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(V, b$2), V;
  }
  return L;
}
function Be(B, L, V = () => [document.body]) {
  p$1(B, L, (J) => {
    var re;
    return { containers: [...(re = J.containers) != null ? re : [], V] };
  });
}
function Ge(B, L) {
  return u$7(L.type, He$1, B, L);
}
I$2.displayName = "DialogContext";
let Ne$1 = "div", Ue = O$1.RenderStrategy | O$1.Static;
function We(B, L) {
  let V = I$6(), { id: J = `headlessui-dialog-${V}`, open: re, onClose: ne, initialFocus: ie, role: oe = "dialog", __demoMode: pe = !1, ...ce } = B, [Oe, rt] = useState(0), ut = useRef(!1);
  oe = oe === "dialog" || oe === "alertdialog" ? oe : (ut.current || (ut.current = !0, console.warn(`Invalid role [${oe}] passed to <Dialog />. Only \`dialog\` and and \`alertdialog\` are supported. Using \`dialog\` instead.`)), "dialog");
  let dt = u$3();
  re === void 0 && dt !== null && (re = (dt & d$4.Open) === d$4.Open);
  let ht = useRef(null), bt = y$2(ht, L), Tt = n$3(ht), wt = B.hasOwnProperty("open") || dt !== null, Et = B.hasOwnProperty("onClose");
  if (!wt && !Et) throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!wt) throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!Et) throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (typeof re != "boolean") throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${re}`);
  if (typeof ne != "function") throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${ne}`);
  let Rt = re ? 0 : 1, [Bt, Pt] = useReducer(Ge, { titleId: null, descriptionId: null, panelRef: createRef() }), Dt = o$6(() => ne(!1)), Gt = o$6((er) => Pt({ type: 0, id: er })), at = !!l$5() && !pe && Rt === 0, lt = Oe > 1, Ce = useContext(I$2) !== null, [st, it] = ee(), nt = { get current() {
    var er;
    return (er = Bt.panelRef.current) != null ? er : ht.current;
  } }, { resolveContainers: ot, mainTreeNodeRef: ke, MainTreeNode: ct } = N({ portals: st, defaultContainers: [nt] }), yt = lt ? "parent" : "leaf", $t = dt !== null && (dt & d$4.Closing) === d$4.Closing, gt = !Ce && !$t && at, xt = useCallback(() => {
    var er, tr;
    return (tr = Array.from((er = Tt == null ? void 0 : Tt.querySelectorAll("body > *")) != null ? er : []).find((Jt) => Jt.id !== "headlessui-portal-root" && Jt.contains(ke.current) && Jt instanceof HTMLElement)) != null ? tr : null;
  }, [ke]);
  b$4(xt, gt);
  let At = !!lt || at, mt = useCallback(() => {
    var er, tr;
    return (tr = Array.from((er = Tt == null ? void 0 : Tt.querySelectorAll("[data-headlessui-portal]")) != null ? er : []).find((Jt) => Jt.contains(ke.current) && Jt instanceof HTMLElement)) != null ? tr : null;
  }, [ke]);
  b$4(mt, At), y$3(ot, (er) => {
    er.preventDefault(), Dt();
  }, !(!at || lt));
  let St = !(lt || Rt !== 0);
  E$1(Tt == null ? void 0 : Tt.defaultView, "keydown", (er) => {
    St && (er.defaultPrevented || er.key === o$2.Escape && (er.preventDefault(), er.stopPropagation(), Dt()));
  }), Be(Tt, !($t || Rt !== 0 || Ce), ot), useEffect(() => {
    if (Rt !== 0 || !ht.current) return;
    let er = new ResizeObserver((tr) => {
      for (let Jt of tr) {
        let ur = Jt.target.getBoundingClientRect();
        ur.x === 0 && ur.y === 0 && ur.width === 0 && ur.height === 0 && Dt();
      }
    });
    return er.observe(ht.current), () => er.disconnect();
  }, [Rt, ht, Dt]);
  let [Mt, It] = w$2(), Ft = useMemo(() => [{ dialogState: Rt, close: Dt, setTitleId: Gt }, Bt], [Rt, Bt, Dt, Gt]), Vt = useMemo(() => ({ open: Rt === 0 }), [Rt]), qt = { ref: bt, id: J, role: oe, "aria-modal": Rt === 0 || void 0, "aria-labelledby": Bt.titleId, "aria-describedby": Mt };
  return C__default.createElement(b$3, { type: "Dialog", enabled: Rt === 0, element: ht, onUpdate: o$6((er, tr) => {
    tr === "Dialog" && u$7(er, { [s$3.Add]: () => rt((Jt) => Jt + 1), [s$3.Remove]: () => rt((Jt) => Jt - 1) });
  }) }, C__default.createElement(l$3, { force: !0 }, C__default.createElement(te, null, C__default.createElement(I$2.Provider, { value: Ft }, C__default.createElement(te.Group, { target: ht }, C__default.createElement(l$3, { force: !1 }, C__default.createElement(It, { slot: Vt, name: "Dialog.Description" }, C__default.createElement(de$1, { initialFocus: ie, containers: ot, features: at ? u$7(yt, { parent: de$1.features.RestoreFocus, leaf: de$1.features.All & ~de$1.features.FocusLock }) : de$1.features.None }, C__default.createElement(it, null, C$2({ ourProps: qt, theirProps: ce, slot: Vt, defaultTag: Ne$1, features: Ue, visible: Rt === 0, name: "Dialog" }))))))))), C__default.createElement(ct, null));
}
let $e = "div";
function Ye(B, L) {
  let V = I$6(), { id: J = `headlessui-dialog-overlay-${V}`, ...re } = B, [{ dialogState: ne, close: ie }] = b$2("Dialog.Overlay"), oe = y$2(L), pe = o$6((ce) => {
    if (ce.target === ce.currentTarget) {
      if (r$4(ce.currentTarget)) return ce.preventDefault();
      ce.preventDefault(), ce.stopPropagation(), ie();
    }
  });
  return C$2({ ourProps: { ref: oe, id: J, "aria-hidden": !0, onClick: pe }, theirProps: re, slot: useMemo(() => ({ open: ne === 0 }), [ne]), defaultTag: $e, name: "Dialog.Overlay" });
}
let je = "div";
function Je(B, L) {
  let V = I$6(), { id: J = `headlessui-dialog-backdrop-${V}`, ...re } = B, [{ dialogState: ne }, ie] = b$2("Dialog.Backdrop"), oe = y$2(L);
  useEffect(() => {
    if (ie.panelRef.current === null) throw new Error("A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.");
  }, [ie.panelRef]);
  let pe = useMemo(() => ({ open: ne === 0 }), [ne]);
  return C__default.createElement(l$3, { force: !0 }, C__default.createElement(te, null, C$2({ ourProps: { ref: oe, id: J, "aria-hidden": !0 }, theirProps: re, slot: pe, defaultTag: je, name: "Dialog.Backdrop" })));
}
let Xe = "div";
function Ke(B, L) {
  let V = I$6(), { id: J = `headlessui-dialog-panel-${V}`, ...re } = B, [{ dialogState: ne }, ie] = b$2("Dialog.Panel"), oe = y$2(L, ie.panelRef), pe = useMemo(() => ({ open: ne === 0 }), [ne]), ce = o$6((Oe) => {
    Oe.stopPropagation();
  });
  return C$2({ ourProps: { ref: oe, id: J, onClick: ce }, theirProps: re, slot: pe, defaultTag: Xe, name: "Dialog.Panel" });
}
let Ve = "h2";
function qe$2(B, L) {
  let V = I$6(), { id: J = `headlessui-dialog-title-${V}`, ...re } = B, [{ dialogState: ne, setTitleId: ie }] = b$2("Dialog.Title"), oe = y$2(L);
  useEffect(() => (ie(J), () => ie(null)), [J, ie]);
  let pe = useMemo(() => ({ open: ne === 0 }), [ne]);
  return C$2({ ourProps: { ref: oe, id: J }, theirProps: re, slot: pe, defaultTag: Ve, name: "Dialog.Title" });
}
let ze = U$3(We), Qe = U$3(Je), Ze = U$3(Ke), et = U$3(Ye), tt = U$3(qe$2), _t = Object.assign(ze, { Backdrop: Qe, Panel: Ze, Overlay: et, Title: tt, Description: G$1 }), a$1 = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o$1(B) {
  var L, V;
  let J = (L = B.innerText) != null ? L : "", re = B.cloneNode(!0);
  if (!(re instanceof HTMLElement)) return J;
  let ne = !1;
  for (let oe of re.querySelectorAll('[hidden],[aria-hidden],[role="img"]')) oe.remove(), ne = !0;
  let ie = ne ? (V = re.innerText) != null ? V : "" : J;
  return a$1.test(ie) && (ie = ie.replace(a$1, "")), ie;
}
function g$4(B) {
  let L = B.getAttribute("aria-label");
  if (typeof L == "string") return L.trim();
  let V = B.getAttribute("aria-labelledby");
  if (V) {
    let J = V.split(" ").map((re) => {
      let ne = document.getElementById(re);
      if (ne) {
        let ie = ne.getAttribute("aria-label");
        return typeof ie == "string" ? ie.trim() : o$1(ne).trim();
      }
      return null;
    }).filter(Boolean);
    if (J.length > 0) return J.join(", ");
  }
  return o$1(B).trim();
}
function s$2(B) {
  let L = useRef(""), V = useRef("");
  return o$6(() => {
    let J = B.current;
    if (!J) return "";
    let re = J.innerText;
    if (L.current === re) return V.current;
    let ne = g$4(J).trim().toLowerCase();
    return L.current = re, V.current = ne, ne;
  });
}
var me = ((B) => (B[B.Open = 0] = "Open", B[B.Closed = 1] = "Closed", B))(me || {}), de = ((B) => (B[B.Pointer = 0] = "Pointer", B[B.Other = 1] = "Other", B))(de || {}), fe = ((B) => (B[B.OpenMenu = 0] = "OpenMenu", B[B.CloseMenu = 1] = "CloseMenu", B[B.GoToItem = 2] = "GoToItem", B[B.Search = 3] = "Search", B[B.ClearSearch = 4] = "ClearSearch", B[B.RegisterItem = 5] = "RegisterItem", B[B.UnregisterItem = 6] = "UnregisterItem", B))(fe || {});
function w$1(B, L = (V) => V) {
  let V = B.activeItemIndex !== null ? B.items[B.activeItemIndex] : null, J = I$5(L(B.items.slice()), (ne) => ne.dataRef.current.domRef.current), re = V ? J.indexOf(V) : null;
  return re === -1 && (re = null), { items: J, activeItemIndex: re };
}
let Te = { 1: (B) => B.menuState === 1 ? B : { ...B, activeItemIndex: null, menuState: 1 }, 0: (B) => B.menuState === 0 ? B : { ...B, __demoMode: !1, menuState: 0 }, 2: (B, L) => {
  var V;
  let J = w$1(B), re = f$7(L, { resolveItems: () => J.items, resolveActiveIndex: () => J.activeItemIndex, resolveId: (ne) => ne.id, resolveDisabled: (ne) => ne.dataRef.current.disabled });
  return { ...B, ...J, searchQuery: "", activeItemIndex: re, activationTrigger: (V = L.trigger) != null ? V : 1 };
}, 3: (B, L) => {
  let V = B.searchQuery !== "" ? 0 : 1, J = B.searchQuery + L.value.toLowerCase(), re = (B.activeItemIndex !== null ? B.items.slice(B.activeItemIndex + V).concat(B.items.slice(0, B.activeItemIndex + V)) : B.items).find((ie) => {
    var oe;
    return ((oe = ie.dataRef.current.textValue) == null ? void 0 : oe.startsWith(J)) && !ie.dataRef.current.disabled;
  }), ne = re ? B.items.indexOf(re) : -1;
  return ne === -1 || ne === B.activeItemIndex ? { ...B, searchQuery: J } : { ...B, searchQuery: J, activeItemIndex: ne, activationTrigger: 1 };
}, 4: (B) => B.searchQuery === "" ? B : { ...B, searchQuery: "", searchActiveItemIndex: null }, 5: (B, L) => {
  let V = w$1(B, (J) => [...J, { id: L.id, dataRef: L.dataRef }]);
  return { ...B, ...V };
}, 6: (B, L) => {
  let V = w$1(B, (J) => {
    let re = J.findIndex((ne) => ne.id === L.id);
    return re !== -1 && J.splice(re, 1), J;
  });
  return { ...B, ...V, activationTrigger: 1 };
} }, U$1 = createContext(null);
function C$1(B) {
  let L = useContext(U$1);
  if (L === null) {
    let V = new Error(`<${B} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(V, C$1), V;
  }
  return L;
}
function ye$1(B, L) {
  return u$7(L.type, Te, B, L);
}
U$1.displayName = "MenuContext";
let Ie = Fragment;
function Me(B, L) {
  let { __demoMode: V = !1, ...J } = B, re = useReducer(ye$1, { __demoMode: V, menuState: V ? 0 : 1, buttonRef: createRef(), itemsRef: createRef(), items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1 }), [{ menuState: ne, itemsRef: ie, buttonRef: oe }, pe] = re, ce = y$2(L);
  y$3([oe, ie], (dt, ht) => {
    var bt;
    pe({ type: 1 }), h$6(ht, T$2.Loose) || (dt.preventDefault(), (bt = oe.current) == null || bt.focus());
  }, ne === 0);
  let Oe = o$6(() => {
    pe({ type: 1 });
  }), rt = useMemo(() => ({ open: ne === 0, close: Oe }), [ne, Oe]), ut = { ref: ce };
  return C__default.createElement(U$1.Provider, { value: re }, C__default.createElement(s$6, { value: u$7(ne, { 0: d$4.Open, 1: d$4.Closed }) }, C$2({ ourProps: ut, theirProps: J, slot: rt, defaultTag: Ie, name: "Menu" })));
}
let ge = "button";
function Re$1(B, L) {
  var V;
  let J = I$6(), { id: re = `headlessui-menu-button-${J}`, ...ne } = B, [ie, oe] = C$1("Menu.Button"), pe = y$2(ie.buttonRef, L), ce = p$4(), Oe = o$6((ht) => {
    switch (ht.key) {
      case o$2.Space:
      case o$2.Enter:
      case o$2.ArrowDown:
        ht.preventDefault(), ht.stopPropagation(), oe({ type: 0 }), ce.nextFrame(() => oe({ type: 2, focus: c$5.First }));
        break;
      case o$2.ArrowUp:
        ht.preventDefault(), ht.stopPropagation(), oe({ type: 0 }), ce.nextFrame(() => oe({ type: 2, focus: c$5.Last }));
    }
  }), rt = o$6((ht) => {
    ht.key === o$2.Space && ht.preventDefault();
  }), ut = o$6((ht) => {
    if (r$4(ht.currentTarget)) return ht.preventDefault();
    B.disabled || (ie.menuState === 0 ? (oe({ type: 1 }), ce.nextFrame(() => {
      var bt;
      return (bt = ie.buttonRef.current) == null ? void 0 : bt.focus({ preventScroll: !0 });
    })) : (ht.preventDefault(), oe({ type: 0 })));
  }), dt = useMemo(() => ({ open: ie.menuState === 0 }), [ie]);
  return C$2({ ourProps: { ref: pe, id: re, type: T$1(B, ie.buttonRef), "aria-haspopup": "menu", "aria-controls": (V = ie.itemsRef.current) == null ? void 0 : V.id, "aria-expanded": ie.menuState === 0, onKeyDown: Oe, onKeyUp: rt, onClick: ut }, theirProps: ne, slot: dt, defaultTag: ge, name: "Menu.Button" });
}
let Ae = "div", be = O$1.RenderStrategy | O$1.Static;
function Ee(B, L) {
  var V, J;
  let re = I$6(), { id: ne = `headlessui-menu-items-${re}`, ...ie } = B, [oe, pe] = C$1("Menu.Items"), ce = y$2(oe.itemsRef, L), Oe = n$3(oe.itemsRef), rt = p$4(), ut = u$3(), dt = ut !== null ? (ut & d$4.Open) === d$4.Open : oe.menuState === 0;
  useEffect(() => {
    let wt = oe.itemsRef.current;
    wt && oe.menuState === 0 && wt !== (Oe == null ? void 0 : Oe.activeElement) && wt.focus({ preventScroll: !0 });
  }, [oe.menuState, oe.itemsRef, Oe]), F$2({ container: oe.itemsRef.current, enabled: oe.menuState === 0, accept: (wt) => wt.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : wt.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT, walk(wt) {
    wt.setAttribute("role", "none");
  } });
  let ht = o$6((wt) => {
    var Et, Rt;
    switch (rt.dispose(), wt.key) {
      case o$2.Space:
        if (oe.searchQuery !== "") return wt.preventDefault(), wt.stopPropagation(), pe({ type: 3, value: wt.key });
      case o$2.Enter:
        if (wt.preventDefault(), wt.stopPropagation(), pe({ type: 1 }), oe.activeItemIndex !== null) {
          let { dataRef: Bt } = oe.items[oe.activeItemIndex];
          (Rt = (Et = Bt.current) == null ? void 0 : Et.domRef.current) == null || Rt.click();
        }
        D$3(oe.buttonRef.current);
        break;
      case o$2.ArrowDown:
        return wt.preventDefault(), wt.stopPropagation(), pe({ type: 2, focus: c$5.Next });
      case o$2.ArrowUp:
        return wt.preventDefault(), wt.stopPropagation(), pe({ type: 2, focus: c$5.Previous });
      case o$2.Home:
      case o$2.PageUp:
        return wt.preventDefault(), wt.stopPropagation(), pe({ type: 2, focus: c$5.First });
      case o$2.End:
      case o$2.PageDown:
        return wt.preventDefault(), wt.stopPropagation(), pe({ type: 2, focus: c$5.Last });
      case o$2.Escape:
        wt.preventDefault(), wt.stopPropagation(), pe({ type: 1 }), o$5().nextFrame(() => {
          var Bt;
          return (Bt = oe.buttonRef.current) == null ? void 0 : Bt.focus({ preventScroll: !0 });
        });
        break;
      case o$2.Tab:
        wt.preventDefault(), wt.stopPropagation(), pe({ type: 1 }), o$5().nextFrame(() => {
          _$3(oe.buttonRef.current, wt.shiftKey ? M$2.Previous : M$2.Next);
        });
        break;
      default:
        wt.key.length === 1 && (pe({ type: 3, value: wt.key }), rt.setTimeout(() => pe({ type: 4 }), 350));
    }
  }), bt = o$6((wt) => {
    wt.key === o$2.Space && wt.preventDefault();
  }), Tt = useMemo(() => ({ open: oe.menuState === 0 }), [oe]);
  return C$2({ ourProps: { "aria-activedescendant": oe.activeItemIndex === null || (V = oe.items[oe.activeItemIndex]) == null ? void 0 : V.id, "aria-labelledby": (J = oe.buttonRef.current) == null ? void 0 : J.id, id: ne, onKeyDown: ht, onKeyUp: bt, role: "menu", tabIndex: 0, ref: ce }, theirProps: ie, slot: Tt, defaultTag: Ae, features: be, visible: dt, name: "Menu.Items" });
}
let Se$1 = Fragment;
function xe$1(B, L) {
  let V = I$6(), { id: J = `headlessui-menu-item-${V}`, disabled: re = !1, ...ne } = B, [ie, oe] = C$1("Menu.Item"), pe = ie.activeItemIndex !== null && ie.items[ie.activeItemIndex].id === J, ce = useRef(null), Oe = y$2(L, ce);
  l$6(() => {
    if (ie.__demoMode || ie.menuState !== 0 || !pe || ie.activationTrigger === 0) return;
    let Pt = o$5();
    return Pt.requestAnimationFrame(() => {
      var Dt, Gt;
      (Gt = (Dt = ce.current) == null ? void 0 : Dt.scrollIntoView) == null || Gt.call(Dt, { block: "nearest" });
    }), Pt.dispose;
  }, [ie.__demoMode, ce, pe, ie.menuState, ie.activationTrigger, ie.activeItemIndex]);
  let rt = s$2(ce), ut = useRef({ disabled: re, domRef: ce, get textValue() {
    return rt();
  } });
  l$6(() => {
    ut.current.disabled = re;
  }, [ut, re]), l$6(() => (oe({ type: 5, id: J, dataRef: ut }), () => oe({ type: 6, id: J })), [ut, J]);
  let dt = o$6(() => {
    oe({ type: 1 });
  }), ht = o$6((Pt) => {
    if (re) return Pt.preventDefault();
    oe({ type: 1 }), D$3(ie.buttonRef.current);
  }), bt = o$6(() => {
    if (re) return oe({ type: 2, focus: c$5.Nothing });
    oe({ type: 2, focus: c$5.Specific, id: J });
  }), Tt = u$5(), wt = o$6((Pt) => Tt.update(Pt)), Et = o$6((Pt) => {
    Tt.wasMoved(Pt) && (re || pe || oe({ type: 2, focus: c$5.Specific, id: J, trigger: 0 }));
  }), Rt = o$6((Pt) => {
    Tt.wasMoved(Pt) && (re || pe && oe({ type: 2, focus: c$5.Nothing }));
  }), Bt = useMemo(() => ({ active: pe, disabled: re, close: dt }), [pe, re, dt]);
  return C$2({ ourProps: { id: J, ref: Oe, role: "menuitem", tabIndex: re === !0 ? void 0 : -1, "aria-disabled": re === !0 || void 0, disabled: void 0, onClick: ht, onFocus: bt, onPointerEnter: wt, onMouseEnter: wt, onPointerMove: Et, onMouseMove: Et, onPointerLeave: Rt, onMouseLeave: Rt }, theirProps: ne, slot: Bt, defaultTag: Se$1, name: "Menu.Item" });
}
let Pe$1 = U$3(Me), ve = U$3(Re$1), he = U$3(Ee), De$1 = U$3(xe$1), qe$1 = Object.assign(Pe$1, { Button: ve, Items: he, Item: De$1 });
function c$1(B = 0) {
  let [L, V] = useState(B), J = f$6(), re = useCallback((pe) => {
    J.current && V((ce) => ce | pe);
  }, [L, J]), ne = useCallback((pe) => !!(L & pe), [L]), ie = useCallback((pe) => {
    J.current && V((ce) => ce & ~pe);
  }, [V, J]), oe = useCallback((pe) => {
    J.current && V((ce) => ce ^ pe);
  }, [V]);
  return { flags: L, addFlag: re, hasFlag: ne, removeFlag: ie, toggleFlag: oe };
}
function l$1(B) {
  let L = { called: !1 };
  return (...V) => {
    if (!L.called) return L.called = !0, B(...V);
  };
}
function g$3(B, ...L) {
  B && L.length > 0 && B.classList.add(...L);
}
function v$1(B, ...L) {
  B && L.length > 0 && B.classList.remove(...L);
}
function b$1(B, L) {
  let V = o$5();
  if (!B) return V.dispose;
  let { transitionDuration: J, transitionDelay: re } = getComputedStyle(B), [ne, ie] = [J, re].map((pe) => {
    let [ce = 0] = pe.split(",").filter(Boolean).map((Oe) => Oe.includes("ms") ? parseFloat(Oe) : 1e3 * parseFloat(Oe)).sort((Oe, rt) => rt - Oe);
    return ce;
  }), oe = ne + ie;
  if (oe !== 0) {
    V.group((ce) => {
      ce.setTimeout(() => {
        L(), ce.dispose();
      }, oe), ce.addEventListener(B, "transitionrun", (Oe) => {
        Oe.target === Oe.currentTarget && ce.dispose();
      });
    });
    let pe = V.addEventListener(B, "transitionend", (ce) => {
      ce.target === ce.currentTarget && (L(), pe());
    });
  } else L();
  return V.add(() => L()), V.dispose;
}
function M$1(B, L, V, J) {
  let re = V ? "enter" : "leave", ne = o$5(), ie = J !== void 0 ? l$1(J) : () => {
  };
  re === "enter" && (B.removeAttribute("hidden"), B.style.display = "");
  let oe = u$7(re, { enter: () => L.enter, leave: () => L.leave }), pe = u$7(re, { enter: () => L.enterTo, leave: () => L.leaveTo }), ce = u$7(re, { enter: () => L.enterFrom, leave: () => L.leaveFrom });
  return v$1(B, ...L.base, ...L.enter, ...L.enterTo, ...L.enterFrom, ...L.leave, ...L.leaveFrom, ...L.leaveTo, ...L.entered), g$3(B, ...L.base, ...oe, ...ce), ne.nextFrame(() => {
    v$1(B, ...L.base, ...oe, ...ce), g$3(B, ...L.base, ...oe, ...pe), b$1(B, () => (v$1(B, ...L.base, ...oe), g$3(B, ...L.base, ...L.entered), ie()));
  }), ne.dispose;
}
function D({ immediate: B, container: L, direction: V, classes: J, onStart: re, onStop: ne }) {
  let ie = f$6(), oe = p$4(), pe = s$a(V);
  l$6(() => {
    B && (pe.current = "enter");
  }, [B]), l$6(() => {
    let ce = o$5();
    oe.add(ce.dispose);
    let Oe = L.current;
    if (Oe && pe.current !== "idle" && ie.current) return ce.dispose(), re.current(pe.current), ce.add(M$1(Oe, J.current, pe.current === "enter", () => {
      ce.dispose(), ne.current(pe.current);
    })), ce.dispose;
  }, [V]);
}
function S(B = "") {
  return B.split(/\s+/).filter((L) => L.length > 1);
}
let I$1 = createContext(null);
I$1.displayName = "TransitionContext";
var Se = ((B) => (B.Visible = "visible", B.Hidden = "hidden", B))(Se || {});
function ye() {
  let B = useContext(I$1);
  if (B === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return B;
}
function xe() {
  let B = useContext(M);
  if (B === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return B;
}
let M = createContext(null);
function U(B) {
  return "children" in B ? U(B.children) : B.current.filter(({ el: L }) => L.current !== null).filter(({ state: L }) => L === "visible").length > 0;
}
function se(B, L) {
  let V = s$a(B), J = useRef([]), re = f$6(), ne = p$4(), ie = o$6((dt, ht = v$2.Hidden) => {
    let bt = J.current.findIndex(({ el: Tt }) => Tt === dt);
    bt !== -1 && (u$7(ht, { [v$2.Unmount]() {
      J.current.splice(bt, 1);
    }, [v$2.Hidden]() {
      J.current[bt].state = "hidden";
    } }), ne.microTask(() => {
      var Tt;
      !U(J) && re.current && ((Tt = V.current) == null || Tt.call(V));
    }));
  }), oe = o$6((dt) => {
    let ht = J.current.find(({ el: bt }) => bt === dt);
    return ht ? ht.state !== "visible" && (ht.state = "visible") : J.current.push({ el: dt, state: "visible" }), () => ie(dt, v$2.Unmount);
  }), pe = useRef([]), ce = useRef(Promise.resolve()), Oe = useRef({ enter: [], leave: [], idle: [] }), rt = o$6((dt, ht, bt) => {
    pe.current.splice(0), L && (L.chains.current[ht] = L.chains.current[ht].filter(([Tt]) => Tt !== dt)), L == null || L.chains.current[ht].push([dt, new Promise((Tt) => {
      pe.current.push(Tt);
    })]), L == null || L.chains.current[ht].push([dt, new Promise((Tt) => {
      Promise.all(Oe.current[ht].map(([wt, Et]) => Et)).then(() => Tt());
    })]), ht === "enter" ? ce.current = ce.current.then(() => L == null ? void 0 : L.wait.current).then(() => bt(ht)) : bt(ht);
  }), ut = o$6((dt, ht, bt) => {
    Promise.all(Oe.current[ht].splice(0).map(([Tt, wt]) => wt)).then(() => {
      var Tt;
      (Tt = pe.current.shift()) == null || Tt();
    }).then(() => bt(ht));
  });
  return useMemo(() => ({ children: J, register: oe, unregister: ie, onStart: rt, onStop: ut, wait: ce, chains: Oe }), [oe, ie, J, rt, ut, Oe, ce]);
}
function Ne() {
}
M.displayName = "NestingContext";
let Pe = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
function ae(B) {
  var L;
  let V = {};
  for (let J of Pe) V[J] = (L = B[J]) != null ? L : Ne;
  return V;
}
function Re(B) {
  let L = useRef(ae(B));
  return useEffect(() => {
    L.current = ae(B);
  }, [B]), L;
}
let De = "div", le = O$1.RenderStrategy;
function He(B, L) {
  var V, J;
  let { beforeEnter: re, afterEnter: ne, beforeLeave: ie, afterLeave: oe, enter: pe, enterFrom: ce, enterTo: Oe, entered: rt, leave: ut, leaveFrom: dt, leaveTo: ht, ...bt } = B, Tt = useRef(null), wt = y$2(Tt, L), Et = (V = bt.unmount) == null || V ? v$2.Unmount : v$2.Hidden, { show: Rt, appear: Bt, initial: Pt } = ye(), [Dt, Gt] = useState(Rt ? "visible" : "hidden"), at = xe(), { register: lt, unregister: Ce } = at;
  useEffect(() => lt(Tt), [lt, Tt]), useEffect(() => {
    if (Et === v$2.Hidden && Tt.current) return Rt && Dt !== "visible" ? void Gt("visible") : u$7(Dt, { hidden: () => Ce(Tt), visible: () => lt(Tt) });
  }, [Dt, Tt, lt, Ce, Rt, Et]);
  let st = s$a({ base: S(bt.className), enter: S(pe), enterFrom: S(ce), enterTo: S(Oe), entered: S(rt), leave: S(ut), leaveFrom: S(dt), leaveTo: S(ht) }), it = Re({ beforeEnter: re, afterEnter: ne, beforeLeave: ie, afterLeave: oe }), nt = l$5();
  useEffect(() => {
    if (nt && Dt === "visible" && Tt.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [Tt, Dt, nt]);
  let ot = Bt && Rt && Pt, ke = !nt || Pt && !Bt ? "idle" : Rt ? "enter" : "leave", ct = c$1(0), yt = o$6((St) => u$7(St, { enter: () => {
    ct.addFlag(d$4.Opening), it.current.beforeEnter();
  }, leave: () => {
    ct.addFlag(d$4.Closing), it.current.beforeLeave();
  }, idle: () => {
  } })), $t = o$6((St) => u$7(St, { enter: () => {
    ct.removeFlag(d$4.Opening), it.current.afterEnter();
  }, leave: () => {
    ct.removeFlag(d$4.Closing), it.current.afterLeave();
  }, idle: () => {
  } })), gt = se(() => {
    Gt("hidden"), Ce(Tt);
  }, at), xt = useRef(!1);
  D({ immediate: ot, container: Tt, classes: st, direction: ke, onStart: s$a((St) => {
    xt.current = !0, gt.onStart(Tt, St, yt);
  }), onStop: s$a((St) => {
    xt.current = !1, gt.onStop(Tt, St, $t), St === "leave" && !U(gt) && (Gt("hidden"), Ce(Tt));
  }) });
  let At = bt, mt = { ref: wt };
  return ot ? At = { ...At, className: t$5(bt.className, ...st.current.enter, ...st.current.enterFrom) } : xt.current && (At.className = t$5(bt.className, (J = Tt.current) == null ? void 0 : J.className), At.className === "" && delete At.className), C__default.createElement(M.Provider, { value: gt }, C__default.createElement(s$6, { value: u$7(Dt, { visible: d$4.Open, hidden: d$4.Closed }) | ct.flags }, C$2({ ourProps: mt, theirProps: At, defaultTag: De, features: le, visible: Dt === "visible", name: "Transition.Child" })));
}
function Fe(B, L) {
  let { show: V, appear: J = !1, unmount: re = !0, ...ne } = B, ie = useRef(null), oe = y$2(ie, L);
  l$5();
  let pe = u$3();
  if (V === void 0 && pe !== null && (V = (pe & d$4.Open) === d$4.Open), ![!0, !1].includes(V)) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [ce, Oe] = useState(V ? "visible" : "hidden"), rt = se(() => {
    Oe("hidden");
  }), [ut, dt] = useState(!0), ht = useRef([V]);
  l$6(() => {
    ut !== !1 && ht.current[ht.current.length - 1] !== V && (ht.current.push(V), dt(!1));
  }, [ht, V]);
  let bt = useMemo(() => ({ show: V, appear: J, initial: ut }), [V, J, ut]);
  useEffect(() => {
    if (V) Oe("visible");
    else if (U(rt)) {
      let Rt = ie.current;
      if (!Rt) return;
      let Bt = Rt.getBoundingClientRect();
      Bt.x === 0 && Bt.y === 0 && Bt.width === 0 && Bt.height === 0 && Oe("hidden");
    } else Oe("hidden");
  }, [V, rt]);
  let Tt = { unmount: re }, wt = o$6(() => {
    var Rt;
    ut && dt(!1), (Rt = B.beforeEnter) == null || Rt.call(B);
  }), Et = o$6(() => {
    var Rt;
    ut && dt(!1), (Rt = B.beforeLeave) == null || Rt.call(B);
  });
  return C__default.createElement(M.Provider, { value: rt }, C__default.createElement(I$1.Provider, { value: bt }, C$2({ ourProps: { ...Tt, as: Fragment, children: C__default.createElement(ue, { ref: oe, ...Tt, ...ne, beforeEnter: wt, beforeLeave: Et }) }, theirProps: {}, defaultTag: Fragment, features: le, visible: ce === "visible", name: "Transition" })));
}
function _e(B, L) {
  let V = useContext(I$1) !== null, J = u$3() !== null;
  return C__default.createElement(C__default.Fragment, null, !V && J ? C__default.createElement(q, { ref: L, ...B }) : C__default.createElement(ue, { ref: L, ...B }));
}
let q = U$3(Fe), ue = U$3(He), Le = U$3(_e), qe = Object.assign(q, { Child: Le, Root: q });
const ChevronDownIcon = "data:image/svg+xml,%3csvg%20width='20'%20height='20'%20viewBox='0%200%2020%2020'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M5%207.5L10%2012.5L15%207.5'%20stroke='white'%20stroke-width='2'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3c/svg%3e", LeatherWalletIcon = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M14.2692%206.04835H10.6729C7.79592%2012.2004%2012.4577%2014.8894%2015.1483%2015.4648L13.9495%2019.3884C12.7348%2018.4467%2010.7795%2018.0282%209.79384%2017.8974C5.55824%2017.662%204.20118%2020.7103%204.03982%2021.9779C3.72015%2024.4889%205.31849%2026.9215%209.07459%2026.9215C12.0795%2026.9215%2014.3758%2025.2998%2015.1483%2024.4889C18.0892%2027%2020.7958%2027.1569%2021.7814%2026.9215C26.7043%2026.5449%2027.5621%2022.004%2027.3756%2019.7807H24.1789C23.4117%2025.8072%2019.0642%2023.338%2016.9864%2021.3501L18.6646%2015.7002C30.0128%2013.1892%2029.9329%204.322%2024.1789%204.00811C19.5757%203.75701%2016.8265%209.39643%2016.0274%2012.2475C12.1914%2011.6198%2013.2569%207.85317%2014.2692%206.04835Z'%20fill='white'/%3e%3cpath%20d='M19.5437%2012.2475C19.9699%2010.6258%2021.7814%206.99461%2023.7793%207.2254C26.4965%207.53927%2022.6605%2011.5413%2019.5437%2012.2475Z'%20fill='%23303746'/%3e%3cpath%20d='M12.8307%2022.2918C11.7918%2021.2716%208.03567%2020.0946%207.31642%2022.2918C7.00817%2023.2334%209.47418%2024.8813%2012.8307%2022.2918Z'%20fill='%23303746'/%3e%3c/svg%3e", LogoutIcon = "data:image/svg+xml,%3csvg%20width='20'%20height='20'%20viewBox='0%200%2020%2020'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M7.5%2017.5H4.16667C3.72464%2017.5%203.30072%2017.3244%202.98816%2017.0118C2.67559%2016.6993%202.5%2016.2754%202.5%2015.8333V4.16667C2.5%203.72464%202.67559%203.30072%202.98816%202.98816C3.30072%202.67559%203.72464%202.5%204.16667%202.5H7.5'%20stroke='white'%20stroke-width='1.5'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cpath%20d='M13.333%2014.1667L17.4997%2010L13.333%205.83337'%20stroke='white'%20stroke-width='1.5'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cpath%20d='M17.5%2010H7.5'%20stroke='white'%20stroke-width='1.5'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3c/svg%3e", MagicEdenWalletIcon = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M21.403%2011.0761L22.9233%2012.9126C23.0973%2013.1219%2023.2486%2013.2846%2023.3167%2013.3853C23.7705%2013.8503%2024.0277%2014.478%2024.0277%2015.1289C23.9823%2015.8961%2023.4982%2016.423%2023.0444%2016.9887L21.9779%2018.2673L21.4257%2018.9338C21.403%2018.957%2021.3954%2018.988%2021.3879%2019.019C21.3803%2019.05%2021.3879%2019.081%2021.403%2019.1043C21.4181%2019.1353%2021.4332%2019.1585%2021.4635%2019.174C21.4862%2019.1895%2021.5165%2019.1973%2021.5467%2019.1973H27.0986C27.9458%2019.1973%2029.0123%2019.9257%2028.9518%2021.0338C28.9518%2021.5375%2028.7476%2022.018%2028.3996%2022.3744C28.0441%2022.7309%2027.5676%2022.9324%2027.0684%2022.9324H18.3699C17.795%2022.9324%2016.2595%2022.9944%2015.8284%2021.6538C15.7376%2021.3748%2015.7225%2021.0726%2015.7906%2020.7858C15.9192%2020.3596%2016.1158%2019.9567%2016.373%2019.6002C16.8117%2018.9338%2017.2807%2018.2751%2017.7496%2017.6319C18.3547%2016.7872%2018.9674%2015.9736%2019.5801%2015.1134C19.6028%2015.0824%2019.6103%2015.0514%2019.6103%2015.0127C19.6103%2014.9739%2019.5952%2014.9429%2019.5801%2014.9119L17.3714%2012.254C17.3563%2012.2385%2017.3412%2012.223%2017.3185%2012.2075C17.2958%2012.1997%2017.2731%2012.192%2017.2504%2012.192C17.2277%2012.192%2017.205%2012.1997%2017.1823%2012.2075C17.1596%2012.2152%2017.1445%2012.2307%2017.1294%2012.254C16.5394%2013.0599%2013.945%2016.6323%2013.3928%2017.3607C12.8406%2018.0814%2011.4791%2018.1279%2010.7228%2017.3607L7.26605%2013.8581C7.24335%2013.8348%207.2131%2013.8193%207.18284%2013.8116C7.15259%2013.8038%207.12233%2013.8116%207.09208%2013.8193C7.06182%2013.8348%207.03913%2013.8503%207.024%2013.8813C7.00887%2013.9045%206.99374%2013.9355%207.00131%2013.9665V20.7006C7.00887%2021.181%206.87272%2021.646%206.60042%2022.0412C6.32812%2022.4364%205.94993%2022.7309%205.50365%2022.8936C5.21623%2022.9944%204.91367%2023.0254%204.61868%2022.9789C4.32368%2022.9324%204.03626%2022.8239%203.79421%2022.6456C3.5446%2022.4674%203.34794%2022.2349%203.21179%2021.9637C3.07564%2021.6925%203%2021.3903%203%2021.0881V8.97605C3.02269%208.54209%203.17397%208.12364%203.44627%207.77492C3.71857%207.43396%204.08164%207.18598%204.49765%207.06974C4.85316%206.97675%205.23135%206.97675%205.58686%207.06974C5.94236%207.17048%206.26761%207.35646%206.53235%207.62769L11.8498%2012.9979C11.8649%2013.0134%2011.8876%2013.0289%2011.9027%2013.0366C11.9254%2013.0444%2011.9481%2013.0444%2011.9708%2013.0444C11.9935%2013.0444%2012.0162%2013.0366%2012.0313%2013.0211C12.054%2013.0134%2012.0691%2012.9979%2012.0843%2012.9746L15.8586%207.69743C16.0326%207.48045%2016.252%207.30997%2016.5016%207.19373C16.7512%207.07749%2017.0235%207.00775%2017.2958%207.00775H27.1137C27.386%207.00775%2027.6508%207.06974%2027.8928%207.17823C28.1349%207.29447%2028.3542%207.4572%2028.5358%207.65868C28.7097%207.86016%2028.8459%208.10039%2028.9215%208.36386C28.9972%208.62733%2029.0199%208.89856%2028.982%209.16978C28.914%209.63473%2028.6795%2010.0609%2028.324%2010.3632C27.9685%2010.6654%2027.5146%2010.8359%2027.0457%2010.8281H21.5467C21.5165%2010.8281%2021.4938%2010.8359%2021.4711%2010.8514C21.4484%2010.8669%2021.4257%2010.8901%2021.4181%2010.9134C21.403%2010.9366%2021.403%2010.9676%2021.403%2010.9908C21.3803%2011.0218%2021.3879%2011.0528%2021.403%2011.0761Z'%20fill='url(%23paint0_linear_3119_13568)'/%3e%3cdefs%3e%3clinearGradient%20id='paint0_linear_3119_13568'%20x1='4.08333'%20y1='11'%20x2='29'%20y2='11'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%23EF2690'/%3e%3cstop%20offset='1'%20stop-color='%23AB27FE'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e", OKXWalletIcon = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M11.8444%205H5.48893C5.21893%205%205%205.21883%205%205.48892V11.8444C5%2012.1144%205.21893%2012.3334%205.48893%2012.3334H11.8444C12.1145%2012.3334%2012.3334%2012.1144%2012.3334%2011.8444V5.48892C12.3334%205.21883%2012.1145%205%2011.8444%205ZM19.1807%2012.3336H12.8252C12.5552%2012.3336%2012.3363%2012.5524%2012.3363%2012.8224V19.178C12.3363%2019.448%2012.5552%2019.6669%2012.8252%2019.6669H19.1807C19.4507%2019.6669%2019.6697%2019.448%2019.6697%2019.178V12.8224C19.6697%2012.5524%2019.4507%2012.3336%2019.1807%2012.3336ZM20.1556%205.00001H26.5112C26.7812%205.00001%2027%205.21884%2027%205.48893V11.8444C27%2012.1144%2026.7812%2012.3334%2026.5112%2012.3334H20.1556C19.8856%2012.3334%2019.6666%2012.1144%2019.6666%2011.8444V5.48893C19.6666%205.21884%2019.8856%205.00001%2020.1556%205.00001ZM11.8445%2019.6665H5.48895C5.21895%2019.6665%205.00002%2019.8853%205.00002%2020.1553V26.511C5.00002%2026.781%205.21895%2026.9999%205.48895%2026.9999H11.8445C12.1146%2026.9999%2012.3334%2026.781%2012.3334%2026.511V20.1553C12.3334%2019.8853%2012.1146%2019.6665%2011.8445%2019.6665ZM20.1556%2019.6665H26.5112C26.7812%2019.6665%2027%2019.8853%2027%2020.1553V26.511C27%2026.781%2026.7812%2026.9999%2026.5112%2026.9999H20.1556C19.8856%2026.9999%2019.6666%2026.781%2019.6666%2026.511V20.1553C19.6666%2019.8853%2019.8856%2019.6665%2020.1556%2019.6665Z'%20fill='white'/%3e%3c/svg%3e", UnisatWalletIcon = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M20.2892%204.87219L26.2505%2010.3415C26.7579%2010.8061%2027.0077%2011.2762%2026.9998%2011.7498C26.992%2012.2235%2026.7737%2012.6553%2026.3469%2013.047C25.9004%2013.457%2025.4185%2013.6647%2024.9032%2013.6738C24.3879%2013.6811%2023.8766%2013.4515%2023.3691%2012.9869L17.2721%207.39369C16.5798%206.75785%2015.9111%206.30785%2015.268%206.04367C14.6248%205.7795%2013.9482%205.73759%2013.2402%205.91978C12.5302%206.10015%2011.769%206.56473%2010.9528%207.31171C9.82782%208.34472%209.29089%209.31397%209.34596%2010.2195C9.40103%2011.1249%209.9596%2012.065%2011.0197%2013.0361L17.1659%2018.6767C17.6792%2019.1467%2017.931%2019.6168%2017.9231%2020.0832C17.9152%2020.5514%2017.695%2020.9832%2017.2603%2021.3822C16.8276%2021.7794%2016.3497%2021.9871%2015.8305%2022.0035C15.3112%2022.0199%2014.794%2021.7921%2014.2826%2021.3221L8.32127%2015.8528C7.35164%2014.9637%206.65146%2014.122%206.22074%2013.3276C5.79001%2012.5333%205.62874%2011.6351%205.74084%2010.633C5.84115%209.77491%206.13813%208.94413%206.63376%208.13885C7.12743%207.33357%207.83547%206.51008%208.75396%205.66654C9.84749%204.66268%2010.8919%203.89384%2011.887%203.3582C12.8803%202.82256%2013.842%202.52559%2014.7704%202.46365C15.7006%202.4017%2016.6172%202.57296%2017.5239%202.97742C18.4305%203.38188%2019.351%204.01226%2020.2872%204.87219H20.2892Z'%20fill='url(%23paint0_linear_3119_13572)'/%3e%3cpath%20d='M10.9371%2026.9408L4.97771%2021.4714C4.47027%2021.005%204.22049%2020.5368%204.22836%2020.0631C4.23623%2019.5894%204.45454%2019.1576%204.88133%2018.7659C5.32779%2018.356%205.80966%2018.1483%206.32495%2018.1392C6.84025%2018.1319%207.35162%2018.3596%207.85905%2018.826L13.9541%2024.4193C14.6484%2025.0551%2015.3151%2025.5051%2015.9583%2025.7693C16.6014%2026.0335%2017.278%2026.0735%2017.988%2025.8932C18.698%2025.7128%2019.4591%2025.2482%2020.2754%2024.4994C21.4004%2023.4664%2021.9373%2022.4972%2021.8822%2021.5917C21.8272%2020.6862%2021.2686%2019.7461%2020.2085%2018.7732L16.9338%2015.7944C16.4205%2015.3244%2016.1687%2014.8543%2016.1766%2014.3879C16.1845%2013.9197%2016.4047%2013.4879%2016.8394%2013.0889C17.2721%2012.6917%2017.75%2012.484%2018.2692%2012.4676C18.7885%2012.4512%2019.3057%2012.679%2019.8171%2013.149L22.905%2015.9566C23.8746%2016.8457%2024.5748%2017.6874%2025.0055%2018.4817C25.4362%2019.2761%2025.5975%2020.1743%2025.4854%2021.1763C25.3851%2022.0344%2025.0881%2022.8652%2024.5925%2023.6705C24.0988%2024.4757%2023.3908%2025.2992%2022.4723%2026.1428C21.3787%2027.1466%2020.3344%2027.9155%2019.3392%2028.4511C18.344%2028.9868%2017.3822%2029.2856%2016.4519%2029.3475C15.5216%2029.4094%2014.6051%2029.2382%2013.6984%2028.8337C12.7917%2028.4293%2011.8713%2027.7989%2010.9351%2026.9389L10.9371%2026.9408Z'%20fill='url(%23paint1_linear_3119_13572)'/%3e%3cpath%20d='M14.6543%2012.8284C15.8633%2012.8284%2016.8433%2011.9205%2016.8433%2010.8006C16.8433%209.6807%2015.8633%208.77284%2014.6543%208.77284C13.4453%208.77284%2012.4653%209.6807%2012.4653%2010.8006C12.4653%2011.9205%2013.4453%2012.8284%2014.6543%2012.8284Z'%20fill='url(%23paint2_radial_3119_13572)'/%3e%3cdefs%3e%3clinearGradient%20id='paint0_linear_3119_13572'%20x1='25.27'%20y1='8.05866'%20x2='7.28614'%20y2='16.6864'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%23201C1B'/%3e%3cstop%20offset='0.36'%20stop-color='%2377390D'/%3e%3cstop%20offset='0.67'%20stop-color='%23EA8101'/%3e%3cstop%20offset='1'%20stop-color='%23F4B852'/%3e%3c/linearGradient%3e%3clinearGradient%20id='paint1_linear_3119_13572'%20x1='6.4668'%20y1='23.9797'%20x2='27.5911'%20y2='17.1926'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%231F1D1C'/%3e%3cstop%20offset='0.37'%20stop-color='%2377390D'/%3e%3cstop%20offset='0.67'%20stop-color='%23EA8101'/%3e%3cstop%20offset='1'%20stop-color='%23F4FB52'/%3e%3c/linearGradient%3e%3cradialGradient%20id='paint2_radial_3119_13572'%20cx='0'%20cy='0'%20r='1'%20gradientUnits='userSpaceOnUse'%20gradientTransform='translate(14.6543%2010.8024)%20scale(2.18903%202.02777)'%3e%3cstop%20stop-color='%23F4B852'/%3e%3cstop%20offset='0.33'%20stop-color='%23EA8101'/%3e%3cstop%20offset='0.64'%20stop-color='%2377390D'/%3e%3cstop%20offset='1'%20stop-color='%23211C1D'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e", XverseWalletIcon = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M27.0042%2026.6428V22.6649C27.0042%2022.5072%2026.9416%2022.3568%2026.8298%2022.245L9.90453%205.31965C9.79276%205.20788%209.64232%205.14521%209.4846%205.14521H5.50684C5.31046%205.14521%205.15063%205.30503%205.15063%205.50141V9.19714C5.15063%209.35487%205.21331%209.50528%205.32508%209.61706L11.4004%2015.6923C11.5393%2015.8313%2011.5393%2016.0569%2011.4004%2016.1959L5.25509%2022.3411C5.18824%2022.4079%205.15063%2022.4988%205.15063%2022.5929V26.6428C5.15063%2026.839%205.31046%2026.999%205.50684%2026.999H12.1535C12.3499%2026.999%2012.5097%2026.839%2012.5097%2026.6428V24.2569C12.5097%2024.1629%2012.5473%2024.072%2012.6142%2024.0051L15.9108%2020.7084C16.0498%2020.5695%2016.2754%2020.5695%2016.4144%2020.7084L22.5314%2026.8256C22.6432%2026.9373%2022.7936%2027%2022.9513%2027H26.647C26.8434%2027%2027.0032%2026.8401%2027.0032%2026.6438L27.0042%2026.6428Z'%20fill='white'/%3e%3cpath%20d='M18.1379%2010.413H21.467C21.6644%2010.413%2021.8253%2010.5739%2021.8253%2010.7713V14.1003C21.8253%2014.42%2022.2118%2014.5799%2022.4374%2014.3531L27.0043%209.77894C27.0711%209.71207%2027.1088%209.62121%2027.1088%209.52614V5.52017C27.1088%205.32275%2026.9488%205.16188%2026.7504%205.16188L22.6849%205.15666C22.5899%205.15666%2022.4991%205.19426%2022.4311%205.26112L17.8841%209.80087C17.6585%2010.0265%2017.8182%2010.413%2018.1369%2010.413H18.1379Z'%20fill='%23EE7A30'/%3e%3c/svg%3e";
function truncateMiddle(B, L = 4, V = 5) {
  return B.length <= L + V ? B : `${B.slice(0, L)}...${B.slice(B.length - V)}`;
}
const WALLET_TO_ICON = { [Wallet.XVERSE]: XverseWalletIcon, [Wallet.MAGICEDEN]: MagicEdenWalletIcon, [Wallet.UNISAT]: UnisatWalletIcon, [Wallet.LEATHER]: LeatherWalletIcon, [Wallet.OKX]: OKXWalletIcon }, NETWORK_DISPLAY_NAME = { [Network.MAINNET]: "Mainnet", [Network.TESTNET]: "Testnet", [Network.SIGNET]: "Signet" };
function PostConnectButton({ address: B, network: L, onViewProfile: V, onChangeWallet: J, onDisconnectWallet: re }) {
  const { wallet: ne } = useWallie();
  return jsxRuntimeExports.jsx(qe$1, { as: "section", className: "wallie-relative wallie-inline-block wallie-text-left", children: ({ open: ie }) => jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [jsxRuntimeExports.jsxs(qe$1.Button, { children: [jsxRuntimeExports.jsx("div", { className: "wallet-identifier-container", children: jsxRuntimeExports.jsx("img", { src: WALLET_TO_ICON[ne], alt: `${ne} is connected` }) }), jsxRuntimeExports.jsxs("section", { className: "address-container", children: [jsxRuntimeExports.jsx("p", { className: "address", children: truncateMiddle(B) }), jsxRuntimeExports.jsxs("section", { className: "network-container", children: [jsxRuntimeExports.jsx("div", { className: "status-indicator" }), jsxRuntimeExports.jsx("p", { className: "network", children: NETWORK_DISPLAY_NAME[L] ?? L })] })] }), jsxRuntimeExports.jsx("img", { src: ChevronDownIcon, className: "dropdown-button " + (ie ? "close-dropdown-button" : "expand-dropdown-button"), alt: "ord connect dropdown" })] }), jsxRuntimeExports.jsx(qe, { as: Fragment, enter: "transition ease-out duration-100", enterFrom: "transform opacity-0 scale-95", enterTo: "transform opacity-100 scale-100", leave: "transition ease-in duration-75", leaveFrom: "transform opacity-100 scale-100", leaveTo: "transform opacity-0 scale-95", children: jsxRuntimeExports.jsxs(qe$1.Items, { className: "ord-wallet-connection-dropdown", children: [jsxRuntimeExports.jsxs(qe$1.Item, { as: "button", className: "dropdown-button", onClick: () => V == null ? void 0 : V(), children: [jsxRuntimeExports.jsx("span", { className: "label", children: "View profile" }), jsxRuntimeExports.jsx("span", { className: "value", children: truncateMiddle(B) })] }), jsxRuntimeExports.jsx(qe$1.Item, { as: "button", className: "dropdown-button", onClick: () => J == null ? void 0 : J(), children: jsxRuntimeExports.jsx("span", { className: "change-wallet-label", children: "Change wallet" }) }), jsxRuntimeExports.jsx("hr", { className: "horizontal-separator" }), jsxRuntimeExports.jsxs(qe$1.Item, { as: "button", className: "dropdown-button", onClick: () => re == null ? void 0 : re(), children: [jsxRuntimeExports.jsx("span", { className: "label", children: "Disconnect wallet" }), jsxRuntimeExports.jsx("img", { src: LogoutIcon, className: "logout-icon", alt: "logout" })] })] }) })] }) });
}
const WalletIcon = "data:image/svg+xml,%3csvg%20viewBox='0%200%2030%2030'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%20%3e%3cpath%20d='M9%206.25C7.61929%206.25%206.5%207.36929%206.5%208.75V21.25C6.5%2022.6308%207.61929%2023.75%209%2023.75H25C26.3808%2023.75%2027.5%2022.6308%2027.5%2021.25V18.75H23.75C21.6789%2018.75%2020%2017.0711%2020%2015C20%2012.9289%2021.6789%2011.25%2023.75%2011.25H27.5V8.75C27.5%207.36929%2026.3808%206.25%2025%206.25H9Z'%20fill='%231C2033'%20/%3e%3cpath%20d='M25%2015C25%2015.6904%2024.4404%2016.25%2023.75%2016.25C23.0596%2016.25%2022.5%2015.6904%2022.5%2015C22.5%2014.3096%2023.0596%2013.75%2023.75%2013.75C24.4404%2013.75%2025%2014.3096%2025%2015Z'%20fill='%231C2033'%20/%3e%3c/svg%3e";
function PreConnectButton({ openModal: B, disabled: L, connectButton: V = "Wallet Connect", connectButtonComponent: J }) {
  return J ? jsxRuntimeExports.jsx("button", { onClick: B, "aria-label": "Connect Button", type: "button", className: "wallie-w-full", children: J }) : jsxRuntimeExports.jsxs("button", { type: "button", onClick: B, disabled: L, className: "wallie-bg-ord-orange wallie-rounded-full wallie-flex wallie-flex-row md:wallie-space-x-2 wallie-items-center wallie-p-1 wallie-pr-2 wallie-px-1 md:wallie-pr-3 md:wallie-px-3", children: [jsxRuntimeExports.jsx("img", { className: "wallie-w-6 md:wallie-w-7", src: WalletIcon, alt: "" }), jsxRuntimeExports.jsx("span", { className: "wallie-hidden md:wallie-block wallie-text-ord-blue wallie-mb-1 wallie-pr-2", children: V })] });
}
const CloseModalIcon = "data:image/svg+xml,%3csvg%20width='19'%20height='19'%20viewBox='0%200%2019%2019'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M4.07844%204.07811C4.25659%203.90001%204.49818%203.79996%204.75009%203.79996C5.002%203.79996%205.24359%203.90001%205.42174%204.07811L9.50009%208.15646L13.5784%204.07811C13.6661%203.98738%2013.7709%203.915%2013.8868%203.86521C14.0027%203.81542%2014.1274%203.78922%2014.2535%203.78812C14.3796%203.78703%2014.5047%203.81106%2014.6215%203.85883C14.7382%203.9066%2014.8443%203.97714%2014.9335%204.06633C15.0227%204.15553%2015.0933%204.2616%2015.141%204.37835C15.1888%204.4951%2015.2128%204.6202%2015.2117%204.74634C15.2106%204.87248%2015.1844%204.99714%2015.1346%205.11304C15.0848%205.22895%2015.0125%205.33378%2014.9217%205.42141L10.8434%209.49976L14.9217%2013.5781C15.0948%2013.7573%2015.1905%2013.9973%2015.1884%2014.2463C15.1862%2014.4954%2015.0863%2014.7337%2014.9102%2014.9098C14.734%2015.086%2014.4958%2015.1859%2014.2467%2015.1881C13.9976%2015.1902%2013.7576%2015.0945%2013.5784%2014.9214L9.50009%2010.8431L5.42174%2014.9214C5.24257%2015.0945%205.0026%2015.1902%204.75351%2015.1881C4.50442%2015.1859%204.26615%2015.086%204.09001%2014.9098C3.91387%2014.7337%203.81396%2014.4954%203.8118%2014.2463C3.80964%2013.9973%203.90539%2013.7573%204.07844%2013.5781L8.15679%209.49976L4.07844%205.42141C3.90034%205.24326%203.80029%205.00167%203.80029%204.74976C3.80029%204.49785%203.90034%204.25626%204.07844%204.07811Z'%20fill='%23D9D5D2'/%3e%3c/svg%3e";
var buffer$1 = {}, base64Js$1 = {};
base64Js$1.byteLength = byteLength$1, base64Js$1.toByteArray = toByteArray$1, base64Js$1.fromByteArray = fromByteArray$1;
for (var lookup$1 = [], revLookup$1 = [], Arr$1 = typeof Uint8Array < "u" ? Uint8Array : Array, code$1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i$2 = 0, len$1 = code$1.length; i$2 < len$1; ++i$2) lookup$1[i$2] = code$1[i$2], revLookup$1[code$1.charCodeAt(i$2)] = i$2;
function getLens$1(B) {
  var L = B.length;
  if (L % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
  var V = B.indexOf("=");
  return V === -1 && (V = L), [V, V === L ? 0 : 4 - V % 4];
}
function byteLength$1(B) {
  var L = getLens$1(B), V = L[0], J = L[1];
  return 3 * (V + J) / 4 - J;
}
function _byteLength$1(B, L, V) {
  return 3 * (L + V) / 4 - V;
}
function toByteArray$1(B) {
  var L, V, J = getLens$1(B), re = J[0], ne = J[1], ie = new Arr$1(_byteLength$1(B, re, ne)), oe = 0, pe = ne > 0 ? re - 4 : re;
  for (V = 0; V < pe; V += 4) L = revLookup$1[B.charCodeAt(V)] << 18 | revLookup$1[B.charCodeAt(V + 1)] << 12 | revLookup$1[B.charCodeAt(V + 2)] << 6 | revLookup$1[B.charCodeAt(V + 3)], ie[oe++] = L >> 16 & 255, ie[oe++] = L >> 8 & 255, ie[oe++] = 255 & L;
  return ne === 2 && (L = revLookup$1[B.charCodeAt(V)] << 2 | revLookup$1[B.charCodeAt(V + 1)] >> 4, ie[oe++] = 255 & L), ne === 1 && (L = revLookup$1[B.charCodeAt(V)] << 10 | revLookup$1[B.charCodeAt(V + 1)] << 4 | revLookup$1[B.charCodeAt(V + 2)] >> 2, ie[oe++] = L >> 8 & 255, ie[oe++] = 255 & L), ie;
}
function tripletToBase64$1(B) {
  return lookup$1[B >> 18 & 63] + lookup$1[B >> 12 & 63] + lookup$1[B >> 6 & 63] + lookup$1[63 & B];
}
function encodeChunk$1(B, L, V) {
  for (var J, re = [], ne = L; ne < V; ne += 3) J = (B[ne] << 16 & 16711680) + (B[ne + 1] << 8 & 65280) + (255 & B[ne + 2]), re.push(tripletToBase64$1(J));
  return re.join("");
}
function fromByteArray$1(B) {
  for (var L, V = B.length, J = V % 3, re = [], ne = 16383, ie = 0, oe = V - J; ie < oe; ie += ne) re.push(encodeChunk$1(B, ie, ie + ne > oe ? oe : ie + ne));
  return J === 1 ? (L = B[V - 1], re.push(lookup$1[L >> 2] + lookup$1[L << 4 & 63] + "==")) : J === 2 && (L = (B[V - 2] << 8) + B[V - 1], re.push(lookup$1[L >> 10] + lookup$1[L >> 4 & 63] + lookup$1[L << 2 & 63] + "=")), re.join("");
}
revLookup$1[45] = 62, revLookup$1[95] = 63;
var ieee754 = {
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  read: function(B, L, V, J, re) {
    var ne, ie, oe = 8 * re - J - 1, pe = (1 << oe) - 1, ce = pe >> 1, Oe = -7, rt = V ? re - 1 : 0, ut = V ? -1 : 1, dt = B[L + rt];
    for (rt += ut, ne = dt & (1 << -Oe) - 1, dt >>= -Oe, Oe += oe; Oe > 0; ne = 256 * ne + B[L + rt], rt += ut, Oe -= 8) ;
    for (ie = ne & (1 << -Oe) - 1, ne >>= -Oe, Oe += J; Oe > 0; ie = 256 * ie + B[L + rt], rt += ut, Oe -= 8) ;
    if (ne === 0) ne = 1 - ce;
    else {
      if (ne === pe) return ie ? NaN : 1 / 0 * (dt ? -1 : 1);
      ie += Math.pow(2, J), ne -= ce;
    }
    return (dt ? -1 : 1) * ie * Math.pow(2, ne - J);
  },
  write: function(B, L, V, J, re, ne) {
    var ie, oe, pe, ce = 8 * ne - re - 1, Oe = (1 << ce) - 1, rt = Oe >> 1, ut = re === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, dt = J ? 0 : ne - 1, ht = J ? 1 : -1, bt = L < 0 || L === 0 && 1 / L < 0 ? 1 : 0;
    for (L = Math.abs(L), isNaN(L) || L === 1 / 0 ? (oe = isNaN(L) ? 1 : 0, ie = Oe) : (ie = Math.floor(Math.log(L) / Math.LN2), L * (pe = Math.pow(2, -ie)) < 1 && (ie--, pe *= 2), (L += ie + rt >= 1 ? ut / pe : ut * Math.pow(2, 1 - rt)) * pe >= 2 && (ie++, pe /= 2), ie + rt >= Oe ? (oe = 0, ie = Oe) : ie + rt >= 1 ? (oe = (L * pe - 1) * Math.pow(2, re), ie += rt) : (oe = L * Math.pow(2, rt - 1) * Math.pow(2, re), ie = 0)); re >= 8; B[V + dt] = 255 & oe, dt += ht, oe /= 256, re -= 8) ;
    for (ie = ie << re | oe, ce += re; ce > 0; B[V + dt] = 255 & ie, dt += ht, ie /= 256, ce -= 8) ;
    B[V + dt - ht] |= 128 * bt;
  }
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(B) {
  const L = base64Js$1, V = ieee754, J = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  B.Buffer = ce, B.SlowBuffer = function(pt) {
    return +pt != pt && (pt = 0), ce.alloc(+pt);
  }, B.INSPECT_MAX_BYTES = 50;
  const re = 2147483647;
  B.kMaxLength = re;
  const { Uint8Array: ne, ArrayBuffer: ie, SharedArrayBuffer: oe } = globalThis;
  function pe(pt) {
    if (pt > re) throw new RangeError('The value "' + pt + '" is invalid for option "size"');
    const vt = new ne(pt);
    return Object.setPrototypeOf(vt, ce.prototype), vt;
  }
  function ce(pt, vt, kt) {
    if (typeof pt == "number") {
      if (typeof vt == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
      return ut(pt);
    }
    return Oe(pt, vt, kt);
  }
  function Oe(pt, vt, kt) {
    if (typeof pt == "string") return function(Kt, Yt) {
      if (typeof Yt == "string" && Yt !== "" || (Yt = "utf8"), !ce.isEncoding(Yt)) throw new TypeError("Unknown encoding: " + Yt);
      const ir = 0 | Tt(Kt, Yt);
      let wr = pe(ir);
      const _r = wr.write(Kt, Yt);
      return _r !== ir && (wr = wr.slice(0, _r)), wr;
    }(pt, vt);
    if (ie.isView(pt)) return function(Kt) {
      if (dr(Kt, ne)) {
        const Yt = new ne(Kt);
        return ht(Yt.buffer, Yt.byteOffset, Yt.byteLength);
      }
      return dt(Kt);
    }(pt);
    if (pt == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof pt);
    if (dr(pt, ie) || pt && dr(pt.buffer, ie) || oe !== void 0 && (dr(pt, oe) || pt && dr(pt.buffer, oe))) return ht(pt, vt, kt);
    if (typeof pt == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
    const Ct = pt.valueOf && pt.valueOf();
    if (Ct != null && Ct !== pt) return ce.from(Ct, vt, kt);
    const Ht = function(Kt) {
      if (ce.isBuffer(Kt)) {
        const Yt = 0 | bt(Kt.length), ir = pe(Yt);
        return ir.length === 0 || Kt.copy(ir, 0, 0, Yt), ir;
      }
      if (Kt.length !== void 0) return typeof Kt.length != "number" || Pr(Kt.length) ? pe(0) : dt(Kt);
      if (Kt.type === "Buffer" && Array.isArray(Kt.data)) return dt(Kt.data);
    }(pt);
    if (Ht) return Ht;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof pt[Symbol.toPrimitive] == "function") return ce.from(pt[Symbol.toPrimitive]("string"), vt, kt);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof pt);
  }
  function rt(pt) {
    if (typeof pt != "number") throw new TypeError('"size" argument must be of type number');
    if (pt < 0) throw new RangeError('The value "' + pt + '" is invalid for option "size"');
  }
  function ut(pt) {
    return rt(pt), pe(pt < 0 ? 0 : 0 | bt(pt));
  }
  function dt(pt) {
    const vt = pt.length < 0 ? 0 : 0 | bt(pt.length), kt = pe(vt);
    for (let Ct = 0; Ct < vt; Ct += 1) kt[Ct] = 255 & pt[Ct];
    return kt;
  }
  function ht(pt, vt, kt) {
    if (vt < 0 || pt.byteLength < vt) throw new RangeError('"offset" is outside of buffer bounds');
    if (pt.byteLength < vt + (kt || 0)) throw new RangeError('"length" is outside of buffer bounds');
    let Ct;
    return Ct = vt === void 0 && kt === void 0 ? new ne(pt) : kt === void 0 ? new ne(pt, vt) : new ne(pt, vt, kt), Object.setPrototypeOf(Ct, ce.prototype), Ct;
  }
  function bt(pt) {
    if (pt >= re) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + re.toString(16) + " bytes");
    return 0 | pt;
  }
  function Tt(pt, vt) {
    if (ce.isBuffer(pt)) return pt.length;
    if (ie.isView(pt) || dr(pt, ie)) return pt.byteLength;
    if (typeof pt != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof pt);
    const kt = pt.length, Ct = arguments.length > 2 && arguments[2] === !0;
    if (!Ct && kt === 0) return 0;
    let Ht = !1;
    for (; ; ) switch (vt) {
      case "ascii":
      case "latin1":
      case "binary":
        return kt;
      case "utf8":
      case "utf-8":
        return Jt(pt).length;
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return 2 * kt;
      case "hex":
        return kt >>> 1;
      case "base64":
        return ur(pt).length;
      default:
        if (Ht) return Ct ? -1 : Jt(pt).length;
        vt = ("" + vt).toLowerCase(), Ht = !0;
    }
  }
  function wt(pt, vt, kt) {
    let Ct = !1;
    if ((vt === void 0 || vt < 0) && (vt = 0), vt > this.length || ((kt === void 0 || kt > this.length) && (kt = this.length), kt <= 0) || (kt >>>= 0) <= (vt >>>= 0)) return "";
    for (pt || (pt = "utf8"); ; ) switch (pt) {
      case "hex":
        return ke(this, vt, kt);
      case "utf8":
      case "utf-8":
        return st(this, vt, kt);
      case "ascii":
        return nt(this, vt, kt);
      case "latin1":
      case "binary":
        return ot(this, vt, kt);
      case "base64":
        return Ce(this, vt, kt);
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return ct(this, vt, kt);
      default:
        if (Ct) throw new TypeError("Unknown encoding: " + pt);
        pt = (pt + "").toLowerCase(), Ct = !0;
    }
  }
  function Et(pt, vt, kt) {
    const Ct = pt[vt];
    pt[vt] = pt[kt], pt[kt] = Ct;
  }
  function Rt(pt, vt, kt, Ct, Ht) {
    if (pt.length === 0) return -1;
    if (typeof kt == "string" ? (Ct = kt, kt = 0) : kt > 2147483647 ? kt = 2147483647 : kt < -2147483648 && (kt = -2147483648), Pr(kt = +kt) && (kt = Ht ? 0 : pt.length - 1), kt < 0 && (kt = pt.length + kt), kt >= pt.length) {
      if (Ht) return -1;
      kt = pt.length - 1;
    } else if (kt < 0) {
      if (!Ht) return -1;
      kt = 0;
    }
    if (typeof vt == "string" && (vt = ce.from(vt, Ct)), ce.isBuffer(vt)) return vt.length === 0 ? -1 : Bt(pt, vt, kt, Ct, Ht);
    if (typeof vt == "number") return vt &= 255, typeof ne.prototype.indexOf == "function" ? Ht ? ne.prototype.indexOf.call(pt, vt, kt) : ne.prototype.lastIndexOf.call(pt, vt, kt) : Bt(pt, [vt], kt, Ct, Ht);
    throw new TypeError("val must be string, number or Buffer");
  }
  function Bt(pt, vt, kt, Ct, Ht) {
    let Kt, Yt = 1, ir = pt.length, wr = vt.length;
    if (Ct !== void 0 && ((Ct = String(Ct).toLowerCase()) === "ucs2" || Ct === "ucs-2" || Ct === "utf16le" || Ct === "utf-16le")) {
      if (pt.length < 2 || vt.length < 2) return -1;
      Yt = 2, ir /= 2, wr /= 2, kt /= 2;
    }
    function _r(cr, Tr) {
      return Yt === 1 ? cr[Tr] : cr.readUInt16BE(Tr * Yt);
    }
    if (Ht) {
      let cr = -1;
      for (Kt = kt; Kt < ir; Kt++) if (_r(pt, Kt) === _r(vt, cr === -1 ? 0 : Kt - cr)) {
        if (cr === -1 && (cr = Kt), Kt - cr + 1 === wr) return cr * Yt;
      } else cr !== -1 && (Kt -= Kt - cr), cr = -1;
    } else for (kt + wr > ir && (kt = ir - wr), Kt = kt; Kt >= 0; Kt--) {
      let cr = !0;
      for (let Tr = 0; Tr < wr; Tr++) if (_r(pt, Kt + Tr) !== _r(vt, Tr)) {
        cr = !1;
        break;
      }
      if (cr) return Kt;
    }
    return -1;
  }
  function Pt(pt, vt, kt, Ct) {
    kt = Number(kt) || 0;
    const Ht = pt.length - kt;
    Ct ? (Ct = Number(Ct)) > Ht && (Ct = Ht) : Ct = Ht;
    const Kt = vt.length;
    let Yt;
    for (Ct > Kt / 2 && (Ct = Kt / 2), Yt = 0; Yt < Ct; ++Yt) {
      const ir = parseInt(vt.substr(2 * Yt, 2), 16);
      if (Pr(ir)) return Yt;
      pt[kt + Yt] = ir;
    }
    return Yt;
  }
  function Dt(pt, vt, kt, Ct) {
    return pr(Jt(vt, pt.length - kt), pt, kt, Ct);
  }
  function Gt(pt, vt, kt, Ct) {
    return pr(function(Ht) {
      const Kt = [];
      for (let Yt = 0; Yt < Ht.length; ++Yt) Kt.push(255 & Ht.charCodeAt(Yt));
      return Kt;
    }(vt), pt, kt, Ct);
  }
  function at(pt, vt, kt, Ct) {
    return pr(ur(vt), pt, kt, Ct);
  }
  function lt(pt, vt, kt, Ct) {
    return pr(function(Ht, Kt) {
      let Yt, ir, wr;
      const _r = [];
      for (let cr = 0; cr < Ht.length && !((Kt -= 2) < 0); ++cr) Yt = Ht.charCodeAt(cr), ir = Yt >> 8, wr = Yt % 256, _r.push(wr), _r.push(ir);
      return _r;
    }(vt, pt.length - kt), pt, kt, Ct);
  }
  function Ce(pt, vt, kt) {
    return vt === 0 && kt === pt.length ? L.fromByteArray(pt) : L.fromByteArray(pt.slice(vt, kt));
  }
  function st(pt, vt, kt) {
    kt = Math.min(pt.length, kt);
    const Ct = [];
    let Ht = vt;
    for (; Ht < kt; ) {
      const Kt = pt[Ht];
      let Yt = null, ir = Kt > 239 ? 4 : Kt > 223 ? 3 : Kt > 191 ? 2 : 1;
      if (Ht + ir <= kt) {
        let wr, _r, cr, Tr;
        switch (ir) {
          case 1:
            Kt < 128 && (Yt = Kt);
            break;
          case 2:
            wr = pt[Ht + 1], (192 & wr) == 128 && (Tr = (31 & Kt) << 6 | 63 & wr, Tr > 127 && (Yt = Tr));
            break;
          case 3:
            wr = pt[Ht + 1], _r = pt[Ht + 2], (192 & wr) == 128 && (192 & _r) == 128 && (Tr = (15 & Kt) << 12 | (63 & wr) << 6 | 63 & _r, Tr > 2047 && (Tr < 55296 || Tr > 57343) && (Yt = Tr));
            break;
          case 4:
            wr = pt[Ht + 1], _r = pt[Ht + 2], cr = pt[Ht + 3], (192 & wr) == 128 && (192 & _r) == 128 && (192 & cr) == 128 && (Tr = (15 & Kt) << 18 | (63 & wr) << 12 | (63 & _r) << 6 | 63 & cr, Tr > 65535 && Tr < 1114112 && (Yt = Tr));
        }
      }
      Yt === null ? (Yt = 65533, ir = 1) : Yt > 65535 && (Yt -= 65536, Ct.push(Yt >>> 10 & 1023 | 55296), Yt = 56320 | 1023 & Yt), Ct.push(Yt), Ht += ir;
    }
    return function(Kt) {
      const Yt = Kt.length;
      if (Yt <= it) return String.fromCharCode.apply(String, Kt);
      let ir = "", wr = 0;
      for (; wr < Yt; ) ir += String.fromCharCode.apply(String, Kt.slice(wr, wr += it));
      return ir;
    }(Ct);
  }
  ce.TYPED_ARRAY_SUPPORT = function() {
    try {
      const pt = new ne(1), vt = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(vt, ne.prototype), Object.setPrototypeOf(pt, vt), pt.foo() === 42;
    } catch {
      return !1;
    }
  }(), ce.TYPED_ARRAY_SUPPORT || typeof console > "u" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(ce.prototype, "parent", { enumerable: !0, get: function() {
    if (ce.isBuffer(this)) return this.buffer;
  } }), Object.defineProperty(ce.prototype, "offset", { enumerable: !0, get: function() {
    if (ce.isBuffer(this)) return this.byteOffset;
  } }), ce.poolSize = 8192, ce.from = function(pt, vt, kt) {
    return Oe(pt, vt, kt);
  }, Object.setPrototypeOf(ce.prototype, ne.prototype), Object.setPrototypeOf(ce, ne), ce.alloc = function(pt, vt, kt) {
    return function(Ct, Ht, Kt) {
      return rt(Ct), Ct <= 0 ? pe(Ct) : Ht !== void 0 ? typeof Kt == "string" ? pe(Ct).fill(Ht, Kt) : pe(Ct).fill(Ht) : pe(Ct);
    }(pt, vt, kt);
  }, ce.allocUnsafe = function(pt) {
    return ut(pt);
  }, ce.allocUnsafeSlow = function(pt) {
    return ut(pt);
  }, ce.isBuffer = function(pt) {
    return pt != null && pt._isBuffer === !0 && pt !== ce.prototype;
  }, ce.compare = function(pt, vt) {
    if (dr(pt, ne) && (pt = ce.from(pt, pt.offset, pt.byteLength)), dr(vt, ne) && (vt = ce.from(vt, vt.offset, vt.byteLength)), !ce.isBuffer(pt) || !ce.isBuffer(vt)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (pt === vt) return 0;
    let kt = pt.length, Ct = vt.length;
    for (let Ht = 0, Kt = Math.min(kt, Ct); Ht < Kt; ++Ht) if (pt[Ht] !== vt[Ht]) {
      kt = pt[Ht], Ct = vt[Ht];
      break;
    }
    return kt < Ct ? -1 : Ct < kt ? 1 : 0;
  }, ce.isEncoding = function(pt) {
    switch (String(pt).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, ce.concat = function(pt, vt) {
    if (!Array.isArray(pt)) throw new TypeError('"list" argument must be an Array of Buffers');
    if (pt.length === 0) return ce.alloc(0);
    let kt;
    if (vt === void 0) for (vt = 0, kt = 0; kt < pt.length; ++kt) vt += pt[kt].length;
    const Ct = ce.allocUnsafe(vt);
    let Ht = 0;
    for (kt = 0; kt < pt.length; ++kt) {
      let Kt = pt[kt];
      if (dr(Kt, ne)) Ht + Kt.length > Ct.length ? (ce.isBuffer(Kt) || (Kt = ce.from(Kt)), Kt.copy(Ct, Ht)) : ne.prototype.set.call(Ct, Kt, Ht);
      else {
        if (!ce.isBuffer(Kt)) throw new TypeError('"list" argument must be an Array of Buffers');
        Kt.copy(Ct, Ht);
      }
      Ht += Kt.length;
    }
    return Ct;
  }, ce.byteLength = Tt, ce.prototype._isBuffer = !0, ce.prototype.swap16 = function() {
    const pt = this.length;
    if (pt % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let vt = 0; vt < pt; vt += 2) Et(this, vt, vt + 1);
    return this;
  }, ce.prototype.swap32 = function() {
    const pt = this.length;
    if (pt % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let vt = 0; vt < pt; vt += 4) Et(this, vt, vt + 3), Et(this, vt + 1, vt + 2);
    return this;
  }, ce.prototype.swap64 = function() {
    const pt = this.length;
    if (pt % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let vt = 0; vt < pt; vt += 8) Et(this, vt, vt + 7), Et(this, vt + 1, vt + 6), Et(this, vt + 2, vt + 5), Et(this, vt + 3, vt + 4);
    return this;
  }, ce.prototype.toString = function() {
    const pt = this.length;
    return pt === 0 ? "" : arguments.length === 0 ? st(this, 0, pt) : wt.apply(this, arguments);
  }, ce.prototype.toLocaleString = ce.prototype.toString, ce.prototype.equals = function(pt) {
    if (!ce.isBuffer(pt)) throw new TypeError("Argument must be a Buffer");
    return this === pt || ce.compare(this, pt) === 0;
  }, ce.prototype.inspect = function() {
    let pt = "";
    const vt = B.INSPECT_MAX_BYTES;
    return pt = this.toString("hex", 0, vt).replace(/(.{2})/g, "$1 ").trim(), this.length > vt && (pt += " ... "), "<Buffer " + pt + ">";
  }, J && (ce.prototype[J] = ce.prototype.inspect), ce.prototype.compare = function(pt, vt, kt, Ct, Ht) {
    if (dr(pt, ne) && (pt = ce.from(pt, pt.offset, pt.byteLength)), !ce.isBuffer(pt)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof pt);
    if (vt === void 0 && (vt = 0), kt === void 0 && (kt = pt ? pt.length : 0), Ct === void 0 && (Ct = 0), Ht === void 0 && (Ht = this.length), vt < 0 || kt > pt.length || Ct < 0 || Ht > this.length) throw new RangeError("out of range index");
    if (Ct >= Ht && vt >= kt) return 0;
    if (Ct >= Ht) return -1;
    if (vt >= kt) return 1;
    if (this === pt) return 0;
    let Kt = (Ht >>>= 0) - (Ct >>>= 0), Yt = (kt >>>= 0) - (vt >>>= 0);
    const ir = Math.min(Kt, Yt), wr = this.slice(Ct, Ht), _r = pt.slice(vt, kt);
    for (let cr = 0; cr < ir; ++cr) if (wr[cr] !== _r[cr]) {
      Kt = wr[cr], Yt = _r[cr];
      break;
    }
    return Kt < Yt ? -1 : Yt < Kt ? 1 : 0;
  }, ce.prototype.includes = function(pt, vt, kt) {
    return this.indexOf(pt, vt, kt) !== -1;
  }, ce.prototype.indexOf = function(pt, vt, kt) {
    return Rt(this, pt, vt, kt, !0);
  }, ce.prototype.lastIndexOf = function(pt, vt, kt) {
    return Rt(this, pt, vt, kt, !1);
  }, ce.prototype.write = function(pt, vt, kt, Ct) {
    if (vt === void 0) Ct = "utf8", kt = this.length, vt = 0;
    else if (kt === void 0 && typeof vt == "string") Ct = vt, kt = this.length, vt = 0;
    else {
      if (!isFinite(vt)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      vt >>>= 0, isFinite(kt) ? (kt >>>= 0, Ct === void 0 && (Ct = "utf8")) : (Ct = kt, kt = void 0);
    }
    const Ht = this.length - vt;
    if ((kt === void 0 || kt > Ht) && (kt = Ht), pt.length > 0 && (kt < 0 || vt < 0) || vt > this.length) throw new RangeError("Attempt to write outside buffer bounds");
    Ct || (Ct = "utf8");
    let Kt = !1;
    for (; ; ) switch (Ct) {
      case "hex":
        return Pt(this, pt, vt, kt);
      case "utf8":
      case "utf-8":
        return Dt(this, pt, vt, kt);
      case "ascii":
      case "latin1":
      case "binary":
        return Gt(this, pt, vt, kt);
      case "base64":
        return at(this, pt, vt, kt);
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return lt(this, pt, vt, kt);
      default:
        if (Kt) throw new TypeError("Unknown encoding: " + Ct);
        Ct = ("" + Ct).toLowerCase(), Kt = !0;
    }
  }, ce.prototype.toJSON = function() {
    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
  };
  const it = 4096;
  function nt(pt, vt, kt) {
    let Ct = "";
    kt = Math.min(pt.length, kt);
    for (let Ht = vt; Ht < kt; ++Ht) Ct += String.fromCharCode(127 & pt[Ht]);
    return Ct;
  }
  function ot(pt, vt, kt) {
    let Ct = "";
    kt = Math.min(pt.length, kt);
    for (let Ht = vt; Ht < kt; ++Ht) Ct += String.fromCharCode(pt[Ht]);
    return Ct;
  }
  function ke(pt, vt, kt) {
    const Ct = pt.length;
    (!vt || vt < 0) && (vt = 0), (!kt || kt < 0 || kt > Ct) && (kt = Ct);
    let Ht = "";
    for (let Kt = vt; Kt < kt; ++Kt) Ht += Sr[pt[Kt]];
    return Ht;
  }
  function ct(pt, vt, kt) {
    const Ct = pt.slice(vt, kt);
    let Ht = "";
    for (let Kt = 0; Kt < Ct.length - 1; Kt += 2) Ht += String.fromCharCode(Ct[Kt] + 256 * Ct[Kt + 1]);
    return Ht;
  }
  function yt(pt, vt, kt) {
    if (pt % 1 != 0 || pt < 0) throw new RangeError("offset is not uint");
    if (pt + vt > kt) throw new RangeError("Trying to access beyond buffer length");
  }
  function $t(pt, vt, kt, Ct, Ht, Kt) {
    if (!ce.isBuffer(pt)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (vt > Ht || vt < Kt) throw new RangeError('"value" argument is out of bounds');
    if (kt + Ct > pt.length) throw new RangeError("Index out of range");
  }
  function gt(pt, vt, kt, Ct, Ht) {
    Vt(vt, Ct, Ht, pt, kt, 7);
    let Kt = Number(vt & BigInt(4294967295));
    pt[kt++] = Kt, Kt >>= 8, pt[kt++] = Kt, Kt >>= 8, pt[kt++] = Kt, Kt >>= 8, pt[kt++] = Kt;
    let Yt = Number(vt >> BigInt(32) & BigInt(4294967295));
    return pt[kt++] = Yt, Yt >>= 8, pt[kt++] = Yt, Yt >>= 8, pt[kt++] = Yt, Yt >>= 8, pt[kt++] = Yt, kt;
  }
  function xt(pt, vt, kt, Ct, Ht) {
    Vt(vt, Ct, Ht, pt, kt, 7);
    let Kt = Number(vt & BigInt(4294967295));
    pt[kt + 7] = Kt, Kt >>= 8, pt[kt + 6] = Kt, Kt >>= 8, pt[kt + 5] = Kt, Kt >>= 8, pt[kt + 4] = Kt;
    let Yt = Number(vt >> BigInt(32) & BigInt(4294967295));
    return pt[kt + 3] = Yt, Yt >>= 8, pt[kt + 2] = Yt, Yt >>= 8, pt[kt + 1] = Yt, Yt >>= 8, pt[kt] = Yt, kt + 8;
  }
  function At(pt, vt, kt, Ct, Ht, Kt) {
    if (kt + Ct > pt.length) throw new RangeError("Index out of range");
    if (kt < 0) throw new RangeError("Index out of range");
  }
  function mt(pt, vt, kt, Ct, Ht) {
    return vt = +vt, kt >>>= 0, Ht || At(pt, 0, kt, 4), V.write(pt, vt, kt, Ct, 23, 4), kt + 4;
  }
  function St(pt, vt, kt, Ct, Ht) {
    return vt = +vt, kt >>>= 0, Ht || At(pt, 0, kt, 8), V.write(pt, vt, kt, Ct, 52, 8), kt + 8;
  }
  ce.prototype.slice = function(pt, vt) {
    const kt = this.length;
    (pt = ~~pt) < 0 ? (pt += kt) < 0 && (pt = 0) : pt > kt && (pt = kt), (vt = vt === void 0 ? kt : ~~vt) < 0 ? (vt += kt) < 0 && (vt = 0) : vt > kt && (vt = kt), vt < pt && (vt = pt);
    const Ct = this.subarray(pt, vt);
    return Object.setPrototypeOf(Ct, ce.prototype), Ct;
  }, ce.prototype.readUintLE = ce.prototype.readUIntLE = function(pt, vt, kt) {
    pt >>>= 0, vt >>>= 0, kt || yt(pt, vt, this.length);
    let Ct = this[pt], Ht = 1, Kt = 0;
    for (; ++Kt < vt && (Ht *= 256); ) Ct += this[pt + Kt] * Ht;
    return Ct;
  }, ce.prototype.readUintBE = ce.prototype.readUIntBE = function(pt, vt, kt) {
    pt >>>= 0, vt >>>= 0, kt || yt(pt, vt, this.length);
    let Ct = this[pt + --vt], Ht = 1;
    for (; vt > 0 && (Ht *= 256); ) Ct += this[pt + --vt] * Ht;
    return Ct;
  }, ce.prototype.readUint8 = ce.prototype.readUInt8 = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 1, this.length), this[pt];
  }, ce.prototype.readUint16LE = ce.prototype.readUInt16LE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 2, this.length), this[pt] | this[pt + 1] << 8;
  }, ce.prototype.readUint16BE = ce.prototype.readUInt16BE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 2, this.length), this[pt] << 8 | this[pt + 1];
  }, ce.prototype.readUint32LE = ce.prototype.readUInt32LE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 4, this.length), (this[pt] | this[pt + 1] << 8 | this[pt + 2] << 16) + 16777216 * this[pt + 3];
  }, ce.prototype.readUint32BE = ce.prototype.readUInt32BE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 4, this.length), 16777216 * this[pt] + (this[pt + 1] << 16 | this[pt + 2] << 8 | this[pt + 3]);
  }, ce.prototype.readBigUInt64LE = lr(function(pt) {
    qt(pt >>>= 0, "offset");
    const vt = this[pt], kt = this[pt + 7];
    vt !== void 0 && kt !== void 0 || er(pt, this.length - 8);
    const Ct = vt + 256 * this[++pt] + 65536 * this[++pt] + this[++pt] * 2 ** 24, Ht = this[++pt] + 256 * this[++pt] + 65536 * this[++pt] + kt * 2 ** 24;
    return BigInt(Ct) + (BigInt(Ht) << BigInt(32));
  }), ce.prototype.readBigUInt64BE = lr(function(pt) {
    qt(pt >>>= 0, "offset");
    const vt = this[pt], kt = this[pt + 7];
    vt !== void 0 && kt !== void 0 || er(pt, this.length - 8);
    const Ct = vt * 2 ** 24 + 65536 * this[++pt] + 256 * this[++pt] + this[++pt], Ht = this[++pt] * 2 ** 24 + 65536 * this[++pt] + 256 * this[++pt] + kt;
    return (BigInt(Ct) << BigInt(32)) + BigInt(Ht);
  }), ce.prototype.readIntLE = function(pt, vt, kt) {
    pt >>>= 0, vt >>>= 0, kt || yt(pt, vt, this.length);
    let Ct = this[pt], Ht = 1, Kt = 0;
    for (; ++Kt < vt && (Ht *= 256); ) Ct += this[pt + Kt] * Ht;
    return Ht *= 128, Ct >= Ht && (Ct -= Math.pow(2, 8 * vt)), Ct;
  }, ce.prototype.readIntBE = function(pt, vt, kt) {
    pt >>>= 0, vt >>>= 0, kt || yt(pt, vt, this.length);
    let Ct = vt, Ht = 1, Kt = this[pt + --Ct];
    for (; Ct > 0 && (Ht *= 256); ) Kt += this[pt + --Ct] * Ht;
    return Ht *= 128, Kt >= Ht && (Kt -= Math.pow(2, 8 * vt)), Kt;
  }, ce.prototype.readInt8 = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 1, this.length), 128 & this[pt] ? -1 * (255 - this[pt] + 1) : this[pt];
  }, ce.prototype.readInt16LE = function(pt, vt) {
    pt >>>= 0, vt || yt(pt, 2, this.length);
    const kt = this[pt] | this[pt + 1] << 8;
    return 32768 & kt ? 4294901760 | kt : kt;
  }, ce.prototype.readInt16BE = function(pt, vt) {
    pt >>>= 0, vt || yt(pt, 2, this.length);
    const kt = this[pt + 1] | this[pt] << 8;
    return 32768 & kt ? 4294901760 | kt : kt;
  }, ce.prototype.readInt32LE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 4, this.length), this[pt] | this[pt + 1] << 8 | this[pt + 2] << 16 | this[pt + 3] << 24;
  }, ce.prototype.readInt32BE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 4, this.length), this[pt] << 24 | this[pt + 1] << 16 | this[pt + 2] << 8 | this[pt + 3];
  }, ce.prototype.readBigInt64LE = lr(function(pt) {
    qt(pt >>>= 0, "offset");
    const vt = this[pt], kt = this[pt + 7];
    vt !== void 0 && kt !== void 0 || er(pt, this.length - 8);
    const Ct = this[pt + 4] + 256 * this[pt + 5] + 65536 * this[pt + 6] + (kt << 24);
    return (BigInt(Ct) << BigInt(32)) + BigInt(vt + 256 * this[++pt] + 65536 * this[++pt] + this[++pt] * 2 ** 24);
  }), ce.prototype.readBigInt64BE = lr(function(pt) {
    qt(pt >>>= 0, "offset");
    const vt = this[pt], kt = this[pt + 7];
    vt !== void 0 && kt !== void 0 || er(pt, this.length - 8);
    const Ct = (vt << 24) + 65536 * this[++pt] + 256 * this[++pt] + this[++pt];
    return (BigInt(Ct) << BigInt(32)) + BigInt(this[++pt] * 2 ** 24 + 65536 * this[++pt] + 256 * this[++pt] + kt);
  }), ce.prototype.readFloatLE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 4, this.length), V.read(this, pt, !0, 23, 4);
  }, ce.prototype.readFloatBE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 4, this.length), V.read(this, pt, !1, 23, 4);
  }, ce.prototype.readDoubleLE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 8, this.length), V.read(this, pt, !0, 52, 8);
  }, ce.prototype.readDoubleBE = function(pt, vt) {
    return pt >>>= 0, vt || yt(pt, 8, this.length), V.read(this, pt, !1, 52, 8);
  }, ce.prototype.writeUintLE = ce.prototype.writeUIntLE = function(pt, vt, kt, Ct) {
    pt = +pt, vt >>>= 0, kt >>>= 0, !Ct && $t(this, pt, vt, kt, Math.pow(2, 8 * kt) - 1, 0);
    let Ht = 1, Kt = 0;
    for (this[vt] = 255 & pt; ++Kt < kt && (Ht *= 256); ) this[vt + Kt] = pt / Ht & 255;
    return vt + kt;
  }, ce.prototype.writeUintBE = ce.prototype.writeUIntBE = function(pt, vt, kt, Ct) {
    pt = +pt, vt >>>= 0, kt >>>= 0, !Ct && $t(this, pt, vt, kt, Math.pow(2, 8 * kt) - 1, 0);
    let Ht = kt - 1, Kt = 1;
    for (this[vt + Ht] = 255 & pt; --Ht >= 0 && (Kt *= 256); ) this[vt + Ht] = pt / Kt & 255;
    return vt + kt;
  }, ce.prototype.writeUint8 = ce.prototype.writeUInt8 = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 1, 255, 0), this[vt] = 255 & pt, vt + 1;
  }, ce.prototype.writeUint16LE = ce.prototype.writeUInt16LE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 2, 65535, 0), this[vt] = 255 & pt, this[vt + 1] = pt >>> 8, vt + 2;
  }, ce.prototype.writeUint16BE = ce.prototype.writeUInt16BE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 2, 65535, 0), this[vt] = pt >>> 8, this[vt + 1] = 255 & pt, vt + 2;
  }, ce.prototype.writeUint32LE = ce.prototype.writeUInt32LE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 4, 4294967295, 0), this[vt + 3] = pt >>> 24, this[vt + 2] = pt >>> 16, this[vt + 1] = pt >>> 8, this[vt] = 255 & pt, vt + 4;
  }, ce.prototype.writeUint32BE = ce.prototype.writeUInt32BE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 4, 4294967295, 0), this[vt] = pt >>> 24, this[vt + 1] = pt >>> 16, this[vt + 2] = pt >>> 8, this[vt + 3] = 255 & pt, vt + 4;
  }, ce.prototype.writeBigUInt64LE = lr(function(pt, vt = 0) {
    return gt(this, pt, vt, BigInt(0), BigInt("0xffffffffffffffff"));
  }), ce.prototype.writeBigUInt64BE = lr(function(pt, vt = 0) {
    return xt(this, pt, vt, BigInt(0), BigInt("0xffffffffffffffff"));
  }), ce.prototype.writeIntLE = function(pt, vt, kt, Ct) {
    if (pt = +pt, vt >>>= 0, !Ct) {
      const ir = Math.pow(2, 8 * kt - 1);
      $t(this, pt, vt, kt, ir - 1, -ir);
    }
    let Ht = 0, Kt = 1, Yt = 0;
    for (this[vt] = 255 & pt; ++Ht < kt && (Kt *= 256); ) pt < 0 && Yt === 0 && this[vt + Ht - 1] !== 0 && (Yt = 1), this[vt + Ht] = (pt / Kt | 0) - Yt & 255;
    return vt + kt;
  }, ce.prototype.writeIntBE = function(pt, vt, kt, Ct) {
    if (pt = +pt, vt >>>= 0, !Ct) {
      const ir = Math.pow(2, 8 * kt - 1);
      $t(this, pt, vt, kt, ir - 1, -ir);
    }
    let Ht = kt - 1, Kt = 1, Yt = 0;
    for (this[vt + Ht] = 255 & pt; --Ht >= 0 && (Kt *= 256); ) pt < 0 && Yt === 0 && this[vt + Ht + 1] !== 0 && (Yt = 1), this[vt + Ht] = (pt / Kt | 0) - Yt & 255;
    return vt + kt;
  }, ce.prototype.writeInt8 = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 1, 127, -128), pt < 0 && (pt = 255 + pt + 1), this[vt] = 255 & pt, vt + 1;
  }, ce.prototype.writeInt16LE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 2, 32767, -32768), this[vt] = 255 & pt, this[vt + 1] = pt >>> 8, vt + 2;
  }, ce.prototype.writeInt16BE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 2, 32767, -32768), this[vt] = pt >>> 8, this[vt + 1] = 255 & pt, vt + 2;
  }, ce.prototype.writeInt32LE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 4, 2147483647, -2147483648), this[vt] = 255 & pt, this[vt + 1] = pt >>> 8, this[vt + 2] = pt >>> 16, this[vt + 3] = pt >>> 24, vt + 4;
  }, ce.prototype.writeInt32BE = function(pt, vt, kt) {
    return pt = +pt, vt >>>= 0, kt || $t(this, pt, vt, 4, 2147483647, -2147483648), pt < 0 && (pt = 4294967295 + pt + 1), this[vt] = pt >>> 24, this[vt + 1] = pt >>> 16, this[vt + 2] = pt >>> 8, this[vt + 3] = 255 & pt, vt + 4;
  }, ce.prototype.writeBigInt64LE = lr(function(pt, vt = 0) {
    return gt(this, pt, vt, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), ce.prototype.writeBigInt64BE = lr(function(pt, vt = 0) {
    return xt(this, pt, vt, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), ce.prototype.writeFloatLE = function(pt, vt, kt) {
    return mt(this, pt, vt, !0, kt);
  }, ce.prototype.writeFloatBE = function(pt, vt, kt) {
    return mt(this, pt, vt, !1, kt);
  }, ce.prototype.writeDoubleLE = function(pt, vt, kt) {
    return St(this, pt, vt, !0, kt);
  }, ce.prototype.writeDoubleBE = function(pt, vt, kt) {
    return St(this, pt, vt, !1, kt);
  }, ce.prototype.copy = function(pt, vt, kt, Ct) {
    if (!ce.isBuffer(pt)) throw new TypeError("argument should be a Buffer");
    if (kt || (kt = 0), Ct || Ct === 0 || (Ct = this.length), vt >= pt.length && (vt = pt.length), vt || (vt = 0), Ct > 0 && Ct < kt && (Ct = kt), Ct === kt || pt.length === 0 || this.length === 0) return 0;
    if (vt < 0) throw new RangeError("targetStart out of bounds");
    if (kt < 0 || kt >= this.length) throw new RangeError("Index out of range");
    if (Ct < 0) throw new RangeError("sourceEnd out of bounds");
    Ct > this.length && (Ct = this.length), pt.length - vt < Ct - kt && (Ct = pt.length - vt + kt);
    const Ht = Ct - kt;
    return this === pt && typeof ne.prototype.copyWithin == "function" ? this.copyWithin(vt, kt, Ct) : ne.prototype.set.call(pt, this.subarray(kt, Ct), vt), Ht;
  }, ce.prototype.fill = function(pt, vt, kt, Ct) {
    if (typeof pt == "string") {
      if (typeof vt == "string" ? (Ct = vt, vt = 0, kt = this.length) : typeof kt == "string" && (Ct = kt, kt = this.length), Ct !== void 0 && typeof Ct != "string") throw new TypeError("encoding must be a string");
      if (typeof Ct == "string" && !ce.isEncoding(Ct)) throw new TypeError("Unknown encoding: " + Ct);
      if (pt.length === 1) {
        const Kt = pt.charCodeAt(0);
        (Ct === "utf8" && Kt < 128 || Ct === "latin1") && (pt = Kt);
      }
    } else typeof pt == "number" ? pt &= 255 : typeof pt == "boolean" && (pt = Number(pt));
    if (vt < 0 || this.length < vt || this.length < kt) throw new RangeError("Out of range index");
    if (kt <= vt) return this;
    let Ht;
    if (vt >>>= 0, kt = kt === void 0 ? this.length : kt >>> 0, pt || (pt = 0), typeof pt == "number") for (Ht = vt; Ht < kt; ++Ht) this[Ht] = pt;
    else {
      const Kt = ce.isBuffer(pt) ? pt : ce.from(pt, Ct), Yt = Kt.length;
      if (Yt === 0) throw new TypeError('The value "' + pt + '" is invalid for argument "value"');
      for (Ht = 0; Ht < kt - vt; ++Ht) this[Ht + vt] = Kt[Ht % Yt];
    }
    return this;
  };
  const Mt = {};
  function It(pt, vt, kt) {
    Mt[pt] = class extends kt {
      constructor() {
        super(), Object.defineProperty(this, "message", { value: vt.apply(this, arguments), writable: !0, configurable: !0 }), this.name = `${this.name} [${pt}]`, this.stack, delete this.name;
      }
      get code() {
        return pt;
      }
      set code(Ct) {
        Object.defineProperty(this, "code", { configurable: !0, enumerable: !0, value: Ct, writable: !0 });
      }
      toString() {
        return `${this.name} [${pt}]: ${this.message}`;
      }
    };
  }
  function Ft(pt) {
    let vt = "", kt = pt.length;
    const Ct = pt[0] === "-" ? 1 : 0;
    for (; kt >= Ct + 4; kt -= 3) vt = `_${pt.slice(kt - 3, kt)}${vt}`;
    return `${pt.slice(0, kt)}${vt}`;
  }
  function Vt(pt, vt, kt, Ct, Ht, Kt) {
    if (pt > kt || pt < vt) {
      const Yt = typeof vt == "bigint" ? "n" : "";
      let ir;
      throw ir = vt === 0 || vt === BigInt(0) ? `>= 0${Yt} and < 2${Yt} ** ${8 * (Kt + 1)}${Yt}` : `>= -(2${Yt} ** ${8 * (Kt + 1) - 1}${Yt}) and < 2 ** ${8 * (Kt + 1) - 1}${Yt}`, new Mt.ERR_OUT_OF_RANGE("value", ir, pt);
    }
    (function(Yt, ir, wr) {
      qt(ir, "offset"), Yt[ir] !== void 0 && Yt[ir + wr] !== void 0 || er(ir, Yt.length - (wr + 1));
    })(Ct, Ht, Kt);
  }
  function qt(pt, vt) {
    if (typeof pt != "number") throw new Mt.ERR_INVALID_ARG_TYPE(vt, "number", pt);
  }
  function er(pt, vt, kt) {
    throw Math.floor(pt) !== pt ? (qt(pt, kt), new Mt.ERR_OUT_OF_RANGE("offset", "an integer", pt)) : vt < 0 ? new Mt.ERR_BUFFER_OUT_OF_BOUNDS() : new Mt.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${vt}`, pt);
  }
  It("ERR_BUFFER_OUT_OF_BOUNDS", function(pt) {
    return pt ? `${pt} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
  }, RangeError), It("ERR_INVALID_ARG_TYPE", function(pt, vt) {
    return `The "${pt}" argument must be of type number. Received type ${typeof vt}`;
  }, TypeError), It("ERR_OUT_OF_RANGE", function(pt, vt, kt) {
    let Ct = `The value of "${pt}" is out of range.`, Ht = kt;
    return Number.isInteger(kt) && Math.abs(kt) > 2 ** 32 ? Ht = Ft(String(kt)) : typeof kt == "bigint" && (Ht = String(kt), (kt > BigInt(2) ** BigInt(32) || kt < -(BigInt(2) ** BigInt(32))) && (Ht = Ft(Ht)), Ht += "n"), Ct += ` It must be ${vt}. Received ${Ht}`, Ct;
  }, RangeError);
  const tr = /[^+/0-9A-Za-z-_]/g;
  function Jt(pt, vt) {
    let kt;
    vt = vt || 1 / 0;
    const Ct = pt.length;
    let Ht = null;
    const Kt = [];
    for (let Yt = 0; Yt < Ct; ++Yt) {
      if (kt = pt.charCodeAt(Yt), kt > 55295 && kt < 57344) {
        if (!Ht) {
          if (kt > 56319) {
            (vt -= 3) > -1 && Kt.push(239, 191, 189);
            continue;
          }
          if (Yt + 1 === Ct) {
            (vt -= 3) > -1 && Kt.push(239, 191, 189);
            continue;
          }
          Ht = kt;
          continue;
        }
        if (kt < 56320) {
          (vt -= 3) > -1 && Kt.push(239, 191, 189), Ht = kt;
          continue;
        }
        kt = 65536 + (Ht - 55296 << 10 | kt - 56320);
      } else Ht && (vt -= 3) > -1 && Kt.push(239, 191, 189);
      if (Ht = null, kt < 128) {
        if ((vt -= 1) < 0) break;
        Kt.push(kt);
      } else if (kt < 2048) {
        if ((vt -= 2) < 0) break;
        Kt.push(kt >> 6 | 192, 63 & kt | 128);
      } else if (kt < 65536) {
        if ((vt -= 3) < 0) break;
        Kt.push(kt >> 12 | 224, kt >> 6 & 63 | 128, 63 & kt | 128);
      } else {
        if (!(kt < 1114112)) throw new Error("Invalid code point");
        if ((vt -= 4) < 0) break;
        Kt.push(kt >> 18 | 240, kt >> 12 & 63 | 128, kt >> 6 & 63 | 128, 63 & kt | 128);
      }
    }
    return Kt;
  }
  function ur(pt) {
    return L.toByteArray(function(vt) {
      if ((vt = (vt = vt.split("=")[0]).trim().replace(tr, "")).length < 2) return "";
      for (; vt.length % 4 != 0; ) vt += "=";
      return vt;
    }(pt));
  }
  function pr(pt, vt, kt, Ct) {
    let Ht;
    for (Ht = 0; Ht < Ct && !(Ht + kt >= vt.length || Ht >= pt.length); ++Ht) vt[Ht + kt] = pt[Ht];
    return Ht;
  }
  function dr(pt, vt) {
    return pt instanceof vt || pt != null && pt.constructor != null && pt.constructor.name != null && pt.constructor.name === vt.name;
  }
  function Pr(pt) {
    return pt != pt;
  }
  const Sr = function() {
    const pt = "0123456789abcdef", vt = new Array(256);
    for (let kt = 0; kt < 16; ++kt) {
      const Ct = 16 * kt;
      for (let Ht = 0; Ht < 16; ++Ht) vt[Ct + Ht] = pt[kt] + pt[Ht];
    }
    return vt;
  }();
  function lr(pt) {
    return typeof BigInt > "u" ? kr : pt;
  }
  function kr() {
    throw new Error("BigInt not supported");
  }
})(buffer$1);
const Buffer$D = buffer$1.Buffer, Blob$1 = buffer$1.Blob, BlobOptions = buffer$1.BlobOptions, Buffer$1$1 = buffer$1.Buffer, File = buffer$1.File, FileOptions = buffer$1.FileOptions, INSPECT_MAX_BYTES = buffer$1.INSPECT_MAX_BYTES, SlowBuffer = buffer$1.SlowBuffer, TranscodeEncoding = buffer$1.TranscodeEncoding, atob = buffer$1.atob, btoa = buffer$1.btoa, constants$1 = buffer$1.constants, isAscii = buffer$1.isAscii, isUtf8 = buffer$1.isUtf8, kMaxLength = buffer$1.kMaxLength, kStringMaxLength = buffer$1.kStringMaxLength, resolveObjectURL = buffer$1.resolveObjectURL, transcode = buffer$1.transcode, dist$2 = Object.freeze(Object.defineProperty({ __proto__: null, Blob: Blob$1, BlobOptions, Buffer: Buffer$1$1, File, FileOptions, INSPECT_MAX_BYTES, SlowBuffer, TranscodeEncoding, atob, btoa, constants: constants$1, default: Buffer$D, isAscii, isUtf8, kMaxLength, kStringMaxLength, resolveObjectURL, transcode }, Symbol.toStringTag, { value: "Module" }));
var src$4 = {}, address = {}, networks$2 = {};
Object.defineProperty(networks$2, "__esModule", { value: !0 }), networks$2.testnet = networks$2.regtest = networks$2.bitcoin = void 0, networks$2.bitcoin = { messagePrefix: `Bitcoin Signed Message:
`, bech32: "bc", bip32: { public: 76067358, private: 76066276 }, pubKeyHash: 0, scriptHash: 5, wif: 128 }, networks$2.regtest = { messagePrefix: `Bitcoin Signed Message:
`, bech32: "bcrt", bip32: { public: 70617039, private: 70615956 }, pubKeyHash: 111, scriptHash: 196, wif: 239 }, networks$2.testnet = { messagePrefix: `Bitcoin Signed Message:
`, bech32: "tb", bip32: { public: 70617039, private: 70615956 }, pubKeyHash: 111, scriptHash: 196, wif: 239 };
var payments$2 = {}, embed = {}, script = {}, bip66 = {};
function check$d(B) {
  if (B.length < 8 || B.length > 72 || B[0] !== 48 || B[1] !== B.length - 2 || B[2] !== 2) return !1;
  const L = B[3];
  if (L === 0 || 5 + L >= B.length || B[4 + L] !== 2) return !1;
  const V = B[5 + L];
  return V !== 0 && 6 + L + V === B.length && !(128 & B[4]) && !(L > 1 && B[4] === 0 && !(128 & B[5])) && !(128 & B[L + 6]) && !(V > 1 && B[L + 6] === 0 && !(128 & B[L + 7]));
}
function decode$k(B) {
  if (B.length < 8) throw new Error("DER sequence length is too short");
  if (B.length > 72) throw new Error("DER sequence length is too long");
  if (B[0] !== 48) throw new Error("Expected DER sequence");
  if (B[1] !== B.length - 2) throw new Error("DER sequence length is invalid");
  if (B[2] !== 2) throw new Error("Expected DER integer");
  const L = B[3];
  if (L === 0) throw new Error("R length is zero");
  if (5 + L >= B.length) throw new Error("R length is too long");
  if (B[4 + L] !== 2) throw new Error("Expected DER integer (2)");
  const V = B[5 + L];
  if (V === 0) throw new Error("S length is zero");
  if (6 + L + V !== B.length) throw new Error("S length is invalid");
  if (128 & B[4]) throw new Error("R value is negative");
  if (L > 1 && B[4] === 0 && !(128 & B[5])) throw new Error("R value excessively padded");
  if (128 & B[L + 6]) throw new Error("S value is negative");
  if (V > 1 && B[L + 6] === 0 && !(128 & B[L + 7])) throw new Error("S value excessively padded");
  return { r: B.slice(4, 4 + L), s: B.slice(6 + L) };
}
function encode$k(B, L) {
  const V = B.length, J = L.length;
  if (V === 0) throw new Error("R length is zero");
  if (J === 0) throw new Error("S length is zero");
  if (V > 33) throw new Error("R length is too long");
  if (J > 33) throw new Error("S length is too long");
  if (128 & B[0]) throw new Error("R value is negative");
  if (128 & L[0]) throw new Error("S value is negative");
  if (V > 1 && B[0] === 0 && !(128 & B[1])) throw new Error("R value excessively padded");
  if (J > 1 && L[0] === 0 && !(128 & L[1])) throw new Error("S value excessively padded");
  const re = Buffer$D.allocUnsafe(6 + V + J);
  return re[0] = 48, re[1] = re.length - 2, re[2] = 2, re[3] = B.length, B.copy(re, 4), re[4 + V] = 2, re[5 + V] = L.length, L.copy(re, 6 + V), re;
}
Object.defineProperty(bip66, "__esModule", { value: !0 }), bip66.encode = bip66.decode = bip66.check = void 0, bip66.check = check$d, bip66.decode = decode$k, bip66.encode = encode$k;
var ops = {};
Object.defineProperty(ops, "__esModule", { value: !0 }), ops.REVERSE_OPS = ops.OPS = void 0;
const OPS$7 = { OP_FALSE: 0, OP_0: 0, OP_PUSHDATA1: 76, OP_PUSHDATA2: 77, OP_PUSHDATA4: 78, OP_1NEGATE: 79, OP_RESERVED: 80, OP_TRUE: 81, OP_1: 81, OP_2: 82, OP_3: 83, OP_4: 84, OP_5: 85, OP_6: 86, OP_7: 87, OP_8: 88, OP_9: 89, OP_10: 90, OP_11: 91, OP_12: 92, OP_13: 93, OP_14: 94, OP_15: 95, OP_16: 96, OP_NOP: 97, OP_VER: 98, OP_IF: 99, OP_NOTIF: 100, OP_VERIF: 101, OP_VERNOTIF: 102, OP_ELSE: 103, OP_ENDIF: 104, OP_VERIFY: 105, OP_RETURN: 106, OP_TOALTSTACK: 107, OP_FROMALTSTACK: 108, OP_2DROP: 109, OP_2DUP: 110, OP_3DUP: 111, OP_2OVER: 112, OP_2ROT: 113, OP_2SWAP: 114, OP_IFDUP: 115, OP_DEPTH: 116, OP_DROP: 117, OP_DUP: 118, OP_NIP: 119, OP_OVER: 120, OP_PICK: 121, OP_ROLL: 122, OP_ROT: 123, OP_SWAP: 124, OP_TUCK: 125, OP_CAT: 126, OP_SUBSTR: 127, OP_LEFT: 128, OP_RIGHT: 129, OP_SIZE: 130, OP_INVERT: 131, OP_AND: 132, OP_OR: 133, OP_XOR: 134, OP_EQUAL: 135, OP_EQUALVERIFY: 136, OP_RESERVED1: 137, OP_RESERVED2: 138, OP_1ADD: 139, OP_1SUB: 140, OP_2MUL: 141, OP_2DIV: 142, OP_NEGATE: 143, OP_ABS: 144, OP_NOT: 145, OP_0NOTEQUAL: 146, OP_ADD: 147, OP_SUB: 148, OP_MUL: 149, OP_DIV: 150, OP_MOD: 151, OP_LSHIFT: 152, OP_RSHIFT: 153, OP_BOOLAND: 154, OP_BOOLOR: 155, OP_NUMEQUAL: 156, OP_NUMEQUALVERIFY: 157, OP_NUMNOTEQUAL: 158, OP_LESSTHAN: 159, OP_GREATERTHAN: 160, OP_LESSTHANOREQUAL: 161, OP_GREATERTHANOREQUAL: 162, OP_MIN: 163, OP_MAX: 164, OP_WITHIN: 165, OP_RIPEMD160: 166, OP_SHA1: 167, OP_SHA256: 168, OP_HASH160: 169, OP_HASH256: 170, OP_CODESEPARATOR: 171, OP_CHECKSIG: 172, OP_CHECKSIGVERIFY: 173, OP_CHECKMULTISIG: 174, OP_CHECKMULTISIGVERIFY: 175, OP_NOP1: 176, OP_NOP2: 177, OP_CHECKLOCKTIMEVERIFY: 177, OP_NOP3: 178, OP_CHECKSEQUENCEVERIFY: 178, OP_NOP4: 179, OP_NOP5: 180, OP_NOP6: 181, OP_NOP7: 182, OP_NOP8: 183, OP_NOP9: 184, OP_NOP10: 185, OP_CHECKSIGADD: 186, OP_PUBKEYHASH: 253, OP_PUBKEY: 254, OP_INVALIDOPCODE: 255 };
ops.OPS = OPS$7;
const REVERSE_OPS = {};
ops.REVERSE_OPS = REVERSE_OPS;
for (const B of Object.keys(OPS$7)) {
  const L = OPS$7[B];
  REVERSE_OPS[L] = B;
}
var push_data = {};
Object.defineProperty(push_data, "__esModule", { value: !0 }), push_data.decode = push_data.encode = push_data.encodingLength = void 0;
const ops_1 = ops;
function encodingLength$2(B) {
  return B < ops_1.OPS.OP_PUSHDATA1 ? 1 : B <= 255 ? 2 : B <= 65535 ? 3 : 5;
}
function encode$j(B, L, V) {
  const J = encodingLength$2(L);
  return J === 1 ? B.writeUInt8(L, V) : J === 2 ? (B.writeUInt8(ops_1.OPS.OP_PUSHDATA1, V), B.writeUInt8(L, V + 1)) : J === 3 ? (B.writeUInt8(ops_1.OPS.OP_PUSHDATA2, V), B.writeUInt16LE(L, V + 1)) : (B.writeUInt8(ops_1.OPS.OP_PUSHDATA4, V), B.writeUInt32LE(L, V + 1)), J;
}
function decode$j(B, L) {
  const V = B.readUInt8(L);
  let J, re;
  if (V < ops_1.OPS.OP_PUSHDATA1) J = V, re = 1;
  else if (V === ops_1.OPS.OP_PUSHDATA1) {
    if (L + 2 > B.length) return null;
    J = B.readUInt8(L + 1), re = 2;
  } else if (V === ops_1.OPS.OP_PUSHDATA2) {
    if (L + 3 > B.length) return null;
    J = B.readUInt16LE(L + 1), re = 3;
  } else {
    if (L + 5 > B.length) return null;
    if (V !== ops_1.OPS.OP_PUSHDATA4) throw new Error("Unexpected opcode");
    J = B.readUInt32LE(L + 1), re = 5;
  }
  return { opcode: V, number: J, size: re };
}
push_data.encodingLength = encodingLength$2, push_data.encode = encode$j, push_data.decode = decode$j;
var script_number = {};
function decode$i(B, L, V) {
  L = L || 4, V = V === void 0 || V;
  const J = B.length;
  if (J === 0) return 0;
  if (J > L) throw new TypeError("Script number overflow");
  if (V && !(127 & B[J - 1] || !(J <= 1) && 128 & B[J - 2])) throw new Error("Non-minimally encoded script number");
  if (J === 5) {
    const ne = B.readUInt32LE(0), ie = B.readUInt8(4);
    return 128 & ie ? -(4294967296 * (-129 & ie) + ne) : 4294967296 * ie + ne;
  }
  let re = 0;
  for (let ne = 0; ne < J; ++ne) re |= B[ne] << 8 * ne;
  return 128 & B[J - 1] ? -(re & ~(128 << 8 * (J - 1))) : re;
}
function scriptNumSize(B) {
  return B > 2147483647 ? 5 : B > 8388607 ? 4 : B > 32767 ? 3 : B > 127 ? 2 : B > 0 ? 1 : 0;
}
function encode$i(B) {
  let L = Math.abs(B);
  const V = scriptNumSize(L), J = Buffer$D.allocUnsafe(V), re = B < 0;
  for (let ne = 0; ne < V; ++ne) J.writeUInt8(255 & L, ne), L >>= 8;
  return 128 & J[V - 1] ? J.writeUInt8(re ? 128 : 0, V - 1) : re && (J[V - 1] |= 128), J;
}
Object.defineProperty(script_number, "__esModule", { value: !0 }), script_number.encode = script_number.decode = void 0, script_number.decode = decode$i, script_number.encode = encode$i;
var script_signature = {}, types$7 = {};
const require$$1$2 = getAugmentedNamespace(dist$2);
var types$6 = { Array: function(B) {
  return B != null && B.constructor === Array;
}, Boolean: function(B) {
  return typeof B == "boolean";
}, Function: function(B) {
  return typeof B == "function";
}, Nil: function(B) {
  return B == null;
}, Number: function(B) {
  return typeof B == "number";
}, Object: function(B) {
  return typeof B == "object";
}, String: function(B) {
  return typeof B == "string";
}, "": function() {
  return !0;
} };
for (var typeName$1 in types$6.Null = types$6.Nil, types$6) types$6[typeName$1].toJSON = (function(B) {
  return B;
}).bind(null, typeName$1);
var native$1 = types$6, native = native$1;
function getTypeName(B) {
  return B.name || B.toString().match(/function (.*?)\s*\(/)[1];
}
function getValueTypeName$1(B) {
  return native.Nil(B) ? "" : getTypeName(B.constructor);
}
function getValue$1(B) {
  return native.Function(B) ? "" : native.String(B) ? JSON.stringify(B) : B && native.Object(B) ? "" : B;
}
function captureStackTrace(B, L) {
  Error.captureStackTrace && Error.captureStackTrace(B, L);
}
function tfJSON$1(B) {
  return native.Function(B) ? B.toJSON ? B.toJSON() : getTypeName(B) : native.Array(B) ? "Array" : B && native.Object(B) ? "Object" : B !== void 0 ? B : "";
}
function tfErrorString(B, L, V) {
  var J = getValue$1(L);
  return "Expected " + tfJSON$1(B) + ", got" + (V !== "" ? " " + V : "") + (J !== "" ? " " + J : "");
}
function TfTypeError$1(B, L, V) {
  V = V || getValueTypeName$1(L), this.message = tfErrorString(B, L, V), captureStackTrace(this, TfTypeError$1), this.__type = B, this.__value = L, this.__valueTypeName = V;
}
function tfPropertyErrorString(B, L, V, J, re) {
  var ne = '" of type ';
  return L === "key" && (ne = '" with key type '), tfErrorString('property "' + tfJSON$1(V) + ne + tfJSON$1(B), J, re);
}
function TfPropertyTypeError$1(B, L, V, J, re) {
  B ? (re = re || getValueTypeName$1(J), this.message = tfPropertyErrorString(B, V, L, J, re)) : this.message = 'Unexpected property "' + L + '"', captureStackTrace(this, TfTypeError$1), this.__label = V, this.__property = L, this.__type = B, this.__value = J, this.__valueTypeName = re;
}
function tfCustomError(B, L) {
  return new TfTypeError$1(B, {}, L);
}
function tfSubError$1(B, L, V) {
  return B instanceof TfPropertyTypeError$1 ? (L = L + "." + B.__property, B = new TfPropertyTypeError$1(B.__type, L, B.__label, B.__value, B.__valueTypeName)) : B instanceof TfTypeError$1 && (B = new TfPropertyTypeError$1(B.__type, L, V, B.__value, B.__valueTypeName)), captureStackTrace(B), B;
}
TfTypeError$1.prototype = Object.create(Error.prototype), TfTypeError$1.prototype.constructor = TfTypeError$1, TfPropertyTypeError$1.prototype = Object.create(Error.prototype), TfPropertyTypeError$1.prototype.constructor = TfTypeError$1;
var errors$1 = { TfTypeError: TfTypeError$1, TfPropertyTypeError: TfPropertyTypeError$1, tfCustomError, tfSubError: tfSubError$1, tfJSON: tfJSON$1, getValueTypeName: getValueTypeName$1 }, extra, hasRequiredExtra;
function requireExtra() {
  if (hasRequiredExtra) return extra;
  hasRequiredExtra = 1;
  var B = native$1, L = errors$1;
  function V(ut) {
    return Buffer$D.isBuffer(ut);
  }
  function J(ut) {
    return typeof ut == "string" && /^([0-9a-f]{2})+$/i.test(ut);
  }
  function re(ut, dt) {
    var ht = ut.toJSON();
    function bt(Tt) {
      if (!ut(Tt)) return !1;
      if (Tt.length === dt) return !0;
      throw L.tfCustomError(ht + "(Length: " + dt + ")", ht + "(Length: " + Tt.length + ")");
    }
    return bt.toJSON = function() {
      return ht;
    }, bt;
  }
  var ne = re.bind(null, B.Array), ie = re.bind(null, V), oe = re.bind(null, J), pe = re.bind(null, B.String), ce = Math.pow(2, 53) - 1, Oe = { ArrayN: ne, Buffer: V, BufferN: ie, Finite: function(ut) {
    return typeof ut == "number" && isFinite(ut);
  }, Hex: J, HexN: oe, Int8: function(ut) {
    return ut << 24 >> 24 === ut;
  }, Int16: function(ut) {
    return ut << 16 >> 16 === ut;
  }, Int32: function(ut) {
    return (0 | ut) === ut;
  }, Int53: function(ut) {
    return typeof ut == "number" && ut >= -ce && ut <= ce && Math.floor(ut) === ut;
  }, Range: function(ut, dt, ht) {
    function bt(Tt, wt) {
      return ht(Tt, wt) && Tt > ut && Tt < dt;
    }
    return ht = ht || B.Number, bt.toJSON = function() {
      return `${ht.toJSON()} between [${ut}, ${dt}]`;
    }, bt;
  }, StringN: pe, UInt8: function(ut) {
    return (255 & ut) === ut;
  }, UInt16: function(ut) {
    return (65535 & ut) === ut;
  }, UInt32: function(ut) {
    return ut >>> 0 === ut;
  }, UInt53: function(ut) {
    return typeof ut == "number" && ut >= 0 && ut <= ce && Math.floor(ut) === ut;
  } };
  for (var rt in Oe) Oe[rt].toJSON = (function(ut) {
    return ut;
  }).bind(null, rt);
  return extra = Oe;
}
var ERRORS = errors$1, NATIVE = native$1, tfJSON = ERRORS.tfJSON, TfTypeError = ERRORS.TfTypeError, TfPropertyTypeError = ERRORS.TfPropertyTypeError, tfSubError = ERRORS.tfSubError, getValueTypeName = ERRORS.getValueTypeName, TYPES = { arrayOf: function(B, L) {
  function V(J, re) {
    return !!NATIVE.Array(J) && !NATIVE.Nil(J) && !(L.minLength !== void 0 && J.length < L.minLength) && !(L.maxLength !== void 0 && J.length > L.maxLength) && (L.length === void 0 || J.length === L.length) && J.every(function(ne, ie) {
      try {
        return typeforce$4(B, ne, re);
      } catch (oe) {
        throw tfSubError(oe, ie);
      }
    });
  }
  return B = compile(B), L = L || {}, V.toJSON = function() {
    var J = "[" + tfJSON(B) + "]";
    return L.length !== void 0 ? J += "{" + L.length + "}" : L.minLength === void 0 && L.maxLength === void 0 || (J += "{" + (L.minLength === void 0 ? 0 : L.minLength) + "," + (L.maxLength === void 0 ? 1 / 0 : L.maxLength) + "}"), J;
  }, V;
}, maybe: function B(L) {
  function V(J, re) {
    return NATIVE.Nil(J) || L(J, re, B);
  }
  return L = compile(L), V.toJSON = function() {
    return "?" + tfJSON(L);
  }, V;
}, map: function(B, L) {
  function V(J, re) {
    if (!NATIVE.Object(J) || NATIVE.Nil(J)) return !1;
    for (var ne in J) {
      try {
        L && typeforce$4(L, ne, re);
      } catch (oe) {
        throw tfSubError(oe, ne, "key");
      }
      try {
        var ie = J[ne];
        typeforce$4(B, ie, re);
      } catch (oe) {
        throw tfSubError(oe, ne);
      }
    }
    return !0;
  }
  return B = compile(B), L && (L = compile(L)), V.toJSON = L ? function() {
    return "{" + tfJSON(L) + ": " + tfJSON(B) + "}";
  } : function() {
    return "{" + tfJSON(B) + "}";
  }, V;
}, object: function(B) {
  var L = {};
  for (var V in B) L[V] = compile(B[V]);
  function J(re, ne) {
    if (!NATIVE.Object(re) || NATIVE.Nil(re)) return !1;
    var ie;
    try {
      for (ie in L)
        typeforce$4(L[ie], re[ie], ne);
    } catch (oe) {
      throw tfSubError(oe, ie);
    }
    if (ne) {
      for (ie in re) if (!L[ie]) throw new TfPropertyTypeError(void 0, ie);
    }
    return !0;
  }
  return J.toJSON = function() {
    return tfJSON(L);
  }, J;
}, anyOf: function() {
  var B = [].slice.call(arguments).map(compile);
  function L(V, J) {
    return B.some(function(re) {
      try {
        return typeforce$4(re, V, J);
      } catch {
        return !1;
      }
    });
  }
  return L.toJSON = function() {
    return B.map(tfJSON).join("|");
  }, L;
}, allOf: function() {
  var B = [].slice.call(arguments).map(compile);
  function L(V, J) {
    return B.every(function(re) {
      try {
        return typeforce$4(re, V, J);
      } catch {
        return !1;
      }
    });
  }
  return L.toJSON = function() {
    return B.map(tfJSON).join(" & ");
  }, L;
}, quacksLike: function(B) {
  function L(V) {
    return B === getValueTypeName(V);
  }
  return L.toJSON = function() {
    return B;
  }, L;
}, tuple: function() {
  var B = [].slice.call(arguments).map(compile);
  function L(V, J) {
    return !NATIVE.Nil(V) && !NATIVE.Nil(V.length) && (!J || V.length === B.length) && B.every(function(re, ne) {
      try {
        return typeforce$4(re, V[ne], J);
      } catch (ie) {
        throw tfSubError(ie, ne);
      }
    });
  }
  return L.toJSON = function() {
    return "(" + B.map(tfJSON).join(", ") + ")";
  }, L;
}, value: function(B) {
  function L(V) {
    return V === B;
  }
  return L.toJSON = function() {
    return B;
  }, L;
} };
function compile(B) {
  if (NATIVE.String(B)) return B[0] === "?" ? TYPES.maybe(B.slice(1)) : NATIVE[B] || TYPES.quacksLike(B);
  if (B && NATIVE.Object(B)) {
    if (NATIVE.Array(B)) {
      if (B.length !== 1) throw new TypeError("Expected compile() parameter of type Array of length 1");
      return TYPES.arrayOf(B[0]);
    }
    return TYPES.object(B);
  }
  return NATIVE.Function(B) ? B : TYPES.value(B);
}
function typeforce$4(B, L, V, J) {
  if (NATIVE.Function(B)) {
    if (B(L, V)) return !0;
    throw new TfTypeError(J || B, L);
  }
  return typeforce$4(compile(B), L, V);
}
for (var typeName in TYPES.oneOf = TYPES.anyOf, NATIVE) typeforce$4[typeName] = NATIVE[typeName];
for (typeName in TYPES) typeforce$4[typeName] = TYPES[typeName];
var EXTRA = requireExtra();
for (typeName in EXTRA) typeforce$4[typeName] = EXTRA[typeName];
typeforce$4.compile = compile, typeforce$4.TfTypeError = TfTypeError, typeforce$4.TfPropertyTypeError = TfPropertyTypeError;
var typeforce_1 = typeforce$4, hasRequiredScript_signature, hasRequiredScript;
function requireScript_signature() {
  if (hasRequiredScript_signature) return script_signature;
  hasRequiredScript_signature = 1, Object.defineProperty(script_signature, "__esModule", { value: !0 }), script_signature.encode = script_signature.decode = void 0;
  const B = bip66, L = requireScript(), V = types$7, { typeforce: J } = V, re = Buffer$D.alloc(1, 0);
  function ne(oe) {
    let pe = 0;
    for (; oe[pe] === 0; ) ++pe;
    return pe === oe.length ? re : 128 & (oe = oe.slice(pe))[0] ? Buffer$D.concat([re, oe], 1 + oe.length) : oe;
  }
  function ie(oe) {
    oe[0] === 0 && (oe = oe.slice(1));
    const pe = Buffer$D.alloc(32, 0), ce = Math.max(0, 32 - oe.length);
    return oe.copy(pe, ce), pe;
  }
  return script_signature.decode = function(oe) {
    const pe = oe.readUInt8(oe.length - 1);
    if (!(0, L.isDefinedHashType)(pe)) throw new Error("Invalid hashType " + pe);
    const ce = B.decode(oe.slice(0, -1)), Oe = ie(ce.r), rt = ie(ce.s);
    return { signature: Buffer$D.concat([Oe, rt], 64), hashType: pe };
  }, script_signature.encode = function(oe, pe) {
    if (J({ signature: V.BufferN(64), hashType: V.UInt8 }, { signature: oe, hashType: pe }), !(0, L.isDefinedHashType)(pe)) throw new Error("Invalid hashType " + pe);
    const ce = Buffer$D.allocUnsafe(1);
    ce.writeUInt8(pe, 0);
    const Oe = ne(oe.slice(0, 32)), rt = ne(oe.slice(32, 64));
    return Buffer$D.concat([B.encode(Oe, rt), ce]);
  }, script_signature;
}
function requireScript() {
  return hasRequiredScript || (hasRequiredScript = 1, function(B) {
    Object.defineProperty(B, "__esModule", { value: !0 }), B.signature = B.number = B.isCanonicalScriptSignature = B.isDefinedHashType = B.isCanonicalPubKey = B.toStack = B.fromASM = B.toASM = B.decompile = B.compile = B.countNonPushOnlyOPs = B.isPushOnly = B.OPS = void 0;
    const L = bip66, V = ops;
    Object.defineProperty(B, "OPS", { enumerable: !0, get: function() {
      return V.OPS;
    } });
    const J = push_data, re = script_number, ne = requireScript_signature(), ie = types$7, { typeforce: oe } = ie, pe = V.OPS.OP_RESERVED;
    function ce(wt) {
      return ie.Buffer(wt) || function(Et) {
        return ie.Number(Et) && (Et === V.OPS.OP_0 || Et >= V.OPS.OP_1 && Et <= V.OPS.OP_16 || Et === V.OPS.OP_1NEGATE);
      }(wt);
    }
    function Oe(wt) {
      return ie.Array(wt) && wt.every(ce);
    }
    function rt(wt) {
      return wt.length === 0 ? V.OPS.OP_0 : wt.length === 1 ? wt[0] >= 1 && wt[0] <= 16 ? pe + wt[0] : wt[0] === 129 ? V.OPS.OP_1NEGATE : void 0 : void 0;
    }
    function ut(wt) {
      return Buffer$D.isBuffer(wt);
    }
    function dt(wt) {
      return Buffer$D.isBuffer(wt);
    }
    function ht(wt) {
      if (ut(wt)) return wt;
      oe(ie.Array, wt);
      const Et = wt.reduce((Pt, Dt) => dt(Dt) ? Dt.length === 1 && rt(Dt) !== void 0 ? Pt + 1 : Pt + J.encodingLength(Dt.length) + Dt.length : Pt + 1, 0), Rt = Buffer$D.allocUnsafe(Et);
      let Bt = 0;
      if (wt.forEach((Pt) => {
        if (dt(Pt)) {
          const Dt = rt(Pt);
          if (Dt !== void 0) return Rt.writeUInt8(Dt, Bt), void (Bt += 1);
          Bt += J.encode(Rt, Pt.length, Bt), Pt.copy(Rt, Bt), Bt += Pt.length;
        } else Rt.writeUInt8(Pt, Bt), Bt += 1;
      }), Bt !== Rt.length) throw new Error("Could not decode chunks");
      return Rt;
    }
    function bt(wt) {
      if (Et = wt, ie.Array(Et)) return wt;
      var Et;
      oe(ie.Buffer, wt);
      const Rt = [];
      let Bt = 0;
      for (; Bt < wt.length; ) {
        const Pt = wt[Bt];
        if (Pt > V.OPS.OP_0 && Pt <= V.OPS.OP_PUSHDATA4) {
          const Dt = J.decode(wt, Bt);
          if (Dt === null || (Bt += Dt.size, Bt + Dt.number > wt.length)) return null;
          const Gt = wt.slice(Bt, Bt + Dt.number);
          Bt += Dt.number;
          const at = rt(Gt);
          at !== void 0 ? Rt.push(at) : Rt.push(Gt);
        } else Rt.push(Pt), Bt += 1;
      }
      return Rt;
    }
    function Tt(wt) {
      const Et = -129 & wt;
      return Et > 0 && Et < 4;
    }
    B.isPushOnly = Oe, B.countNonPushOnlyOPs = function(wt) {
      return wt.length - wt.filter(ce).length;
    }, B.compile = ht, B.decompile = bt, B.toASM = function(wt) {
      if (ut(wt) && (wt = bt(wt)), !wt) throw new Error("Could not convert invalid chunks to ASM");
      return wt.map((Et) => {
        if (dt(Et)) {
          const Rt = rt(Et);
          if (Rt === void 0) return Et.toString("hex");
          Et = Rt;
        }
        return V.REVERSE_OPS[Et];
      }).join(" ");
    }, B.fromASM = function(wt) {
      return oe(ie.String, wt), ht(wt.split(" ").map((Et) => V.OPS[Et] !== void 0 ? V.OPS[Et] : (oe(ie.Hex, Et), Buffer$D.from(Et, "hex"))));
    }, B.toStack = function(wt) {
      return wt = bt(wt), oe(Oe, wt), wt.map((Et) => dt(Et) ? Et : Et === V.OPS.OP_0 ? Buffer$D.allocUnsafe(0) : re.encode(Et - pe));
    }, B.isCanonicalPubKey = function(wt) {
      return ie.isPoint(wt);
    }, B.isDefinedHashType = Tt, B.isCanonicalScriptSignature = function(wt) {
      return !!Buffer$D.isBuffer(wt) && !!Tt(wt[wt.length - 1]) && L.check(wt.slice(0, -1));
    }, B.number = re, B.signature = ne;
  }(script)), script;
}
(function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.oneOf = B.Null = B.BufferN = B.Function = B.UInt32 = B.UInt8 = B.tuple = B.maybe = B.Hex = B.Buffer = B.String = B.Boolean = B.Array = B.Number = B.Hash256bit = B.Hash160bit = B.Buffer256bit = B.isTaptree = B.isTapleaf = B.TAPLEAF_VERSION_MASK = B.Satoshi = B.isPoint = B.stacksEqual = B.typeforce = void 0;
  const L = require$$1$2;
  B.typeforce = typeforce_1;
  const V = L.Buffer.alloc(32, 0), J = L.Buffer.from("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f", "hex");
  B.stacksEqual = function(ne, ie) {
    return ne.length === ie.length && ne.every((oe, pe) => oe.equals(ie[pe]));
  }, B.isPoint = function(ne) {
    if (!L.Buffer.isBuffer(ne) || ne.length < 33) return !1;
    const ie = ne[0], oe = ne.slice(1, 33);
    if (oe.compare(V) === 0 || oe.compare(J) >= 0) return !1;
    if ((ie === 2 || ie === 3) && ne.length === 33) return !0;
    const pe = ne.slice(33);
    return pe.compare(V) !== 0 && !(pe.compare(J) >= 0) && ie === 4 && ne.length === 65;
  };
  function re(ne) {
    return !(!ne || !("output" in ne)) && !!L.Buffer.isBuffer(ne.output) && (ne.version === void 0 || (ne.version & B.TAPLEAF_VERSION_MASK) === ne.version);
  }
  B.Satoshi = function(ne) {
    return B.typeforce.UInt53(ne) && ne <= 21e14;
  }, B.TAPLEAF_VERSION_MASK = 254, B.isTapleaf = re, B.isTaptree = function ne(ie) {
    return (0, B.Array)(ie) ? ie.length === 2 && ie.every((oe) => ne(oe)) : re(ie);
  }, B.Buffer256bit = B.typeforce.BufferN(32), B.Hash160bit = B.typeforce.BufferN(20), B.Hash256bit = B.typeforce.BufferN(32), B.Number = B.typeforce.Number, B.Array = B.typeforce.Array, B.Boolean = B.typeforce.Boolean, B.String = B.typeforce.String, B.Buffer = B.typeforce.Buffer, B.Hex = B.typeforce.Hex, B.maybe = B.typeforce.maybe, B.tuple = B.typeforce.tuple, B.UInt8 = B.typeforce.UInt8, B.UInt32 = B.typeforce.UInt32, B.Function = B.typeforce.Function, B.BufferN = B.typeforce.BufferN, B.Null = B.typeforce.Null, B.oneOf = B.typeforce.oneOf;
})(types$7);
var lazy$7 = {};
function prop(B, L, V) {
  Object.defineProperty(B, L, { configurable: !0, enumerable: !0, get() {
    const J = V.call(this);
    return this[L] = J, J;
  }, set(J) {
    Object.defineProperty(this, L, { configurable: !0, enumerable: !0, value: J, writable: !0 });
  } });
}
function value(B) {
  let L;
  return () => (L !== void 0 || (L = B()), L);
}
Object.defineProperty(lazy$7, "__esModule", { value: !0 }), lazy$7.value = lazy$7.prop = void 0, lazy$7.prop = prop, lazy$7.value = value, Object.defineProperty(embed, "__esModule", { value: !0 }), embed.p2data = void 0;
const networks_1$7 = networks$2, bscript$9 = requireScript(), types_1$7 = types$7, lazy$6 = lazy$7, OPS$6 = bscript$9.OPS;
function p2data(B, L) {
  if (!B.data && !B.output) throw new TypeError("Not enough data");
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$7.typeforce)({ network: types_1$7.typeforce.maybe(types_1$7.typeforce.Object), output: types_1$7.typeforce.maybe(types_1$7.typeforce.Buffer), data: types_1$7.typeforce.maybe(types_1$7.typeforce.arrayOf(types_1$7.typeforce.Buffer)) }, B);
  const V = { name: "embed", network: B.network || networks_1$7.bitcoin };
  if (lazy$6.prop(V, "output", () => {
    if (B.data) return bscript$9.compile([OPS$6.OP_RETURN].concat(B.data));
  }), lazy$6.prop(V, "data", () => {
    if (B.output) return bscript$9.decompile(B.output).slice(1);
  }), L.validate && B.output) {
    const J = bscript$9.decompile(B.output);
    if (J[0] !== OPS$6.OP_RETURN) throw new TypeError("Output is invalid");
    if (!J.slice(1).every(types_1$7.typeforce.Buffer)) throw new TypeError("Output is invalid");
    if (B.data && !(0, types_1$7.stacksEqual)(B.data, V.data)) throw new TypeError("Data mismatch");
  }
  return Object.assign(V, B);
}
embed.p2data = p2data;
var p2ms$1 = {};
Object.defineProperty(p2ms$1, "__esModule", { value: !0 }), p2ms$1.p2ms = void 0;
const networks_1$6 = networks$2, bscript$8 = requireScript(), types_1$6 = types$7, lazy$5 = lazy$7, OPS$5 = bscript$8.OPS, OP_INT_BASE = OPS$5.OP_RESERVED;
function p2ms(B, L) {
  if (!(B.input || B.output || B.pubkeys && B.m !== void 0 || B.signatures)) throw new TypeError("Not enough data");
  function V(oe) {
    return bscript$8.isCanonicalScriptSignature(oe) || (L.allowIncomplete && oe === OPS$5.OP_0) !== void 0;
  }
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$6.typeforce)({ network: types_1$6.typeforce.maybe(types_1$6.typeforce.Object), m: types_1$6.typeforce.maybe(types_1$6.typeforce.Number), n: types_1$6.typeforce.maybe(types_1$6.typeforce.Number), output: types_1$6.typeforce.maybe(types_1$6.typeforce.Buffer), pubkeys: types_1$6.typeforce.maybe(types_1$6.typeforce.arrayOf(types_1$6.isPoint)), signatures: types_1$6.typeforce.maybe(types_1$6.typeforce.arrayOf(V)), input: types_1$6.typeforce.maybe(types_1$6.typeforce.Buffer) }, B);
  const J = { network: B.network || networks_1$6.bitcoin };
  let re = [], ne = !1;
  function ie(oe) {
    ne || (ne = !0, re = bscript$8.decompile(oe), J.m = re[0] - OP_INT_BASE, J.n = re[re.length - 2] - OP_INT_BASE, J.pubkeys = re.slice(1, -2));
  }
  if (lazy$5.prop(J, "output", () => {
    if (B.m && J.n && B.pubkeys) return bscript$8.compile([].concat(OP_INT_BASE + B.m, B.pubkeys, OP_INT_BASE + J.n, OPS$5.OP_CHECKMULTISIG));
  }), lazy$5.prop(J, "m", () => {
    if (J.output) return ie(J.output), J.m;
  }), lazy$5.prop(J, "n", () => {
    if (J.pubkeys) return J.pubkeys.length;
  }), lazy$5.prop(J, "pubkeys", () => {
    if (B.output) return ie(B.output), J.pubkeys;
  }), lazy$5.prop(J, "signatures", () => {
    if (B.input) return bscript$8.decompile(B.input).slice(1);
  }), lazy$5.prop(J, "input", () => {
    if (B.signatures) return bscript$8.compile([OPS$5.OP_0].concat(B.signatures));
  }), lazy$5.prop(J, "witness", () => {
    if (J.input) return [];
  }), lazy$5.prop(J, "name", () => {
    if (J.m && J.n) return `p2ms(${J.m} of ${J.n})`;
  }), L.validate) {
    if (B.output) {
      if (ie(B.output), !types_1$6.typeforce.Number(re[0])) throw new TypeError("Output is invalid");
      if (!types_1$6.typeforce.Number(re[re.length - 2])) throw new TypeError("Output is invalid");
      if (re[re.length - 1] !== OPS$5.OP_CHECKMULTISIG) throw new TypeError("Output is invalid");
      if (J.m <= 0 || J.n > 16 || J.m > J.n || J.n !== re.length - 3) throw new TypeError("Output is invalid");
      if (!J.pubkeys.every((oe) => (0, types_1$6.isPoint)(oe))) throw new TypeError("Output is invalid");
      if (B.m !== void 0 && B.m !== J.m) throw new TypeError("m mismatch");
      if (B.n !== void 0 && B.n !== J.n) throw new TypeError("n mismatch");
      if (B.pubkeys && !(0, types_1$6.stacksEqual)(B.pubkeys, J.pubkeys)) throw new TypeError("Pubkeys mismatch");
    }
    if (B.pubkeys) {
      if (B.n !== void 0 && B.n !== B.pubkeys.length) throw new TypeError("Pubkey count mismatch");
      if (J.n = B.pubkeys.length, J.n < J.m) throw new TypeError("Pubkey count cannot be less than m");
    }
    if (B.signatures) {
      if (B.signatures.length < J.m) throw new TypeError("Not enough signatures provided");
      if (B.signatures.length > J.m) throw new TypeError("Too many signatures provided");
    }
    if (B.input) {
      if (B.input[0] !== OPS$5.OP_0) throw new TypeError("Input is invalid");
      if (J.signatures.length === 0 || !J.signatures.every(V)) throw new TypeError("Input has invalid signature(s)");
      if (B.signatures && !(0, types_1$6.stacksEqual)(B.signatures, J.signatures)) throw new TypeError("Signature mismatch");
      if (B.m !== void 0 && B.m !== B.signatures.length) throw new TypeError("Signature count mismatch");
    }
  }
  return Object.assign(J, B);
}
p2ms$1.p2ms = p2ms;
var p2pk$1 = {};
Object.defineProperty(p2pk$1, "__esModule", { value: !0 }), p2pk$1.p2pk = void 0;
const networks_1$5 = networks$2, bscript$7 = requireScript(), types_1$5 = types$7, lazy$4 = lazy$7, OPS$4 = bscript$7.OPS;
function p2pk(B, L) {
  if (!(B.input || B.output || B.pubkey || B.input || B.signature)) throw new TypeError("Not enough data");
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$5.typeforce)({ network: types_1$5.typeforce.maybe(types_1$5.typeforce.Object), output: types_1$5.typeforce.maybe(types_1$5.typeforce.Buffer), pubkey: types_1$5.typeforce.maybe(types_1$5.isPoint), signature: types_1$5.typeforce.maybe(bscript$7.isCanonicalScriptSignature), input: types_1$5.typeforce.maybe(types_1$5.typeforce.Buffer) }, B);
  const V = lazy$4.value(() => bscript$7.decompile(B.input)), J = { name: "p2pk", network: B.network || networks_1$5.bitcoin };
  if (lazy$4.prop(J, "output", () => {
    if (B.pubkey) return bscript$7.compile([B.pubkey, OPS$4.OP_CHECKSIG]);
  }), lazy$4.prop(J, "pubkey", () => {
    if (B.output) return B.output.slice(1, -1);
  }), lazy$4.prop(J, "signature", () => {
    if (B.input) return V()[0];
  }), lazy$4.prop(J, "input", () => {
    if (B.signature) return bscript$7.compile([B.signature]);
  }), lazy$4.prop(J, "witness", () => {
    if (J.input) return [];
  }), L.validate) {
    if (B.output) {
      if (B.output[B.output.length - 1] !== OPS$4.OP_CHECKSIG) throw new TypeError("Output is invalid");
      if (!(0, types_1$5.isPoint)(J.pubkey)) throw new TypeError("Output pubkey is invalid");
      if (B.pubkey && !B.pubkey.equals(J.pubkey)) throw new TypeError("Pubkey mismatch");
    }
    if (B.signature && B.input && !B.input.equals(J.input)) throw new TypeError("Signature mismatch");
    if (B.input) {
      if (V().length !== 1) throw new TypeError("Input is invalid");
      if (!bscript$7.isCanonicalScriptSignature(J.signature)) throw new TypeError("Input has invalid signature");
    }
  }
  return Object.assign(J, B);
}
p2pk$1.p2pk = p2pk;
var p2pkh$1 = {}, crypto$6 = {}, ripemd160$1 = {}, _md = {}, _assert = {};
function number$1(B) {
  if (!Number.isSafeInteger(B) || B < 0) throw new Error(`positive integer expected, not ${B}`);
}
function bool(B) {
  if (typeof B != "boolean") throw new Error(`boolean expected, not ${B}`);
}
function isBytes(B) {
  return B instanceof Uint8Array || B != null && typeof B == "object" && B.constructor.name === "Uint8Array";
}
function bytes(B, ...L) {
  if (!isBytes(B)) throw new Error("Uint8Array expected");
  if (L.length > 0 && !L.includes(B.length)) throw new Error(`Uint8Array expected of length ${L}, not of length=${B.length}`);
}
function hash$4(B) {
  if (typeof B != "function" || typeof B.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
  number$1(B.outputLen), number$1(B.blockLen);
}
function exists(B, L = !0) {
  if (B.destroyed) throw new Error("Hash instance has been destroyed");
  if (L && B.finished) throw new Error("Hash#digest() has already been called");
}
function output(B, L) {
  bytes(B);
  const V = L.outputLen;
  if (B.length < V) throw new Error(`digestInto() expects output buffer of length at least ${V}`);
}
Object.defineProperty(_assert, "__esModule", { value: !0 }), _assert.isBytes = isBytes, _assert.number = number$1, _assert.bool = bool, _assert.bytes = bytes, _assert.hash = hash$4, _assert.exists = exists, _assert.output = output;
const assert$m = { number: number$1, bool, bytes, hash: hash$4, exists, output };
_assert.default = assert$m;
var utils$p = {}, crypto$5 = {};
Object.defineProperty(crypto$5, "__esModule", { value: !0 }), crypto$5.crypto = void 0, crypto$5.crypto = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0, function(B) {
  /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  Object.defineProperty(B, "__esModule", { value: !0 }), B.Hash = B.nextTick = B.byteSwapIfBE = B.byteSwap = B.isLE = B.rotl = B.rotr = B.createView = B.u32 = B.u8 = void 0, B.isBytes = function(ce) {
    return ce instanceof Uint8Array || ce != null && typeof ce == "object" && ce.constructor.name === "Uint8Array";
  }, B.byteSwap32 = function(ce) {
    for (let Oe = 0; Oe < ce.length; Oe++) ce[Oe] = (0, B.byteSwap)(ce[Oe]);
  }, B.bytesToHex = function(ce) {
    (0, V.bytes)(ce);
    let Oe = "";
    for (let rt = 0; rt < ce.length; rt++) Oe += J[ce[rt]];
    return Oe;
  }, B.hexToBytes = function(ce) {
    if (typeof ce != "string") throw new Error("hex string expected, got " + typeof ce);
    const Oe = ce.length, rt = Oe / 2;
    if (Oe % 2) throw new Error("padded hex string expected, got unpadded hex of length " + Oe);
    const ut = new Uint8Array(rt);
    for (let dt = 0, ht = 0; dt < rt; dt++, ht += 2) {
      const bt = ne(ce.charCodeAt(ht)), Tt = ne(ce.charCodeAt(ht + 1));
      if (bt === void 0 || Tt === void 0) {
        const wt = ce[ht] + ce[ht + 1];
        throw new Error('hex string expected, got non-hex character "' + wt + '" at index ' + ht);
      }
      ut[dt] = 16 * bt + Tt;
    }
    return ut;
  }, B.asyncLoop = async function(ce, Oe, rt) {
    let ut = Date.now();
    for (let dt = 0; dt < ce; dt++) {
      rt(dt);
      const ht = Date.now() - ut;
      ht >= 0 && ht < Oe || (await (0, B.nextTick)(), ut += ht);
    }
  }, B.utf8ToBytes = ie, B.toBytes = oe, B.concatBytes = function(...ce) {
    let Oe = 0;
    for (let ut = 0; ut < ce.length; ut++) {
      const dt = ce[ut];
      (0, V.bytes)(dt), Oe += dt.length;
    }
    const rt = new Uint8Array(Oe);
    for (let ut = 0, dt = 0; ut < ce.length; ut++) {
      const ht = ce[ut];
      rt.set(ht, dt), dt += ht.length;
    }
    return rt;
  }, B.checkOpts = function(ce, Oe) {
    if (Oe !== void 0 && pe.call(Oe) !== "[object Object]") throw new Error("Options should be object or undefined");
    return Object.assign(ce, Oe);
  }, B.wrapConstructor = function(ce) {
    const Oe = (ut) => ce().update(oe(ut)).digest(), rt = ce();
    return Oe.outputLen = rt.outputLen, Oe.blockLen = rt.blockLen, Oe.create = () => ce(), Oe;
  }, B.wrapConstructorWithOpts = function(ce) {
    const Oe = (ut, dt) => ce(dt).update(oe(ut)).digest(), rt = ce({});
    return Oe.outputLen = rt.outputLen, Oe.blockLen = rt.blockLen, Oe.create = (ut) => ce(ut), Oe;
  }, B.wrapXOFConstructorWithOpts = function(ce) {
    const Oe = (ut, dt) => ce(dt).update(oe(ut)).digest(), rt = ce({});
    return Oe.outputLen = rt.outputLen, Oe.blockLen = rt.blockLen, Oe.create = (ut) => ce(ut), Oe;
  }, B.randomBytes = function(ce = 32) {
    if (L.crypto && typeof L.crypto.getRandomValues == "function") return L.crypto.getRandomValues(new Uint8Array(ce));
    if (L.crypto && typeof L.crypto.randomBytes == "function") return L.crypto.randomBytes(ce);
    throw new Error("crypto.getRandomValues must be defined");
  };
  const L = crypto$5, V = _assert;
  B.u8 = (ce) => new Uint8Array(ce.buffer, ce.byteOffset, ce.byteLength), B.u32 = (ce) => new Uint32Array(ce.buffer, ce.byteOffset, Math.floor(ce.byteLength / 4)), B.createView = (ce) => new DataView(ce.buffer, ce.byteOffset, ce.byteLength), B.rotr = (ce, Oe) => ce << 32 - Oe | ce >>> Oe, B.rotl = (ce, Oe) => ce << Oe | ce >>> 32 - Oe >>> 0, B.isLE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68, B.byteSwap = (ce) => ce << 24 & 4278190080 | ce << 8 & 16711680 | ce >>> 8 & 65280 | ce >>> 24 & 255, B.byteSwapIfBE = B.isLE ? (ce) => ce : (ce) => (0, B.byteSwap)(ce);
  const J = Array.from({ length: 256 }, (ce, Oe) => Oe.toString(16).padStart(2, "0")), re = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
  function ne(ce) {
    return ce >= re._0 && ce <= re._9 ? ce - re._0 : ce >= re._A && ce <= re._F ? ce - (re._A - 10) : ce >= re._a && ce <= re._f ? ce - (re._a - 10) : void 0;
  }
  function ie(ce) {
    if (typeof ce != "string") throw new Error("utf8ToBytes expected string, got " + typeof ce);
    return new Uint8Array(new TextEncoder().encode(ce));
  }
  function oe(ce) {
    return typeof ce == "string" && (ce = ie(ce)), (0, V.bytes)(ce), ce;
  }
  B.nextTick = async () => {
  }, B.Hash = class {
    clone() {
      return this._cloneInto();
    }
  };
  const pe = {}.toString;
}(utils$p), Object.defineProperty(_md, "__esModule", { value: !0 }), _md.HashMD = _md.Maj = _md.Chi = void 0;
const _assert_js_1 = _assert, utils_js_1$4 = utils$p;
function setBigUint64(B, L, V, J) {
  if (typeof B.setBigUint64 == "function") return B.setBigUint64(L, V, J);
  const re = BigInt(32), ne = BigInt(4294967295), ie = Number(V >> re & ne), oe = Number(V & ne), pe = J ? 4 : 0, ce = J ? 0 : 4;
  B.setUint32(L + pe, ie, J), B.setUint32(L + ce, oe, J);
}
const Chi = (B, L, V) => B & L ^ ~B & V;
_md.Chi = Chi;
const Maj = (B, L, V) => B & L ^ B & V ^ L & V;
_md.Maj = Maj;
class HashMD extends utils_js_1$4.Hash {
  constructor(L, V, J, re) {
    super(), this.blockLen = L, this.outputLen = V, this.padOffset = J, this.isLE = re, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(L), this.view = (0, utils_js_1$4.createView)(this.buffer);
  }
  update(L) {
    (0, _assert_js_1.exists)(this);
    const { view: V, buffer: J, blockLen: re } = this, ne = (L = (0, utils_js_1$4.toBytes)(L)).length;
    for (let ie = 0; ie < ne; ) {
      const oe = Math.min(re - this.pos, ne - ie);
      if (oe !== re) J.set(L.subarray(ie, ie + oe), this.pos), this.pos += oe, ie += oe, this.pos === re && (this.process(V, 0), this.pos = 0);
      else {
        const pe = (0, utils_js_1$4.createView)(L);
        for (; re <= ne - ie; ie += re) this.process(pe, ie);
      }
    }
    return this.length += L.length, this.roundClean(), this;
  }
  digestInto(L) {
    (0, _assert_js_1.exists)(this), (0, _assert_js_1.output)(L, this), this.finished = !0;
    const { buffer: V, view: J, blockLen: re, isLE: ne } = this;
    let { pos: ie } = this;
    V[ie++] = 128, this.buffer.subarray(ie).fill(0), this.padOffset > re - ie && (this.process(J, 0), ie = 0);
    for (let rt = ie; rt < re; rt++) V[rt] = 0;
    setBigUint64(J, re - 8, BigInt(8 * this.length), ne), this.process(J, 0);
    const oe = (0, utils_js_1$4.createView)(L), pe = this.outputLen;
    if (pe % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const ce = pe / 4, Oe = this.get();
    if (ce > Oe.length) throw new Error("_sha2: outputLen bigger than state");
    for (let rt = 0; rt < ce; rt++) oe.setUint32(4 * rt, Oe[rt], ne);
  }
  digest() {
    const { buffer: L, outputLen: V } = this;
    this.digestInto(L);
    const J = L.slice(0, V);
    return this.destroy(), J;
  }
  _cloneInto(L) {
    L || (L = new this.constructor()), L.set(...this.get());
    const { blockLen: V, buffer: J, length: re, finished: ne, destroyed: ie, pos: oe } = this;
    return L.length = re, L.pos = oe, L.finished = ne, L.destroyed = ie, re % V && L.buffer.set(J), L;
  }
}
_md.HashMD = HashMD, Object.defineProperty(ripemd160$1, "__esModule", { value: !0 }), ripemd160$1.ripemd160 = ripemd160$1.RIPEMD160 = void 0;
const _md_js_1$3 = _md, utils_js_1$3 = utils$p, Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]), Id = new Uint8Array(new Array(16).fill(0).map((B, L) => L)), Pi = Id.map((B) => (9 * B + 5) % 16);
let idxL = [Id], idxR = [Pi];
for (let B = 0; B < 4; B++) for (let L of [idxL, idxR]) L.push(L[B].map((V) => Rho[V]));
const shifts = [[11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8], [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7], [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9], [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6], [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]].map((B) => new Uint8Array(B)), shiftsL = idxL.map((B, L) => B.map((V) => shifts[L][V])), shiftsR = idxR.map((B, L) => B.map((V) => shifts[L][V])), Kl = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]), Kr = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]);
function f$2(B, L, V, J) {
  return B === 0 ? L ^ V ^ J : B === 1 ? L & V | ~L & J : B === 2 ? (L | ~V) ^ J : B === 3 ? L & J | V & ~J : L ^ (V | ~J);
}
const R_BUF = new Uint32Array(16);
let RIPEMD160$5 = class extends _md_js_1$3.HashMD {
  constructor() {
    super(64, 20, 8, !0), this.h0 = 1732584193, this.h1 = -271733879, this.h2 = -1732584194, this.h3 = 271733878, this.h4 = -1009589776;
  }
  get() {
    const { h0: B, h1: L, h2: V, h3: J, h4: re } = this;
    return [B, L, V, J, re];
  }
  set(B, L, V, J, re) {
    this.h0 = 0 | B, this.h1 = 0 | L, this.h2 = 0 | V, this.h3 = 0 | J, this.h4 = 0 | re;
  }
  process(B, L) {
    for (let ut = 0; ut < 16; ut++, L += 4) R_BUF[ut] = B.getUint32(L, !0);
    let V = 0 | this.h0, J = V, re = 0 | this.h1, ne = re, ie = 0 | this.h2, oe = ie, pe = 0 | this.h3, ce = pe, Oe = 0 | this.h4, rt = Oe;
    for (let ut = 0; ut < 5; ut++) {
      const dt = 4 - ut, ht = Kl[ut], bt = Kr[ut], Tt = idxL[ut], wt = idxR[ut], Et = shiftsL[ut], Rt = shiftsR[ut];
      for (let Bt = 0; Bt < 16; Bt++) {
        const Pt = (0, utils_js_1$3.rotl)(V + f$2(ut, re, ie, pe) + R_BUF[Tt[Bt]] + ht, Et[Bt]) + Oe | 0;
        V = Oe, Oe = pe, pe = 0 | (0, utils_js_1$3.rotl)(ie, 10), ie = re, re = Pt;
      }
      for (let Bt = 0; Bt < 16; Bt++) {
        const Pt = (0, utils_js_1$3.rotl)(J + f$2(dt, ne, oe, ce) + R_BUF[wt[Bt]] + bt, Rt[Bt]) + rt | 0;
        J = rt, rt = ce, ce = 0 | (0, utils_js_1$3.rotl)(oe, 10), oe = ne, ne = Pt;
      }
    }
    this.set(this.h1 + ie + ce | 0, this.h2 + pe + rt | 0, this.h3 + Oe + J | 0, this.h4 + V + ne | 0, this.h0 + re + oe | 0);
  }
  roundClean() {
    R_BUF.fill(0);
  }
  destroy() {
    this.destroyed = !0, this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
  }
};
ripemd160$1.RIPEMD160 = RIPEMD160$5, ripemd160$1.ripemd160 = (0, utils_js_1$3.wrapConstructor)(() => new RIPEMD160$5());
var sha1$1 = {};
Object.defineProperty(sha1$1, "__esModule", { value: !0 }), sha1$1.sha1 = sha1$1.SHA1 = void 0;
const _md_js_1$2 = _md, utils_js_1$2 = utils$p, SHA1_IV = new Uint32Array([1732584193, 4023233417, 2562383102, 271733878, 3285377520]), SHA1_W = new Uint32Array(80);
let SHA1$1 = class extends _md_js_1$2.HashMD {
  constructor() {
    super(64, 20, 8, !1), this.A = 0 | SHA1_IV[0], this.B = 0 | SHA1_IV[1], this.C = 0 | SHA1_IV[2], this.D = 0 | SHA1_IV[3], this.E = 0 | SHA1_IV[4];
  }
  get() {
    const { A: B, B: L, C: V, D: J, E: re } = this;
    return [B, L, V, J, re];
  }
  set(B, L, V, J, re) {
    this.A = 0 | B, this.B = 0 | L, this.C = 0 | V, this.D = 0 | J, this.E = 0 | re;
  }
  process(B, L) {
    for (let oe = 0; oe < 16; oe++, L += 4) SHA1_W[oe] = B.getUint32(L, !1);
    for (let oe = 16; oe < 80; oe++) SHA1_W[oe] = (0, utils_js_1$2.rotl)(SHA1_W[oe - 3] ^ SHA1_W[oe - 8] ^ SHA1_W[oe - 14] ^ SHA1_W[oe - 16], 1);
    let { A: V, B: J, C: re, D: ne, E: ie } = this;
    for (let oe = 0; oe < 80; oe++) {
      let pe, ce;
      oe < 20 ? (pe = (0, _md_js_1$2.Chi)(J, re, ne), ce = 1518500249) : oe < 40 ? (pe = J ^ re ^ ne, ce = 1859775393) : oe < 60 ? (pe = (0, _md_js_1$2.Maj)(J, re, ne), ce = 2400959708) : (pe = J ^ re ^ ne, ce = 3395469782);
      const Oe = (0, utils_js_1$2.rotl)(V, 5) + pe + ie + ce + SHA1_W[oe] | 0;
      ie = ne, ne = re, re = (0, utils_js_1$2.rotl)(J, 30), J = V, V = Oe;
    }
    V = V + this.A | 0, J = J + this.B | 0, re = re + this.C | 0, ne = ne + this.D | 0, ie = ie + this.E | 0, this.set(V, J, re, ne, ie);
  }
  roundClean() {
    SHA1_W.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0), this.buffer.fill(0);
  }
};
sha1$1.SHA1 = SHA1$1, sha1$1.sha1 = (0, utils_js_1$2.wrapConstructor)(() => new SHA1$1());
var sha256$5 = {};
Object.defineProperty(sha256$5, "__esModule", { value: !0 }), sha256$5.sha224 = sha256$5.sha256 = sha256$5.SHA256 = void 0;
const _md_js_1$1 = _md, utils_js_1$1 = utils$p, SHA256_K = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]), SHA256_IV = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), SHA256_W = new Uint32Array(64);
let SHA256$2 = class extends _md_js_1$1.HashMD {
  constructor() {
    super(64, 32, 8, !1), this.A = 0 | SHA256_IV[0], this.B = 0 | SHA256_IV[1], this.C = 0 | SHA256_IV[2], this.D = 0 | SHA256_IV[3], this.E = 0 | SHA256_IV[4], this.F = 0 | SHA256_IV[5], this.G = 0 | SHA256_IV[6], this.H = 0 | SHA256_IV[7];
  }
  get() {
    const { A: B, B: L, C: V, D: J, E: re, F: ne, G: ie, H: oe } = this;
    return [B, L, V, J, re, ne, ie, oe];
  }
  set(B, L, V, J, re, ne, ie, oe) {
    this.A = 0 | B, this.B = 0 | L, this.C = 0 | V, this.D = 0 | J, this.E = 0 | re, this.F = 0 | ne, this.G = 0 | ie, this.H = 0 | oe;
  }
  process(B, L) {
    for (let Oe = 0; Oe < 16; Oe++, L += 4) SHA256_W[Oe] = B.getUint32(L, !1);
    for (let Oe = 16; Oe < 64; Oe++) {
      const rt = SHA256_W[Oe - 15], ut = SHA256_W[Oe - 2], dt = (0, utils_js_1$1.rotr)(rt, 7) ^ (0, utils_js_1$1.rotr)(rt, 18) ^ rt >>> 3, ht = (0, utils_js_1$1.rotr)(ut, 17) ^ (0, utils_js_1$1.rotr)(ut, 19) ^ ut >>> 10;
      SHA256_W[Oe] = ht + SHA256_W[Oe - 7] + dt + SHA256_W[Oe - 16] | 0;
    }
    let { A: V, B: J, C: re, D: ne, E: ie, F: oe, G: pe, H: ce } = this;
    for (let Oe = 0; Oe < 64; Oe++) {
      const rt = ce + ((0, utils_js_1$1.rotr)(ie, 6) ^ (0, utils_js_1$1.rotr)(ie, 11) ^ (0, utils_js_1$1.rotr)(ie, 25)) + (0, _md_js_1$1.Chi)(ie, oe, pe) + SHA256_K[Oe] + SHA256_W[Oe] | 0, ut = ((0, utils_js_1$1.rotr)(V, 2) ^ (0, utils_js_1$1.rotr)(V, 13) ^ (0, utils_js_1$1.rotr)(V, 22)) + (0, _md_js_1$1.Maj)(V, J, re) | 0;
      ce = pe, pe = oe, oe = ie, ie = ne + rt | 0, ne = re, re = J, J = V, V = rt + ut | 0;
    }
    V = V + this.A | 0, J = J + this.B | 0, re = re + this.C | 0, ne = ne + this.D | 0, ie = ie + this.E | 0, oe = oe + this.F | 0, pe = pe + this.G | 0, ce = ce + this.H | 0, this.set(V, J, re, ne, ie, oe, pe, ce);
  }
  roundClean() {
    SHA256_W.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
};
sha256$5.SHA256 = SHA256$2;
let SHA224$1 = class extends SHA256$2 {
  constructor() {
    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28;
  }
};
function base$5(B) {
  if (B.length >= 255) throw new TypeError("Alphabet too long");
  for (var L = new Uint8Array(256), V = 0; V < L.length; V++) L[V] = 255;
  for (var J = 0; J < B.length; J++) {
    var re = B.charAt(J), ne = re.charCodeAt(0);
    if (L[ne] !== 255) throw new TypeError(re + " is ambiguous");
    L[ne] = J;
  }
  var ie = B.length, oe = B.charAt(0), pe = Math.log(ie) / Math.log(256), ce = Math.log(256) / Math.log(ie);
  function Oe(rt) {
    if (typeof rt != "string") throw new TypeError("Expected String");
    if (rt.length === 0) return new Uint8Array();
    for (var ut = 0, dt = 0, ht = 0; rt[ut] === oe; ) dt++, ut++;
    for (var bt = (rt.length - ut) * pe + 1 >>> 0, Tt = new Uint8Array(bt); rt[ut]; ) {
      var wt = L[rt.charCodeAt(ut)];
      if (wt === 255) return;
      for (var Et = 0, Rt = bt - 1; (wt !== 0 || Et < ht) && Rt !== -1; Rt--, Et++) wt += ie * Tt[Rt] >>> 0, Tt[Rt] = wt % 256 >>> 0, wt = wt / 256 >>> 0;
      if (wt !== 0) throw new Error("Non-zero carry");
      ht = Et, ut++;
    }
    for (var Bt = bt - ht; Bt !== bt && Tt[Bt] === 0; ) Bt++;
    for (var Pt = new Uint8Array(dt + (bt - Bt)), Dt = dt; Bt !== bt; ) Pt[Dt++] = Tt[Bt++];
    return Pt;
  }
  return { encode: function(rt) {
    if (rt instanceof Uint8Array || (ArrayBuffer.isView(rt) ? rt = new Uint8Array(rt.buffer, rt.byteOffset, rt.byteLength) : Array.isArray(rt) && (rt = Uint8Array.from(rt))), !(rt instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (rt.length === 0) return "";
    for (var ut = 0, dt = 0, ht = 0, bt = rt.length; ht !== bt && rt[ht] === 0; ) ht++, ut++;
    for (var Tt = (bt - ht) * ce + 1 >>> 0, wt = new Uint8Array(Tt); ht !== bt; ) {
      for (var Et = rt[ht], Rt = 0, Bt = Tt - 1; (Et !== 0 || Rt < dt) && Bt !== -1; Bt--, Rt++) Et += 256 * wt[Bt] >>> 0, wt[Bt] = Et % ie >>> 0, Et = Et / ie >>> 0;
      if (Et !== 0) throw new Error("Non-zero carry");
      dt = Rt, ht++;
    }
    for (var Pt = Tt - dt; Pt !== Tt && wt[Pt] === 0; ) Pt++;
    for (var Dt = oe.repeat(ut); Pt < Tt; ++Pt) Dt += B.charAt(wt[Pt]);
    return Dt;
  }, decodeUnsafe: Oe, decode: function(rt) {
    var ut = Oe(rt);
    if (ut) return ut;
    throw new Error("Non-base" + ie + " character");
  } };
}
sha256$5.sha256 = (0, utils_js_1$1.wrapConstructor)(() => new SHA256$2()), sha256$5.sha224 = (0, utils_js_1$1.wrapConstructor)(() => new SHA224$1()), function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.taggedHash = B.TAGGED_HASH_PREFIXES = B.TAGS = B.hash256 = B.hash160 = B.sha256 = B.sha1 = B.ripemd160 = void 0;
  const L = ripemd160$1, V = sha1$1, J = sha256$5;
  function re(ne) {
    return Buffer$D.from((0, J.sha256)(Uint8Array.from(ne)));
  }
  B.ripemd160 = function(ne) {
    return Buffer$D.from((0, L.ripemd160)(Uint8Array.from(ne)));
  }, B.sha1 = function(ne) {
    return Buffer$D.from((0, V.sha1)(Uint8Array.from(ne)));
  }, B.sha256 = re, B.hash160 = function(ne) {
    return Buffer$D.from((0, L.ripemd160)((0, J.sha256)(Uint8Array.from(ne))));
  }, B.hash256 = function(ne) {
    return Buffer$D.from((0, J.sha256)((0, J.sha256)(Uint8Array.from(ne))));
  }, B.TAGS = ["BIP0340/challenge", "BIP0340/aux", "BIP0340/nonce", "TapLeaf", "TapBranch", "TapSighash", "TapTweak", "KeyAgg list", "KeyAgg coefficient"], B.TAGGED_HASH_PREFIXES = { "BIP0340/challenge": Buffer$D.from([123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130, 210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124, 123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130, 210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124]), "BIP0340/aux": Buffer$D.from([241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160, 105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144, 241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160, 105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144]), "BIP0340/nonce": Buffer$D.from([7, 73, 119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244, 52, 215, 62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47, 7, 73, 119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244, 52, 215, 62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47]), TapLeaf: Buffer$D.from([174, 234, 143, 220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211, 95, 28, 181, 64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238, 174, 234, 143, 220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211, 95, 28, 181, 64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238]), TapBranch: Buffer$D.from([25, 65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247, 33, 111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21, 25, 65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247, 33, 111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21]), TapSighash: Buffer$D.from([244, 10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61, 149, 253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49, 244, 10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61, 149, 253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49]), TapTweak: Buffer$D.from([232, 15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66, 156, 188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233, 232, 15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66, 156, 188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233]), "KeyAgg list": Buffer$D.from([72, 28, 151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126, 215, 49, 156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240, 72, 28, 151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126, 215, 49, 156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240]), "KeyAgg coefficient": Buffer$D.from([191, 201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100, 130, 78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129, 191, 201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100, 130, 78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129]) }, B.taggedHash = function(ne, ie) {
    return re(Buffer$D.concat([B.TAGGED_HASH_PREFIXES[ne], ie]));
  };
}(crypto$6);
var src$3 = base$5;
const basex$1 = src$3, ALPHABET$2 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
var bs58$1 = basex$1(ALPHABET$2), base58$1 = bs58$1, base$4 = function(B) {
  function L(V) {
    var J = V.slice(0, -4), re = V.slice(-4), ne = B(J);
    if (!(re[0] ^ ne[0] | re[1] ^ ne[1] | re[2] ^ ne[2] | re[3] ^ ne[3])) return J;
  }
  return { encode: function(V) {
    var J = Uint8Array.from(V), re = B(J), ne = J.length + 4, ie = new Uint8Array(ne);
    return ie.set(J, 0), ie.set(re.subarray(0, 4), J.length), base58$1.encode(ie, ne);
  }, decode: function(V) {
    var J = L(base58$1.decode(V));
    if (!J) throw new Error("Invalid checksum");
    return J;
  }, decodeUnsafe: function(V) {
    var J = base58$1.decodeUnsafe(V);
    if (J) return L(J);
  } };
}, { sha256: sha256$4 } = sha256$5, bs58checkBase$1 = base$4;
function sha256x2$1(B) {
  return sha256$4(sha256$4(B));
}
var bs58check$5 = bs58checkBase$1(sha256x2$1);
Object.defineProperty(p2pkh$1, "__esModule", { value: !0 }), p2pkh$1.p2pkh = void 0;
const bcrypto$5 = crypto$6, networks_1$4 = networks$2, bscript$6 = requireScript(), types_1$4 = types$7, lazy$3 = lazy$7, bs58check$4 = bs58check$5, OPS$3 = bscript$6.OPS;
function p2pkh(B, L) {
  if (!(B.address || B.hash || B.output || B.pubkey || B.input)) throw new TypeError("Not enough data");
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$4.typeforce)({ network: types_1$4.typeforce.maybe(types_1$4.typeforce.Object), address: types_1$4.typeforce.maybe(types_1$4.typeforce.String), hash: types_1$4.typeforce.maybe(types_1$4.typeforce.BufferN(20)), output: types_1$4.typeforce.maybe(types_1$4.typeforce.BufferN(25)), pubkey: types_1$4.typeforce.maybe(types_1$4.isPoint), signature: types_1$4.typeforce.maybe(bscript$6.isCanonicalScriptSignature), input: types_1$4.typeforce.maybe(types_1$4.typeforce.Buffer) }, B);
  const V = lazy$3.value(() => {
    const ie = Buffer$D.from(bs58check$4.decode(B.address));
    return { version: ie.readUInt8(0), hash: ie.slice(1) };
  }), J = lazy$3.value(() => bscript$6.decompile(B.input)), re = B.network || networks_1$4.bitcoin, ne = { name: "p2pkh", network: re };
  if (lazy$3.prop(ne, "address", () => {
    if (!ne.hash) return;
    const ie = Buffer$D.allocUnsafe(21);
    return ie.writeUInt8(re.pubKeyHash, 0), ne.hash.copy(ie, 1), bs58check$4.encode(ie);
  }), lazy$3.prop(ne, "hash", () => B.output ? B.output.slice(3, 23) : B.address ? V().hash : B.pubkey || ne.pubkey ? bcrypto$5.hash160(B.pubkey || ne.pubkey) : void 0), lazy$3.prop(ne, "output", () => {
    if (ne.hash) return bscript$6.compile([OPS$3.OP_DUP, OPS$3.OP_HASH160, ne.hash, OPS$3.OP_EQUALVERIFY, OPS$3.OP_CHECKSIG]);
  }), lazy$3.prop(ne, "pubkey", () => {
    if (B.input) return J()[1];
  }), lazy$3.prop(ne, "signature", () => {
    if (B.input) return J()[0];
  }), lazy$3.prop(ne, "input", () => {
    if (B.pubkey && B.signature) return bscript$6.compile([B.signature, B.pubkey]);
  }), lazy$3.prop(ne, "witness", () => {
    if (ne.input) return [];
  }), L.validate) {
    let ie = Buffer$D.from([]);
    if (B.address) {
      if (V().version !== re.pubKeyHash) throw new TypeError("Invalid version or Network mismatch");
      if (V().hash.length !== 20) throw new TypeError("Invalid address");
      ie = V().hash;
    }
    if (B.hash) {
      if (ie.length > 0 && !ie.equals(B.hash)) throw new TypeError("Hash mismatch");
      ie = B.hash;
    }
    if (B.output) {
      if (B.output.length !== 25 || B.output[0] !== OPS$3.OP_DUP || B.output[1] !== OPS$3.OP_HASH160 || B.output[2] !== 20 || B.output[23] !== OPS$3.OP_EQUALVERIFY || B.output[24] !== OPS$3.OP_CHECKSIG) throw new TypeError("Output is invalid");
      const oe = B.output.slice(3, 23);
      if (ie.length > 0 && !ie.equals(oe)) throw new TypeError("Hash mismatch");
      ie = oe;
    }
    if (B.pubkey) {
      const oe = bcrypto$5.hash160(B.pubkey);
      if (ie.length > 0 && !ie.equals(oe)) throw new TypeError("Hash mismatch");
      ie = oe;
    }
    if (B.input) {
      const oe = J();
      if (oe.length !== 2) throw new TypeError("Input is invalid");
      if (!bscript$6.isCanonicalScriptSignature(oe[0])) throw new TypeError("Input has invalid signature");
      if (!(0, types_1$4.isPoint)(oe[1])) throw new TypeError("Input has invalid pubkey");
      if (B.signature && !B.signature.equals(oe[0])) throw new TypeError("Signature mismatch");
      if (B.pubkey && !B.pubkey.equals(oe[1])) throw new TypeError("Pubkey mismatch");
      const pe = bcrypto$5.hash160(oe[1]);
      if (ie.length > 0 && !ie.equals(pe)) throw new TypeError("Hash mismatch");
    }
  }
  return Object.assign(ne, B);
}
p2pkh$1.p2pkh = p2pkh;
var p2sh$1 = {};
Object.defineProperty(p2sh$1, "__esModule", { value: !0 }), p2sh$1.p2sh = void 0;
const bcrypto$4 = crypto$6, networks_1$3 = networks$2, bscript$5 = requireScript(), types_1$3 = types$7, lazy$2 = lazy$7, bs58check$3 = bs58check$5, OPS$2 = bscript$5.OPS;
function p2sh(B, L) {
  if (!(B.address || B.hash || B.output || B.redeem || B.input)) throw new TypeError("Not enough data");
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$3.typeforce)({ network: types_1$3.typeforce.maybe(types_1$3.typeforce.Object), address: types_1$3.typeforce.maybe(types_1$3.typeforce.String), hash: types_1$3.typeforce.maybe(types_1$3.typeforce.BufferN(20)), output: types_1$3.typeforce.maybe(types_1$3.typeforce.BufferN(23)), redeem: types_1$3.typeforce.maybe({ network: types_1$3.typeforce.maybe(types_1$3.typeforce.Object), output: types_1$3.typeforce.maybe(types_1$3.typeforce.Buffer), input: types_1$3.typeforce.maybe(types_1$3.typeforce.Buffer), witness: types_1$3.typeforce.maybe(types_1$3.typeforce.arrayOf(types_1$3.typeforce.Buffer)) }), input: types_1$3.typeforce.maybe(types_1$3.typeforce.Buffer), witness: types_1$3.typeforce.maybe(types_1$3.typeforce.arrayOf(types_1$3.typeforce.Buffer)) }, B);
  let V = B.network;
  V || (V = B.redeem && B.redeem.network || networks_1$3.bitcoin);
  const J = { network: V }, re = lazy$2.value(() => {
    const oe = Buffer$D.from(bs58check$3.decode(B.address));
    return { version: oe.readUInt8(0), hash: oe.slice(1) };
  }), ne = lazy$2.value(() => bscript$5.decompile(B.input)), ie = lazy$2.value(() => {
    const oe = ne(), pe = oe[oe.length - 1];
    return { network: V, output: pe === OPS$2.OP_FALSE ? Buffer$D.from([]) : pe, input: bscript$5.compile(oe.slice(0, -1)), witness: B.witness || [] };
  });
  if (lazy$2.prop(J, "address", () => {
    if (!J.hash) return;
    const oe = Buffer$D.allocUnsafe(21);
    return oe.writeUInt8(J.network.scriptHash, 0), J.hash.copy(oe, 1), bs58check$3.encode(oe);
  }), lazy$2.prop(J, "hash", () => B.output ? B.output.slice(2, 22) : B.address ? re().hash : J.redeem && J.redeem.output ? bcrypto$4.hash160(J.redeem.output) : void 0), lazy$2.prop(J, "output", () => {
    if (J.hash) return bscript$5.compile([OPS$2.OP_HASH160, J.hash, OPS$2.OP_EQUAL]);
  }), lazy$2.prop(J, "redeem", () => {
    if (B.input) return ie();
  }), lazy$2.prop(J, "input", () => {
    if (B.redeem && B.redeem.input && B.redeem.output) return bscript$5.compile([].concat(bscript$5.decompile(B.redeem.input), B.redeem.output));
  }), lazy$2.prop(J, "witness", () => J.redeem && J.redeem.witness ? J.redeem.witness : J.input ? [] : void 0), lazy$2.prop(J, "name", () => {
    const oe = ["p2sh"];
    return J.redeem !== void 0 && J.redeem.name !== void 0 && oe.push(J.redeem.name), oe.join("-");
  }), L.validate) {
    let oe = Buffer$D.from([]);
    if (B.address) {
      if (re().version !== V.scriptHash) throw new TypeError("Invalid version or Network mismatch");
      if (re().hash.length !== 20) throw new TypeError("Invalid address");
      oe = re().hash;
    }
    if (B.hash) {
      if (oe.length > 0 && !oe.equals(B.hash)) throw new TypeError("Hash mismatch");
      oe = B.hash;
    }
    if (B.output) {
      if (B.output.length !== 23 || B.output[0] !== OPS$2.OP_HASH160 || B.output[1] !== 20 || B.output[22] !== OPS$2.OP_EQUAL) throw new TypeError("Output is invalid");
      const ce = B.output.slice(2, 22);
      if (oe.length > 0 && !oe.equals(ce)) throw new TypeError("Hash mismatch");
      oe = ce;
    }
    const pe = (ce) => {
      if (ce.output) {
        const Oe = bscript$5.decompile(ce.output);
        if (!Oe || Oe.length < 1) throw new TypeError("Redeem.output too short");
        if (ce.output.byteLength > 520) throw new TypeError("Redeem.output unspendable if larger than 520 bytes");
        if (bscript$5.countNonPushOnlyOPs(Oe) > 201) throw new TypeError("Redeem.output unspendable with more than 201 non-push ops");
        const rt = bcrypto$4.hash160(ce.output);
        if (oe.length > 0 && !oe.equals(rt)) throw new TypeError("Hash mismatch");
        oe = rt;
      }
      if (ce.input) {
        const Oe = ce.input.length > 0, rt = ce.witness && ce.witness.length > 0;
        if (!Oe && !rt) throw new TypeError("Empty input");
        if (Oe && rt) throw new TypeError("Input and witness provided");
        if (Oe) {
          const ut = bscript$5.decompile(ce.input);
          if (!bscript$5.isPushOnly(ut)) throw new TypeError("Non push-only scriptSig");
        }
      }
    };
    if (B.input) {
      const ce = ne();
      if (!ce || ce.length < 1) throw new TypeError("Input too short");
      if (!Buffer$D.isBuffer(ie().output)) throw new TypeError("Input is invalid");
      pe(ie());
    }
    if (B.redeem) {
      if (B.redeem.network && B.redeem.network !== V) throw new TypeError("Network mismatch");
      if (B.input) {
        const ce = ie();
        if (B.redeem.output && !B.redeem.output.equals(ce.output)) throw new TypeError("Redeem.output mismatch");
        if (B.redeem.input && !B.redeem.input.equals(ce.input)) throw new TypeError("Redeem.input mismatch");
      }
      pe(B.redeem);
    }
    if (B.witness && B.redeem && B.redeem.witness && !(0, types_1$3.stacksEqual)(B.redeem.witness, B.witness)) throw new TypeError("Witness and redeem.witness mismatch");
  }
  return Object.assign(J, B);
}
p2sh$1.p2sh = p2sh;
var p2wpkh$1 = {}, dist$1 = {};
Object.defineProperty(dist$1, "__esModule", { value: !0 }), dist$1.bech32m = dist$1.bech32 = void 0;
const ALPHABET$1 = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", ALPHABET_MAP = {};
for (let B = 0; B < ALPHABET$1.length; B++) {
  const L = ALPHABET$1.charAt(B);
  ALPHABET_MAP[L] = B;
}
function polymodStep(B) {
  const L = B >> 25;
  return (33554431 & B) << 5 ^ 996825010 & -(1 & L) ^ 642813549 & -(L >> 1 & 1) ^ 513874426 & -(L >> 2 & 1) ^ 1027748829 & -(L >> 3 & 1) ^ 705979059 & -(L >> 4 & 1);
}
function prefixChk(B) {
  let L = 1;
  for (let V = 0; V < B.length; ++V) {
    const J = B.charCodeAt(V);
    if (J < 33 || J > 126) return "Invalid prefix (" + B + ")";
    L = polymodStep(L) ^ J >> 5;
  }
  L = polymodStep(L);
  for (let V = 0; V < B.length; ++V) {
    const J = B.charCodeAt(V);
    L = polymodStep(L) ^ 31 & J;
  }
  return L;
}
function convert$2(B, L, V, J) {
  let re = 0, ne = 0;
  const ie = (1 << V) - 1, oe = [];
  for (let pe = 0; pe < B.length; ++pe) for (re = re << L | B[pe], ne += L; ne >= V; ) ne -= V, oe.push(re >> ne & ie);
  if (J) ne > 0 && oe.push(re << V - ne & ie);
  else {
    if (ne >= L) return "Excess padding";
    if (re << V - ne & ie) return "Non-zero padding";
  }
  return oe;
}
function toWords(B) {
  return convert$2(B, 8, 5, !0);
}
function fromWordsUnsafe(B) {
  const L = convert$2(B, 5, 8, !1);
  if (Array.isArray(L)) return L;
}
function fromWords(B) {
  const L = convert$2(B, 5, 8, !1);
  if (Array.isArray(L)) return L;
  throw new Error(L);
}
function getLibraryFromEncoding(B) {
  let L;
  function V(J, re) {
    if (re = re || 90, J.length < 8) return J + " too short";
    if (J.length > re) return "Exceeds length limit";
    const ne = J.toLowerCase(), ie = J.toUpperCase();
    if (J !== ne && J !== ie) return "Mixed-case string " + J;
    const oe = (J = ne).lastIndexOf("1");
    if (oe === -1) return "No separator character for " + J;
    if (oe === 0) return "Missing prefix for " + J;
    const pe = J.slice(0, oe), ce = J.slice(oe + 1);
    if (ce.length < 6) return "Data too short";
    let Oe = prefixChk(pe);
    if (typeof Oe == "string") return Oe;
    const rt = [];
    for (let ut = 0; ut < ce.length; ++ut) {
      const dt = ce.charAt(ut), ht = ALPHABET_MAP[dt];
      if (ht === void 0) return "Unknown character " + dt;
      Oe = polymodStep(Oe) ^ ht, ut + 6 >= ce.length || rt.push(ht);
    }
    return Oe !== L ? "Invalid checksum for " + J : { prefix: pe, words: rt };
  }
  return L = B === "bech32" ? 1 : 734539939, { decodeUnsafe: function(J, re) {
    const ne = V(J, re);
    if (typeof ne == "object") return ne;
  }, decode: function(J, re) {
    const ne = V(J, re);
    if (typeof ne == "object") return ne;
    throw new Error(ne);
  }, encode: function(J, re, ne) {
    if (ne = ne || 90, J.length + 7 + re.length > ne) throw new TypeError("Exceeds length limit");
    let ie = prefixChk(J = J.toLowerCase());
    if (typeof ie == "string") throw new Error(ie);
    let oe = J + "1";
    for (let pe = 0; pe < re.length; ++pe) {
      const ce = re[pe];
      if (ce >> 5) throw new Error("Non 5-bit word");
      ie = polymodStep(ie) ^ ce, oe += ALPHABET$1.charAt(ce);
    }
    for (let pe = 0; pe < 6; ++pe) ie = polymodStep(ie);
    ie ^= L;
    for (let pe = 0; pe < 6; ++pe) {
      const ce = ie >> 5 * (5 - pe) & 31;
      oe += ALPHABET$1.charAt(ce);
    }
    return oe;
  }, toWords, fromWordsUnsafe, fromWords };
}
dist$1.bech32 = getLibraryFromEncoding("bech32"), dist$1.bech32m = getLibraryFromEncoding("bech32m"), Object.defineProperty(p2wpkh$1, "__esModule", { value: !0 }), p2wpkh$1.p2wpkh = void 0;
const bcrypto$3 = crypto$6, networks_1$2 = networks$2, bscript$4 = requireScript(), types_1$2 = types$7, lazy$1 = lazy$7, bech32_1$1 = dist$1, OPS$1 = bscript$4.OPS, EMPTY_BUFFER$2 = Buffer$D.alloc(0);
function p2wpkh(B, L) {
  if (!(B.address || B.hash || B.output || B.pubkey || B.witness)) throw new TypeError("Not enough data");
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$2.typeforce)({ address: types_1$2.typeforce.maybe(types_1$2.typeforce.String), hash: types_1$2.typeforce.maybe(types_1$2.typeforce.BufferN(20)), input: types_1$2.typeforce.maybe(types_1$2.typeforce.BufferN(0)), network: types_1$2.typeforce.maybe(types_1$2.typeforce.Object), output: types_1$2.typeforce.maybe(types_1$2.typeforce.BufferN(22)), pubkey: types_1$2.typeforce.maybe(types_1$2.isPoint), signature: types_1$2.typeforce.maybe(bscript$4.isCanonicalScriptSignature), witness: types_1$2.typeforce.maybe(types_1$2.typeforce.arrayOf(types_1$2.typeforce.Buffer)) }, B);
  const V = lazy$1.value(() => {
    const ne = bech32_1$1.bech32.decode(B.address), ie = ne.words.shift(), oe = bech32_1$1.bech32.fromWords(ne.words);
    return { version: ie, prefix: ne.prefix, data: Buffer$D.from(oe) };
  }), J = B.network || networks_1$2.bitcoin, re = { name: "p2wpkh", network: J };
  if (lazy$1.prop(re, "address", () => {
    if (!re.hash) return;
    const ne = bech32_1$1.bech32.toWords(re.hash);
    return ne.unshift(0), bech32_1$1.bech32.encode(J.bech32, ne);
  }), lazy$1.prop(re, "hash", () => B.output ? B.output.slice(2, 22) : B.address ? V().data : B.pubkey || re.pubkey ? bcrypto$3.hash160(B.pubkey || re.pubkey) : void 0), lazy$1.prop(re, "output", () => {
    if (re.hash) return bscript$4.compile([OPS$1.OP_0, re.hash]);
  }), lazy$1.prop(re, "pubkey", () => B.pubkey ? B.pubkey : B.witness ? B.witness[1] : void 0), lazy$1.prop(re, "signature", () => {
    if (B.witness) return B.witness[0];
  }), lazy$1.prop(re, "input", () => {
    if (re.witness) return EMPTY_BUFFER$2;
  }), lazy$1.prop(re, "witness", () => {
    if (B.pubkey && B.signature) return [B.signature, B.pubkey];
  }), L.validate) {
    let ne = Buffer$D.from([]);
    if (B.address) {
      if (J && J.bech32 !== V().prefix) throw new TypeError("Invalid prefix or Network mismatch");
      if (V().version !== 0) throw new TypeError("Invalid address version");
      if (V().data.length !== 20) throw new TypeError("Invalid address data");
      ne = V().data;
    }
    if (B.hash) {
      if (ne.length > 0 && !ne.equals(B.hash)) throw new TypeError("Hash mismatch");
      ne = B.hash;
    }
    if (B.output) {
      if (B.output.length !== 22 || B.output[0] !== OPS$1.OP_0 || B.output[1] !== 20) throw new TypeError("Output is invalid");
      if (ne.length > 0 && !ne.equals(B.output.slice(2))) throw new TypeError("Hash mismatch");
      ne = B.output.slice(2);
    }
    if (B.pubkey) {
      const ie = bcrypto$3.hash160(B.pubkey);
      if (ne.length > 0 && !ne.equals(ie)) throw new TypeError("Hash mismatch");
      if (ne = ie, !(0, types_1$2.isPoint)(B.pubkey) || B.pubkey.length !== 33) throw new TypeError("Invalid pubkey for p2wpkh");
    }
    if (B.witness) {
      if (B.witness.length !== 2) throw new TypeError("Witness is invalid");
      if (!bscript$4.isCanonicalScriptSignature(B.witness[0])) throw new TypeError("Witness has invalid signature");
      if (!(0, types_1$2.isPoint)(B.witness[1]) || B.witness[1].length !== 33) throw new TypeError("Witness has invalid pubkey");
      if (B.signature && !B.signature.equals(B.witness[0])) throw new TypeError("Signature mismatch");
      if (B.pubkey && !B.pubkey.equals(B.witness[1])) throw new TypeError("Pubkey mismatch");
      const ie = bcrypto$3.hash160(B.witness[1]);
      if (ne.length > 0 && !ne.equals(ie)) throw new TypeError("Hash mismatch");
    }
  }
  return Object.assign(re, B);
}
p2wpkh$1.p2wpkh = p2wpkh;
var p2wsh$1 = {};
Object.defineProperty(p2wsh$1, "__esModule", { value: !0 }), p2wsh$1.p2wsh = void 0;
const bcrypto$2 = crypto$6, networks_1$1 = networks$2, bscript$3 = requireScript(), types_1$1 = types$7, lazy = lazy$7, bech32_1 = dist$1, OPS = bscript$3.OPS, EMPTY_BUFFER$1 = Buffer$D.alloc(0);
function chunkHasUncompressedPubkey(B) {
  return !(!Buffer$D.isBuffer(B) || B.length !== 65 || B[0] !== 4 || !(0, types_1$1.isPoint)(B));
}
function p2wsh(B, L) {
  if (!(B.address || B.hash || B.output || B.redeem || B.witness)) throw new TypeError("Not enough data");
  L = Object.assign({ validate: !0 }, L || {}), (0, types_1$1.typeforce)({ network: types_1$1.typeforce.maybe(types_1$1.typeforce.Object), address: types_1$1.typeforce.maybe(types_1$1.typeforce.String), hash: types_1$1.typeforce.maybe(types_1$1.typeforce.BufferN(32)), output: types_1$1.typeforce.maybe(types_1$1.typeforce.BufferN(34)), redeem: types_1$1.typeforce.maybe({ input: types_1$1.typeforce.maybe(types_1$1.typeforce.Buffer), network: types_1$1.typeforce.maybe(types_1$1.typeforce.Object), output: types_1$1.typeforce.maybe(types_1$1.typeforce.Buffer), witness: types_1$1.typeforce.maybe(types_1$1.typeforce.arrayOf(types_1$1.typeforce.Buffer)) }), input: types_1$1.typeforce.maybe(types_1$1.typeforce.BufferN(0)), witness: types_1$1.typeforce.maybe(types_1$1.typeforce.arrayOf(types_1$1.typeforce.Buffer)) }, B);
  const V = lazy.value(() => {
    const ie = bech32_1.bech32.decode(B.address), oe = ie.words.shift(), pe = bech32_1.bech32.fromWords(ie.words);
    return { version: oe, prefix: ie.prefix, data: Buffer$D.from(pe) };
  }), J = lazy.value(() => bscript$3.decompile(B.redeem.input));
  let re = B.network;
  re || (re = B.redeem && B.redeem.network || networks_1$1.bitcoin);
  const ne = { network: re };
  if (lazy.prop(ne, "address", () => {
    if (!ne.hash) return;
    const ie = bech32_1.bech32.toWords(ne.hash);
    return ie.unshift(0), bech32_1.bech32.encode(re.bech32, ie);
  }), lazy.prop(ne, "hash", () => B.output ? B.output.slice(2) : B.address ? V().data : ne.redeem && ne.redeem.output ? bcrypto$2.sha256(ne.redeem.output) : void 0), lazy.prop(ne, "output", () => {
    if (ne.hash) return bscript$3.compile([OPS.OP_0, ne.hash]);
  }), lazy.prop(ne, "redeem", () => {
    if (B.witness) return { output: B.witness[B.witness.length - 1], input: EMPTY_BUFFER$1, witness: B.witness.slice(0, -1) };
  }), lazy.prop(ne, "input", () => {
    if (ne.witness) return EMPTY_BUFFER$1;
  }), lazy.prop(ne, "witness", () => {
    if (B.redeem && B.redeem.input && B.redeem.input.length > 0 && B.redeem.output && B.redeem.output.length > 0) {
      const ie = bscript$3.toStack(J());
      return ne.redeem = Object.assign({ witness: ie }, B.redeem), ne.redeem.input = EMPTY_BUFFER$1, [].concat(ie, B.redeem.output);
    }
    if (B.redeem && B.redeem.output && B.redeem.witness) return [].concat(B.redeem.witness, B.redeem.output);
  }), lazy.prop(ne, "name", () => {
    const ie = ["p2wsh"];
    return ne.redeem !== void 0 && ne.redeem.name !== void 0 && ie.push(ne.redeem.name), ie.join("-");
  }), L.validate) {
    let ie = Buffer$D.from([]);
    if (B.address) {
      if (V().prefix !== re.bech32) throw new TypeError("Invalid prefix or Network mismatch");
      if (V().version !== 0) throw new TypeError("Invalid address version");
      if (V().data.length !== 32) throw new TypeError("Invalid address data");
      ie = V().data;
    }
    if (B.hash) {
      if (ie.length > 0 && !ie.equals(B.hash)) throw new TypeError("Hash mismatch");
      ie = B.hash;
    }
    if (B.output) {
      if (B.output.length !== 34 || B.output[0] !== OPS.OP_0 || B.output[1] !== 32) throw new TypeError("Output is invalid");
      const oe = B.output.slice(2);
      if (ie.length > 0 && !ie.equals(oe)) throw new TypeError("Hash mismatch");
      ie = oe;
    }
    if (B.redeem) {
      if (B.redeem.network && B.redeem.network !== re) throw new TypeError("Network mismatch");
      if (B.redeem.input && B.redeem.input.length > 0 && B.redeem.witness && B.redeem.witness.length > 0) throw new TypeError("Ambiguous witness source");
      if (B.redeem.output) {
        const oe = bscript$3.decompile(B.redeem.output);
        if (!oe || oe.length < 1) throw new TypeError("Redeem.output is invalid");
        if (B.redeem.output.byteLength > 3600) throw new TypeError("Redeem.output unspendable if larger than 3600 bytes");
        if (bscript$3.countNonPushOnlyOPs(oe) > 201) throw new TypeError("Redeem.output unspendable with more than 201 non-push ops");
        const pe = bcrypto$2.sha256(B.redeem.output);
        if (ie.length > 0 && !ie.equals(pe)) throw new TypeError("Hash mismatch");
        ie = pe;
      }
      if (B.redeem.input && !bscript$3.isPushOnly(J())) throw new TypeError("Non push-only scriptSig");
      if (B.witness && B.redeem.witness && !(0, types_1$1.stacksEqual)(B.witness, B.redeem.witness)) throw new TypeError("Witness and redeem.witness mismatch");
      if (B.redeem.input && J().some(chunkHasUncompressedPubkey) || B.redeem.output && (bscript$3.decompile(B.redeem.output) || []).some(chunkHasUncompressedPubkey)) throw new TypeError("redeem.input or redeem.output contains uncompressed pubkey");
    }
    if (B.witness && B.witness.length > 0) {
      const oe = B.witness[B.witness.length - 1];
      if (B.redeem && B.redeem.output && !B.redeem.output.equals(oe)) throw new TypeError("Witness and redeem.output mismatch");
      if (B.witness.some(chunkHasUncompressedPubkey) || (bscript$3.decompile(oe) || []).some(chunkHasUncompressedPubkey)) throw new TypeError("Witness contains uncompressed pubkey");
    }
  }
  return Object.assign(ne, B);
}
p2wsh$1.p2wsh = p2wsh;
var p2tr = {}, ecc_lib = {};
Object.defineProperty(ecc_lib, "__esModule", { value: !0 }), ecc_lib.getEccLib = ecc_lib.initEccLib = void 0;
const _ECCLIB_CACHE = {};
function initEccLib(B) {
  B ? B !== _ECCLIB_CACHE.eccLib && (verifyEcc(B), _ECCLIB_CACHE.eccLib = B) : _ECCLIB_CACHE.eccLib = B;
}
function getEccLib() {
  if (!_ECCLIB_CACHE.eccLib) throw new Error("No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance");
  return _ECCLIB_CACHE.eccLib;
}
ecc_lib.initEccLib = initEccLib, ecc_lib.getEccLib = getEccLib;
const h$3 = (B) => Buffer$D.from(B, "hex");
function verifyEcc(B) {
  assert$l(typeof B.isXOnlyPoint == "function"), assert$l(B.isXOnlyPoint(h$3("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert$l(B.isXOnlyPoint(h$3("fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e"))), assert$l(B.isXOnlyPoint(h$3("f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9"))), assert$l(B.isXOnlyPoint(h$3("0000000000000000000000000000000000000000000000000000000000000001"))), assert$l(!B.isXOnlyPoint(h$3("0000000000000000000000000000000000000000000000000000000000000000"))), assert$l(!B.isXOnlyPoint(h$3("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"))), assert$l(typeof B.xOnlyPointAddTweak == "function"), tweakAddVectors.forEach((L) => {
    const V = B.xOnlyPointAddTweak(h$3(L.pubkey), h$3(L.tweak));
    L.result === null ? assert$l(V === null) : (assert$l(V !== null), assert$l(V.parity === L.parity), assert$l(Buffer$D.from(V.xOnlyPubkey).equals(h$3(L.result))));
  });
}
function assert$l(B) {
  if (!B) throw new Error("ecc library invalid");
}
const tweakAddVectors = [{ pubkey: "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", tweak: "fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140", parity: -1, result: null }, { pubkey: "1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b", tweak: "a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac", parity: 1, result: "e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf" }, { pubkey: "2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991", tweak: "823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47", parity: 0, result: "9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c" }];
var bip341 = {}, bufferutils = {}, safeBuffer$2 = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(B, L) {
  var V = require$$1$2, J = V.Buffer;
  function re(ie, oe) {
    for (var pe in ie) oe[pe] = ie[pe];
  }
  function ne(ie, oe, pe) {
    return J(ie, oe, pe);
  }
  J.from && J.alloc && J.allocUnsafe && J.allocUnsafeSlow ? B.exports = V : (re(V, L), L.Buffer = ne), ne.prototype = Object.create(J.prototype), re(J, ne), ne.from = function(ie, oe, pe) {
    if (typeof ie == "number") throw new TypeError("Argument must not be a number");
    return J(ie, oe, pe);
  }, ne.alloc = function(ie, oe, pe) {
    if (typeof ie != "number") throw new TypeError("Argument must be a number");
    var ce = J(ie);
    return oe !== void 0 ? typeof pe == "string" ? ce.fill(oe, pe) : ce.fill(oe) : ce.fill(0), ce;
  }, ne.allocUnsafe = function(ie) {
    if (typeof ie != "number") throw new TypeError("Argument must be a number");
    return J(ie);
  }, ne.allocUnsafeSlow = function(ie) {
    if (typeof ie != "number") throw new TypeError("Argument must be a number");
    return V.SlowBuffer(ie);
  };
})(safeBuffer$2, safeBuffer$2.exports);
var safeBufferExports$1 = safeBuffer$2.exports, Buffer$C = safeBufferExports$1.Buffer, MAX_SAFE_INTEGER$2 = 9007199254740991;
function checkUInt53$1(B) {
  if (B < 0 || B > MAX_SAFE_INTEGER$2 || B % 1 != 0) throw new RangeError("value out of range");
}
function encode$h(B, L, V) {
  if (checkUInt53$1(B), L || (L = Buffer$C.allocUnsafe(encodingLength$1(B))), !Buffer$C.isBuffer(L)) throw new TypeError("buffer must be a Buffer instance");
  return V || (V = 0), B < 253 ? (L.writeUInt8(B, V), encode$h.bytes = 1) : B <= 65535 ? (L.writeUInt8(253, V), L.writeUInt16LE(B, V + 1), encode$h.bytes = 3) : B <= 4294967295 ? (L.writeUInt8(254, V), L.writeUInt32LE(B, V + 1), encode$h.bytes = 5) : (L.writeUInt8(255, V), L.writeUInt32LE(B >>> 0, V + 1), L.writeUInt32LE(B / 4294967296 | 0, V + 5), encode$h.bytes = 9), L;
}
function decode$h(B, L) {
  if (!Buffer$C.isBuffer(B)) throw new TypeError("buffer must be a Buffer instance");
  L || (L = 0);
  var V = B.readUInt8(L);
  if (V < 253) return decode$h.bytes = 1, V;
  if (V === 253) return decode$h.bytes = 3, B.readUInt16LE(L + 1);
  if (V === 254) return decode$h.bytes = 5, B.readUInt32LE(L + 1);
  decode$h.bytes = 9;
  var J = B.readUInt32LE(L + 1), re = 4294967296 * B.readUInt32LE(L + 5) + J;
  return checkUInt53$1(re), re;
}
function encodingLength$1(B) {
  return checkUInt53$1(B), B < 253 ? 1 : B <= 65535 ? 3 : B <= 4294967295 ? 5 : 9;
}
var varuintBitcoin = { encode: encode$h, decode: decode$h, encodingLength: encodingLength$1 };
Object.defineProperty(bufferutils, "__esModule", { value: !0 }), bufferutils.BufferReader = bufferutils.BufferWriter = bufferutils.cloneBuffer = bufferutils.reverseBuffer = bufferutils.writeUInt64LE = bufferutils.readUInt64LE = bufferutils.varuint = void 0;
const types$5 = types$7, { typeforce: typeforce$3 } = types$5, varuint$7 = varuintBitcoin;
function verifuint$1(B, L) {
  if (typeof B != "number") throw new Error("cannot write a non-number as a number");
  if (B < 0) throw new Error("specified a negative value for writing an unsigned value");
  if (B > L) throw new Error("RangeError: value out of range");
  if (Math.floor(B) !== B) throw new Error("value has a fractional component");
}
function readUInt64LE$1(B, L) {
  const V = B.readUInt32LE(L);
  let J = B.readUInt32LE(L + 4);
  return J *= 4294967296, verifuint$1(J + V, 9007199254740991), J + V;
}
function writeUInt64LE$1(B, L, V) {
  return verifuint$1(L, 9007199254740991), B.writeInt32LE(-1 & L, V), B.writeUInt32LE(Math.floor(L / 4294967296), V + 4), V + 8;
}
function reverseBuffer$2(B) {
  if (B.length < 1) return B;
  let L = B.length - 1, V = 0;
  for (let J = 0; J < B.length / 2; J++) V = B[J], B[J] = B[L], B[L] = V, L--;
  return B;
}
function cloneBuffer(B) {
  const L = Buffer$D.allocUnsafe(B.length);
  return B.copy(L), L;
}
bufferutils.varuint = varuint$7, bufferutils.readUInt64LE = readUInt64LE$1, bufferutils.writeUInt64LE = writeUInt64LE$1, bufferutils.reverseBuffer = reverseBuffer$2, bufferutils.cloneBuffer = cloneBuffer;
class BufferWriter {
  static withCapacity(L) {
    return new BufferWriter(Buffer$D.alloc(L));
  }
  constructor(L, V = 0) {
    this.buffer = L, this.offset = V, typeforce$3(types$5.tuple(types$5.Buffer, types$5.UInt32), [L, V]);
  }
  writeUInt8(L) {
    this.offset = this.buffer.writeUInt8(L, this.offset);
  }
  writeInt32(L) {
    this.offset = this.buffer.writeInt32LE(L, this.offset);
  }
  writeUInt32(L) {
    this.offset = this.buffer.writeUInt32LE(L, this.offset);
  }
  writeUInt64(L) {
    this.offset = writeUInt64LE$1(this.buffer, L, this.offset);
  }
  writeVarInt(L) {
    varuint$7.encode(L, this.buffer, this.offset), this.offset += varuint$7.encode.bytes;
  }
  writeSlice(L) {
    if (this.buffer.length < this.offset + L.length) throw new Error("Cannot write slice out of bounds");
    this.offset += L.copy(this.buffer, this.offset);
  }
  writeVarSlice(L) {
    this.writeVarInt(L.length), this.writeSlice(L);
  }
  writeVector(L) {
    this.writeVarInt(L.length), L.forEach((V) => this.writeVarSlice(V));
  }
  end() {
    if (this.buffer.length === this.offset) return this.buffer;
    throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);
  }
}
bufferutils.BufferWriter = BufferWriter;
class BufferReader {
  constructor(L, V = 0) {
    this.buffer = L, this.offset = V, typeforce$3(types$5.tuple(types$5.Buffer, types$5.UInt32), [L, V]);
  }
  readUInt8() {
    const L = this.buffer.readUInt8(this.offset);
    return this.offset++, L;
  }
  readInt32() {
    const L = this.buffer.readInt32LE(this.offset);
    return this.offset += 4, L;
  }
  readUInt32() {
    const L = this.buffer.readUInt32LE(this.offset);
    return this.offset += 4, L;
  }
  readUInt64() {
    const L = readUInt64LE$1(this.buffer, this.offset);
    return this.offset += 8, L;
  }
  readVarInt() {
    const L = varuint$7.decode(this.buffer, this.offset);
    return this.offset += varuint$7.decode.bytes, L;
  }
  readSlice(L) {
    if (this.buffer.length < this.offset + L) throw new Error("Cannot read slice out of bounds");
    const V = this.buffer.slice(this.offset, this.offset + L);
    return this.offset += L, V;
  }
  readVarSlice() {
    return this.readSlice(this.readVarInt());
  }
  readVector() {
    const L = this.readVarInt(), V = [];
    for (let J = 0; J < L; J++) V.push(this.readVarSlice());
    return V;
  }
}
var hasRequiredP2tr, hasRequiredPayments, hasRequiredAddress;
function requireP2tr() {
  if (hasRequiredP2tr) return p2tr;
  hasRequiredP2tr = 1, Object.defineProperty(p2tr, "__esModule", { value: !0 }), p2tr.p2tr = void 0;
  const B = require$$1$2, L = networks$2, V = requireScript(), J = types$7, re = ecc_lib, ne = bip341, ie = lazy$7, oe = dist$1, pe = requireAddress(), ce = V.OPS;
  return p2tr.p2tr = function(Oe, rt) {
    if (!(Oe.address || Oe.output || Oe.pubkey || Oe.internalPubkey || Oe.witness && Oe.witness.length > 1)) throw new TypeError("Not enough data");
    rt = Object.assign({ validate: !0 }, rt || {}), (0, J.typeforce)({ address: J.typeforce.maybe(J.typeforce.String), input: J.typeforce.maybe(J.typeforce.BufferN(0)), network: J.typeforce.maybe(J.typeforce.Object), output: J.typeforce.maybe(J.typeforce.BufferN(34)), internalPubkey: J.typeforce.maybe(J.typeforce.BufferN(32)), hash: J.typeforce.maybe(J.typeforce.BufferN(32)), pubkey: J.typeforce.maybe(J.typeforce.BufferN(32)), signature: J.typeforce.maybe(J.typeforce.anyOf(J.typeforce.BufferN(64), J.typeforce.BufferN(65))), witness: J.typeforce.maybe(J.typeforce.arrayOf(J.typeforce.Buffer)), scriptTree: J.typeforce.maybe(J.isTaptree), redeem: J.typeforce.maybe({ output: J.typeforce.maybe(J.typeforce.Buffer), redeemVersion: J.typeforce.maybe(J.typeforce.Number), witness: J.typeforce.maybe(J.typeforce.arrayOf(J.typeforce.Buffer)) }), redeemVersion: J.typeforce.maybe(J.typeforce.Number) }, Oe);
    const ut = ie.value(() => (0, pe.fromBech32)(Oe.address)), dt = ie.value(() => {
      if (Oe.witness && Oe.witness.length) return Oe.witness.length >= 2 && Oe.witness[Oe.witness.length - 1][0] === 80 ? Oe.witness.slice(0, -1) : Oe.witness.slice();
    }), ht = ie.value(() => Oe.scriptTree ? (0, ne.toHashTree)(Oe.scriptTree) : Oe.hash ? { hash: Oe.hash } : void 0), bt = Oe.network || L.bitcoin, Tt = { name: "p2tr", network: bt };
    if (ie.prop(Tt, "address", () => {
      if (!Tt.pubkey) return;
      const wt = oe.bech32m.toWords(Tt.pubkey);
      return wt.unshift(1), oe.bech32m.encode(bt.bech32, wt);
    }), ie.prop(Tt, "hash", () => {
      const wt = ht();
      if (wt) return wt.hash;
      const Et = dt();
      if (Et && Et.length > 1) {
        const Rt = Et[Et.length - 1], Bt = Rt[0] & J.TAPLEAF_VERSION_MASK, Pt = Et[Et.length - 2], Dt = (0, ne.tapleafHash)({ output: Pt, version: Bt });
        return (0, ne.rootHashFromPath)(Rt, Dt);
      }
      return null;
    }), ie.prop(Tt, "output", () => {
      if (Tt.pubkey) return V.compile([ce.OP_1, Tt.pubkey]);
    }), ie.prop(Tt, "redeemVersion", () => Oe.redeemVersion ? Oe.redeemVersion : Oe.redeem && Oe.redeem.redeemVersion !== void 0 && Oe.redeem.redeemVersion !== null ? Oe.redeem.redeemVersion : ne.LEAF_VERSION_TAPSCRIPT), ie.prop(Tt, "redeem", () => {
      const wt = dt();
      if (wt && !(wt.length < 2)) return { output: wt[wt.length - 2], witness: wt.slice(0, -2), redeemVersion: wt[wt.length - 1][0] & J.TAPLEAF_VERSION_MASK };
    }), ie.prop(Tt, "pubkey", () => {
      if (Oe.pubkey) return Oe.pubkey;
      if (Oe.output) return Oe.output.slice(2);
      if (Oe.address) return ut().data;
      if (Tt.internalPubkey) {
        const wt = (0, ne.tweakKey)(Tt.internalPubkey, Tt.hash);
        if (wt) return wt.x;
      }
    }), ie.prop(Tt, "internalPubkey", () => {
      if (Oe.internalPubkey) return Oe.internalPubkey;
      const wt = dt();
      return wt && wt.length > 1 ? wt[wt.length - 1].slice(1, 33) : void 0;
    }), ie.prop(Tt, "signature", () => {
      if (Oe.signature) return Oe.signature;
      const wt = dt();
      return wt && wt.length === 1 ? wt[0] : void 0;
    }), ie.prop(Tt, "witness", () => {
      if (Oe.witness) return Oe.witness;
      const wt = ht();
      if (wt && Oe.redeem && Oe.redeem.output && Oe.internalPubkey) {
        const Et = (0, ne.tapleafHash)({ output: Oe.redeem.output, version: Tt.redeemVersion }), Rt = (0, ne.findScriptPath)(wt, Et);
        if (!Rt) return;
        const Bt = (0, ne.tweakKey)(Oe.internalPubkey, wt.hash);
        if (!Bt) return;
        const Pt = B.Buffer.concat([B.Buffer.from([Tt.redeemVersion | Bt.parity]), Oe.internalPubkey].concat(Rt));
        return [Oe.redeem.output, Pt];
      }
      return Oe.signature ? [Oe.signature] : void 0;
    }), rt.validate) {
      let wt = B.Buffer.from([]);
      if (Oe.address) {
        if (bt && bt.bech32 !== ut().prefix) throw new TypeError("Invalid prefix or Network mismatch");
        if (ut().version !== 1) throw new TypeError("Invalid address version");
        if (ut().data.length !== 32) throw new TypeError("Invalid address data");
        wt = ut().data;
      }
      if (Oe.pubkey) {
        if (wt.length > 0 && !wt.equals(Oe.pubkey)) throw new TypeError("Pubkey mismatch");
        wt = Oe.pubkey;
      }
      if (Oe.output) {
        if (Oe.output.length !== 34 || Oe.output[0] !== ce.OP_1 || Oe.output[1] !== 32) throw new TypeError("Output is invalid");
        if (wt.length > 0 && !wt.equals(Oe.output.slice(2))) throw new TypeError("Pubkey mismatch");
        wt = Oe.output.slice(2);
      }
      if (Oe.internalPubkey) {
        const Bt = (0, ne.tweakKey)(Oe.internalPubkey, Tt.hash);
        if (wt.length > 0 && !wt.equals(Bt.x)) throw new TypeError("Pubkey mismatch");
        wt = Bt.x;
      }
      if (wt && wt.length && !(0, re.getEccLib)().isXOnlyPoint(wt)) throw new TypeError("Invalid pubkey for p2tr");
      const Et = ht();
      if (Oe.hash && Et && !Oe.hash.equals(Et.hash)) throw new TypeError("Hash mismatch");
      if (Oe.redeem && Oe.redeem.output && Et) {
        const Bt = (0, ne.tapleafHash)({ output: Oe.redeem.output, version: Tt.redeemVersion });
        if (!(0, ne.findScriptPath)(Et, Bt)) throw new TypeError("Redeem script not in tree");
      }
      const Rt = dt();
      if (Oe.redeem && Tt.redeem) {
        if (Oe.redeem.redeemVersion && Oe.redeem.redeemVersion !== Tt.redeem.redeemVersion) throw new TypeError("Redeem.redeemVersion and witness mismatch");
        if (Oe.redeem.output) {
          if (V.decompile(Oe.redeem.output).length === 0) throw new TypeError("Redeem.output is invalid");
          if (Tt.redeem.output && !Oe.redeem.output.equals(Tt.redeem.output)) throw new TypeError("Redeem.output and witness mismatch");
        }
        if (Oe.redeem.witness && Tt.redeem.witness && !(0, J.stacksEqual)(Oe.redeem.witness, Tt.redeem.witness)) throw new TypeError("Redeem.witness and witness mismatch");
      }
      if (Rt && Rt.length) if (Rt.length === 1) {
        if (Oe.signature && !Oe.signature.equals(Rt[0])) throw new TypeError("Signature mismatch");
      } else {
        const Bt = Rt[Rt.length - 1];
        if (Bt.length < 33) throw new TypeError(`The control-block length is too small. Got ${Bt.length}, expected min 33.`);
        if ((Bt.length - 33) % 32 != 0) throw new TypeError(`The control-block length of ${Bt.length} is incorrect!`);
        const Pt = (Bt.length - 33) / 32;
        if (Pt > 128) throw new TypeError(`The script path is too long. Got ${Pt}, expected max 128.`);
        const Dt = Bt.slice(1, 33);
        if (Oe.internalPubkey && !Oe.internalPubkey.equals(Dt)) throw new TypeError("Internal pubkey mismatch");
        if (!(0, re.getEccLib)().isXOnlyPoint(Dt)) throw new TypeError("Invalid internalPubkey for p2tr witness");
        const Gt = Bt[0] & J.TAPLEAF_VERSION_MASK, at = Rt[Rt.length - 2], lt = (0, ne.tapleafHash)({ output: at, version: Gt }), Ce = (0, ne.rootHashFromPath)(Bt, lt), st = (0, ne.tweakKey)(Dt, Ce);
        if (!st) throw new TypeError("Invalid outputKey for p2tr witness");
        if (wt.length && !wt.equals(st.x)) throw new TypeError("Pubkey mismatch for p2tr witness");
        if (st.parity !== (1 & Bt[0])) throw new Error("Incorrect parity");
      }
    }
    return Object.assign(Tt, Oe);
  }, p2tr;
}
function requirePayments() {
  return hasRequiredPayments || (hasRequiredPayments = 1, function(B) {
    Object.defineProperty(B, "__esModule", { value: !0 }), B.p2tr = B.p2wsh = B.p2wpkh = B.p2sh = B.p2pkh = B.p2pk = B.p2ms = B.embed = void 0;
    const L = embed;
    Object.defineProperty(B, "embed", { enumerable: !0, get: function() {
      return L.p2data;
    } });
    const V = p2ms$1;
    Object.defineProperty(B, "p2ms", { enumerable: !0, get: function() {
      return V.p2ms;
    } });
    const J = p2pk$1;
    Object.defineProperty(B, "p2pk", { enumerable: !0, get: function() {
      return J.p2pk;
    } });
    const re = p2pkh$1;
    Object.defineProperty(B, "p2pkh", { enumerable: !0, get: function() {
      return re.p2pkh;
    } });
    const ne = p2sh$1;
    Object.defineProperty(B, "p2sh", { enumerable: !0, get: function() {
      return ne.p2sh;
    } });
    const ie = p2wpkh$1;
    Object.defineProperty(B, "p2wpkh", { enumerable: !0, get: function() {
      return ie.p2wpkh;
    } });
    const oe = p2wsh$1;
    Object.defineProperty(B, "p2wsh", { enumerable: !0, get: function() {
      return oe.p2wsh;
    } });
    const pe = requireP2tr();
    Object.defineProperty(B, "p2tr", { enumerable: !0, get: function() {
      return pe.p2tr;
    } });
  }(payments$2)), payments$2;
}
function requireAddress() {
  if (hasRequiredAddress) return address;
  hasRequiredAddress = 1, Object.defineProperty(address, "__esModule", { value: !0 }), address.toOutputScript = address.fromOutputScript = address.toBech32 = address.toBase58Check = address.fromBech32 = address.fromBase58Check = void 0;
  const B = networks$2, L = requirePayments(), V = requireScript(), J = types$7, re = dist$1, ne = bs58check$5, ie = 40, oe = 2, pe = 16, ce = 2, Oe = 80, rt = "WARNING: Sending to a future segwit version address can lead to loss of funds. End users MUST be warned carefully in the GUI and asked if they wish to proceed with caution. Wallets should verify the segwit version from the output of fromBech32, then decide when it is safe to use which version of segwit.";
  function ut(bt) {
    const Tt = Buffer$D.from(ne.decode(bt));
    if (Tt.length < 21) throw new TypeError(bt + " is too short");
    if (Tt.length > 21) throw new TypeError(bt + " is too long");
    return { version: Tt.readUInt8(0), hash: Tt.slice(1) };
  }
  function dt(bt) {
    let Tt, wt;
    try {
      Tt = re.bech32.decode(bt);
    } catch {
    }
    if (Tt) {
      if (wt = Tt.words[0], wt !== 0) throw new TypeError(bt + " uses wrong encoding");
    } else if (Tt = re.bech32m.decode(bt), wt = Tt.words[0], wt === 0) throw new TypeError(bt + " uses wrong encoding");
    const Et = re.bech32.fromWords(Tt.words.slice(1));
    return { version: wt, prefix: Tt.prefix, data: Buffer$D.from(Et) };
  }
  function ht(bt, Tt, wt) {
    const Et = re.bech32.toWords(bt);
    return Et.unshift(Tt), Tt === 0 ? re.bech32.encode(wt, Et) : re.bech32m.encode(wt, Et);
  }
  return address.fromBase58Check = ut, address.fromBech32 = dt, address.toBase58Check = function(bt, Tt) {
    (0, J.typeforce)((0, J.tuple)(J.Hash160bit, J.UInt8), arguments);
    const wt = Buffer$D.allocUnsafe(21);
    return wt.writeUInt8(Tt, 0), bt.copy(wt, 1), ne.encode(wt);
  }, address.toBech32 = ht, address.fromOutputScript = function(bt, Tt) {
    Tt = Tt || B.bitcoin;
    try {
      return L.p2pkh({ output: bt, network: Tt }).address;
    } catch {
    }
    try {
      return L.p2sh({ output: bt, network: Tt }).address;
    } catch {
    }
    try {
      return L.p2wpkh({ output: bt, network: Tt }).address;
    } catch {
    }
    try {
      return L.p2wsh({ output: bt, network: Tt }).address;
    } catch {
    }
    try {
      return L.p2tr({ output: bt, network: Tt }).address;
    } catch {
    }
    try {
      return function(wt, Et) {
        const Rt = wt.slice(2);
        if (Rt.length < oe || Rt.length > ie) throw new TypeError("Invalid program length for segwit address");
        const Bt = wt[0] - Oe;
        if (Bt < ce || Bt > pe) throw new TypeError("Invalid version for segwit address");
        if (wt[1] !== Rt.length) throw new TypeError("Invalid script for segwit address");
        return console.warn(rt), ht(Rt, Bt, Et.bech32);
      }(bt, Tt);
    } catch {
    }
    throw new Error(V.toASM(bt) + " has no matching Address");
  }, address.toOutputScript = function(bt, Tt) {
    let wt, Et;
    Tt = Tt || B.bitcoin;
    try {
      wt = ut(bt);
    } catch {
    }
    if (wt) {
      if (wt.version === Tt.pubKeyHash) return L.p2pkh({ hash: wt.hash }).output;
      if (wt.version === Tt.scriptHash) return L.p2sh({ hash: wt.hash }).output;
    } else {
      try {
        Et = dt(bt);
      } catch {
      }
      if (Et) {
        if (Et.prefix !== Tt.bech32) throw new Error(bt + " has an invalid prefix");
        if (Et.version === 0) {
          if (Et.data.length === 20) return L.p2wpkh({ hash: Et.data }).output;
          if (Et.data.length === 32) return L.p2wsh({ hash: Et.data }).output;
        } else if (Et.version === 1) {
          if (Et.data.length === 32) return L.p2tr({ pubkey: Et.data }).output;
        } else if (Et.version >= ce && Et.version <= pe && Et.data.length >= oe && Et.data.length <= ie) return console.warn(rt), V.compile([Et.version + Oe, Et.data]);
      }
    }
    throw new Error(bt + " has no matching Script");
  }, address;
}
bufferutils.BufferReader = BufferReader, function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.tweakKey = B.tapTweakHash = B.tapleafHash = B.findScriptPath = B.toHashTree = B.rootHashFromPath = B.MAX_TAPTREE_DEPTH = B.LEAF_VERSION_TAPSCRIPT = void 0;
  const L = require$$1$2, V = ecc_lib, J = crypto$6, re = bufferutils, ne = types$7;
  B.LEAF_VERSION_TAPSCRIPT = 192, B.MAX_TAPTREE_DEPTH = 128;
  function ie(Oe) {
    const rt = Oe.version || B.LEAF_VERSION_TAPSCRIPT;
    return J.taggedHash("TapLeaf", L.Buffer.concat([L.Buffer.from([rt]), ce(Oe.output)]));
  }
  function oe(Oe, rt) {
    return J.taggedHash("TapTweak", L.Buffer.concat(rt ? [Oe, rt] : [Oe]));
  }
  function pe(Oe, rt) {
    return J.taggedHash("TapBranch", L.Buffer.concat([Oe, rt]));
  }
  function ce(Oe) {
    const rt = re.varuint.encodingLength(Oe.length), ut = L.Buffer.allocUnsafe(rt);
    return re.varuint.encode(Oe.length, ut), L.Buffer.concat([ut, Oe]);
  }
  B.rootHashFromPath = function(Oe, rt) {
    if (Oe.length < 33) throw new TypeError(`The control-block length is too small. Got ${Oe.length}, expected min 33.`);
    const ut = (Oe.length - 33) / 32;
    let dt = rt;
    for (let ht = 0; ht < ut; ht++) {
      const bt = Oe.slice(33 + 32 * ht, 65 + 32 * ht);
      dt = dt.compare(bt) < 0 ? pe(dt, bt) : pe(bt, dt);
    }
    return dt;
  }, B.toHashTree = function Oe(rt) {
    if ((0, ne.isTapleaf)(rt)) return { hash: ie(rt) };
    const ut = [Oe(rt[0]), Oe(rt[1])];
    ut.sort((bt, Tt) => bt.hash.compare(Tt.hash));
    const [dt, ht] = ut;
    return { hash: pe(dt.hash, ht.hash), left: dt, right: ht };
  }, B.findScriptPath = function Oe(rt, ut) {
    if ("left" in (dt = rt) && "right" in dt) {
      const ht = Oe(rt.left, ut);
      if (ht !== void 0) return [...ht, rt.right.hash];
      const bt = Oe(rt.right, ut);
      if (bt !== void 0) return [...bt, rt.left.hash];
    } else if (rt.hash.equals(ut)) return [];
    var dt;
  }, B.tapleafHash = ie, B.tapTweakHash = oe, B.tweakKey = function(Oe, rt) {
    if (!L.Buffer.isBuffer(Oe) || Oe.length !== 32 || rt && rt.length !== 32) return null;
    const ut = oe(Oe, rt), dt = (0, V.getEccLib)().xOnlyPointAddTweak(Oe, ut);
    return dt && dt.xOnlyPubkey !== null ? { parity: dt.parity, x: L.Buffer.from(dt.xOnlyPubkey) } : null;
  };
}(bip341);
var block = {}, merkle = {};
function fastMerkleRoot(B, L) {
  if (!Array.isArray(B)) throw TypeError("Expected values Array");
  if (typeof L != "function") throw TypeError("Expected digest Function");
  let V = B.length;
  const J = B.concat();
  for (; V > 1; ) {
    let re = 0;
    for (let ne = 0; ne < V; ne += 2, ++re) {
      const ie = J[ne], oe = ne + 1 === V ? ie : J[ne + 1], pe = Buffer$D.concat([ie, oe]);
      J[re] = L(pe);
    }
    V = re;
  }
  return J[0];
}
Object.defineProperty(merkle, "__esModule", { value: !0 }), merkle.fastMerkleRoot = void 0, merkle.fastMerkleRoot = fastMerkleRoot;
var transaction = {};
Object.defineProperty(transaction, "__esModule", { value: !0 }), transaction.Transaction = void 0;
const bufferutils_1$2 = bufferutils, bcrypto$1 = crypto$6, bscript$2 = requireScript(), script_1 = requireScript(), types$4 = types$7, { typeforce: typeforce$2 } = types$4;
function varSliceSize(B) {
  const L = B.length;
  return bufferutils_1$2.varuint.encodingLength(L) + L;
}
function vectorSize(B) {
  const L = B.length;
  return bufferutils_1$2.varuint.encodingLength(L) + B.reduce((V, J) => V + varSliceSize(J), 0);
}
const EMPTY_BUFFER = Buffer$D.allocUnsafe(0), EMPTY_WITNESS = [], ZERO = Buffer$D.from("0000000000000000000000000000000000000000000000000000000000000000", "hex"), ONE = Buffer$D.from("0000000000000000000000000000000000000000000000000000000000000001", "hex"), VALUE_UINT64_MAX = Buffer$D.from("ffffffffffffffff", "hex"), BLANK_OUTPUT = { script: EMPTY_BUFFER, valueBuffer: VALUE_UINT64_MAX };
function isOutput(B) {
  return B.value !== void 0;
}
class Transaction {
  constructor() {
    this.version = 1, this.locktime = 0, this.ins = [], this.outs = [];
  }
  static fromBuffer(L, V) {
    const J = new bufferutils_1$2.BufferReader(L), re = new Transaction();
    re.version = J.readInt32();
    const ne = J.readUInt8(), ie = J.readUInt8();
    let oe = !1;
    ne === Transaction.ADVANCED_TRANSACTION_MARKER && ie === Transaction.ADVANCED_TRANSACTION_FLAG ? oe = !0 : J.offset -= 2;
    const pe = J.readVarInt();
    for (let Oe = 0; Oe < pe; ++Oe) re.ins.push({ hash: J.readSlice(32), index: J.readUInt32(), script: J.readVarSlice(), sequence: J.readUInt32(), witness: EMPTY_WITNESS });
    const ce = J.readVarInt();
    for (let Oe = 0; Oe < ce; ++Oe) re.outs.push({ value: J.readUInt64(), script: J.readVarSlice() });
    if (oe) {
      for (let Oe = 0; Oe < pe; ++Oe) re.ins[Oe].witness = J.readVector();
      if (!re.hasWitnesses()) throw new Error("Transaction has superfluous witness data");
    }
    if (re.locktime = J.readUInt32(), V) return re;
    if (J.offset !== L.length) throw new Error("Transaction has unexpected data");
    return re;
  }
  static fromHex(L) {
    return Transaction.fromBuffer(Buffer$D.from(L, "hex"), !1);
  }
  static isCoinbaseHash(L) {
    typeforce$2(types$4.Hash256bit, L);
    for (let V = 0; V < 32; ++V) if (L[V] !== 0) return !1;
    return !0;
  }
  isCoinbase() {
    return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash);
  }
  addInput(L, V, J, re) {
    return typeforce$2(types$4.tuple(types$4.Hash256bit, types$4.UInt32, types$4.maybe(types$4.UInt32), types$4.maybe(types$4.Buffer)), arguments), types$4.Null(J) && (J = Transaction.DEFAULT_SEQUENCE), this.ins.push({ hash: L, index: V, script: re || EMPTY_BUFFER, sequence: J, witness: EMPTY_WITNESS }) - 1;
  }
  addOutput(L, V) {
    return typeforce$2(types$4.tuple(types$4.Buffer, types$4.Satoshi), arguments), this.outs.push({ script: L, value: V }) - 1;
  }
  hasWitnesses() {
    return this.ins.some((L) => L.witness.length !== 0);
  }
  weight() {
    return 3 * this.byteLength(!1) + this.byteLength(!0);
  }
  virtualSize() {
    return Math.ceil(this.weight() / 4);
  }
  byteLength(L = !0) {
    const V = L && this.hasWitnesses();
    return (V ? 10 : 8) + bufferutils_1$2.varuint.encodingLength(this.ins.length) + bufferutils_1$2.varuint.encodingLength(this.outs.length) + this.ins.reduce((J, re) => J + 40 + varSliceSize(re.script), 0) + this.outs.reduce((J, re) => J + 8 + varSliceSize(re.script), 0) + (V ? this.ins.reduce((J, re) => J + vectorSize(re.witness), 0) : 0);
  }
  clone() {
    const L = new Transaction();
    return L.version = this.version, L.locktime = this.locktime, L.ins = this.ins.map((V) => ({ hash: V.hash, index: V.index, script: V.script, sequence: V.sequence, witness: V.witness })), L.outs = this.outs.map((V) => ({ script: V.script, value: V.value })), L;
  }
  hashForSignature(L, V, J) {
    if (typeforce$2(types$4.tuple(types$4.UInt32, types$4.Buffer, types$4.Number), arguments), L >= this.ins.length) return ONE;
    const re = bscript$2.compile(bscript$2.decompile(V).filter((oe) => oe !== script_1.OPS.OP_CODESEPARATOR)), ne = this.clone();
    if ((31 & J) === Transaction.SIGHASH_NONE) ne.outs = [], ne.ins.forEach((oe, pe) => {
      pe !== L && (oe.sequence = 0);
    });
    else if ((31 & J) === Transaction.SIGHASH_SINGLE) {
      if (L >= this.outs.length) return ONE;
      ne.outs.length = L + 1;
      for (let oe = 0; oe < L; oe++) ne.outs[oe] = BLANK_OUTPUT;
      ne.ins.forEach((oe, pe) => {
        pe !== L && (oe.sequence = 0);
      });
    }
    J & Transaction.SIGHASH_ANYONECANPAY ? (ne.ins = [ne.ins[L]], ne.ins[0].script = re) : (ne.ins.forEach((oe) => {
      oe.script = EMPTY_BUFFER;
    }), ne.ins[L].script = re);
    const ie = Buffer$D.allocUnsafe(ne.byteLength(!1) + 4);
    return ie.writeInt32LE(J, ie.length - 4), ne.__toBuffer(ie, 0, !1), bcrypto$1.hash256(ie);
  }
  hashForWitnessV1(L, V, J, re, ne, ie) {
    if (typeforce$2(types$4.tuple(types$4.UInt32, typeforce$2.arrayOf(types$4.Buffer), typeforce$2.arrayOf(types$4.Satoshi), types$4.UInt32), arguments), J.length !== this.ins.length || V.length !== this.ins.length) throw new Error("Must supply prevout script and value for all inputs");
    const oe = re === Transaction.SIGHASH_DEFAULT ? Transaction.SIGHASH_ALL : re & Transaction.SIGHASH_OUTPUT_MASK, pe = (re & Transaction.SIGHASH_INPUT_MASK) === Transaction.SIGHASH_ANYONECANPAY, ce = oe === Transaction.SIGHASH_NONE, Oe = oe === Transaction.SIGHASH_SINGLE;
    let rt = EMPTY_BUFFER, ut = EMPTY_BUFFER, dt = EMPTY_BUFFER, ht = EMPTY_BUFFER, bt = EMPTY_BUFFER;
    if (!pe) {
      let Rt = bufferutils_1$2.BufferWriter.withCapacity(36 * this.ins.length);
      this.ins.forEach((Bt) => {
        Rt.writeSlice(Bt.hash), Rt.writeUInt32(Bt.index);
      }), rt = bcrypto$1.sha256(Rt.end()), Rt = bufferutils_1$2.BufferWriter.withCapacity(8 * this.ins.length), J.forEach((Bt) => Rt.writeUInt64(Bt)), ut = bcrypto$1.sha256(Rt.end()), Rt = bufferutils_1$2.BufferWriter.withCapacity(V.map(varSliceSize).reduce((Bt, Pt) => Bt + Pt)), V.forEach((Bt) => Rt.writeVarSlice(Bt)), dt = bcrypto$1.sha256(Rt.end()), Rt = bufferutils_1$2.BufferWriter.withCapacity(4 * this.ins.length), this.ins.forEach((Bt) => Rt.writeUInt32(Bt.sequence)), ht = bcrypto$1.sha256(Rt.end());
    }
    if (ce || Oe) {
      if (Oe && L < this.outs.length) {
        const Rt = this.outs[L], Bt = bufferutils_1$2.BufferWriter.withCapacity(8 + varSliceSize(Rt.script));
        Bt.writeUInt64(Rt.value), Bt.writeVarSlice(Rt.script), bt = bcrypto$1.sha256(Bt.end());
      }
    } else {
      const Rt = this.outs.map((Pt) => 8 + varSliceSize(Pt.script)).reduce((Pt, Dt) => Pt + Dt), Bt = bufferutils_1$2.BufferWriter.withCapacity(Rt);
      this.outs.forEach((Pt) => {
        Bt.writeUInt64(Pt.value), Bt.writeVarSlice(Pt.script);
      }), bt = bcrypto$1.sha256(Bt.end());
    }
    const Tt = (ne ? 2 : 0) + (ie ? 1 : 0), wt = 174 - (pe ? 49 : 0) - (ce ? 32 : 0) + (ie ? 32 : 0) + (ne ? 37 : 0), Et = bufferutils_1$2.BufferWriter.withCapacity(wt);
    if (Et.writeUInt8(re), Et.writeInt32(this.version), Et.writeUInt32(this.locktime), Et.writeSlice(rt), Et.writeSlice(ut), Et.writeSlice(dt), Et.writeSlice(ht), ce || Oe || Et.writeSlice(bt), Et.writeUInt8(Tt), pe) {
      const Rt = this.ins[L];
      Et.writeSlice(Rt.hash), Et.writeUInt32(Rt.index), Et.writeUInt64(J[L]), Et.writeVarSlice(V[L]), Et.writeUInt32(Rt.sequence);
    } else Et.writeUInt32(L);
    if (ie) {
      const Rt = bufferutils_1$2.BufferWriter.withCapacity(varSliceSize(ie));
      Rt.writeVarSlice(ie), Et.writeSlice(bcrypto$1.sha256(Rt.end()));
    }
    return Oe && Et.writeSlice(bt), ne && (Et.writeSlice(ne), Et.writeUInt8(0), Et.writeUInt32(4294967295)), bcrypto$1.taggedHash("TapSighash", Buffer$D.concat([Buffer$D.from([0]), Et.end()]));
  }
  hashForWitnessV0(L, V, J, re) {
    typeforce$2(types$4.tuple(types$4.UInt32, types$4.Buffer, types$4.Satoshi, types$4.UInt32), arguments);
    let ne, ie = Buffer$D.from([]), oe = ZERO, pe = ZERO, ce = ZERO;
    if (re & Transaction.SIGHASH_ANYONECANPAY || (ie = Buffer$D.allocUnsafe(36 * this.ins.length), ne = new bufferutils_1$2.BufferWriter(ie, 0), this.ins.forEach((rt) => {
      ne.writeSlice(rt.hash), ne.writeUInt32(rt.index);
    }), pe = bcrypto$1.hash256(ie)), re & Transaction.SIGHASH_ANYONECANPAY || (31 & re) === Transaction.SIGHASH_SINGLE || (31 & re) === Transaction.SIGHASH_NONE || (ie = Buffer$D.allocUnsafe(4 * this.ins.length), ne = new bufferutils_1$2.BufferWriter(ie, 0), this.ins.forEach((rt) => {
      ne.writeUInt32(rt.sequence);
    }), ce = bcrypto$1.hash256(ie)), (31 & re) !== Transaction.SIGHASH_SINGLE && (31 & re) !== Transaction.SIGHASH_NONE) {
      const rt = this.outs.reduce((ut, dt) => ut + 8 + varSliceSize(dt.script), 0);
      ie = Buffer$D.allocUnsafe(rt), ne = new bufferutils_1$2.BufferWriter(ie, 0), this.outs.forEach((ut) => {
        ne.writeUInt64(ut.value), ne.writeVarSlice(ut.script);
      }), oe = bcrypto$1.hash256(ie);
    } else if ((31 & re) === Transaction.SIGHASH_SINGLE && L < this.outs.length) {
      const rt = this.outs[L];
      ie = Buffer$D.allocUnsafe(8 + varSliceSize(rt.script)), ne = new bufferutils_1$2.BufferWriter(ie, 0), ne.writeUInt64(rt.value), ne.writeVarSlice(rt.script), oe = bcrypto$1.hash256(ie);
    }
    ie = Buffer$D.allocUnsafe(156 + varSliceSize(V)), ne = new bufferutils_1$2.BufferWriter(ie, 0);
    const Oe = this.ins[L];
    return ne.writeInt32(this.version), ne.writeSlice(pe), ne.writeSlice(ce), ne.writeSlice(Oe.hash), ne.writeUInt32(Oe.index), ne.writeVarSlice(V), ne.writeUInt64(J), ne.writeUInt32(Oe.sequence), ne.writeSlice(oe), ne.writeUInt32(this.locktime), ne.writeUInt32(re), bcrypto$1.hash256(ie);
  }
  getHash(L) {
    return L && this.isCoinbase() ? Buffer$D.alloc(32, 0) : bcrypto$1.hash256(this.__toBuffer(void 0, void 0, L));
  }
  getId() {
    return (0, bufferutils_1$2.reverseBuffer)(this.getHash(!1)).toString("hex");
  }
  toBuffer(L, V) {
    return this.__toBuffer(L, V, !0);
  }
  toHex() {
    return this.toBuffer(void 0, void 0).toString("hex");
  }
  setInputScript(L, V) {
    typeforce$2(types$4.tuple(types$4.Number, types$4.Buffer), arguments), this.ins[L].script = V;
  }
  setWitness(L, V) {
    typeforce$2(types$4.tuple(types$4.Number, [types$4.Buffer]), arguments), this.ins[L].witness = V;
  }
  __toBuffer(L, V, J = !1) {
    L || (L = Buffer$D.allocUnsafe(this.byteLength(J)));
    const re = new bufferutils_1$2.BufferWriter(L, V || 0);
    re.writeInt32(this.version);
    const ne = J && this.hasWitnesses();
    return ne && (re.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER), re.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG)), re.writeVarInt(this.ins.length), this.ins.forEach((ie) => {
      re.writeSlice(ie.hash), re.writeUInt32(ie.index), re.writeVarSlice(ie.script), re.writeUInt32(ie.sequence);
    }), re.writeVarInt(this.outs.length), this.outs.forEach((ie) => {
      isOutput(ie) ? re.writeUInt64(ie.value) : re.writeSlice(ie.valueBuffer), re.writeVarSlice(ie.script);
    }), ne && this.ins.forEach((ie) => {
      re.writeVector(ie.witness);
    }), re.writeUInt32(this.locktime), V !== void 0 ? L.slice(V, re.offset) : L;
  }
}
transaction.Transaction = Transaction, Transaction.DEFAULT_SEQUENCE = 4294967295, Transaction.SIGHASH_DEFAULT = 0, Transaction.SIGHASH_ALL = 1, Transaction.SIGHASH_NONE = 2, Transaction.SIGHASH_SINGLE = 3, Transaction.SIGHASH_ANYONECANPAY = 128, Transaction.SIGHASH_OUTPUT_MASK = 3, Transaction.SIGHASH_INPUT_MASK = 128, Transaction.ADVANCED_TRANSACTION_MARKER = 0, Transaction.ADVANCED_TRANSACTION_FLAG = 1, Object.defineProperty(block, "__esModule", { value: !0 }), block.Block = void 0;
const bufferutils_1$1 = bufferutils, bcrypto = crypto$6, merkle_1 = merkle, transaction_1$3 = transaction, types$3 = types$7, { typeforce: typeforce$1 } = types$3, errorMerkleNoTxes = new TypeError("Cannot compute merkle root for zero transactions"), errorWitnessNotSegwit = new TypeError("Cannot compute witness commit for non-segwit block");
class Block {
  constructor() {
    this.version = 1, this.prevHash = void 0, this.merkleRoot = void 0, this.timestamp = 0, this.witnessCommit = void 0, this.bits = 0, this.nonce = 0, this.transactions = void 0;
  }
  static fromBuffer(L) {
    if (L.length < 80) throw new Error("Buffer too small (< 80 bytes)");
    const V = new bufferutils_1$1.BufferReader(L), J = new Block();
    if (J.version = V.readInt32(), J.prevHash = V.readSlice(32), J.merkleRoot = V.readSlice(32), J.timestamp = V.readUInt32(), J.bits = V.readUInt32(), J.nonce = V.readUInt32(), L.length === 80) return J;
    const re = () => {
      const oe = transaction_1$3.Transaction.fromBuffer(V.buffer.slice(V.offset), !0);
      return V.offset += oe.byteLength(), oe;
    }, ne = V.readVarInt();
    J.transactions = [];
    for (let oe = 0; oe < ne; ++oe) {
      const pe = re();
      J.transactions.push(pe);
    }
    const ie = J.getWitnessCommit();
    return ie && (J.witnessCommit = ie), J;
  }
  static fromHex(L) {
    return Block.fromBuffer(Buffer$D.from(L, "hex"));
  }
  static calculateTarget(L) {
    const V = ((4278190080 & L) >> 24) - 3, J = 8388607 & L, re = Buffer$D.alloc(32, 0);
    return re.writeUIntBE(J, 29 - V, 3), re;
  }
  static calculateMerkleRoot(L, V) {
    if (typeforce$1([{ getHash: types$3.Function }], L), L.length === 0) throw errorMerkleNoTxes;
    if (V && !txesHaveWitnessCommit(L)) throw errorWitnessNotSegwit;
    const J = L.map((ne) => ne.getHash(V)), re = (0, merkle_1.fastMerkleRoot)(J, bcrypto.hash256);
    return V ? bcrypto.hash256(Buffer$D.concat([re, L[0].ins[0].witness[0]])) : re;
  }
  getWitnessCommit() {
    if (!txesHaveWitnessCommit(this.transactions)) return null;
    const L = this.transactions[0].outs.filter((J) => J.script.slice(0, 6).equals(Buffer$D.from("6a24aa21a9ed", "hex"))).map((J) => J.script.slice(6, 38));
    if (L.length === 0) return null;
    const V = L[L.length - 1];
    return V instanceof Buffer$D && V.length === 32 ? V : null;
  }
  hasWitnessCommit() {
    return this.witnessCommit instanceof Buffer$D && this.witnessCommit.length === 32 || this.getWitnessCommit() !== null;
  }
  hasWitness() {
    return anyTxHasWitness(this.transactions);
  }
  weight() {
    return 3 * this.byteLength(!1, !1) + this.byteLength(!1, !0);
  }
  byteLength(L, V = !0) {
    return L || !this.transactions ? 80 : 80 + bufferutils_1$1.varuint.encodingLength(this.transactions.length) + this.transactions.reduce((J, re) => J + re.byteLength(V), 0);
  }
  getHash() {
    return bcrypto.hash256(this.toBuffer(!0));
  }
  getId() {
    return (0, bufferutils_1$1.reverseBuffer)(this.getHash()).toString("hex");
  }
  getUTCDate() {
    const L = /* @__PURE__ */ new Date(0);
    return L.setUTCSeconds(this.timestamp), L;
  }
  toBuffer(L) {
    const V = Buffer$D.allocUnsafe(this.byteLength(L)), J = new bufferutils_1$1.BufferWriter(V);
    return J.writeInt32(this.version), J.writeSlice(this.prevHash), J.writeSlice(this.merkleRoot), J.writeUInt32(this.timestamp), J.writeUInt32(this.bits), J.writeUInt32(this.nonce), L || !this.transactions || (bufferutils_1$1.varuint.encode(this.transactions.length, V, J.offset), J.offset += bufferutils_1$1.varuint.encode.bytes, this.transactions.forEach((re) => {
      const ne = re.byteLength();
      re.toBuffer(V, J.offset), J.offset += ne;
    })), V;
  }
  toHex(L) {
    return this.toBuffer(L).toString("hex");
  }
  checkTxRoots() {
    const L = this.hasWitnessCommit();
    return !(!L && this.hasWitness()) && this.__checkMerkleRoot() && (!L || this.__checkWitnessCommit());
  }
  checkProofOfWork() {
    const L = (0, bufferutils_1$1.reverseBuffer)(this.getHash()), V = Block.calculateTarget(this.bits);
    return L.compare(V) <= 0;
  }
  __checkMerkleRoot() {
    if (!this.transactions) throw errorMerkleNoTxes;
    const L = Block.calculateMerkleRoot(this.transactions);
    return this.merkleRoot.compare(L) === 0;
  }
  __checkWitnessCommit() {
    if (!this.transactions) throw errorMerkleNoTxes;
    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;
    const L = Block.calculateMerkleRoot(this.transactions, !0);
    return this.witnessCommit.compare(L) === 0;
  }
}
function txesHaveWitnessCommit(B) {
  return B instanceof Array && B[0] && B[0].ins && B[0].ins instanceof Array && B[0].ins[0] && B[0].ins[0].witness && B[0].ins[0].witness instanceof Array && B[0].ins[0].witness.length > 0;
}
function anyTxHasWitness(B) {
  return B instanceof Array && B.some((L) => typeof L == "object" && L.ins instanceof Array && L.ins.some((V) => typeof V == "object" && V.witness instanceof Array && V.witness.length > 0));
}
block.Block = Block;
var psbt$1 = {}, psbt = {}, combiner = {}, parser = {}, fromBuffer = {}, converter = {}, typeFields = {};
(function(B) {
  var L, V, J;
  Object.defineProperty(B, "__esModule", { value: !0 }), (L = B.GlobalTypes || (B.GlobalTypes = {}))[L.UNSIGNED_TX = 0] = "UNSIGNED_TX", L[L.GLOBAL_XPUB = 1] = "GLOBAL_XPUB", B.GLOBAL_TYPE_NAMES = ["unsignedTx", "globalXpub"], (V = B.InputTypes || (B.InputTypes = {}))[V.NON_WITNESS_UTXO = 0] = "NON_WITNESS_UTXO", V[V.WITNESS_UTXO = 1] = "WITNESS_UTXO", V[V.PARTIAL_SIG = 2] = "PARTIAL_SIG", V[V.SIGHASH_TYPE = 3] = "SIGHASH_TYPE", V[V.REDEEM_SCRIPT = 4] = "REDEEM_SCRIPT", V[V.WITNESS_SCRIPT = 5] = "WITNESS_SCRIPT", V[V.BIP32_DERIVATION = 6] = "BIP32_DERIVATION", V[V.FINAL_SCRIPTSIG = 7] = "FINAL_SCRIPTSIG", V[V.FINAL_SCRIPTWITNESS = 8] = "FINAL_SCRIPTWITNESS", V[V.POR_COMMITMENT = 9] = "POR_COMMITMENT", V[V.TAP_KEY_SIG = 19] = "TAP_KEY_SIG", V[V.TAP_SCRIPT_SIG = 20] = "TAP_SCRIPT_SIG", V[V.TAP_LEAF_SCRIPT = 21] = "TAP_LEAF_SCRIPT", V[V.TAP_BIP32_DERIVATION = 22] = "TAP_BIP32_DERIVATION", V[V.TAP_INTERNAL_KEY = 23] = "TAP_INTERNAL_KEY", V[V.TAP_MERKLE_ROOT = 24] = "TAP_MERKLE_ROOT", B.INPUT_TYPE_NAMES = ["nonWitnessUtxo", "witnessUtxo", "partialSig", "sighashType", "redeemScript", "witnessScript", "bip32Derivation", "finalScriptSig", "finalScriptWitness", "porCommitment", "tapKeySig", "tapScriptSig", "tapLeafScript", "tapBip32Derivation", "tapInternalKey", "tapMerkleRoot"], (J = B.OutputTypes || (B.OutputTypes = {}))[J.REDEEM_SCRIPT = 0] = "REDEEM_SCRIPT", J[J.WITNESS_SCRIPT = 1] = "WITNESS_SCRIPT", J[J.BIP32_DERIVATION = 2] = "BIP32_DERIVATION", J[J.TAP_INTERNAL_KEY = 5] = "TAP_INTERNAL_KEY", J[J.TAP_TREE = 6] = "TAP_TREE", J[J.TAP_BIP32_DERIVATION = 7] = "TAP_BIP32_DERIVATION", B.OUTPUT_TYPE_NAMES = ["redeemScript", "witnessScript", "bip32Derivation", "tapInternalKey", "tapTree", "tapBip32Derivation"];
})(typeFields);
var globalXpub$1 = {};
Object.defineProperty(globalXpub$1, "__esModule", { value: !0 });
const typeFields_1$g = typeFields, range$3 = (B) => [...Array(B).keys()];
function decode$g(B) {
  if (B.key[0] !== typeFields_1$g.GlobalTypes.GLOBAL_XPUB) throw new Error("Decode Error: could not decode globalXpub with key 0x" + B.key.toString("hex"));
  if (B.key.length !== 79 || ![2, 3].includes(B.key[46])) throw new Error("Decode Error: globalXpub has invalid extended pubkey in key 0x" + B.key.toString("hex"));
  if (B.value.length / 4 % 1 != 0) throw new Error("Decode Error: Global GLOBAL_XPUB value length should be multiple of 4");
  const L = B.key.slice(1), V = { masterFingerprint: B.value.slice(0, 4), extendedPubkey: L, path: "m" };
  for (const J of range$3(B.value.length / 4 - 1)) {
    const re = B.value.readUInt32LE(4 * J + 4), ne = !!(2147483648 & re), ie = 2147483647 & re;
    V.path += "/" + ie.toString(10) + (ne ? "'" : "");
  }
  return V;
}
function encode$g(B) {
  const L = Buffer$D.from([typeFields_1$g.GlobalTypes.GLOBAL_XPUB]), V = Buffer$D.concat([L, B.extendedPubkey]), J = B.path.split("/"), re = Buffer$D.allocUnsafe(4 * J.length);
  B.masterFingerprint.copy(re, 0);
  let ne = 4;
  return J.slice(1).forEach((ie) => {
    const oe = ie.slice(-1) === "'";
    let pe = 2147483647 & parseInt(oe ? ie.slice(0, -1) : ie, 10);
    oe && (pe += 2147483648), re.writeUInt32LE(pe, ne), ne += 4;
  }), { key: V, value: re };
}
function check$c(B) {
  const L = B.extendedPubkey, V = B.masterFingerprint, J = B.path;
  return Buffer$D.isBuffer(L) && L.length === 78 && [2, 3].indexOf(L[45]) > -1 && Buffer$D.isBuffer(V) && V.length === 4 && typeof J == "string" && !!J.match(/^m(\/\d+'?)*$/);
}
function canAddToArray$3(B, L, V) {
  const J = L.extendedPubkey.toString("hex");
  return !V.has(J) && (V.add(J), B.filter((re) => re.extendedPubkey.equals(L.extendedPubkey)).length === 0);
}
globalXpub$1.decode = decode$g, globalXpub$1.encode = encode$g, globalXpub$1.expected = "{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }", globalXpub$1.check = check$c, globalXpub$1.canAddToArray = canAddToArray$3;
var unsignedTx$1 = {};
Object.defineProperty(unsignedTx$1, "__esModule", { value: !0 });
const typeFields_1$f = typeFields;
function encode$f(B) {
  return { key: Buffer$D.from([typeFields_1$f.GlobalTypes.UNSIGNED_TX]), value: B.toBuffer() };
}
unsignedTx$1.encode = encode$f;
var finalScriptSig$1 = {};
Object.defineProperty(finalScriptSig$1, "__esModule", { value: !0 });
const typeFields_1$e = typeFields;
function decode$f(B) {
  if (B.key[0] !== typeFields_1$e.InputTypes.FINAL_SCRIPTSIG) throw new Error("Decode Error: could not decode finalScriptSig with key 0x" + B.key.toString("hex"));
  return B.value;
}
function encode$e(B) {
  return { key: Buffer$D.from([typeFields_1$e.InputTypes.FINAL_SCRIPTSIG]), value: B };
}
function check$b(B) {
  return Buffer$D.isBuffer(B);
}
function canAdd$8(B, L) {
  return !!B && !!L && B.finalScriptSig === void 0;
}
finalScriptSig$1.decode = decode$f, finalScriptSig$1.encode = encode$e, finalScriptSig$1.expected = "Buffer", finalScriptSig$1.check = check$b, finalScriptSig$1.canAdd = canAdd$8;
var finalScriptWitness$1 = {};
Object.defineProperty(finalScriptWitness$1, "__esModule", { value: !0 });
const typeFields_1$d = typeFields;
function decode$e(B) {
  if (B.key[0] !== typeFields_1$d.InputTypes.FINAL_SCRIPTWITNESS) throw new Error("Decode Error: could not decode finalScriptWitness with key 0x" + B.key.toString("hex"));
  return B.value;
}
function encode$d(B) {
  return { key: Buffer$D.from([typeFields_1$d.InputTypes.FINAL_SCRIPTWITNESS]), value: B };
}
function check$a(B) {
  return Buffer$D.isBuffer(B);
}
function canAdd$7(B, L) {
  return !!B && !!L && B.finalScriptWitness === void 0;
}
finalScriptWitness$1.decode = decode$e, finalScriptWitness$1.encode = encode$d, finalScriptWitness$1.expected = "Buffer", finalScriptWitness$1.check = check$a, finalScriptWitness$1.canAdd = canAdd$7;
var nonWitnessUtxo$1 = {};
Object.defineProperty(nonWitnessUtxo$1, "__esModule", { value: !0 });
const typeFields_1$c = typeFields;
function decode$d(B) {
  if (B.key[0] !== typeFields_1$c.InputTypes.NON_WITNESS_UTXO) throw new Error("Decode Error: could not decode nonWitnessUtxo with key 0x" + B.key.toString("hex"));
  return B.value;
}
function encode$c(B) {
  return { key: Buffer$D.from([typeFields_1$c.InputTypes.NON_WITNESS_UTXO]), value: B };
}
function check$9(B) {
  return Buffer$D.isBuffer(B);
}
function canAdd$6(B, L) {
  return !!B && !!L && B.nonWitnessUtxo === void 0;
}
nonWitnessUtxo$1.decode = decode$d, nonWitnessUtxo$1.encode = encode$c, nonWitnessUtxo$1.expected = "Buffer", nonWitnessUtxo$1.check = check$9, nonWitnessUtxo$1.canAdd = canAdd$6;
var partialSig$1 = {};
Object.defineProperty(partialSig$1, "__esModule", { value: !0 });
const typeFields_1$b = typeFields;
function decode$c(B) {
  if (B.key[0] !== typeFields_1$b.InputTypes.PARTIAL_SIG) throw new Error("Decode Error: could not decode partialSig with key 0x" + B.key.toString("hex"));
  if (B.key.length !== 34 && B.key.length !== 66 || ![2, 3, 4].includes(B.key[1])) throw new Error("Decode Error: partialSig has invalid pubkey in key 0x" + B.key.toString("hex"));
  return { pubkey: B.key.slice(1), signature: B.value };
}
function encode$b(B) {
  const L = Buffer$D.from([typeFields_1$b.InputTypes.PARTIAL_SIG]);
  return { key: Buffer$D.concat([L, B.pubkey]), value: B.signature };
}
function check$8(B) {
  return Buffer$D.isBuffer(B.pubkey) && Buffer$D.isBuffer(B.signature) && [33, 65].includes(B.pubkey.length) && [2, 3, 4].includes(B.pubkey[0]) && isDerSigWithSighash(B.signature);
}
function isDerSigWithSighash(B) {
  if (!Buffer$D.isBuffer(B) || B.length < 9 || B[0] !== 48 || B.length !== B[1] + 3 || B[2] !== 2) return !1;
  const L = B[3];
  if (L > 33 || L < 1 || B[3 + L + 1] !== 2) return !1;
  const V = B[3 + L + 2];
  return !(V > 33 || V < 1) && B.length === 3 + L + 2 + V + 2;
}
function canAddToArray$2(B, L, V) {
  const J = L.pubkey.toString("hex");
  return !V.has(J) && (V.add(J), B.filter((re) => re.pubkey.equals(L.pubkey)).length === 0);
}
partialSig$1.decode = decode$c, partialSig$1.encode = encode$b, partialSig$1.expected = "{ pubkey: Buffer; signature: Buffer; }", partialSig$1.check = check$8, partialSig$1.canAddToArray = canAddToArray$2;
var porCommitment$1 = {};
Object.defineProperty(porCommitment$1, "__esModule", { value: !0 });
const typeFields_1$a = typeFields;
function decode$b(B) {
  if (B.key[0] !== typeFields_1$a.InputTypes.POR_COMMITMENT) throw new Error("Decode Error: could not decode porCommitment with key 0x" + B.key.toString("hex"));
  return B.value.toString("utf8");
}
function encode$a(B) {
  return { key: Buffer$D.from([typeFields_1$a.InputTypes.POR_COMMITMENT]), value: Buffer$D.from(B, "utf8") };
}
function check$7(B) {
  return typeof B == "string";
}
function canAdd$5(B, L) {
  return !!B && !!L && B.porCommitment === void 0;
}
porCommitment$1.decode = decode$b, porCommitment$1.encode = encode$a, porCommitment$1.expected = "string", porCommitment$1.check = check$7, porCommitment$1.canAdd = canAdd$5;
var sighashType$1 = {};
Object.defineProperty(sighashType$1, "__esModule", { value: !0 });
const typeFields_1$9 = typeFields;
function decode$a(B) {
  if (B.key[0] !== typeFields_1$9.InputTypes.SIGHASH_TYPE) throw new Error("Decode Error: could not decode sighashType with key 0x" + B.key.toString("hex"));
  return B.value.readUInt32LE(0);
}
function encode$9(B) {
  const L = Buffer$D.from([typeFields_1$9.InputTypes.SIGHASH_TYPE]), V = Buffer$D.allocUnsafe(4);
  return V.writeUInt32LE(B, 0), { key: L, value: V };
}
function check$6(B) {
  return typeof B == "number";
}
function canAdd$4(B, L) {
  return !!B && !!L && B.sighashType === void 0;
}
sighashType$1.decode = decode$a, sighashType$1.encode = encode$9, sighashType$1.expected = "number", sighashType$1.check = check$6, sighashType$1.canAdd = canAdd$4;
var tapKeySig$1 = {};
Object.defineProperty(tapKeySig$1, "__esModule", { value: !0 });
const typeFields_1$8 = typeFields;
function decode$9(B) {
  if (B.key[0] !== typeFields_1$8.InputTypes.TAP_KEY_SIG || B.key.length !== 1) throw new Error("Decode Error: could not decode tapKeySig with key 0x" + B.key.toString("hex"));
  if (!check$5(B.value)) throw new Error("Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature");
  return B.value;
}
function encode$8(B) {
  return { key: Buffer$D.from([typeFields_1$8.InputTypes.TAP_KEY_SIG]), value: B };
}
function check$5(B) {
  return Buffer$D.isBuffer(B) && (B.length === 64 || B.length === 65);
}
function canAdd$3(B, L) {
  return !!B && !!L && B.tapKeySig === void 0;
}
tapKeySig$1.decode = decode$9, tapKeySig$1.encode = encode$8, tapKeySig$1.expected = "Buffer", tapKeySig$1.check = check$5, tapKeySig$1.canAdd = canAdd$3;
var tapLeafScript$1 = {};
Object.defineProperty(tapLeafScript$1, "__esModule", { value: !0 });
const typeFields_1$7 = typeFields;
function decode$8(B) {
  if (B.key[0] !== typeFields_1$7.InputTypes.TAP_LEAF_SCRIPT) throw new Error("Decode Error: could not decode tapLeafScript with key 0x" + B.key.toString("hex"));
  if ((B.key.length - 2) % 32 != 0) throw new Error("Decode Error: tapLeafScript has invalid control block in key 0x" + B.key.toString("hex"));
  const L = B.value[B.value.length - 1];
  if ((254 & B.key[1]) !== L) throw new Error("Decode Error: tapLeafScript bad leaf version in key 0x" + B.key.toString("hex"));
  const V = B.value.slice(0, -1);
  return { controlBlock: B.key.slice(1), script: V, leafVersion: L };
}
function encode$7(B) {
  const L = Buffer$D.from([typeFields_1$7.InputTypes.TAP_LEAF_SCRIPT]), V = Buffer$D.from([B.leafVersion]);
  return { key: Buffer$D.concat([L, B.controlBlock]), value: Buffer$D.concat([B.script, V]) };
}
function check$4(B) {
  return Buffer$D.isBuffer(B.controlBlock) && (B.controlBlock.length - 1) % 32 == 0 && (254 & B.controlBlock[0]) === B.leafVersion && Buffer$D.isBuffer(B.script);
}
function canAddToArray$1(B, L, V) {
  const J = L.controlBlock.toString("hex");
  return !V.has(J) && (V.add(J), B.filter((re) => re.controlBlock.equals(L.controlBlock)).length === 0);
}
tapLeafScript$1.decode = decode$8, tapLeafScript$1.encode = encode$7, tapLeafScript$1.expected = "{ controlBlock: Buffer; leafVersion: number, script: Buffer; }", tapLeafScript$1.check = check$4, tapLeafScript$1.canAddToArray = canAddToArray$1;
var tapMerkleRoot$1 = {};
Object.defineProperty(tapMerkleRoot$1, "__esModule", { value: !0 });
const typeFields_1$6 = typeFields;
function decode$7(B) {
  if (B.key[0] !== typeFields_1$6.InputTypes.TAP_MERKLE_ROOT || B.key.length !== 1) throw new Error("Decode Error: could not decode tapMerkleRoot with key 0x" + B.key.toString("hex"));
  if (!check$3(B.value)) throw new Error("Decode Error: tapMerkleRoot not a 32-byte hash");
  return B.value;
}
function encode$6(B) {
  return { key: Buffer$D.from([typeFields_1$6.InputTypes.TAP_MERKLE_ROOT]), value: B };
}
function check$3(B) {
  return Buffer$D.isBuffer(B) && B.length === 32;
}
function canAdd$2(B, L) {
  return !!B && !!L && B.tapMerkleRoot === void 0;
}
tapMerkleRoot$1.decode = decode$7, tapMerkleRoot$1.encode = encode$6, tapMerkleRoot$1.expected = "Buffer", tapMerkleRoot$1.check = check$3, tapMerkleRoot$1.canAdd = canAdd$2;
var tapScriptSig$1 = {};
Object.defineProperty(tapScriptSig$1, "__esModule", { value: !0 });
const typeFields_1$5 = typeFields;
function decode$6(B) {
  if (B.key[0] !== typeFields_1$5.InputTypes.TAP_SCRIPT_SIG) throw new Error("Decode Error: could not decode tapScriptSig with key 0x" + B.key.toString("hex"));
  if (B.key.length !== 65) throw new Error("Decode Error: tapScriptSig has invalid key 0x" + B.key.toString("hex"));
  if (B.value.length !== 64 && B.value.length !== 65) throw new Error("Decode Error: tapScriptSig has invalid signature in key 0x" + B.key.toString("hex"));
  return { pubkey: B.key.slice(1, 33), leafHash: B.key.slice(33), signature: B.value };
}
function encode$5(B) {
  const L = Buffer$D.from([typeFields_1$5.InputTypes.TAP_SCRIPT_SIG]);
  return { key: Buffer$D.concat([L, B.pubkey, B.leafHash]), value: B.signature };
}
function check$2(B) {
  return Buffer$D.isBuffer(B.pubkey) && Buffer$D.isBuffer(B.leafHash) && Buffer$D.isBuffer(B.signature) && B.pubkey.length === 32 && B.leafHash.length === 32 && (B.signature.length === 64 || B.signature.length === 65);
}
function canAddToArray(B, L, V) {
  const J = L.pubkey.toString("hex") + L.leafHash.toString("hex");
  return !V.has(J) && (V.add(J), B.filter((re) => re.pubkey.equals(L.pubkey) && re.leafHash.equals(L.leafHash)).length === 0);
}
tapScriptSig$1.decode = decode$6, tapScriptSig$1.encode = encode$5, tapScriptSig$1.expected = "{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }", tapScriptSig$1.check = check$2, tapScriptSig$1.canAddToArray = canAddToArray;
var witnessUtxo$1 = {}, tools = {}, varint = {};
Object.defineProperty(varint, "__esModule", { value: !0 });
const MAX_SAFE_INTEGER$1 = 9007199254740991;
function checkUInt53(B) {
  if (B < 0 || B > MAX_SAFE_INTEGER$1 || B % 1 != 0) throw new RangeError("value out of range");
}
function encode$4(B, L, V) {
  if (checkUInt53(B), L || (L = Buffer$D.allocUnsafe(encodingLength(B))), !Buffer$D.isBuffer(L)) throw new TypeError("buffer must be a Buffer instance");
  return V || (V = 0), B < 253 ? (L.writeUInt8(B, V), Object.assign(encode$4, { bytes: 1 })) : B <= 65535 ? (L.writeUInt8(253, V), L.writeUInt16LE(B, V + 1), Object.assign(encode$4, { bytes: 3 })) : B <= 4294967295 ? (L.writeUInt8(254, V), L.writeUInt32LE(B, V + 1), Object.assign(encode$4, { bytes: 5 })) : (L.writeUInt8(255, V), L.writeUInt32LE(B >>> 0, V + 1), L.writeUInt32LE(B / 4294967296 | 0, V + 5), Object.assign(encode$4, { bytes: 9 })), L;
}
function decode$5(B, L) {
  if (!Buffer$D.isBuffer(B)) throw new TypeError("buffer must be a Buffer instance");
  L || (L = 0);
  const V = B.readUInt8(L);
  if (V < 253) return Object.assign(decode$5, { bytes: 1 }), V;
  if (V === 253) return Object.assign(decode$5, { bytes: 3 }), B.readUInt16LE(L + 1);
  if (V === 254) return Object.assign(decode$5, { bytes: 5 }), B.readUInt32LE(L + 1);
  {
    Object.assign(decode$5, { bytes: 9 });
    const J = B.readUInt32LE(L + 1), re = 4294967296 * B.readUInt32LE(L + 5) + J;
    return checkUInt53(re), re;
  }
}
function encodingLength(B) {
  return checkUInt53(B), B < 253 ? 1 : B <= 65535 ? 3 : B <= 4294967295 ? 5 : 9;
}
varint.encode = encode$4, varint.decode = decode$5, varint.encodingLength = encodingLength, Object.defineProperty(tools, "__esModule", { value: !0 });
const varuint$6 = varint;
function reverseBuffer$1(B) {
  if (B.length < 1) return B;
  let L = B.length - 1, V = 0;
  for (let J = 0; J < B.length / 2; J++) V = B[J], B[J] = B[L], B[L] = V, L--;
  return B;
}
function keyValsToBuffer(B) {
  const L = B.map(keyValToBuffer);
  return L.push(Buffer$D.from([0])), Buffer$D.concat(L);
}
function keyValToBuffer(B) {
  const L = B.key.length, V = B.value.length, J = varuint$6.encodingLength(L), re = varuint$6.encodingLength(V), ne = Buffer$D.allocUnsafe(J + L + re + V);
  return varuint$6.encode(L, ne, 0), B.key.copy(ne, J), varuint$6.encode(V, ne, J + L), B.value.copy(ne, J + L + re), ne;
}
function verifuint(B, L) {
  if (typeof B != "number") throw new Error("cannot write a non-number as a number");
  if (B < 0) throw new Error("specified a negative value for writing an unsigned value");
  if (B > L) throw new Error("RangeError: value out of range");
  if (Math.floor(B) !== B) throw new Error("value has a fractional component");
}
function readUInt64LE(B, L) {
  const V = B.readUInt32LE(L);
  let J = B.readUInt32LE(L + 4);
  return J *= 4294967296, verifuint(J + V, 9007199254740991), J + V;
}
function writeUInt64LE(B, L, V) {
  return verifuint(L, 9007199254740991), B.writeInt32LE(-1 & L, V), B.writeUInt32LE(Math.floor(L / 4294967296), V + 4), V + 8;
}
tools.range = (B) => [...Array(B).keys()], tools.reverseBuffer = reverseBuffer$1, tools.keyValsToBuffer = keyValsToBuffer, tools.keyValToBuffer = keyValToBuffer, tools.readUInt64LE = readUInt64LE, tools.writeUInt64LE = writeUInt64LE, Object.defineProperty(witnessUtxo$1, "__esModule", { value: !0 });
const typeFields_1$4 = typeFields, tools_1$2 = tools, varuint$5 = varint;
function decode$4(B) {
  if (B.key[0] !== typeFields_1$4.InputTypes.WITNESS_UTXO) throw new Error("Decode Error: could not decode witnessUtxo with key 0x" + B.key.toString("hex"));
  const L = tools_1$2.readUInt64LE(B.value, 0);
  let V = 8;
  const J = varuint$5.decode(B.value, V);
  V += varuint$5.encodingLength(J);
  const re = B.value.slice(V);
  if (re.length !== J) throw new Error("Decode Error: WITNESS_UTXO script is not proper length");
  return { script: re, value: L };
}
function encode$3(B) {
  const { script: L, value: V } = B, J = varuint$5.encodingLength(L.length), re = Buffer$D.allocUnsafe(8 + J + L.length);
  return tools_1$2.writeUInt64LE(re, V, 0), varuint$5.encode(L.length, re, 8), L.copy(re, 8 + J), { key: Buffer$D.from([typeFields_1$4.InputTypes.WITNESS_UTXO]), value: re };
}
function check$1(B) {
  return Buffer$D.isBuffer(B.script) && typeof B.value == "number";
}
function canAdd$1(B, L) {
  return !!B && !!L && B.witnessUtxo === void 0;
}
witnessUtxo$1.decode = decode$4, witnessUtxo$1.encode = encode$3, witnessUtxo$1.expected = "{ script: Buffer; value: number; }", witnessUtxo$1.check = check$1, witnessUtxo$1.canAdd = canAdd$1;
var tapTree$1 = {};
Object.defineProperty(tapTree$1, "__esModule", { value: !0 });
const typeFields_1$3 = typeFields, varuint$4 = varint;
function decode$3(B) {
  if (B.key[0] !== typeFields_1$3.OutputTypes.TAP_TREE || B.key.length !== 1) throw new Error("Decode Error: could not decode tapTree with key 0x" + B.key.toString("hex"));
  let L = 0;
  const V = [];
  for (; L < B.value.length; ) {
    const J = B.value[L++], re = B.value[L++], ne = varuint$4.decode(B.value, L);
    L += varuint$4.encodingLength(ne), V.push({ depth: J, leafVersion: re, script: B.value.slice(L, L + ne) }), L += ne;
  }
  return { leaves: V };
}
function encode$2(B) {
  const L = Buffer$D.from([typeFields_1$3.OutputTypes.TAP_TREE]), V = [].concat(...B.leaves.map((J) => [Buffer$D.of(J.depth, J.leafVersion), varuint$4.encode(J.script.length), J.script]));
  return { key: L, value: Buffer$D.concat(V) };
}
function check(B) {
  return Array.isArray(B.leaves) && B.leaves.every((L) => L.depth >= 0 && L.depth <= 128 && (254 & L.leafVersion) === L.leafVersion && Buffer$D.isBuffer(L.script));
}
function canAdd(B, L) {
  return !!B && !!L && B.tapTree === void 0;
}
tapTree$1.decode = decode$3, tapTree$1.encode = encode$2, tapTree$1.expected = "{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }", tapTree$1.check = check, tapTree$1.canAdd = canAdd;
var bip32Derivation$2 = {};
Object.defineProperty(bip32Derivation$2, "__esModule", { value: !0 });
const range$2 = (B) => [...Array(B).keys()], isValidDERKey = (B) => B.length === 33 && [2, 3].includes(B[0]) || B.length === 65 && B[0] === 4;
function makeConverter$4(B, L = isValidDERKey) {
  return { decode: function(V) {
    if (V.key[0] !== B) throw new Error("Decode Error: could not decode bip32Derivation with key 0x" + V.key.toString("hex"));
    const J = V.key.slice(1);
    if (!L(J)) throw new Error("Decode Error: bip32Derivation has invalid pubkey in key 0x" + V.key.toString("hex"));
    if (V.value.length / 4 % 1 != 0) throw new Error("Decode Error: Input BIP32_DERIVATION value length should be multiple of 4");
    const re = { masterFingerprint: V.value.slice(0, 4), pubkey: J, path: "m" };
    for (const ne of range$2(V.value.length / 4 - 1)) {
      const ie = V.value.readUInt32LE(4 * ne + 4), oe = !!(2147483648 & ie), pe = 2147483647 & ie;
      re.path += "/" + pe.toString(10) + (oe ? "'" : "");
    }
    return re;
  }, encode: function(V) {
    const J = Buffer$D.from([B]), re = Buffer$D.concat([J, V.pubkey]), ne = V.path.split("/"), ie = Buffer$D.allocUnsafe(4 * ne.length);
    V.masterFingerprint.copy(ie, 0);
    let oe = 4;
    return ne.slice(1).forEach((pe) => {
      const ce = pe.slice(-1) === "'";
      let Oe = 2147483647 & parseInt(ce ? pe.slice(0, -1) : pe, 10);
      ce && (Oe += 2147483648), ie.writeUInt32LE(Oe, oe), oe += 4;
    }), { key: re, value: ie };
  }, check: function(V) {
    return Buffer$D.isBuffer(V.pubkey) && Buffer$D.isBuffer(V.masterFingerprint) && typeof V.path == "string" && L(V.pubkey) && V.masterFingerprint.length === 4;
  }, expected: "{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }", canAddToArray: function(V, J, re) {
    const ne = J.pubkey.toString("hex");
    return !re.has(ne) && (re.add(ne), V.filter((ie) => ie.pubkey.equals(J.pubkey)).length === 0);
  } };
}
bip32Derivation$2.makeConverter = makeConverter$4;
var checkPubkey$1 = {};
function makeChecker(B) {
  return function(L) {
    let V;
    if (B.includes(L.key[0]) && (V = L.key.slice(1), V.length !== 33 && V.length !== 65 || ![2, 3, 4].includes(V[0]))) throw new Error("Format Error: invalid pubkey in key 0x" + L.key.toString("hex"));
    return V;
  };
}
Object.defineProperty(checkPubkey$1, "__esModule", { value: !0 }), checkPubkey$1.makeChecker = makeChecker;
var redeemScript$1 = {};
function makeConverter$3(B) {
  return { decode: function(L) {
    if (L.key[0] !== B) throw new Error("Decode Error: could not decode redeemScript with key 0x" + L.key.toString("hex"));
    return L.value;
  }, encode: function(L) {
    return { key: Buffer$D.from([B]), value: L };
  }, check: function(L) {
    return Buffer$D.isBuffer(L);
  }, expected: "Buffer", canAdd: function(L, V) {
    return !!L && !!V && L.redeemScript === void 0;
  } };
}
Object.defineProperty(redeemScript$1, "__esModule", { value: !0 }), redeemScript$1.makeConverter = makeConverter$3;
var tapBip32Derivation$1 = {};
Object.defineProperty(tapBip32Derivation$1, "__esModule", { value: !0 });
const varuint$3 = varint, bip32Derivation$1 = bip32Derivation$2, isValidBIP340Key = (B) => B.length === 32;
function makeConverter$2(B) {
  const L = bip32Derivation$1.makeConverter(B, isValidBIP340Key);
  return { decode: function(V) {
    const J = varuint$3.decode(V.value), re = varuint$3.encodingLength(J), ne = L.decode({ key: V.key, value: V.value.slice(re + 32 * J) }), ie = new Array(J);
    for (let oe = 0, pe = re; oe < J; oe++, pe += 32) ie[oe] = V.value.slice(pe, pe + 32);
    return Object.assign({}, ne, { leafHashes: ie });
  }, encode: function(V) {
    const J = L.encode(V), re = varuint$3.encodingLength(V.leafHashes.length), ne = Buffer$D.allocUnsafe(re);
    varuint$3.encode(V.leafHashes.length, ne);
    const ie = Buffer$D.concat([ne, ...V.leafHashes, J.value]);
    return Object.assign({}, J, { value: ie });
  }, check: function(V) {
    return Array.isArray(V.leafHashes) && V.leafHashes.every((J) => Buffer$D.isBuffer(J) && J.length === 32) && L.check(V);
  }, expected: "{ masterFingerprint: Buffer; pubkey: Buffer; path: string; leafHashes: Buffer[]; }", canAddToArray: L.canAddToArray };
}
tapBip32Derivation$1.makeConverter = makeConverter$2;
var tapInternalKey$1 = {};
function makeConverter$1(B) {
  return { decode: function(L) {
    if (L.key[0] !== B || L.key.length !== 1) throw new Error("Decode Error: could not decode tapInternalKey with key 0x" + L.key.toString("hex"));
    if (L.value.length !== 32) throw new Error("Decode Error: tapInternalKey not a 32-byte x-only pubkey");
    return L.value;
  }, encode: function(L) {
    return { key: Buffer$D.from([B]), value: L };
  }, check: function(L) {
    return Buffer$D.isBuffer(L) && L.length === 32;
  }, expected: "Buffer", canAdd: function(L, V) {
    return !!L && !!V && L.tapInternalKey === void 0;
  } };
}
Object.defineProperty(tapInternalKey$1, "__esModule", { value: !0 }), tapInternalKey$1.makeConverter = makeConverter$1;
var witnessScript$1 = {};
function makeConverter(B) {
  return { decode: function(L) {
    if (L.key[0] !== B) throw new Error("Decode Error: could not decode witnessScript with key 0x" + L.key.toString("hex"));
    return L.value;
  }, encode: function(L) {
    return { key: Buffer$D.from([B]), value: L };
  }, check: function(L) {
    return Buffer$D.isBuffer(L);
  }, expected: "Buffer", canAdd: function(L, V) {
    return !!L && !!V && L.witnessScript === void 0;
  } };
}
Object.defineProperty(witnessScript$1, "__esModule", { value: !0 }), witnessScript$1.makeConverter = makeConverter, Object.defineProperty(converter, "__esModule", { value: !0 });
const typeFields_1$2 = typeFields, globalXpub = globalXpub$1, unsignedTx = unsignedTx$1, finalScriptSig = finalScriptSig$1, finalScriptWitness = finalScriptWitness$1, nonWitnessUtxo = nonWitnessUtxo$1, partialSig = partialSig$1, porCommitment = porCommitment$1, sighashType = sighashType$1, tapKeySig = tapKeySig$1, tapLeafScript = tapLeafScript$1, tapMerkleRoot = tapMerkleRoot$1, tapScriptSig = tapScriptSig$1, witnessUtxo = witnessUtxo$1, tapTree = tapTree$1, bip32Derivation = bip32Derivation$2, checkPubkey = checkPubkey$1, redeemScript = redeemScript$1, tapBip32Derivation = tapBip32Derivation$1, tapInternalKey = tapInternalKey$1, witnessScript = witnessScript$1, globals = { unsignedTx, globalXpub, checkPubkey: checkPubkey.makeChecker([]) };
converter.globals = globals;
const inputs = { nonWitnessUtxo, partialSig, sighashType, finalScriptSig, finalScriptWitness, porCommitment, witnessUtxo, bip32Derivation: bip32Derivation.makeConverter(typeFields_1$2.InputTypes.BIP32_DERIVATION), redeemScript: redeemScript.makeConverter(typeFields_1$2.InputTypes.REDEEM_SCRIPT), witnessScript: witnessScript.makeConverter(typeFields_1$2.InputTypes.WITNESS_SCRIPT), checkPubkey: checkPubkey.makeChecker([typeFields_1$2.InputTypes.PARTIAL_SIG, typeFields_1$2.InputTypes.BIP32_DERIVATION]), tapKeySig, tapScriptSig, tapLeafScript, tapBip32Derivation: tapBip32Derivation.makeConverter(typeFields_1$2.InputTypes.TAP_BIP32_DERIVATION), tapInternalKey: tapInternalKey.makeConverter(typeFields_1$2.InputTypes.TAP_INTERNAL_KEY), tapMerkleRoot };
converter.inputs = inputs;
const outputs = { bip32Derivation: bip32Derivation.makeConverter(typeFields_1$2.OutputTypes.BIP32_DERIVATION), redeemScript: redeemScript.makeConverter(typeFields_1$2.OutputTypes.REDEEM_SCRIPT), witnessScript: witnessScript.makeConverter(typeFields_1$2.OutputTypes.WITNESS_SCRIPT), checkPubkey: checkPubkey.makeChecker([typeFields_1$2.OutputTypes.BIP32_DERIVATION]), tapBip32Derivation: tapBip32Derivation.makeConverter(typeFields_1$2.OutputTypes.TAP_BIP32_DERIVATION), tapTree, tapInternalKey: tapInternalKey.makeConverter(typeFields_1$2.OutputTypes.TAP_INTERNAL_KEY) };
converter.outputs = outputs, Object.defineProperty(fromBuffer, "__esModule", { value: !0 });
const convert$1 = converter, tools_1$1 = tools, varuint$2 = varint, typeFields_1$1 = typeFields;
function psbtFromBuffer(B, L) {
  let V = 0;
  function J() {
    const ht = varuint$2.decode(B, V);
    V += varuint$2.encodingLength(ht);
    const bt = B.slice(V, V + ht);
    return V += ht, bt;
  }
  function re() {
    return { key: J(), value: J() };
  }
  function ne() {
    if (V >= B.length) throw new Error("Format Error: Unexpected End of PSBT");
    const ht = B.readUInt8(V) === 0;
    return ht && V++, ht;
  }
  if (function() {
    const ht = B.readUInt32BE(V);
    return V += 4, ht;
  }() !== 1886610036) throw new Error("Format Error: Invalid Magic Number");
  if (function() {
    const ht = B.readUInt8(V);
    return V += 1, ht;
  }() !== 255) throw new Error("Format Error: Magic Number must be followed by 0xff separator");
  const ie = [], oe = {};
  for (; !ne(); ) {
    const ht = re(), bt = ht.key.toString("hex");
    if (oe[bt]) throw new Error("Format Error: Keys must be unique for global keymap: key " + bt);
    oe[bt] = 1, ie.push(ht);
  }
  const pe = ie.filter((ht) => ht.key[0] === typeFields_1$1.GlobalTypes.UNSIGNED_TX);
  if (pe.length !== 1) throw new Error("Format Error: Only one UNSIGNED_TX allowed");
  const ce = L(pe[0].value), { inputCount: Oe, outputCount: rt } = ce.getInputOutputCounts(), ut = [], dt = [];
  for (const ht of tools_1$1.range(Oe)) {
    const bt = {}, Tt = [];
    for (; !ne(); ) {
      const wt = re(), Et = wt.key.toString("hex");
      if (bt[Et]) throw new Error("Format Error: Keys must be unique for each input: input index " + ht + " key " + Et);
      bt[Et] = 1, Tt.push(wt);
    }
    ut.push(Tt);
  }
  for (const ht of tools_1$1.range(rt)) {
    const bt = {}, Tt = [];
    for (; !ne(); ) {
      const wt = re(), Et = wt.key.toString("hex");
      if (bt[Et]) throw new Error("Format Error: Keys must be unique for each output: output index " + ht + " key " + Et);
      bt[Et] = 1, Tt.push(wt);
    }
    dt.push(Tt);
  }
  return psbtFromKeyVals(ce, { globalMapKeyVals: ie, inputKeyVals: ut, outputKeyVals: dt });
}
function checkKeyBuffer(B, L, V) {
  if (!L.equals(Buffer$D.from([V]))) throw new Error(`Format Error: Invalid ${B} key: ${L.toString("hex")}`);
}
function psbtFromKeyVals(B, { globalMapKeyVals: L, inputKeyVals: V, outputKeyVals: J }) {
  const re = { unsignedTx: B };
  let ne = 0;
  for (const Oe of L) switch (Oe.key[0]) {
    case typeFields_1$1.GlobalTypes.UNSIGNED_TX:
      if (checkKeyBuffer("global", Oe.key, typeFields_1$1.GlobalTypes.UNSIGNED_TX), ne > 0) throw new Error("Format Error: GlobalMap has multiple UNSIGNED_TX");
      ne++;
      break;
    case typeFields_1$1.GlobalTypes.GLOBAL_XPUB:
      re.globalXpub === void 0 && (re.globalXpub = []), re.globalXpub.push(convert$1.globals.globalXpub.decode(Oe));
      break;
    default:
      re.unknownKeyVals || (re.unknownKeyVals = []), re.unknownKeyVals.push(Oe);
  }
  const ie = V.length, oe = J.length, pe = [], ce = [];
  for (const Oe of tools_1$1.range(ie)) {
    const rt = {};
    for (const ut of V[Oe]) switch (convert$1.inputs.checkPubkey(ut), ut.key[0]) {
      case typeFields_1$1.InputTypes.NON_WITNESS_UTXO:
        if (checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.NON_WITNESS_UTXO), rt.nonWitnessUtxo !== void 0) throw new Error("Format Error: Input has multiple NON_WITNESS_UTXO");
        rt.nonWitnessUtxo = convert$1.inputs.nonWitnessUtxo.decode(ut);
        break;
      case typeFields_1$1.InputTypes.WITNESS_UTXO:
        if (checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.WITNESS_UTXO), rt.witnessUtxo !== void 0) throw new Error("Format Error: Input has multiple WITNESS_UTXO");
        rt.witnessUtxo = convert$1.inputs.witnessUtxo.decode(ut);
        break;
      case typeFields_1$1.InputTypes.PARTIAL_SIG:
        rt.partialSig === void 0 && (rt.partialSig = []), rt.partialSig.push(convert$1.inputs.partialSig.decode(ut));
        break;
      case typeFields_1$1.InputTypes.SIGHASH_TYPE:
        if (checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.SIGHASH_TYPE), rt.sighashType !== void 0) throw new Error("Format Error: Input has multiple SIGHASH_TYPE");
        rt.sighashType = convert$1.inputs.sighashType.decode(ut);
        break;
      case typeFields_1$1.InputTypes.REDEEM_SCRIPT:
        if (checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.REDEEM_SCRIPT), rt.redeemScript !== void 0) throw new Error("Format Error: Input has multiple REDEEM_SCRIPT");
        rt.redeemScript = convert$1.inputs.redeemScript.decode(ut);
        break;
      case typeFields_1$1.InputTypes.WITNESS_SCRIPT:
        if (checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.WITNESS_SCRIPT), rt.witnessScript !== void 0) throw new Error("Format Error: Input has multiple WITNESS_SCRIPT");
        rt.witnessScript = convert$1.inputs.witnessScript.decode(ut);
        break;
      case typeFields_1$1.InputTypes.BIP32_DERIVATION:
        rt.bip32Derivation === void 0 && (rt.bip32Derivation = []), rt.bip32Derivation.push(convert$1.inputs.bip32Derivation.decode(ut));
        break;
      case typeFields_1$1.InputTypes.FINAL_SCRIPTSIG:
        checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.FINAL_SCRIPTSIG), rt.finalScriptSig = convert$1.inputs.finalScriptSig.decode(ut);
        break;
      case typeFields_1$1.InputTypes.FINAL_SCRIPTWITNESS:
        checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.FINAL_SCRIPTWITNESS), rt.finalScriptWitness = convert$1.inputs.finalScriptWitness.decode(ut);
        break;
      case typeFields_1$1.InputTypes.POR_COMMITMENT:
        checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.POR_COMMITMENT), rt.porCommitment = convert$1.inputs.porCommitment.decode(ut);
        break;
      case typeFields_1$1.InputTypes.TAP_KEY_SIG:
        checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.TAP_KEY_SIG), rt.tapKeySig = convert$1.inputs.tapKeySig.decode(ut);
        break;
      case typeFields_1$1.InputTypes.TAP_SCRIPT_SIG:
        rt.tapScriptSig === void 0 && (rt.tapScriptSig = []), rt.tapScriptSig.push(convert$1.inputs.tapScriptSig.decode(ut));
        break;
      case typeFields_1$1.InputTypes.TAP_LEAF_SCRIPT:
        rt.tapLeafScript === void 0 && (rt.tapLeafScript = []), rt.tapLeafScript.push(convert$1.inputs.tapLeafScript.decode(ut));
        break;
      case typeFields_1$1.InputTypes.TAP_BIP32_DERIVATION:
        rt.tapBip32Derivation === void 0 && (rt.tapBip32Derivation = []), rt.tapBip32Derivation.push(convert$1.inputs.tapBip32Derivation.decode(ut));
        break;
      case typeFields_1$1.InputTypes.TAP_INTERNAL_KEY:
        checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.TAP_INTERNAL_KEY), rt.tapInternalKey = convert$1.inputs.tapInternalKey.decode(ut);
        break;
      case typeFields_1$1.InputTypes.TAP_MERKLE_ROOT:
        checkKeyBuffer("input", ut.key, typeFields_1$1.InputTypes.TAP_MERKLE_ROOT), rt.tapMerkleRoot = convert$1.inputs.tapMerkleRoot.decode(ut);
        break;
      default:
        rt.unknownKeyVals || (rt.unknownKeyVals = []), rt.unknownKeyVals.push(ut);
    }
    pe.push(rt);
  }
  for (const Oe of tools_1$1.range(oe)) {
    const rt = {};
    for (const ut of J[Oe]) switch (convert$1.outputs.checkPubkey(ut), ut.key[0]) {
      case typeFields_1$1.OutputTypes.REDEEM_SCRIPT:
        if (checkKeyBuffer("output", ut.key, typeFields_1$1.OutputTypes.REDEEM_SCRIPT), rt.redeemScript !== void 0) throw new Error("Format Error: Output has multiple REDEEM_SCRIPT");
        rt.redeemScript = convert$1.outputs.redeemScript.decode(ut);
        break;
      case typeFields_1$1.OutputTypes.WITNESS_SCRIPT:
        if (checkKeyBuffer("output", ut.key, typeFields_1$1.OutputTypes.WITNESS_SCRIPT), rt.witnessScript !== void 0) throw new Error("Format Error: Output has multiple WITNESS_SCRIPT");
        rt.witnessScript = convert$1.outputs.witnessScript.decode(ut);
        break;
      case typeFields_1$1.OutputTypes.BIP32_DERIVATION:
        rt.bip32Derivation === void 0 && (rt.bip32Derivation = []), rt.bip32Derivation.push(convert$1.outputs.bip32Derivation.decode(ut));
        break;
      case typeFields_1$1.OutputTypes.TAP_INTERNAL_KEY:
        checkKeyBuffer("output", ut.key, typeFields_1$1.OutputTypes.TAP_INTERNAL_KEY), rt.tapInternalKey = convert$1.outputs.tapInternalKey.decode(ut);
        break;
      case typeFields_1$1.OutputTypes.TAP_TREE:
        checkKeyBuffer("output", ut.key, typeFields_1$1.OutputTypes.TAP_TREE), rt.tapTree = convert$1.outputs.tapTree.decode(ut);
        break;
      case typeFields_1$1.OutputTypes.TAP_BIP32_DERIVATION:
        rt.tapBip32Derivation === void 0 && (rt.tapBip32Derivation = []), rt.tapBip32Derivation.push(convert$1.outputs.tapBip32Derivation.decode(ut));
        break;
      default:
        rt.unknownKeyVals || (rt.unknownKeyVals = []), rt.unknownKeyVals.push(ut);
    }
    ce.push(rt);
  }
  return { globalMap: re, inputs: pe, outputs: ce };
}
fromBuffer.psbtFromBuffer = psbtFromBuffer, fromBuffer.checkKeyBuffer = checkKeyBuffer, fromBuffer.psbtFromKeyVals = psbtFromKeyVals;
var toBuffer$3 = {};
Object.defineProperty(toBuffer$3, "__esModule", { value: !0 });
const convert = converter, tools_1 = tools;
function psbtToBuffer({ globalMap: B, inputs: L, outputs: V }) {
  const { globalKeyVals: J, inputKeyVals: re, outputKeyVals: ne } = psbtToKeyVals({ globalMap: B, inputs: L, outputs: V }), ie = tools_1.keyValsToBuffer(J), oe = (rt) => rt.length === 0 ? [Buffer$D.from([0])] : rt.map(tools_1.keyValsToBuffer), pe = oe(re), ce = oe(ne), Oe = Buffer$D.allocUnsafe(5);
  return Oe.writeUIntBE(482972169471, 0, 5), Buffer$D.concat([Oe, ie].concat(pe, ce));
}
toBuffer$3.psbtToBuffer = psbtToBuffer;
const sortKeyVals = (B, L) => B.key.compare(L.key);
function keyValsFromMap(B, L) {
  const V = /* @__PURE__ */ new Set(), J = Object.entries(B).reduce((ne, [ie, oe]) => {
    if (ie === "unknownKeyVals") return ne;
    const pe = L[ie];
    if (pe === void 0) return ne;
    const ce = (Array.isArray(oe) ? oe : [oe]).map(pe.encode);
    return ce.map((Oe) => Oe.key.toString("hex")).forEach((Oe) => {
      if (V.has(Oe)) throw new Error("Serialize Error: Duplicate key: " + Oe);
      V.add(Oe);
    }), ne.concat(ce);
  }, []), re = B.unknownKeyVals ? B.unknownKeyVals.filter((ne) => !V.has(ne.key.toString("hex"))) : [];
  return J.concat(re).sort(sortKeyVals);
}
function psbtToKeyVals({ globalMap: B, inputs: L, outputs: V }) {
  return { globalKeyVals: keyValsFromMap(B, convert.globals), inputKeyVals: L.map((J) => keyValsFromMap(J, convert.inputs)), outputKeyVals: V.map((J) => keyValsFromMap(J, convert.outputs)) };
}
toBuffer$3.psbtToKeyVals = psbtToKeyVals, function(B) {
  function L(V) {
    for (var J in V) B.hasOwnProperty(J) || (B[J] = V[J]);
  }
  Object.defineProperty(B, "__esModule", { value: !0 }), L(fromBuffer), L(toBuffer$3);
}(parser), Object.defineProperty(combiner, "__esModule", { value: !0 });
const parser_1$1 = parser;
function combine(B) {
  const L = B[0], V = parser_1$1.psbtToKeyVals(L), J = B.slice(1);
  if (J.length === 0) throw new Error("Combine: Nothing to combine");
  const re = getTx(L);
  if (re === void 0) throw new Error("Combine: Self missing transaction");
  const ne = getKeySet(V.globalKeyVals), ie = V.inputKeyVals.map(getKeySet), oe = V.outputKeyVals.map(getKeySet);
  for (const pe of J) {
    const ce = getTx(pe);
    if (ce === void 0 || !ce.toBuffer().equals(re.toBuffer())) throw new Error("Combine: One of the Psbts does not have the same transaction.");
    const Oe = parser_1$1.psbtToKeyVals(pe);
    getKeySet(Oe.globalKeyVals).forEach(keyPusher(ne, V.globalKeyVals, Oe.globalKeyVals)), Oe.inputKeyVals.map(getKeySet).forEach((rt, ut) => rt.forEach(keyPusher(ie[ut], V.inputKeyVals[ut], Oe.inputKeyVals[ut]))), Oe.outputKeyVals.map(getKeySet).forEach((rt, ut) => rt.forEach(keyPusher(oe[ut], V.outputKeyVals[ut], Oe.outputKeyVals[ut])));
  }
  return parser_1$1.psbtFromKeyVals(re, { globalMapKeyVals: V.globalKeyVals, inputKeyVals: V.inputKeyVals, outputKeyVals: V.outputKeyVals });
}
function keyPusher(B, L, V) {
  return (J) => {
    if (B.has(J)) return;
    const re = V.filter((ne) => ne.key.toString("hex") === J)[0];
    L.push(re), B.add(J);
  };
}
function getTx(B) {
  return B.globalMap.unsignedTx;
}
function getKeySet(B) {
  const L = /* @__PURE__ */ new Set();
  return B.forEach((V) => {
    const J = V.key.toString("hex");
    if (L.has(J)) throw new Error("Combine: KeyValue Map keys should be unique");
    L.add(J);
  }), L;
}
combiner.combine = combine;
var utils$o = {};
(function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 });
  const L = converter;
  function V(ie, oe) {
    const pe = ie[oe];
    if (pe === void 0) throw new Error(`No input #${oe}`);
    return pe;
  }
  function J(ie, oe) {
    const pe = ie[oe];
    if (pe === void 0) throw new Error(`No output #${oe}`);
    return pe;
  }
  function re(ie, oe, pe, ce) {
    throw new Error(`Data for ${ie} key ${oe} is incorrect: Expected ${pe} and got ${JSON.stringify(ce)}`);
  }
  function ne(ie) {
    return (oe, pe) => {
      for (const ce of Object.keys(oe)) {
        const Oe = oe[ce], { canAdd: rt, canAddToArray: ut, check: dt, expected: ht } = L[ie + "s"][ce] || {};
        if (dt) if (ut) {
          if (!Array.isArray(Oe) || pe[ce] && !Array.isArray(pe[ce])) throw new Error(`Key type ${ce} must be an array`);
          Oe.every(dt) || re(ie, ce, ht, Oe);
          const bt = pe[ce] || [], Tt = /* @__PURE__ */ new Set();
          if (!Oe.every((wt) => ut(bt, wt, Tt))) throw new Error("Can not add duplicate data to array");
          pe[ce] = bt.concat(Oe);
        } else {
          if (dt(Oe) || re(ie, ce, ht, Oe), !rt(pe, Oe)) throw new Error(`Can not add duplicate data to ${ie}`);
          pe[ce] = Oe;
        }
      }
    };
  }
  B.checkForInput = V, B.checkForOutput = J, B.checkHasKey = function(ie, oe, pe) {
    if (ie.key[0] < pe) throw new Error("Use the method for your specific key instead of addUnknownKeyVal*");
    if (oe && oe.filter((ce) => ce.key.equals(ie.key)).length !== 0) throw new Error(`Duplicate Key: ${ie.key.toString("hex")}`);
  }, B.getEnumLength = function(ie) {
    let oe = 0;
    return Object.keys(ie).forEach((pe) => {
      Number(isNaN(Number(pe))) && oe++;
    }), oe;
  }, B.inputCheckUncleanFinalized = function(ie, oe) {
    let pe = !1;
    if (oe.nonWitnessUtxo || oe.witnessUtxo) {
      const ce = !!oe.redeemScript, Oe = !!oe.witnessScript, rt = !ce || !!oe.finalScriptSig, ut = !Oe || !!oe.finalScriptWitness, dt = !!oe.finalScriptSig || !!oe.finalScriptWitness;
      pe = rt && ut && dt;
    }
    if (pe === !1) throw new Error(`Input #${ie} has too much or too little data to clean`);
  }, B.updateGlobal = ne("global"), B.updateInput = ne("input"), B.updateOutput = ne("output"), B.addInputAttributes = function(ie, oe) {
    const pe = V(ie, ie.length - 1);
    B.updateInput(oe, pe);
  }, B.addOutputAttributes = function(ie, oe) {
    const pe = J(ie, ie.length - 1);
    B.updateOutput(oe, pe);
  }, B.defaultVersionSetter = function(ie, oe) {
    if (!Buffer$D.isBuffer(oe) || oe.length < 4) throw new Error("Set Version: Invalid Transaction");
    return oe.writeUInt32LE(ie, 0), oe;
  }, B.defaultLocktimeSetter = function(ie, oe) {
    if (!Buffer$D.isBuffer(oe) || oe.length < 4) throw new Error("Set Locktime: Invalid Transaction");
    return oe.writeUInt32LE(ie, oe.length - 4), oe;
  };
})(utils$o), Object.defineProperty(psbt, "__esModule", { value: !0 });
const combiner_1 = combiner, parser_1 = parser, typeFields_1 = typeFields, utils_1$2 = utils$o;
let Psbt$1 = class {
  constructor(B) {
    this.inputs = [], this.outputs = [], this.globalMap = { unsignedTx: B };
  }
  static fromBase64(B, L) {
    const V = Buffer$D.from(B, "base64");
    return this.fromBuffer(V, L);
  }
  static fromHex(B, L) {
    const V = Buffer$D.from(B, "hex");
    return this.fromBuffer(V, L);
  }
  static fromBuffer(B, L) {
    const V = parser_1.psbtFromBuffer(B, L), J = new this(V.globalMap.unsignedTx);
    return Object.assign(J, V), J;
  }
  toBase64() {
    return this.toBuffer().toString("base64");
  }
  toHex() {
    return this.toBuffer().toString("hex");
  }
  toBuffer() {
    return parser_1.psbtToBuffer(this);
  }
  updateGlobal(B) {
    return utils_1$2.updateGlobal(B, this.globalMap), this;
  }
  updateInput(B, L) {
    const V = utils_1$2.checkForInput(this.inputs, B);
    return utils_1$2.updateInput(L, V), this;
  }
  updateOutput(B, L) {
    const V = utils_1$2.checkForOutput(this.outputs, B);
    return utils_1$2.updateOutput(L, V), this;
  }
  addUnknownKeyValToGlobal(B) {
    return utils_1$2.checkHasKey(B, this.globalMap.unknownKeyVals, utils_1$2.getEnumLength(typeFields_1.GlobalTypes)), this.globalMap.unknownKeyVals || (this.globalMap.unknownKeyVals = []), this.globalMap.unknownKeyVals.push(B), this;
  }
  addUnknownKeyValToInput(B, L) {
    const V = utils_1$2.checkForInput(this.inputs, B);
    return utils_1$2.checkHasKey(L, V.unknownKeyVals, utils_1$2.getEnumLength(typeFields_1.InputTypes)), V.unknownKeyVals || (V.unknownKeyVals = []), V.unknownKeyVals.push(L), this;
  }
  addUnknownKeyValToOutput(B, L) {
    const V = utils_1$2.checkForOutput(this.outputs, B);
    return utils_1$2.checkHasKey(L, V.unknownKeyVals, utils_1$2.getEnumLength(typeFields_1.OutputTypes)), V.unknownKeyVals || (V.unknownKeyVals = []), V.unknownKeyVals.push(L), this;
  }
  addInput(B) {
    this.globalMap.unsignedTx.addInput(B), this.inputs.push({ unknownKeyVals: [] });
    const L = B.unknownKeyVals || [], V = this.inputs.length - 1;
    if (!Array.isArray(L)) throw new Error("unknownKeyVals must be an Array");
    return L.forEach((J) => this.addUnknownKeyValToInput(V, J)), utils_1$2.addInputAttributes(this.inputs, B), this;
  }
  addOutput(B) {
    this.globalMap.unsignedTx.addOutput(B), this.outputs.push({ unknownKeyVals: [] });
    const L = B.unknownKeyVals || [], V = this.outputs.length - 1;
    if (!Array.isArray(L)) throw new Error("unknownKeyVals must be an Array");
    return L.forEach((J) => this.addUnknownKeyValToOutput(V, J)), utils_1$2.addOutputAttributes(this.outputs, B), this;
  }
  clearFinalizedInput(B) {
    const L = utils_1$2.checkForInput(this.inputs, B);
    utils_1$2.inputCheckUncleanFinalized(B, L);
    for (const V of Object.keys(L)) ["witnessUtxo", "nonWitnessUtxo", "finalScriptSig", "finalScriptWitness", "unknownKeyVals"].includes(V) || delete L[V];
    return this;
  }
  combine(...B) {
    const L = combiner_1.combine([this].concat(B));
    return Object.assign(this, L), this;
  }
  getTransaction() {
    return this.globalMap.unsignedTx.toBuffer();
  }
};
psbt.Psbt = Psbt$1;
var bip371 = {}, psbtutils = {};
Object.defineProperty(psbtutils, "__esModule", { value: !0 }), psbtutils.signatureBlocksAction = psbtutils.checkInputForSig = psbtutils.pubkeyInScript = psbtutils.pubkeyPositionInScript = psbtutils.witnessStackToScriptWitness = psbtutils.isP2TR = psbtutils.isP2SHScript = psbtutils.isP2WSHScript = psbtutils.isP2WPKH = psbtutils.isP2PKH = psbtutils.isP2PK = psbtutils.isP2MS = void 0;
const varuint$1 = varint, bscript$1 = requireScript(), transaction_1$2 = transaction, crypto_1 = crypto$6, payments$1 = requirePayments();
function isPaymentFactory$1(B) {
  return (L) => {
    try {
      return B({ output: L }), !0;
    } catch {
      return !1;
    }
  };
}
function witnessStackToScriptWitness(B) {
  let L = Buffer$D.allocUnsafe(0);
  function V(ne) {
    const ie = L.length, oe = varuint$1.encodingLength(ne);
    L = Buffer$D.concat([L, Buffer$D.allocUnsafe(oe)]), varuint$1.encode(ne, L, ie);
  }
  function J(ne) {
    V(ne.length), function(ie) {
      L = Buffer$D.concat([L, Buffer$D.from(ie)]);
    }(ne);
  }
  var re;
  return V((re = B).length), re.forEach(J), L;
}
function pubkeyPositionInScript(B, L) {
  const V = (0, crypto_1.hash160)(B), J = B.slice(1, 33), re = bscript$1.decompile(L);
  if (re === null) throw new Error("Unknown script error");
  return re.findIndex((ne) => typeof ne != "number" && (ne.equals(B) || ne.equals(V) || ne.equals(J)));
}
function pubkeyInScript(B, L) {
  return pubkeyPositionInScript(B, L) !== -1;
}
function checkInputForSig(B, L) {
  return extractPartialSigs(B).some((V) => signatureBlocksAction(V, bscript$1.signature.decode, L));
}
function signatureBlocksAction(B, L, V) {
  const { hashType: J } = L(B), re = [];
  switch (J & transaction_1$2.Transaction.SIGHASH_ANYONECANPAY && re.push("addInput"), 31 & J) {
    case transaction_1$2.Transaction.SIGHASH_ALL:
      break;
    case transaction_1$2.Transaction.SIGHASH_SINGLE:
    case transaction_1$2.Transaction.SIGHASH_NONE:
      re.push("addOutput"), re.push("setInputSequence");
  }
  return re.indexOf(V) === -1;
}
function extractPartialSigs(B) {
  let L = [];
  if ((B.partialSig || []).length === 0) {
    if (!B.finalScriptSig && !B.finalScriptWitness) return [];
    L = getPsigsFromInputFinalScripts(B);
  } else L = B.partialSig;
  return L.map((V) => V.signature);
}
function getPsigsFromInputFinalScripts(B) {
  const L = B.finalScriptSig && bscript$1.decompile(B.finalScriptSig) || [], V = B.finalScriptWitness && bscript$1.decompile(B.finalScriptWitness) || [];
  return L.concat(V).filter((J) => Buffer$D.isBuffer(J) && bscript$1.isCanonicalScriptSignature(J)).map((J) => ({ signature: J }));
}
psbtutils.isP2MS = isPaymentFactory$1(payments$1.p2ms), psbtutils.isP2PK = isPaymentFactory$1(payments$1.p2pk), psbtutils.isP2PKH = isPaymentFactory$1(payments$1.p2pkh), psbtutils.isP2WPKH = isPaymentFactory$1(payments$1.p2wpkh), psbtutils.isP2WSHScript = isPaymentFactory$1(payments$1.p2wsh), psbtutils.isP2SHScript = isPaymentFactory$1(payments$1.p2sh), psbtutils.isP2TR = isPaymentFactory$1(payments$1.p2tr), psbtutils.witnessStackToScriptWitness = witnessStackToScriptWitness, psbtutils.pubkeyPositionInScript = pubkeyPositionInScript, psbtutils.pubkeyInScript = pubkeyInScript, psbtutils.checkInputForSig = checkInputForSig, psbtutils.signatureBlocksAction = signatureBlocksAction, Object.defineProperty(bip371, "__esModule", { value: !0 }), bip371.checkTaprootInputForSigs = bip371.tapTreeFromList = bip371.tapTreeToList = bip371.tweakInternalPubKey = bip371.checkTaprootOutputFields = bip371.checkTaprootInputFields = bip371.isTaprootOutput = bip371.isTaprootInput = bip371.serializeTaprootSignature = bip371.tapScriptFinalizer = bip371.toXOnly = void 0;
const types_1 = types$7, transaction_1$1 = transaction, psbtutils_1$1 = psbtutils, bip341_1$1 = bip341, payments_1 = requirePayments(), psbtutils_2 = psbtutils, toXOnly$2 = (B) => B.length === 32 ? B : B.slice(1, 33);
function tapScriptFinalizer(B, L, V) {
  const J = findTapLeafToFinalize(L, B, V);
  try {
    const re = sortSignatures(L, J).concat(J.script).concat(J.controlBlock);
    return { finalScriptWitness: (0, psbtutils_1$1.witnessStackToScriptWitness)(re) };
  } catch (re) {
    throw new Error(`Can not finalize taproot input #${B}: ${re}`);
  }
}
function serializeTaprootSignature(B, L) {
  const V = L ? Buffer$D.from([L]) : Buffer$D.from([]);
  return Buffer$D.concat([B, V]);
}
function isTaprootInput(B) {
  return B && !!(B.tapInternalKey || B.tapMerkleRoot || B.tapLeafScript && B.tapLeafScript.length || B.tapBip32Derivation && B.tapBip32Derivation.length || B.witnessUtxo && (0, psbtutils_1$1.isP2TR)(B.witnessUtxo.script));
}
function isTaprootOutput(B, L) {
  return B && !!(B.tapInternalKey || B.tapTree || B.tapBip32Derivation && B.tapBip32Derivation.length || L && (0, psbtutils_1$1.isP2TR)(L));
}
function checkTaprootInputFields(B, L, V) {
  checkMixedTaprootAndNonTaprootInputFields(B, L, V), checkIfTapLeafInTree(B, L, V);
}
function checkTaprootOutputFields(B, L, V) {
  checkMixedTaprootAndNonTaprootOutputFields(B, L, V), checkTaprootScriptPubkey(B, L);
}
function checkTaprootScriptPubkey(B, L) {
  if (!L.tapTree && !L.tapInternalKey) return;
  const V = L.tapInternalKey || B.tapInternalKey, J = L.tapTree || B.tapTree;
  if (V) {
    const { script: re } = B, ne = getTaprootScripPubkey(V, J);
    if (re && !re.equals(ne)) throw new Error("Error adding output. Script or address missmatch.");
  }
}
function getTaprootScripPubkey(B, L) {
  const V = L && tapTreeFromList(L.leaves), { output: J } = (0, payments_1.p2tr)({ internalPubkey: B, scriptTree: V });
  return J;
}
function tweakInternalPubKey(B, L) {
  const V = L.tapInternalKey, J = V && (0, bip341_1$1.tweakKey)(V, L.tapMerkleRoot);
  if (!J) throw new Error(`Cannot tweak tap internal key for input #${B}. Public key: ${V && V.toString("hex")}`);
  return J.x;
}
function tapTreeToList(B) {
  if (!(0, types_1.isTaptree)(B)) throw new Error("Cannot convert taptree to tapleaf list. Expecting a tapree structure.");
  return _tapTreeToList(B);
}
function tapTreeFromList(B = []) {
  return B.length === 1 && B[0].depth === 0 ? { output: B[0].script, version: B[0].leafVersion } : instertLeavesInTree(B);
}
function checkTaprootInputForSigs(B, L) {
  return extractTaprootSigs(B).some((V) => (0, psbtutils_2.signatureBlocksAction)(V, decodeSchnorrSignature, L));
}
function decodeSchnorrSignature(B) {
  return { signature: B.slice(0, 64), hashType: B.slice(64)[0] || transaction_1$1.Transaction.SIGHASH_DEFAULT };
}
function extractTaprootSigs(B) {
  const L = [];
  if (B.tapKeySig && L.push(B.tapKeySig), B.tapScriptSig && L.push(...B.tapScriptSig.map((V) => V.signature)), !L.length) {
    const V = getTapKeySigFromWithness(B.finalScriptWitness);
    V && L.push(V);
  }
  return L;
}
function getTapKeySigFromWithness(B) {
  if (!B) return;
  const L = B.slice(2);
  return L.length === 64 || L.length === 65 ? L : void 0;
}
function _tapTreeToList(B, L = [], V = 0) {
  if (V > bip341_1$1.MAX_TAPTREE_DEPTH) throw new Error("Max taptree depth exceeded.");
  return B ? (0, types_1.isTapleaf)(B) ? (L.push({ depth: V, leafVersion: B.version || bip341_1$1.LEAF_VERSION_TAPSCRIPT, script: B.output }), L) : (B[0] && _tapTreeToList(B[0], L, V + 1), B[1] && _tapTreeToList(B[1], L, V + 1), L) : [];
}
function instertLeavesInTree(B) {
  let L;
  for (const V of B) if (L = instertLeafInTree(V, L), !L) throw new Error("No room left to insert tapleaf in tree");
  return L;
}
function instertLeafInTree(B, L, V = 0) {
  if (V > bip341_1$1.MAX_TAPTREE_DEPTH) throw new Error("Max taptree depth exceeded.");
  if (B.depth === V) return L ? void 0 : { output: B.script, version: B.leafVersion };
  if ((0, types_1.isTapleaf)(L)) return;
  const J = instertLeafInTree(B, L && L[0], V + 1);
  if (J) return [J, L && L[1]];
  const re = instertLeafInTree(B, L && L[1], V + 1);
  return re ? [L && L[0], re] : void 0;
}
function checkMixedTaprootAndNonTaprootInputFields(B, L, V) {
  const J = isTaprootInput(B) && hasNonTaprootFields(L), re = hasNonTaprootFields(B) && isTaprootInput(L), ne = B === L && isTaprootInput(L) && hasNonTaprootFields(L);
  if (J || re || ne) throw new Error(`Invalid arguments for Psbt.${V}. Cannot use both taproot and non-taproot fields.`);
}
function checkMixedTaprootAndNonTaprootOutputFields(B, L, V) {
  const J = isTaprootOutput(B) && hasNonTaprootFields(L), re = hasNonTaprootFields(B) && isTaprootOutput(L), ne = B === L && isTaprootOutput(L) && hasNonTaprootFields(L);
  if (J || re || ne) throw new Error(`Invalid arguments for Psbt.${V}. Cannot use both taproot and non-taproot fields.`);
}
function checkIfTapLeafInTree(B, L, V) {
  if (L.tapMerkleRoot) {
    const J = (L.tapLeafScript || []).every((ne) => isTapLeafInTree(ne, L.tapMerkleRoot)), re = (B.tapLeafScript || []).every((ne) => isTapLeafInTree(ne, L.tapMerkleRoot));
    if (!J || !re) throw new Error(`Invalid arguments for Psbt.${V}. Tapleaf not part of taptree.`);
  } else if (B.tapMerkleRoot && !(L.tapLeafScript || []).every((re) => isTapLeafInTree(re, B.tapMerkleRoot)))
    throw new Error(`Invalid arguments for Psbt.${V}. Tapleaf not part of taptree.`);
}
function isTapLeafInTree(B, L) {
  if (!L) return !0;
  const V = (0, bip341_1$1.tapleafHash)({ output: B.script, version: B.leafVersion });
  return (0, bip341_1$1.rootHashFromPath)(B.controlBlock, V).equals(L);
}
function sortSignatures(B, L) {
  const V = (0, bip341_1$1.tapleafHash)({ output: L.script, version: L.leafVersion });
  return (B.tapScriptSig || []).filter((J) => J.leafHash.equals(V)).map((J) => addPubkeyPositionInScript(L.script, J)).sort((J, re) => re.positionInScript - J.positionInScript).map((J) => J.signature);
}
function addPubkeyPositionInScript(B, L) {
  return Object.assign({ positionInScript: (0, psbtutils_1$1.pubkeyPositionInScript)(L.pubkey, B) }, L);
}
function findTapLeafToFinalize(B, L, V) {
  if (!B.tapScriptSig || !B.tapScriptSig.length) throw new Error(`Can not finalize taproot input #${L}. No tapleaf script signature provided.`);
  const J = (B.tapLeafScript || []).sort((re, ne) => re.controlBlock.length - ne.controlBlock.length).find((re) => canFinalizeLeaf(re, B.tapScriptSig, V));
  if (!J) throw new Error(`Can not finalize taproot input #${L}. Signature for tapleaf script not found.`);
  return J;
}
function canFinalizeLeaf(B, L, V) {
  const J = (0, bip341_1$1.tapleafHash)({ output: B.script, version: B.leafVersion });
  return (!V || V.equals(J)) && L.find((re) => re.leafHash.equals(J)) !== void 0;
}
function hasNonTaprootFields(B) {
  return B && !!(B.redeemScript || B.witnessScript || B.bip32Derivation && B.bip32Derivation.length);
}
bip371.toXOnly = toXOnly$2, bip371.tapScriptFinalizer = tapScriptFinalizer, bip371.serializeTaprootSignature = serializeTaprootSignature, bip371.isTaprootInput = isTaprootInput, bip371.isTaprootOutput = isTaprootOutput, bip371.checkTaprootInputFields = checkTaprootInputFields, bip371.checkTaprootOutputFields = checkTaprootOutputFields, bip371.tweakInternalPubKey = tweakInternalPubKey, bip371.tapTreeToList = tapTreeToList, bip371.tapTreeFromList = tapTreeFromList, bip371.checkTaprootInputForSigs = checkTaprootInputForSigs, Object.defineProperty(psbt$1, "__esModule", { value: !0 }), psbt$1.Psbt = void 0;
const bip174_1 = psbt, varuint = varint, utils_1$1 = utils$o, address_1 = requireAddress(), bufferutils_1 = bufferutils, networks_1 = networks$2, payments = requirePayments(), bip341_1 = bip341, bscript = requireScript(), transaction_1 = transaction, bip371_1 = bip371, psbtutils_1 = psbtutils, DEFAULT_OPTS = { network: networks_1.bitcoin, maximumFeeRate: 5e3 };
class Psbt {
  static fromBase64(L, V = {}) {
    const J = Buffer$D.from(L, "base64");
    return this.fromBuffer(J, V);
  }
  static fromHex(L, V = {}) {
    const J = Buffer$D.from(L, "hex");
    return this.fromBuffer(J, V);
  }
  static fromBuffer(L, V = {}) {
    const J = bip174_1.Psbt.fromBuffer(L, transactionFromBuffer), re = new Psbt(V, J);
    return checkTxForDupeIns(re.__CACHE.__TX, re.__CACHE), re;
  }
  constructor(L = {}, V = new bip174_1.Psbt(new PsbtTransaction())) {
    this.data = V, this.opts = Object.assign({}, DEFAULT_OPTS, L), this.__CACHE = { __NON_WITNESS_UTXO_TX_CACHE: [], __NON_WITNESS_UTXO_BUF_CACHE: [], __TX_IN_CACHE: {}, __TX: this.data.globalMap.unsignedTx.tx, __UNSAFE_SIGN_NONSEGWIT: !1 }, this.data.inputs.length === 0 && this.setVersion(2);
    const J = (re, ne, ie, oe) => Object.defineProperty(re, ne, { enumerable: ie, writable: oe });
    J(this, "__CACHE", !1, !0), J(this, "opts", !1, !0);
  }
  get inputCount() {
    return this.data.inputs.length;
  }
  get version() {
    return this.__CACHE.__TX.version;
  }
  set version(L) {
    this.setVersion(L);
  }
  get locktime() {
    return this.__CACHE.__TX.locktime;
  }
  set locktime(L) {
    this.setLocktime(L);
  }
  get txInputs() {
    return this.__CACHE.__TX.ins.map((L) => ({ hash: (0, bufferutils_1.cloneBuffer)(L.hash), index: L.index, sequence: L.sequence }));
  }
  get txOutputs() {
    return this.__CACHE.__TX.outs.map((L) => {
      let V;
      try {
        V = (0, address_1.fromOutputScript)(L.script, this.opts.network);
      } catch {
      }
      return { script: (0, bufferutils_1.cloneBuffer)(L.script), value: L.value, address: V };
    });
  }
  combine(...L) {
    return this.data.combine(...L.map((V) => V.data)), this;
  }
  clone() {
    const L = Psbt.fromBuffer(this.data.toBuffer());
    return L.opts = JSON.parse(JSON.stringify(this.opts)), L;
  }
  setMaximumFeeRate(L) {
    check32Bit(L), this.opts.maximumFeeRate = L;
  }
  setVersion(L) {
    check32Bit(L), checkInputsForPartialSig(this.data.inputs, "setVersion");
    const V = this.__CACHE;
    return V.__TX.version = L, V.__EXTRACTED_TX = void 0, this;
  }
  setLocktime(L) {
    check32Bit(L), checkInputsForPartialSig(this.data.inputs, "setLocktime");
    const V = this.__CACHE;
    return V.__TX.locktime = L, V.__EXTRACTED_TX = void 0, this;
  }
  setInputSequence(L, V) {
    check32Bit(V), checkInputsForPartialSig(this.data.inputs, "setInputSequence");
    const J = this.__CACHE;
    if (J.__TX.ins.length <= L) throw new Error("Input index too high");
    return J.__TX.ins[L].sequence = V, J.__EXTRACTED_TX = void 0, this;
  }
  addInputs(L) {
    return L.forEach((V) => this.addInput(V)), this;
  }
  addInput(L) {
    if (arguments.length > 1 || !L || L.hash === void 0 || L.index === void 0) throw new Error("Invalid arguments for Psbt.addInput. Requires single object with at least [hash] and [index]");
    (0, bip371_1.checkTaprootInputFields)(L, L, "addInput"), checkInputsForPartialSig(this.data.inputs, "addInput"), L.witnessScript && checkInvalidP2WSH(L.witnessScript);
    const V = this.__CACHE;
    this.data.addInput(L), checkTxInputCache(V, V.__TX.ins[V.__TX.ins.length - 1]);
    const J = this.data.inputs.length - 1, re = this.data.inputs[J];
    return re.nonWitnessUtxo && addNonWitnessTxCache(this.__CACHE, re, J), V.__FEE = void 0, V.__FEE_RATE = void 0, V.__EXTRACTED_TX = void 0, this;
  }
  addOutputs(L) {
    return L.forEach((V) => this.addOutput(V)), this;
  }
  addOutput(L) {
    if (arguments.length > 1 || !L || L.value === void 0 || L.address === void 0 && L.script === void 0) throw new Error("Invalid arguments for Psbt.addOutput. Requires single object with at least [script or address] and [value]");
    checkInputsForPartialSig(this.data.inputs, "addOutput");
    const { address: V } = L;
    if (typeof V == "string") {
      const { network: re } = this.opts, ne = (0, address_1.toOutputScript)(V, re);
      L = Object.assign({}, L, { script: ne });
    }
    (0, bip371_1.checkTaprootOutputFields)(L, L, "addOutput");
    const J = this.__CACHE;
    return this.data.addOutput(L), J.__FEE = void 0, J.__FEE_RATE = void 0, J.__EXTRACTED_TX = void 0, this;
  }
  extractTransaction(L) {
    if (!this.data.inputs.every(isFinalized)) throw new Error("Not finalized");
    const V = this.__CACHE;
    if (L || checkFees(this, V, this.opts), V.__EXTRACTED_TX) return V.__EXTRACTED_TX;
    const J = V.__TX.clone();
    return inputFinalizeGetAmts(this.data.inputs, J, V, !0), J;
  }
  getFeeRate() {
    return getTxCacheValue("__FEE_RATE", "fee rate", this.data.inputs, this.__CACHE);
  }
  getFee() {
    return getTxCacheValue("__FEE", "fee", this.data.inputs, this.__CACHE);
  }
  finalizeAllInputs() {
    return (0, utils_1$1.checkForInput)(this.data.inputs, 0), range$1(this.data.inputs.length).forEach((L) => this.finalizeInput(L)), this;
  }
  finalizeInput(L, V) {
    const J = (0, utils_1$1.checkForInput)(this.data.inputs, L);
    return (0, bip371_1.isTaprootInput)(J) ? this._finalizeTaprootInput(L, J, void 0, V) : this._finalizeInput(L, J, V);
  }
  finalizeTaprootInput(L, V, J = bip371_1.tapScriptFinalizer) {
    const re = (0, utils_1$1.checkForInput)(this.data.inputs, L);
    if ((0, bip371_1.isTaprootInput)(re)) return this._finalizeTaprootInput(L, re, V, J);
    throw new Error(`Cannot finalize input #${L}. Not Taproot.`);
  }
  _finalizeInput(L, V, J = getFinalScripts) {
    const { script: re, isP2SH: ne, isP2WSH: ie, isSegwit: oe } = getScriptFromInput(L, V, this.__CACHE);
    if (!re) throw new Error(`No script found for input #${L}`);
    checkPartialSigSighashes(V);
    const { finalScriptSig: pe, finalScriptWitness: ce } = J(L, V, re, oe, ne, ie);
    if (pe && this.data.updateInput(L, { finalScriptSig: pe }), ce && this.data.updateInput(L, { finalScriptWitness: ce }), !pe && !ce) throw new Error(`Unknown error finalizing input #${L}`);
    return this.data.clearFinalizedInput(L), this;
  }
  _finalizeTaprootInput(L, V, J, re = bip371_1.tapScriptFinalizer) {
    if (!V.witnessUtxo) throw new Error(`Cannot finalize input #${L}. Missing withness utxo.`);
    if (V.tapKeySig) {
      const ne = payments.p2tr({ output: V.witnessUtxo.script, signature: V.tapKeySig }), ie = (0, psbtutils_1.witnessStackToScriptWitness)(ne.witness);
      this.data.updateInput(L, { finalScriptWitness: ie });
    } else {
      const { finalScriptWitness: ne } = re(L, V, J);
      this.data.updateInput(L, { finalScriptWitness: ne });
    }
    return this.data.clearFinalizedInput(L), this;
  }
  getInputType(L) {
    const V = (0, utils_1$1.checkForInput)(this.data.inputs, L), J = getMeaningfulScript(getScriptFromUtxo(L, V, this.__CACHE), L, "input", V.redeemScript || redeemFromFinalScriptSig(V.finalScriptSig), V.witnessScript || redeemFromFinalWitnessScript(V.finalScriptWitness));
    return (J.type === "raw" ? "" : J.type + "-") + classifyScript(J.meaningfulScript);
  }
  inputHasPubkey(L, V) {
    return pubkeyInInput(V, (0, utils_1$1.checkForInput)(this.data.inputs, L), L, this.__CACHE);
  }
  inputHasHDKey(L, V) {
    const J = (0, utils_1$1.checkForInput)(this.data.inputs, L), re = bip32DerivationIsMine(V);
    return !!J.bip32Derivation && J.bip32Derivation.some(re);
  }
  outputHasPubkey(L, V) {
    return pubkeyInOutput(V, (0, utils_1$1.checkForOutput)(this.data.outputs, L), L, this.__CACHE);
  }
  outputHasHDKey(L, V) {
    const J = (0, utils_1$1.checkForOutput)(this.data.outputs, L), re = bip32DerivationIsMine(V);
    return !!J.bip32Derivation && J.bip32Derivation.some(re);
  }
  validateSignaturesOfAllInputs(L) {
    return (0, utils_1$1.checkForInput)(this.data.inputs, 0), range$1(this.data.inputs.length).map((V) => this.validateSignaturesOfInput(V, L)).reduce((V, J) => J === !0 && V, !0);
  }
  validateSignaturesOfInput(L, V, J) {
    const re = this.data.inputs[L];
    return (0, bip371_1.isTaprootInput)(re) ? this.validateSignaturesOfTaprootInput(L, V, J) : this._validateSignaturesOfInput(L, V, J);
  }
  _validateSignaturesOfInput(L, V, J) {
    const re = this.data.inputs[L], ne = (re || {}).partialSig;
    if (!re || !ne || ne.length < 1) throw new Error("No signatures to validate");
    if (typeof V != "function") throw new Error("Need validator function to validate signatures");
    const ie = J ? ne.filter((rt) => rt.pubkey.equals(J)) : ne;
    if (ie.length < 1) throw new Error("No signatures for this pubkey");
    const oe = [];
    let pe, ce, Oe;
    for (const rt of ie) {
      const ut = bscript.signature.decode(rt.signature), { hash: dt, script: ht } = Oe !== ut.hashType ? getHashForSig(L, Object.assign({}, re, { sighashType: ut.hashType }), this.__CACHE, !0) : { hash: pe, script: ce };
      Oe = ut.hashType, pe = dt, ce = ht, checkScriptForPubkey(rt.pubkey, ht, "verify"), oe.push(V(rt.pubkey, dt, ut.signature));
    }
    return oe.every((rt) => rt === !0);
  }
  validateSignaturesOfTaprootInput(L, V, J) {
    const re = this.data.inputs[L], ne = (re || {}).tapKeySig, ie = (re || {}).tapScriptSig;
    if (!re && !ne && (!ie || ie.length)) throw new Error("No signatures to validate");
    if (typeof V != "function") throw new Error("Need validator function to validate signatures");
    const oe = (J = J && (0, bip371_1.toXOnly)(J)) ? getTaprootHashesForSig(L, re, this.data.inputs, J, this.__CACHE) : getAllTaprootHashesForSig(L, re, this.data.inputs, this.__CACHE);
    if (!oe.length) throw new Error("No signatures for this pubkey");
    const pe = oe.find((Oe) => !Oe.leafHash);
    let ce = 0;
    if (ne && pe) {
      if (!V(pe.pubkey, pe.hash, trimTaprootSig(ne))) return !1;
      ce++;
    }
    if (ie) for (const Oe of ie) {
      const rt = oe.find((ut) => Oe.pubkey.equals(ut.pubkey));
      if (rt) {
        if (!V(Oe.pubkey, rt.hash, trimTaprootSig(Oe.signature))) return !1;
        ce++;
      }
    }
    return ce > 0;
  }
  signAllInputsHD(L, V = [transaction_1.Transaction.SIGHASH_ALL]) {
    if (!L || !L.publicKey || !L.fingerprint) throw new Error("Need HDSigner to sign input");
    const J = [];
    for (const re of range$1(this.data.inputs.length)) try {
      this.signInputHD(re, L, V), J.push(!0);
    } catch {
      J.push(!1);
    }
    if (J.every((re) => re === !1)) throw new Error("No inputs were signed");
    return this;
  }
  signAllInputsHDAsync(L, V = [transaction_1.Transaction.SIGHASH_ALL]) {
    return new Promise((J, re) => {
      if (!L || !L.publicKey || !L.fingerprint) return re(new Error("Need HDSigner to sign input"));
      const ne = [], ie = [];
      for (const oe of range$1(this.data.inputs.length)) ie.push(this.signInputHDAsync(oe, L, V).then(() => {
        ne.push(!0);
      }, () => {
        ne.push(!1);
      }));
      return Promise.all(ie).then(() => {
        if (ne.every((oe) => oe === !1)) return re(new Error("No inputs were signed"));
        J();
      });
    });
  }
  signInputHD(L, V, J = [transaction_1.Transaction.SIGHASH_ALL]) {
    if (!V || !V.publicKey || !V.fingerprint) throw new Error("Need HDSigner to sign input");
    return getSignersFromHD(L, this.data.inputs, V).forEach((re) => this.signInput(L, re, J)), this;
  }
  signInputHDAsync(L, V, J = [transaction_1.Transaction.SIGHASH_ALL]) {
    return new Promise((re, ne) => {
      if (!V || !V.publicKey || !V.fingerprint) return ne(new Error("Need HDSigner to sign input"));
      const ie = getSignersFromHD(L, this.data.inputs, V).map((oe) => this.signInputAsync(L, oe, J));
      return Promise.all(ie).then(() => {
        re();
      }).catch(ne);
    });
  }
  signAllInputs(L, V) {
    if (!L || !L.publicKey) throw new Error("Need Signer to sign input");
    const J = [];
    for (const re of range$1(this.data.inputs.length)) try {
      this.signInput(re, L, V), J.push(!0);
    } catch {
      J.push(!1);
    }
    if (J.every((re) => re === !1)) throw new Error("No inputs were signed");
    return this;
  }
  signAllInputsAsync(L, V) {
    return new Promise((J, re) => {
      if (!L || !L.publicKey) return re(new Error("Need Signer to sign input"));
      const ne = [], ie = [];
      for (const [oe] of this.data.inputs.entries()) ie.push(this.signInputAsync(oe, L, V).then(() => {
        ne.push(!0);
      }, () => {
        ne.push(!1);
      }));
      return Promise.all(ie).then(() => {
        if (ne.every((oe) => oe === !1)) return re(new Error("No inputs were signed"));
        J();
      });
    });
  }
  signInput(L, V, J) {
    if (!V || !V.publicKey) throw new Error("Need Signer to sign input");
    const re = (0, utils_1$1.checkForInput)(this.data.inputs, L);
    return (0, bip371_1.isTaprootInput)(re) ? this._signTaprootInput(L, re, V, void 0, J) : this._signInput(L, V, J);
  }
  signTaprootInput(L, V, J, re) {
    if (!V || !V.publicKey) throw new Error("Need Signer to sign input");
    const ne = (0, utils_1$1.checkForInput)(this.data.inputs, L);
    if ((0, bip371_1.isTaprootInput)(ne)) return this._signTaprootInput(L, ne, V, J, re);
    throw new Error(`Input #${L} is not of type Taproot.`);
  }
  _signInput(L, V, J = [transaction_1.Transaction.SIGHASH_ALL]) {
    const { hash: re, sighashType: ne } = getHashAndSighashType(this.data.inputs, L, V.publicKey, this.__CACHE, J), ie = [{ pubkey: V.publicKey, signature: bscript.signature.encode(V.sign(re), ne) }];
    return this.data.updateInput(L, { partialSig: ie }), this;
  }
  _signTaprootInput(L, V, J, re, ne = [transaction_1.Transaction.SIGHASH_DEFAULT]) {
    const ie = this.checkTaprootHashesForSig(L, V, J, re, ne), oe = ie.filter((ce) => !ce.leafHash).map((ce) => (0, bip371_1.serializeTaprootSignature)(J.signSchnorr(ce.hash), V.sighashType))[0], pe = ie.filter((ce) => !!ce.leafHash).map((ce) => ({ pubkey: (0, bip371_1.toXOnly)(J.publicKey), signature: (0, bip371_1.serializeTaprootSignature)(J.signSchnorr(ce.hash), V.sighashType), leafHash: ce.leafHash }));
    return oe && this.data.updateInput(L, { tapKeySig: oe }), pe.length && this.data.updateInput(L, { tapScriptSig: pe }), this;
  }
  signInputAsync(L, V, J) {
    return Promise.resolve().then(() => {
      if (!V || !V.publicKey) throw new Error("Need Signer to sign input");
      const re = (0, utils_1$1.checkForInput)(this.data.inputs, L);
      return (0, bip371_1.isTaprootInput)(re) ? this._signTaprootInputAsync(L, re, V, void 0, J) : this._signInputAsync(L, V, J);
    });
  }
  signTaprootInputAsync(L, V, J, re) {
    return Promise.resolve().then(() => {
      if (!V || !V.publicKey) throw new Error("Need Signer to sign input");
      const ne = (0, utils_1$1.checkForInput)(this.data.inputs, L);
      if ((0, bip371_1.isTaprootInput)(ne)) return this._signTaprootInputAsync(L, ne, V, J, re);
      throw new Error(`Input #${L} is not of type Taproot.`);
    });
  }
  _signInputAsync(L, V, J = [transaction_1.Transaction.SIGHASH_ALL]) {
    const { hash: re, sighashType: ne } = getHashAndSighashType(this.data.inputs, L, V.publicKey, this.__CACHE, J);
    return Promise.resolve(V.sign(re)).then((ie) => {
      const oe = [{ pubkey: V.publicKey, signature: bscript.signature.encode(ie, ne) }];
      this.data.updateInput(L, { partialSig: oe });
    });
  }
  async _signTaprootInputAsync(L, V, J, re, ne = [transaction_1.Transaction.SIGHASH_DEFAULT]) {
    const ie = this.checkTaprootHashesForSig(L, V, J, re, ne), oe = [], pe = ie.filter((Oe) => !Oe.leafHash)[0];
    if (pe) {
      const Oe = Promise.resolve(J.signSchnorr(pe.hash)).then((rt) => ({ tapKeySig: (0, bip371_1.serializeTaprootSignature)(rt, V.sighashType) }));
      oe.push(Oe);
    }
    const ce = ie.filter((Oe) => !!Oe.leafHash);
    if (ce.length) {
      const Oe = ce.map((rt) => Promise.resolve(J.signSchnorr(rt.hash)).then((ut) => ({ tapScriptSig: [{ pubkey: (0, bip371_1.toXOnly)(J.publicKey), signature: (0, bip371_1.serializeTaprootSignature)(ut, V.sighashType), leafHash: rt.leafHash }] })));
      oe.push(...Oe);
    }
    return Promise.all(oe).then((Oe) => {
      Oe.forEach((rt) => this.data.updateInput(L, rt));
    });
  }
  checkTaprootHashesForSig(L, V, J, re, ne) {
    if (typeof J.signSchnorr != "function") throw new Error(`Need Schnorr Signer to sign taproot input #${L}.`);
    const ie = getTaprootHashesForSig(L, V, this.data.inputs, J.publicKey, this.__CACHE, re, ne);
    if (!ie || !ie.length) throw new Error(`Can not sign for input #${L} with the key ${J.publicKey.toString("hex")}`);
    return ie;
  }
  toBuffer() {
    return checkCache(this.__CACHE), this.data.toBuffer();
  }
  toHex() {
    return checkCache(this.__CACHE), this.data.toHex();
  }
  toBase64() {
    return checkCache(this.__CACHE), this.data.toBase64();
  }
  updateGlobal(L) {
    return this.data.updateGlobal(L), this;
  }
  updateInput(L, V) {
    return V.witnessScript && checkInvalidP2WSH(V.witnessScript), (0, bip371_1.checkTaprootInputFields)(this.data.inputs[L], V, "updateInput"), this.data.updateInput(L, V), V.nonWitnessUtxo && addNonWitnessTxCache(this.__CACHE, this.data.inputs[L], L), this;
  }
  updateOutput(L, V) {
    const J = this.data.outputs[L];
    return (0, bip371_1.checkTaprootOutputFields)(J, V, "updateOutput"), this.data.updateOutput(L, V), this;
  }
  addUnknownKeyValToGlobal(L) {
    return this.data.addUnknownKeyValToGlobal(L), this;
  }
  addUnknownKeyValToInput(L, V) {
    return this.data.addUnknownKeyValToInput(L, V), this;
  }
  addUnknownKeyValToOutput(L, V) {
    return this.data.addUnknownKeyValToOutput(L, V), this;
  }
  clearFinalizedInput(L) {
    return this.data.clearFinalizedInput(L), this;
  }
}
psbt$1.Psbt = Psbt;
const transactionFromBuffer = (B) => new PsbtTransaction(B);
class PsbtTransaction {
  constructor(L = Buffer$D.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {
    this.tx = transaction_1.Transaction.fromBuffer(L), checkTxEmpty(this.tx), Object.defineProperty(this, "tx", { enumerable: !1, writable: !0 });
  }
  getInputOutputCounts() {
    return { inputCount: this.tx.ins.length, outputCount: this.tx.outs.length };
  }
  addInput(L) {
    if (L.hash === void 0 || L.index === void 0 || !Buffer$D.isBuffer(L.hash) && typeof L.hash != "string" || typeof L.index != "number") throw new Error("Error adding input.");
    const V = typeof L.hash == "string" ? (0, bufferutils_1.reverseBuffer)(Buffer$D.from(L.hash, "hex")) : L.hash;
    this.tx.addInput(V, L.index, L.sequence);
  }
  addOutput(L) {
    if (L.script === void 0 || L.value === void 0 || !Buffer$D.isBuffer(L.script) || typeof L.value != "number") throw new Error("Error adding output.");
    this.tx.addOutput(L.script, L.value);
  }
  toBuffer() {
    return this.tx.toBuffer();
  }
}
function canFinalize(B, L, V) {
  switch (V) {
    case "pubkey":
    case "pubkeyhash":
    case "witnesspubkeyhash":
      return hasSigs(1, B.partialSig);
    case "multisig":
      const J = payments.p2ms({ output: L });
      return hasSigs(J.m, B.partialSig, J.pubkeys);
    default:
      return !1;
  }
}
function checkCache(B) {
  if (B.__UNSAFE_SIGN_NONSEGWIT !== !1) throw new Error("Not BIP174 compliant, can not export");
}
function hasSigs(B, L, V) {
  if (!L) return !1;
  let J;
  if (J = V ? V.map((re) => {
    const ne = compressPubkey(re);
    return L.find((ie) => ie.pubkey.equals(ne));
  }).filter((re) => !!re) : L, J.length > B) throw new Error("Too many signatures");
  return J.length === B;
}
function isFinalized(B) {
  return !!B.finalScriptSig || !!B.finalScriptWitness;
}
function bip32DerivationIsMine(B) {
  return (L) => !!L.masterFingerprint.equals(B.fingerprint) && !!B.derivePath(L.path).publicKey.equals(L.pubkey);
}
function check32Bit(B) {
  if (typeof B != "number" || B !== Math.floor(B) || B > 4294967295 || B < 0) throw new Error("Invalid 32 bit integer");
}
function checkFees(B, L, V) {
  const J = L.__FEE_RATE || B.getFeeRate(), re = L.__EXTRACTED_TX.virtualSize(), ne = J * re;
  if (J >= V.maximumFeeRate) throw new Error(`Warning: You are paying around ${(ne / 1e8).toFixed(8)} in fees, which is ${J} satoshi per byte for a transaction with a VSize of ${re} bytes (segwit counted as 0.25 byte per byte). Use setMaximumFeeRate method to raise your threshold, or pass true to the first arg of extractTransaction.`);
}
function checkInputsForPartialSig(B, L) {
  B.forEach((V) => {
    if ((0, bip371_1.isTaprootInput)(V) ? (0, bip371_1.checkTaprootInputForSigs)(V, L) : (0, psbtutils_1.checkInputForSig)(V, L)) throw new Error("Can not modify transaction, signatures exist.");
  });
}
function checkPartialSigSighashes(B) {
  if (!B.sighashType || !B.partialSig) return;
  const { partialSig: L, sighashType: V } = B;
  L.forEach((J) => {
    const { hashType: re } = bscript.signature.decode(J.signature);
    if (V !== re) throw new Error("Signature sighash does not match input sighash type");
  });
}
function checkScriptForPubkey(B, L, V) {
  if (!(0, psbtutils_1.pubkeyInScript)(B, L)) throw new Error(`Can not ${V} for this input with the key ${B.toString("hex")}`);
}
function checkTxEmpty(B) {
  if (!B.ins.every((L) => L.script && L.script.length === 0 && L.witness && L.witness.length === 0)) throw new Error("Format Error: Transaction ScriptSigs are not empty");
}
function checkTxForDupeIns(B, L) {
  B.ins.forEach((V) => {
    checkTxInputCache(L, V);
  });
}
function checkTxInputCache(B, L) {
  const V = (0, bufferutils_1.reverseBuffer)(Buffer$D.from(L.hash)).toString("hex") + ":" + L.index;
  if (B.__TX_IN_CACHE[V]) throw new Error("Duplicate input detected.");
  B.__TX_IN_CACHE[V] = 1;
}
function scriptCheckerFactory(B, L) {
  return (V, J, re, ne) => {
    const ie = B({ redeem: { output: re } }).output;
    if (!J.equals(ie)) throw new Error(`${L} for ${ne} #${V} doesn't match the scriptPubKey in the prevout`);
  };
}
const checkRedeemScript = scriptCheckerFactory(payments.p2sh, "Redeem script"), checkWitnessScript = scriptCheckerFactory(payments.p2wsh, "Witness script");
function getTxCacheValue(B, L, V, J) {
  if (!V.every(isFinalized)) throw new Error(`PSBT must be finalized to calculate ${L}`);
  if (B === "__FEE_RATE" && J.__FEE_RATE) return J.__FEE_RATE;
  if (B === "__FEE" && J.__FEE) return J.__FEE;
  let re, ne = !0;
  return J.__EXTRACTED_TX ? (re = J.__EXTRACTED_TX, ne = !1) : re = J.__TX.clone(), inputFinalizeGetAmts(V, re, J, ne), B === "__FEE_RATE" ? J.__FEE_RATE : B === "__FEE" ? J.__FEE : void 0;
}
function getFinalScripts(B, L, V, J, re, ne) {
  const ie = classifyScript(V);
  if (!canFinalize(L, V, ie)) throw new Error(`Can not finalize input #${B}`);
  return prepareFinalScripts(V, ie, L.partialSig, J, re, ne);
}
function prepareFinalScripts(B, L, V, J, re, ne) {
  let ie, oe;
  const pe = getPayment(B, L, V), ce = ne ? payments.p2wsh({ redeem: pe }) : null, Oe = re ? payments.p2sh({ redeem: ce || pe }) : null;
  return J ? (oe = ce ? (0, psbtutils_1.witnessStackToScriptWitness)(ce.witness) : (0, psbtutils_1.witnessStackToScriptWitness)(pe.witness), Oe && (ie = Oe.input)) : ie = Oe ? Oe.input : pe.input, { finalScriptSig: ie, finalScriptWitness: oe };
}
function getHashAndSighashType(B, L, V, J, re) {
  const ne = (0, utils_1$1.checkForInput)(B, L), { hash: ie, sighashType: oe, script: pe } = getHashForSig(L, ne, J, !1, re);
  return checkScriptForPubkey(V, pe, "sign"), { hash: ie, sighashType: oe };
}
function getHashForSig(B, L, V, J, re) {
  const ne = V.__TX, ie = L.sighashType || transaction_1.Transaction.SIGHASH_ALL;
  let oe, pe;
  if (checkSighashTypeAllowed(ie, re), L.nonWitnessUtxo) {
    const rt = nonWitnessUtxoTxFromCache(V, L, B), ut = ne.ins[B].hash, dt = rt.getHash();
    if (!ut.equals(dt)) throw new Error(`Non-witness UTXO hash for input #${B} doesn't match the hash specified in the prevout`);
    const ht = ne.ins[B].index;
    pe = rt.outs[ht];
  } else {
    if (!L.witnessUtxo) throw new Error("Need a Utxo input item for signing");
    pe = L.witnessUtxo;
  }
  const { meaningfulScript: ce, type: Oe } = getMeaningfulScript(pe.script, B, "input", L.redeemScript, L.witnessScript);
  if (["p2sh-p2wsh", "p2wsh"].indexOf(Oe) >= 0) oe = ne.hashForWitnessV0(B, ce, pe.value, ie);
  else if ((0, psbtutils_1.isP2WPKH)(ce)) {
    const rt = payments.p2pkh({ hash: ce.slice(2) }).output;
    oe = ne.hashForWitnessV0(B, rt, pe.value, ie);
  } else {
    if (L.nonWitnessUtxo === void 0 && V.__UNSAFE_SIGN_NONSEGWIT === !1) throw new Error(`Input #${B} has witnessUtxo but non-segwit script: ${ce.toString("hex")}`);
    J || V.__UNSAFE_SIGN_NONSEGWIT === !1 || console.warn(`Warning: Signing non-segwit inputs without the full parent transaction means there is a chance that a miner could feed you incorrect information to trick you into paying large fees. This behavior is the same as Psbt's predecessor (TransactionBuilder - now removed) when signing non-segwit scripts. You are not able to export this Psbt with toBuffer|toBase64|toHex since it is not BIP174 compliant.
*********************
PROCEED WITH CAUTION!
*********************`), oe = ne.hashForSignature(B, ce, ie);
  }
  return { script: ce, sighashType: ie, hash: oe };
}
function getAllTaprootHashesForSig(B, L, V, J) {
  const re = [];
  if (L.tapInternalKey) {
    const ne = getPrevoutTaprootKey(B, L, J);
    ne && re.push(ne);
  }
  if (L.tapScriptSig) {
    const ne = L.tapScriptSig.map((ie) => ie.pubkey);
    re.push(...ne);
  }
  return re.map((ne) => getTaprootHashesForSig(B, L, V, ne, J)).flat();
}
function getPrevoutTaprootKey(B, L, V) {
  const { script: J } = getScriptAndAmountFromUtxo(B, L, V);
  return (0, psbtutils_1.isP2TR)(J) ? J.subarray(2, 34) : null;
}
function trimTaprootSig(B) {
  return B.length === 64 ? B : B.subarray(0, 64);
}
function getTaprootHashesForSig(B, L, V, J, re, ne, ie) {
  const oe = re.__TX, pe = L.sighashType || transaction_1.Transaction.SIGHASH_DEFAULT;
  checkSighashTypeAllowed(pe, ie);
  const ce = V.map((ht, bt) => getScriptAndAmountFromUtxo(bt, ht, re)), Oe = ce.map((ht) => ht.script), rt = ce.map((ht) => ht.value), ut = [];
  if (L.tapInternalKey && !ne) {
    const ht = getPrevoutTaprootKey(B, L, re) || Buffer$D.from([]);
    if ((0, bip371_1.toXOnly)(J).equals(ht)) {
      const bt = oe.hashForWitnessV1(B, Oe, rt, pe);
      ut.push({ pubkey: J, hash: bt });
    }
  }
  const dt = (L.tapLeafScript || []).filter((ht) => (0, psbtutils_1.pubkeyInScript)(J, ht.script)).map((ht) => {
    const bt = (0, bip341_1.tapleafHash)({ output: ht.script, version: ht.leafVersion });
    return Object.assign({ hash: bt }, ht);
  }).filter((ht) => !ne || ne.equals(ht.hash)).map((ht) => {
    const bt = oe.hashForWitnessV1(B, Oe, rt, pe, ht.hash);
    return { pubkey: J, hash: bt, leafHash: ht.hash };
  });
  return ut.concat(dt);
}
function checkSighashTypeAllowed(B, L) {
  if (L && L.indexOf(B) < 0) {
    const V = sighashTypeToString(B);
    throw new Error(`Sighash type is not allowed. Retry the sign method passing the sighashTypes array of whitelisted types. Sighash type: ${V}`);
  }
}
function getPayment(B, L, V) {
  let J;
  switch (L) {
    case "multisig":
      const re = getSortedSigs(B, V);
      J = payments.p2ms({ output: B, signatures: re });
      break;
    case "pubkey":
      J = payments.p2pk({ output: B, signature: V[0].signature });
      break;
    case "pubkeyhash":
      J = payments.p2pkh({ output: B, pubkey: V[0].pubkey, signature: V[0].signature });
      break;
    case "witnesspubkeyhash":
      J = payments.p2wpkh({ output: B, pubkey: V[0].pubkey, signature: V[0].signature });
  }
  return J;
}
function getScriptFromInput(B, L, V) {
  const J = V.__TX, re = { script: null, isSegwit: !1, isP2SH: !1, isP2WSH: !1 };
  if (re.isP2SH = !!L.redeemScript, re.isP2WSH = !!L.witnessScript, L.witnessScript) re.script = L.witnessScript;
  else if (L.redeemScript) re.script = L.redeemScript;
  else if (L.nonWitnessUtxo) {
    const ne = nonWitnessUtxoTxFromCache(V, L, B), ie = J.ins[B].index;
    re.script = ne.outs[ie].script;
  } else L.witnessUtxo && (re.script = L.witnessUtxo.script);
  return (L.witnessScript || (0, psbtutils_1.isP2WPKH)(re.script)) && (re.isSegwit = !0), re;
}
function getSignersFromHD(B, L, V) {
  const J = (0, utils_1$1.checkForInput)(L, B);
  if (!J.bip32Derivation || J.bip32Derivation.length === 0) throw new Error("Need bip32Derivation to sign with HD");
  const re = J.bip32Derivation.map((ie) => ie.masterFingerprint.equals(V.fingerprint) ? ie : void 0).filter((ie) => !!ie);
  if (re.length === 0) throw new Error("Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint");
  return re.map((ie) => {
    const oe = V.derivePath(ie.path);
    if (!ie.pubkey.equals(oe.publicKey)) throw new Error("pubkey did not match bip32Derivation");
    return oe;
  });
}
function getSortedSigs(B, L) {
  return payments.p2ms({ output: B }).pubkeys.map((V) => (L.filter((J) => J.pubkey.equals(V))[0] || {}).signature).filter((V) => !!V);
}
function scriptWitnessToWitnessStack(B) {
  let L = 0;
  function V() {
    const re = varuint.decode(B, L);
    return L += varuint.decode.bytes, re;
  }
  function J() {
    return function(re) {
      return L += re, B.slice(L - re, L);
    }(V());
  }
  return function() {
    const re = V(), ne = [];
    for (let ie = 0; ie < re; ie++) ne.push(J());
    return ne;
  }();
}
function sighashTypeToString(B) {
  let L = B & transaction_1.Transaction.SIGHASH_ANYONECANPAY ? "SIGHASH_ANYONECANPAY | " : "";
  switch (31 & B) {
    case transaction_1.Transaction.SIGHASH_ALL:
      L += "SIGHASH_ALL";
      break;
    case transaction_1.Transaction.SIGHASH_SINGLE:
      L += "SIGHASH_SINGLE";
      break;
    case transaction_1.Transaction.SIGHASH_NONE:
      L += "SIGHASH_NONE";
  }
  return L;
}
function addNonWitnessTxCache(B, L, V) {
  B.__NON_WITNESS_UTXO_BUF_CACHE[V] = L.nonWitnessUtxo;
  const J = transaction_1.Transaction.fromBuffer(L.nonWitnessUtxo);
  B.__NON_WITNESS_UTXO_TX_CACHE[V] = J;
  const re = B, ne = V;
  delete L.nonWitnessUtxo, Object.defineProperty(L, "nonWitnessUtxo", { enumerable: !0, get() {
    const ie = re.__NON_WITNESS_UTXO_BUF_CACHE[ne], oe = re.__NON_WITNESS_UTXO_TX_CACHE[ne];
    if (ie !== void 0) return ie;
    {
      const pe = oe.toBuffer();
      return re.__NON_WITNESS_UTXO_BUF_CACHE[ne] = pe, pe;
    }
  }, set(ie) {
    re.__NON_WITNESS_UTXO_BUF_CACHE[ne] = ie;
  } });
}
function inputFinalizeGetAmts(B, L, V, J) {
  let re = 0;
  B.forEach((pe, ce) => {
    if (J && pe.finalScriptSig && (L.ins[ce].script = pe.finalScriptSig), J && pe.finalScriptWitness && (L.ins[ce].witness = scriptWitnessToWitnessStack(pe.finalScriptWitness)), pe.witnessUtxo) re += pe.witnessUtxo.value;
    else if (pe.nonWitnessUtxo) {
      const Oe = nonWitnessUtxoTxFromCache(V, pe, ce), rt = L.ins[ce].index, ut = Oe.outs[rt];
      re += ut.value;
    }
  });
  const ne = L.outs.reduce((pe, ce) => pe + ce.value, 0), ie = re - ne;
  if (ie < 0) throw new Error("Outputs are spending more than Inputs");
  const oe = L.virtualSize();
  V.__FEE = ie, V.__EXTRACTED_TX = L, V.__FEE_RATE = Math.floor(ie / oe);
}
function nonWitnessUtxoTxFromCache(B, L, V) {
  const J = B.__NON_WITNESS_UTXO_TX_CACHE;
  return J[V] || addNonWitnessTxCache(B, L, V), J[V];
}
function getScriptFromUtxo(B, L, V) {
  const { script: J } = getScriptAndAmountFromUtxo(B, L, V);
  return J;
}
function getScriptAndAmountFromUtxo(B, L, V) {
  if (L.witnessUtxo !== void 0) return { script: L.witnessUtxo.script, value: L.witnessUtxo.value };
  if (L.nonWitnessUtxo !== void 0) {
    const J = nonWitnessUtxoTxFromCache(V, L, B).outs[V.__TX.ins[B].index];
    return { script: J.script, value: J.value };
  }
  throw new Error("Can't find pubkey in input without Utxo data");
}
function pubkeyInInput(B, L, V, J) {
  const re = getScriptFromUtxo(V, L, J), { meaningfulScript: ne } = getMeaningfulScript(re, V, "input", L.redeemScript, L.witnessScript);
  return (0, psbtutils_1.pubkeyInScript)(B, ne);
}
function pubkeyInOutput(B, L, V, J) {
  const re = J.__TX.outs[V].script, { meaningfulScript: ne } = getMeaningfulScript(re, V, "output", L.redeemScript, L.witnessScript);
  return (0, psbtutils_1.pubkeyInScript)(B, ne);
}
function redeemFromFinalScriptSig(B) {
  if (!B) return;
  const L = bscript.decompile(B);
  if (!L) return;
  const V = L[L.length - 1];
  if (!(!Buffer$D.isBuffer(V) || isPubkeyLike(V) || isSigLike(V)))
    return bscript.decompile(V) ? V : void 0;
}
function redeemFromFinalWitnessScript(B) {
  if (!B) return;
  const L = scriptWitnessToWitnessStack(B), V = L[L.length - 1];
  if (!isPubkeyLike(V))
    return bscript.decompile(V) ? V : void 0;
}
function compressPubkey(B) {
  if (B.length === 65) {
    const L = 1 & B[64], V = B.slice(0, 33);
    return V[0] = 2 | L, V;
  }
  return B.slice();
}
function isPubkeyLike(B) {
  return B.length === 33 && bscript.isCanonicalPubKey(B);
}
function isSigLike(B) {
  return bscript.isCanonicalScriptSignature(B);
}
function getMeaningfulScript(B, L, V, J, re) {
  const ne = (0, psbtutils_1.isP2SHScript)(B), ie = ne && J && (0, psbtutils_1.isP2WSHScript)(J), oe = (0, psbtutils_1.isP2WSHScript)(B);
  if (ne && J === void 0) throw new Error("scriptPubkey is P2SH but redeemScript missing");
  if ((oe || ie) && re === void 0) throw new Error("scriptPubkey or redeemScript is P2WSH but witnessScript missing");
  let pe;
  return ie ? (pe = re, checkRedeemScript(L, B, J, V), checkWitnessScript(L, J, re, V), checkInvalidP2WSH(pe)) : oe ? (pe = re, checkWitnessScript(L, B, re, V), checkInvalidP2WSH(pe)) : ne ? (pe = J, checkRedeemScript(L, B, J, V)) : pe = B, { meaningfulScript: pe, type: ie ? "p2sh-p2wsh" : ne ? "p2sh" : oe ? "p2wsh" : "raw" };
}
function checkInvalidP2WSH(B) {
  if ((0, psbtutils_1.isP2WPKH)(B) || (0, psbtutils_1.isP2SHScript)(B)) throw new Error("P2WPKH or P2SH can not be contained within P2WSH");
}
function classifyScript(B) {
  return (0, psbtutils_1.isP2WPKH)(B) ? "witnesspubkeyhash" : (0, psbtutils_1.isP2PKH)(B) ? "pubkeyhash" : (0, psbtutils_1.isP2MS)(B) ? "multisig" : (0, psbtutils_1.isP2PK)(B) ? "pubkey" : "nonstandard";
}
function range$1(B) {
  return [...Array(B).keys()];
}
(function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.initEccLib = B.Transaction = B.opcodes = B.Psbt = B.Block = B.script = B.payments = B.networks = B.crypto = B.address = void 0;
  const L = requireAddress();
  B.address = L;
  const V = crypto$6;
  B.crypto = V;
  const J = networks$2;
  B.networks = J;
  const re = requirePayments();
  B.payments = re;
  const ne = requireScript();
  B.script = ne;
  var ie = block;
  Object.defineProperty(B, "Block", { enumerable: !0, get: function() {
    return ie.Block;
  } });
  var oe = psbt$1;
  Object.defineProperty(B, "Psbt", { enumerable: !0, get: function() {
    return oe.Psbt;
  } });
  var pe = ops;
  Object.defineProperty(B, "opcodes", { enumerable: !0, get: function() {
    return pe.OPS;
  } });
  var ce = transaction;
  Object.defineProperty(B, "Transaction", { enumerable: !0, get: function() {
    return ce.Transaction;
  } });
  var Oe = ecc_lib;
  Object.defineProperty(B, "initEccLib", { enumerable: !0, get: function() {
    return Oe.initEccLib;
  } });
})(src$4);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var t = function() {
  return t = Object.assign || function(B) {
    for (var L, V = 1, J = arguments.length; V < J; V++) for (var re in L = arguments[V]) Object.prototype.hasOwnProperty.call(L, re) && (B[re] = L[re]);
    return B;
  }, t.apply(this, arguments);
}, r$1 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz", e = (B) => {
  if (!B || typeof B != "string") throw new Error(`Expected base58 string but got “${B}”`);
  if (B.match(/[IOl0]/gmu)) throw new Error(`Invalid base58 character “${B.match(/[IOl0]/gmu)}”`);
  const L = B.match(/^1+/gmu), V = L ? L[0].length : 0, J = (B.length - V) * (Math.log(58) / Math.log(256)) + 1 >>> 0;
  return new Uint8Array([...new Uint8Array(V), ...B.match(/.{1}/gmu).map((ne) => r$1.indexOf(ne)).reduce((ne, ie) => ne.map((oe) => {
    const pe = 58 * oe + ie;
    return ie = pe >> 8, pe;
  }), new Uint8Array(J)).reverse().filter((re = !1, (ne) => re = re || ne))]);
  var re;
};
(() => {
  const B = Array(256).fill(-1);
  for (let L = 0; L < r$1.length; ++L) B[r$1.charCodeAt(L)] = L;
})();
var n = e, s$1, i$1, o, h$2 = (s$1 = function(B, L) {
  Object.defineProperty(L, "__esModule", { value: !0 }), L.bech32m = L.bech32 = void 0;
  const V = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", J = {};
  for (let rt = 0; rt < 32; rt++) {
    const ut = V.charAt(rt);
    J[ut] = rt;
  }
  function re(rt) {
    const ut = rt >> 25;
    return (33554431 & rt) << 5 ^ 996825010 & -(1 & ut) ^ 642813549 & -(ut >> 1 & 1) ^ 513874426 & -(ut >> 2 & 1) ^ 1027748829 & -(ut >> 3 & 1) ^ 705979059 & -(ut >> 4 & 1);
  }
  function ne(rt) {
    let ut = 1;
    for (let dt = 0; dt < rt.length; ++dt) {
      const ht = rt.charCodeAt(dt);
      if (ht < 33 || ht > 126) return "Invalid prefix (" + rt + ")";
      ut = re(ut) ^ ht >> 5;
    }
    ut = re(ut);
    for (let dt = 0; dt < rt.length; ++dt) {
      const ht = rt.charCodeAt(dt);
      ut = re(ut) ^ 31 & ht;
    }
    return ut;
  }
  function ie(rt, ut, dt, ht) {
    let bt = 0, Tt = 0;
    const wt = (1 << dt) - 1, Et = [];
    for (let Rt = 0; Rt < rt.length; ++Rt) for (bt = bt << ut | rt[Rt], Tt += ut; Tt >= dt; ) Tt -= dt, Et.push(bt >> Tt & wt);
    if (ht) Tt > 0 && Et.push(bt << dt - Tt & wt);
    else {
      if (Tt >= ut) return "Excess padding";
      if (bt << dt - Tt & wt) return "Non-zero padding";
    }
    return Et;
  }
  function oe(rt) {
    return ie(rt, 8, 5, !0);
  }
  function pe(rt) {
    const ut = ie(rt, 5, 8, !1);
    if (Array.isArray(ut)) return ut;
  }
  function ce(rt) {
    const ut = ie(rt, 5, 8, !1);
    if (Array.isArray(ut)) return ut;
    throw new Error(ut);
  }
  function Oe(rt) {
    let ut;
    function dt(ht, bt) {
      if (bt = bt || 90, ht.length < 8) return ht + " too short";
      if (ht.length > bt) return "Exceeds length limit";
      const Tt = ht.toLowerCase(), wt = ht.toUpperCase();
      if (ht !== Tt && ht !== wt) return "Mixed-case string " + ht;
      const Et = (ht = Tt).lastIndexOf("1");
      if (Et === -1) return "No separator character for " + ht;
      if (Et === 0) return "Missing prefix for " + ht;
      const Rt = ht.slice(0, Et), Bt = ht.slice(Et + 1);
      if (Bt.length < 6) return "Data too short";
      let Pt = ne(Rt);
      if (typeof Pt == "string") return Pt;
      const Dt = [];
      for (let Gt = 0; Gt < Bt.length; ++Gt) {
        const at = Bt.charAt(Gt), lt = J[at];
        if (lt === void 0) return "Unknown character " + at;
        Pt = re(Pt) ^ lt, Gt + 6 >= Bt.length || Dt.push(lt);
      }
      return Pt !== ut ? "Invalid checksum for " + ht : { prefix: Rt, words: Dt };
    }
    return ut = rt === "bech32" ? 1 : 734539939, { decodeUnsafe: function(ht, bt) {
      const Tt = dt(ht, bt);
      if (typeof Tt == "object") return Tt;
    }, decode: function(ht, bt) {
      const Tt = dt(ht, bt);
      if (typeof Tt == "object") return Tt;
      throw new Error(Tt);
    }, encode: function(ht, bt, Tt) {
      if (Tt = Tt || 90, ht.length + 7 + bt.length > Tt) throw new TypeError("Exceeds length limit");
      let wt = ne(ht = ht.toLowerCase());
      if (typeof wt == "string") throw new Error(wt);
      let Et = ht + "1";
      for (let Rt = 0; Rt < bt.length; ++Rt) {
        const Bt = bt[Rt];
        if (Bt >> 5) throw new Error("Non 5-bit word");
        wt = re(wt) ^ Bt, Et += V.charAt(Bt);
      }
      for (let Rt = 0; Rt < 6; ++Rt) wt = re(wt);
      wt ^= ut;
      for (let Rt = 0; Rt < 6; ++Rt) Et += V.charAt(wt >> 5 * (5 - Rt) & 31);
      return Et;
    }, toWords: oe, fromWordsUnsafe: pe, fromWords: ce };
  }
  L.bech32 = Oe("bech32"), L.bech32m = Oe("bech32m");
}, s$1(i$1 = { exports: {} }, i$1.exports), i$1.exports);
(o = h$2) && o.__esModule && Object.prototype.hasOwnProperty.call(o, "default") && o.default;
var c = h$2.bech32m, a = h$2.bech32;
const f$1 = [1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993, -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987, 1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885, -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872, -1866530822, -1538233109, -1090935817, -965641998];
class l {
  constructor() {
    this.A = 1779033703, this.B = -1150833019, this.C = 1013904242, this.D = -1521486534, this.E = 1359893119, this.F = -1694144372, this.G = 528734635, this.H = 1541459225, this._size = 0, this._sp = 0, (!p || w >= 8e3) && (p = new ArrayBuffer(8e3), w = 0), this._byte = new Uint8Array(p, w, 80), this._word = new Int32Array(p, w, 20), w += 80;
  }
  update(L) {
    if (typeof L == "string") return this._utf8(L);
    if (L == null) throw new TypeError("Invalid type: " + typeof L);
    const V = L.byteOffset, J = L.byteLength;
    let re = J / 64 | 0, ne = 0;
    if (re && !(3 & V) && !(this._size % 64)) {
      const ie = new Int32Array(L.buffer, V, 16 * re);
      for (; re--; ) this._int32(ie, ne >> 2), ne += 64;
      this._size += ne;
    }
    if (L.BYTES_PER_ELEMENT !== 1 && L.buffer) {
      const ie = new Uint8Array(L.buffer, V + ne, J - ne);
      return this._uint8(ie);
    }
    return ne === J ? this : this._uint8(L, ne);
  }
  _uint8(L, V) {
    const { _byte: J, _word: re } = this, ne = L.length;
    for (V |= 0; V < ne; ) {
      const ie = this._size % 64;
      let oe = ie;
      for (; V < ne && oe < 64; ) J[oe++] = L[V++];
      oe >= 64 && this._int32(re), this._size += oe - ie;
    }
    return this;
  }
  _utf8(L) {
    const { _byte: V, _word: J } = this, re = L.length;
    let ne = this._sp;
    for (let ie = 0; ie < re; ) {
      const oe = this._size % 64;
      let pe = oe;
      for (; ie < re && pe < 64; ) {
        let ce = 0 | L.charCodeAt(ie++);
        ce < 128 ? V[pe++] = ce : ce < 2048 ? (V[pe++] = 192 | ce >>> 6, V[pe++] = 128 | 63 & ce) : ce < 55296 || ce > 57343 ? (V[pe++] = 224 | ce >>> 12, V[pe++] = 128 | ce >>> 6 & 63, V[pe++] = 128 | 63 & ce) : ne ? (ce = ((1023 & ne) << 10) + (1023 & ce) + 65536, V[pe++] = 240 | ce >>> 18, V[pe++] = 128 | ce >>> 12 & 63, V[pe++] = 128 | ce >>> 6 & 63, V[pe++] = 128 | 63 & ce, ne = 0) : ne = ce;
      }
      pe >= 64 && (this._int32(J), J[0] = J[16]), this._size += pe - oe;
    }
    return this._sp = ne, this;
  }
  _int32(L, V) {
    let { A: J, B: re, C: ne, D: ie, E: oe, F: pe, G: ce, H: Oe } = this, rt = 0;
    for (V |= 0; rt < 16; ) d[rt++] = g$2(L[V++]);
    for (rt = 16; rt < 64; rt++) d[rt] = A(d[rt - 2]) + d[rt - 7] + m(d[rt - 15]) + d[rt - 16] | 0;
    for (rt = 0; rt < 64; rt++) {
      const ut = Oe + E(oe) + b(oe, pe, ce) + f$1[rt] + d[rt] | 0, dt = v(J) + _(J, re, ne) | 0;
      Oe = ce, ce = pe, pe = oe, oe = ie + ut | 0, ie = ne, ne = re, re = J, J = ut + dt | 0;
    }
    this.A = J + this.A | 0, this.B = re + this.B | 0, this.C = ne + this.C | 0, this.D = ie + this.D | 0, this.E = oe + this.E | 0, this.F = pe + this.F | 0, this.G = ce + this.G | 0, this.H = Oe + this.H | 0;
  }
  digest(L) {
    const { _byte: V, _word: J } = this;
    let re = this._size % 64 | 0;
    for (V[re++] = 128; 3 & re; ) V[re++] = 0;
    if (re >>= 2, re > 14) {
      for (; re < 16; ) J[re++] = 0;
      re = 0, this._int32(J);
    }
    for (; re < 16; ) J[re++] = 0;
    const ne = 8 * this._size, ie = (4294967295 & ne) >>> 0, oe = (ne - ie) / 4294967296;
    return oe && (J[14] = g$2(oe)), ie && (J[15] = g$2(ie)), this._int32(J), L === "hex" ? this._hex() : this._bin();
  }
  _hex() {
    const { A: L, B: V, C: J, D: re, E: ne, F: ie, G: oe, H: pe } = this;
    return y(L) + y(V) + y(J) + y(re) + y(ne) + y(ie) + y(oe) + y(pe);
  }
  _bin() {
    const { A: L, B: V, C: J, D: re, E: ne, F: ie, G: oe, H: pe, _byte: ce, _word: Oe } = this;
    return Oe[0] = g$2(L), Oe[1] = g$2(V), Oe[2] = g$2(J), Oe[3] = g$2(re), Oe[4] = g$2(ne), Oe[5] = g$2(ie), Oe[6] = g$2(oe), Oe[7] = g$2(pe), ce.slice(0, 32);
  }
}
const d = new Int32Array(64);
let p, w = 0;
const y = (B) => (B + 4294967296).toString(16).substr(-8), g$2 = new Uint8Array(new Uint16Array([65279]).buffer)[0] === 254 ? (B) => B : (B) => B << 24 & 4278190080 | B << 8 & 16711680 | B >> 8 & 65280 | B >> 24 & 255, b = (B, L, V) => V ^ B & (L ^ V), _ = (B, L, V) => B & L | V & (B | L), v = (B) => (B >>> 2 | B << 30) ^ (B >>> 13 | B << 19) ^ (B >>> 22 | B << 10), E = (B) => (B >>> 6 | B << 26) ^ (B >>> 11 | B << 21) ^ (B >>> 25 | B << 7), m = (B) => (B >>> 7 | B << 25) ^ (B >>> 18 | B << 14) ^ B >>> 3, A = (B) => (B >>> 17 | B << 15) ^ (B >>> 19 | B << 13) ^ B >>> 10;
var x, k, I = function(B) {
  return new l().update(B).digest();
};
(function(B) {
  B.mainnet = "mainnet", B.testnet = "testnet", B.regtest = "regtest";
})(x || (x = {})), function(B) {
  B.p2pkh = "p2pkh", B.p2sh = "p2sh", B.p2wpkh = "p2wpkh", B.p2wsh = "p2wsh", B.p2tr = "p2tr";
}(k || (k = {}));
var C = { 0: { type: k.p2pkh, network: x.mainnet }, 111: { type: k.p2pkh, network: x.testnet }, 5: { type: k.p2sh, network: x.mainnet }, 196: { type: k.p2sh, network: x.testnet } }, z = function(B) {
  var L, V = B.substr(0, 2).toLowerCase();
  if (V === "bc" || V === "tb") return function(pe) {
    var ce;
    try {
      ce = pe.startsWith("bc1p") || pe.startsWith("tb1p") || pe.startsWith("bcrt1p") ? c.decode(pe) : a.decode(pe);
    } catch {
      throw new Error("Invalid address");
    }
    var Oe = { bc: x.mainnet, tb: x.testnet, bcrt: x.regtest }[ce.prefix];
    if (Oe === void 0) throw new Error("Invalid address");
    var rt = ce.words[0];
    if (rt < 0 || rt > 16) throw new Error("Invalid address");
    return { bech32: !0, network: Oe, address: pe, type: a.fromWords(ce.words.slice(1)).length === 20 ? k.p2wpkh : rt === 1 ? k.p2tr : k.p2wsh };
  }(B);
  try {
    L = n(B);
  } catch {
    throw new Error("Invalid address");
  }
  var J = L.length;
  if (J !== 25) throw new Error("Invalid address");
  var re = L[0], ne = L.slice(J - 4, J), ie = L.slice(0, J - 4), oe = I(I(ie)).slice(0, 4);
  if (ne.some(function(pe, ce) {
    return pe !== oe[ce];
  })) throw new Error("Invalid address");
  if (!Object.keys(C).map(Number).includes(re)) throw new Error("Invalid address");
  return t(t({}, C[re]), { address: B, bech32: !1 });
}, O = function(B, L) {
  try {
    var V = z(B);
    return !L || L === V.network;
  } catch {
    return !1;
  }
}, src$2 = {}, bip32 = {}, crypto$4 = {}, hmac$2 = {};
(function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.hmac = B.HMAC = void 0;
  const L = _assert, V = utils$p;
  class J extends V.Hash {
    constructor(ne, ie) {
      super(), this.finished = !1, this.destroyed = !1, (0, L.hash)(ne);
      const oe = (0, V.toBytes)(ie);
      if (this.iHash = ne.create(), typeof this.iHash.update != "function") throw new Error("Expected instance of class which extends utils.Hash");
      this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
      const pe = this.blockLen, ce = new Uint8Array(pe);
      ce.set(oe.length > pe ? ne.create().update(oe).digest() : oe);
      for (let Oe = 0; Oe < ce.length; Oe++) ce[Oe] ^= 54;
      this.iHash.update(ce), this.oHash = ne.create();
      for (let Oe = 0; Oe < ce.length; Oe++) ce[Oe] ^= 106;
      this.oHash.update(ce), ce.fill(0);
    }
    update(ne) {
      return (0, L.exists)(this), this.iHash.update(ne), this;
    }
    digestInto(ne) {
      (0, L.exists)(this), (0, L.bytes)(ne, this.outputLen), this.finished = !0, this.iHash.digestInto(ne), this.oHash.update(ne), this.oHash.digestInto(ne), this.destroy();
    }
    digest() {
      const ne = new Uint8Array(this.oHash.outputLen);
      return this.digestInto(ne), ne;
    }
    _cloneInto(ne) {
      ne || (ne = Object.create(Object.getPrototypeOf(this), {}));
      const { oHash: ie, iHash: oe, finished: pe, destroyed: ce, blockLen: Oe, outputLen: rt } = this;
      return ne.finished = pe, ne.destroyed = ce, ne.blockLen = Oe, ne.outputLen = rt, ne.oHash = ie._cloneInto(ne.oHash), ne.iHash = oe._cloneInto(ne.iHash), ne;
    }
    destroy() {
      this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();
    }
  }
  B.HMAC = J, B.hmac = (re, ne, ie) => new J(re, ne).update(ie).digest(), B.hmac.create = (re, ne) => new J(re, ne);
})(hmac$2);
var sha512$2 = {}, _u64 = {};
Object.defineProperty(_u64, "__esModule", { value: !0 }), _u64.add5L = _u64.add5H = _u64.add4H = _u64.add4L = _u64.add3H = _u64.add3L = _u64.rotlBL = _u64.rotlBH = _u64.rotlSL = _u64.rotlSH = _u64.rotr32L = _u64.rotr32H = _u64.rotrBL = _u64.rotrBH = _u64.rotrSL = _u64.rotrSH = _u64.shrSL = _u64.shrSH = _u64.toBig = void 0, _u64.fromBig = fromBig, _u64.split = split, _u64.add = add;
const U32_MASK64 = BigInt(2 ** 32 - 1), _32n = BigInt(32);
function fromBig(B, L = !1) {
  return L ? { h: Number(B & U32_MASK64), l: Number(B >> _32n & U32_MASK64) } : { h: 0 | Number(B >> _32n & U32_MASK64), l: 0 | Number(B & U32_MASK64) };
}
function split(B, L = !1) {
  let V = new Uint32Array(B.length), J = new Uint32Array(B.length);
  for (let re = 0; re < B.length; re++) {
    const { h: ne, l: ie } = fromBig(B[re], L);
    [V[re], J[re]] = [ne, ie];
  }
  return [V, J];
}
const toBig = (B, L) => BigInt(B >>> 0) << _32n | BigInt(L >>> 0);
_u64.toBig = toBig;
const shrSH = (B, L, V) => B >>> V;
_u64.shrSH = shrSH;
const shrSL = (B, L, V) => B << 32 - V | L >>> V;
_u64.shrSL = shrSL;
const rotrSH = (B, L, V) => B >>> V | L << 32 - V;
_u64.rotrSH = rotrSH;
const rotrSL = (B, L, V) => B << 32 - V | L >>> V;
_u64.rotrSL = rotrSL;
const rotrBH = (B, L, V) => B << 64 - V | L >>> V - 32;
_u64.rotrBH = rotrBH;
const rotrBL = (B, L, V) => B >>> V - 32 | L << 64 - V;
_u64.rotrBL = rotrBL;
const rotr32H = (B, L) => L;
_u64.rotr32H = rotr32H;
const rotr32L = (B, L) => B;
_u64.rotr32L = rotr32L;
const rotlSH = (B, L, V) => B << V | L >>> 32 - V;
_u64.rotlSH = rotlSH;
const rotlSL = (B, L, V) => L << V | B >>> 32 - V;
_u64.rotlSL = rotlSL;
const rotlBH = (B, L, V) => L << V - 32 | B >>> 64 - V;
_u64.rotlBH = rotlBH;
const rotlBL = (B, L, V) => B << V - 32 | L >>> 64 - V;
function add(B, L, V, J) {
  const re = (L >>> 0) + (J >>> 0);
  return { h: B + V + (re / 2 ** 32 | 0) | 0, l: 0 | re };
}
_u64.rotlBL = rotlBL;
const add3L = (B, L, V) => (B >>> 0) + (L >>> 0) + (V >>> 0);
_u64.add3L = add3L;
const add3H = (B, L, V, J) => L + V + J + (B / 2 ** 32 | 0) | 0;
_u64.add3H = add3H;
const add4L = (B, L, V, J) => (B >>> 0) + (L >>> 0) + (V >>> 0) + (J >>> 0);
_u64.add4L = add4L;
const add4H = (B, L, V, J, re) => L + V + J + re + (B / 2 ** 32 | 0) | 0;
_u64.add4H = add4H;
const add5L = (B, L, V, J, re) => (B >>> 0) + (L >>> 0) + (V >>> 0) + (J >>> 0) + (re >>> 0);
_u64.add5L = add5L;
const add5H = (B, L, V, J, re, ne) => L + V + J + re + ne + (B / 2 ** 32 | 0) | 0;
_u64.add5H = add5H;
const u64 = { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L };
_u64.default = u64, Object.defineProperty(sha512$2, "__esModule", { value: !0 }), sha512$2.sha384 = sha512$2.sha512_256 = sha512$2.sha512_224 = sha512$2.sha512 = sha512$2.SHA384 = sha512$2.SHA512_256 = sha512$2.SHA512_224 = sha512$2.SHA512 = void 0;
const _md_js_1 = _md, _u64_js_1 = _u64, utils_js_1 = utils$p, [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((B) => BigInt(B))), SHA512_W_H = new Uint32Array(80), SHA512_W_L = new Uint32Array(80);
let SHA512$3 = class extends _md_js_1.HashMD {
  constructor() {
    super(128, 64, 16, !1), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: B, Al: L, Bh: V, Bl: J, Ch: re, Cl: ne, Dh: ie, Dl: oe, Eh: pe, El: ce, Fh: Oe, Fl: rt, Gh: ut, Gl: dt, Hh: ht, Hl: bt } = this;
    return [B, L, V, J, re, ne, ie, oe, pe, ce, Oe, rt, ut, dt, ht, bt];
  }
  set(B, L, V, J, re, ne, ie, oe, pe, ce, Oe, rt, ut, dt, ht, bt) {
    this.Ah = 0 | B, this.Al = 0 | L, this.Bh = 0 | V, this.Bl = 0 | J, this.Ch = 0 | re, this.Cl = 0 | ne, this.Dh = 0 | ie, this.Dl = 0 | oe, this.Eh = 0 | pe, this.El = 0 | ce, this.Fh = 0 | Oe, this.Fl = 0 | rt, this.Gh = 0 | ut, this.Gl = 0 | dt, this.Hh = 0 | ht, this.Hl = 0 | bt;
  }
  process(B, L) {
    for (let Et = 0; Et < 16; Et++, L += 4) SHA512_W_H[Et] = B.getUint32(L), SHA512_W_L[Et] = B.getUint32(L += 4);
    for (let Et = 16; Et < 80; Et++) {
      const Rt = 0 | SHA512_W_H[Et - 15], Bt = 0 | SHA512_W_L[Et - 15], Pt = _u64_js_1.default.rotrSH(Rt, Bt, 1) ^ _u64_js_1.default.rotrSH(Rt, Bt, 8) ^ _u64_js_1.default.shrSH(Rt, Bt, 7), Dt = _u64_js_1.default.rotrSL(Rt, Bt, 1) ^ _u64_js_1.default.rotrSL(Rt, Bt, 8) ^ _u64_js_1.default.shrSL(Rt, Bt, 7), Gt = 0 | SHA512_W_H[Et - 2], at = 0 | SHA512_W_L[Et - 2], lt = _u64_js_1.default.rotrSH(Gt, at, 19) ^ _u64_js_1.default.rotrBH(Gt, at, 61) ^ _u64_js_1.default.shrSH(Gt, at, 6), Ce = _u64_js_1.default.rotrSL(Gt, at, 19) ^ _u64_js_1.default.rotrBL(Gt, at, 61) ^ _u64_js_1.default.shrSL(Gt, at, 6), st = _u64_js_1.default.add4L(Dt, Ce, SHA512_W_L[Et - 7], SHA512_W_L[Et - 16]), it = _u64_js_1.default.add4H(st, Pt, lt, SHA512_W_H[Et - 7], SHA512_W_H[Et - 16]);
      SHA512_W_H[Et] = 0 | it, SHA512_W_L[Et] = 0 | st;
    }
    let { Ah: V, Al: J, Bh: re, Bl: ne, Ch: ie, Cl: oe, Dh: pe, Dl: ce, Eh: Oe, El: rt, Fh: ut, Fl: dt, Gh: ht, Gl: bt, Hh: Tt, Hl: wt } = this;
    for (let Et = 0; Et < 80; Et++) {
      const Rt = _u64_js_1.default.rotrSH(Oe, rt, 14) ^ _u64_js_1.default.rotrSH(Oe, rt, 18) ^ _u64_js_1.default.rotrBH(Oe, rt, 41), Bt = _u64_js_1.default.rotrSL(Oe, rt, 14) ^ _u64_js_1.default.rotrSL(Oe, rt, 18) ^ _u64_js_1.default.rotrBL(Oe, rt, 41), Pt = Oe & ut ^ ~Oe & ht, Dt = rt & dt ^ ~rt & bt, Gt = _u64_js_1.default.add5L(wt, Bt, Dt, SHA512_Kl[Et], SHA512_W_L[Et]), at = _u64_js_1.default.add5H(Gt, Tt, Rt, Pt, SHA512_Kh[Et], SHA512_W_H[Et]), lt = 0 | Gt, Ce = _u64_js_1.default.rotrSH(V, J, 28) ^ _u64_js_1.default.rotrBH(V, J, 34) ^ _u64_js_1.default.rotrBH(V, J, 39), st = _u64_js_1.default.rotrSL(V, J, 28) ^ _u64_js_1.default.rotrBL(V, J, 34) ^ _u64_js_1.default.rotrBL(V, J, 39), it = V & re ^ V & ie ^ re & ie, nt = J & ne ^ J & oe ^ ne & oe;
      Tt = 0 | ht, wt = 0 | bt, ht = 0 | ut, bt = 0 | dt, ut = 0 | Oe, dt = 0 | rt, { h: Oe, l: rt } = _u64_js_1.default.add(0 | pe, 0 | ce, 0 | at, 0 | lt), pe = 0 | ie, ce = 0 | oe, ie = 0 | re, oe = 0 | ne, re = 0 | V, ne = 0 | J;
      const ot = _u64_js_1.default.add3L(lt, st, nt);
      V = _u64_js_1.default.add3H(ot, at, Ce, it), J = 0 | ot;
    }
    ({ h: V, l: J } = _u64_js_1.default.add(0 | this.Ah, 0 | this.Al, 0 | V, 0 | J)), { h: re, l: ne } = _u64_js_1.default.add(0 | this.Bh, 0 | this.Bl, 0 | re, 0 | ne), { h: ie, l: oe } = _u64_js_1.default.add(0 | this.Ch, 0 | this.Cl, 0 | ie, 0 | oe), { h: pe, l: ce } = _u64_js_1.default.add(0 | this.Dh, 0 | this.Dl, 0 | pe, 0 | ce), { h: Oe, l: rt } = _u64_js_1.default.add(0 | this.Eh, 0 | this.El, 0 | Oe, 0 | rt), { h: ut, l: dt } = _u64_js_1.default.add(0 | this.Fh, 0 | this.Fl, 0 | ut, 0 | dt), { h: ht, l: bt } = _u64_js_1.default.add(0 | this.Gh, 0 | this.Gl, 0 | ht, 0 | bt), { h: Tt, l: wt } = _u64_js_1.default.add(0 | this.Hh, 0 | this.Hl, 0 | Tt, 0 | wt), this.set(V, J, re, ne, ie, oe, pe, ce, Oe, rt, ut, dt, ht, bt, Tt, wt);
  }
  roundClean() {
    SHA512_W_H.fill(0), SHA512_W_L.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
sha512$2.SHA512 = SHA512$3;
class SHA512_224 extends SHA512$3 {
  constructor() {
    super(), this.Ah = -1942145080, this.Al = 424955298, this.Bh = 1944164710, this.Bl = -1982016298, this.Ch = 502970286, this.Cl = 855612546, this.Dh = 1738396948, this.Dl = 1479516111, this.Eh = 258812777, this.El = 2077511080, this.Fh = 2011393907, this.Fl = 79989058, this.Gh = 1067287976, this.Gl = 1780299464, this.Hh = 286451373, this.Hl = -1848208735, this.outputLen = 28;
  }
}
sha512$2.SHA512_224 = SHA512_224;
class SHA512_256 extends SHA512$3 {
  constructor() {
    super(), this.Ah = 573645204, this.Al = -64227540, this.Bh = -1621794909, this.Bl = -934517566, this.Ch = 596883563, this.Cl = 1867755857, this.Dh = -1774684391, this.Dl = 1497426621, this.Eh = -1775747358, this.El = -1467023389, this.Fh = -1101128155, this.Fl = 1401305490, this.Gh = 721525244, this.Gl = 746961066, this.Hh = 246885852, this.Hl = -2117784414, this.outputLen = 32;
  }
}
sha512$2.SHA512_256 = SHA512_256;
let SHA384$1 = class extends SHA512$3 {
  constructor() {
    super(), this.Ah = -876896931, this.Al = -1056596264, this.Bh = 1654270250, this.Bl = 914150663, this.Ch = -1856437926, this.Cl = 812702999, this.Dh = 355462360, this.Dl = -150054599, this.Eh = 1731405415, this.El = -4191439, this.Fh = -1900787065, this.Fl = 1750603025, this.Gh = -619958771, this.Gl = 1694076839, this.Hh = 1203062813, this.Hl = -1090891868, this.outputLen = 48;
  }
};
sha512$2.SHA384 = SHA384$1, sha512$2.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512$3()), sha512$2.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224()), sha512$2.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256()), sha512$2.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384$1()), Object.defineProperty(crypto$4, "__esModule", { value: !0 }), crypto$4.hmacSHA512 = crypto$4.hash160 = void 0;
const hmac_1$1 = hmac$2, ripemd160_1 = ripemd160$1, sha256_1$5 = sha256$5, sha512_1 = sha512$2;
function hash160(B) {
  const L = (0, sha256_1$5.sha256)(Uint8Array.from(B));
  return Buffer$D.from((0, ripemd160_1.ripemd160)(L));
}
function hmacSHA512(B, L) {
  return Buffer$D.from((0, hmac_1$1.hmac)(sha512_1.sha512, B, L));
}
crypto$4.hash160 = hash160, crypto$4.hmacSHA512 = hmacSHA512;
var testecc$1 = {};
Object.defineProperty(testecc$1, "__esModule", { value: !0 }), testecc$1.testEcc = void 0;
const h$1 = (B) => Buffer$D.from(B, "hex");
function testEcc$1(B) {
  if (assert$k(B.isPoint(h$1("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert$k(!B.isPoint(h$1("030000000000000000000000000000000000000000000000000000000000000005"))), assert$k(B.isPrivate(h$1("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert$k(B.isPrivate(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))), assert$k(!B.isPrivate(h$1("0000000000000000000000000000000000000000000000000000000000000000"))), assert$k(!B.isPrivate(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"))), assert$k(!B.isPrivate(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364142"))), assert$k(Buffer$D.from(B.pointFromScalar(h$1("b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af"))).equals(h$1("02b07ba9dca9523b7ef4bd97703d43d20399eb698e194704791a25ce77a400df99"))), B.xOnlyPointAddTweak) {
    assert$k(B.xOnlyPointAddTweak(h$1("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140")) === null);
    let L = B.xOnlyPointAddTweak(h$1("1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b"), h$1("a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac"));
    assert$k(Buffer$D.from(L.xOnlyPubkey).equals(h$1("e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf")) && L.parity === 1), L = B.xOnlyPointAddTweak(h$1("2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991"), h$1("823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47"));
  }
  assert$k(Buffer$D.from(B.pointAddScalar(h$1("0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), h$1("0000000000000000000000000000000000000000000000000000000000000003"))).equals(h$1("02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5"))), assert$k(Buffer$D.from(B.privateAdd(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e"), h$1("0000000000000000000000000000000000000000000000000000000000000002"))).equals(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))), B.privateNegate && (assert$k(Buffer$D.from(B.privateNegate(h$1("0000000000000000000000000000000000000000000000000000000000000001"))).equals(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))), assert$k(Buffer$D.from(B.privateNegate(h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e"))).equals(h$1("0000000000000000000000000000000000000000000000000000000000000003"))), assert$k(Buffer$D.from(B.privateNegate(h$1("b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af"))).equals(h$1("4eede1bf775995d70a494f0a7bb6bc11e0b8cccd41cce8009ab1132c8b0a3792")))), assert$k(Buffer$D.from(B.sign(h$1("5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed"), h$1("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))).equals(h$1("54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5"))), assert$k(B.verify(h$1("5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed"), h$1("0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), h$1("54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5"))), B.signSchnorr && assert$k(Buffer$D.from(B.signSchnorr(h$1("7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c"), h$1("c90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b14e5c9"), h$1("c87aa53824b4d7ae2eb035a2b5bbbccc080e76cdc6d1692c4b0b62d798e6d906"))).equals(h$1("5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7"))), B.verifySchnorr && assert$k(B.verifySchnorr(h$1("7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c"), h$1("dd308afec5777e13121fa72b9cc1b7cc0139715309b086c960e18fd969774eb8"), h$1("5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7")));
}
function assert$k(B) {
  if (!B) throw new Error("ecc library invalid");
}
testecc$1.testEcc = testEcc$1;
var lib$2 = {};
(function(B) {
  function L(at) {
    return at instanceof Uint8Array || at != null && typeof at == "object" && at.constructor.name === "Uint8Array";
  }
  function V(...at) {
    const lt = (nt) => nt, Ce = (nt, ot) => (ke) => nt(ot(ke)), st = at.map((nt) => nt.encode).reduceRight(Ce, lt), it = at.map((nt) => nt.decode).reduce(Ce, lt);
    return { encode: st, decode: it };
  }
  function J(at) {
    return { encode: (lt) => {
      if (!Array.isArray(lt) || lt.length && typeof lt[0] != "number") throw new Error("alphabet.encode input should be an array of numbers");
      return lt.map((Ce) => {
        if (Ce < 0 || Ce >= at.length) throw new Error(`Digit index outside alphabet: ${Ce} (alphabet: ${at.length})`);
        return at[Ce];
      });
    }, decode: (lt) => {
      if (!Array.isArray(lt) || lt.length && typeof lt[0] != "string") throw new Error("alphabet.decode input should be array of strings");
      return lt.map((Ce) => {
        if (typeof Ce != "string") throw new Error(`alphabet.decode: not string element=${Ce}`);
        const st = at.indexOf(Ce);
        if (st === -1) throw new Error(`Unknown letter: "${Ce}". Allowed: ${at}`);
        return st;
      });
    } };
  }
  function re(at = "") {
    if (typeof at != "string") throw new Error("join separator should be string");
    return { encode: (lt) => {
      if (!Array.isArray(lt) || lt.length && typeof lt[0] != "string") throw new Error("join.encode input should be array of strings");
      for (let Ce of lt) if (typeof Ce != "string") throw new Error(`join.encode: non-string input=${Ce}`);
      return lt.join(at);
    }, decode: (lt) => {
      if (typeof lt != "string") throw new Error("join.decode input should be string");
      return lt.split(at);
    } };
  }
  function ne(at, lt = "=") {
    if (typeof lt != "string") throw new Error("padding chr should be string");
    return { encode(Ce) {
      if (!Array.isArray(Ce) || Ce.length && typeof Ce[0] != "string") throw new Error("padding.encode input should be array of strings");
      for (let st of Ce) if (typeof st != "string") throw new Error(`padding.encode: non-string input=${st}`);
      for (; Ce.length * at % 8; ) Ce.push(lt);
      return Ce;
    }, decode(Ce) {
      if (!Array.isArray(Ce) || Ce.length && typeof Ce[0] != "string") throw new Error("padding.encode input should be array of strings");
      for (let it of Ce) if (typeof it != "string") throw new Error(`padding.decode: non-string input=${it}`);
      let st = Ce.length;
      if (st * at % 8) throw new Error("Invalid padding: string should have whole number of bytes");
      for (; st > 0 && Ce[st - 1] === lt; st--) if (!((st - 1) * at % 8)) throw new Error("Invalid padding: string has too much padding");
      return Ce.slice(0, st);
    } };
  }
  function ie(at) {
    if (typeof at != "function") throw new Error("normalize fn should be function");
    return { encode: (lt) => lt, decode: (lt) => at(lt) };
  }
  function oe(at, lt, Ce) {
    if (lt < 2) throw new Error(`convertRadix: wrong from=${lt}, base cannot be less than 2`);
    if (Ce < 2) throw new Error(`convertRadix: wrong to=${Ce}, base cannot be less than 2`);
    if (!Array.isArray(at)) throw new Error("convertRadix: data should be array");
    if (!at.length) return [];
    let st = 0;
    const it = [], nt = Array.from(at);
    for (nt.forEach((ot) => {
      if (ot < 0 || ot >= lt) throw new Error(`Wrong integer: ${ot}`);
    }); ; ) {
      let ot = 0, ke = !0;
      for (let ct = st; ct < nt.length; ct++) {
        const yt = nt[ct], $t = lt * ot + yt;
        if (!Number.isSafeInteger($t) || lt * ot / lt !== ot || $t - yt != lt * ot) throw new Error("convertRadix: carry overflow");
        ot = $t % Ce;
        const gt = Math.floor($t / Ce);
        if (nt[ct] = gt, !Number.isSafeInteger(gt) || gt * Ce + ot !== $t) throw new Error("convertRadix: carry overflow");
        ke && (gt ? ke = !1 : st = ct);
      }
      if (it.push(ot), ke) break;
    }
    for (let ot = 0; ot < at.length - 1 && at[ot] === 0; ot++) it.push(0);
    return it.reverse();
  }
  /*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  Object.defineProperty(B, "__esModule", { value: !0 }), B.bytes = B.stringToBytes = B.str = B.bytesToString = B.hex = B.utf8 = B.bech32m = B.bech32 = B.base58check = B.createBase58check = B.base58xmr = B.base58xrp = B.base58flickr = B.base58 = B.base64urlnopad = B.base64url = B.base64nopad = B.base64 = B.base32crockford = B.base32hexnopad = B.base32hex = B.base32nopad = B.base32 = B.base16 = B.utils = void 0, B.assertNumber = function(at) {
    if (!Number.isSafeInteger(at)) throw new Error(`Wrong integer: ${at}`);
  };
  const pe = (at, lt) => lt ? pe(lt, at % lt) : at, ce = (at, lt) => at + (lt - pe(at, lt));
  function Oe(at, lt, Ce, st) {
    if (!Array.isArray(at)) throw new Error("convertRadix2: data should be array");
    if (lt <= 0 || lt > 32) throw new Error(`convertRadix2: wrong from=${lt}`);
    if (Ce <= 0 || Ce > 32) throw new Error(`convertRadix2: wrong to=${Ce}`);
    if (ce(lt, Ce) > 32) throw new Error(`convertRadix2: carry overflow from=${lt} to=${Ce} carryBits=${ce(lt, Ce)}`);
    let it = 0, nt = 0;
    const ot = 2 ** Ce - 1, ke = [];
    for (const ct of at) {
      if (ct >= 2 ** lt) throw new Error(`convertRadix2: invalid data word=${ct} from=${lt}`);
      if (it = it << lt | ct, nt + lt > 32) throw new Error(`convertRadix2: carry overflow pos=${nt} from=${lt}`);
      for (nt += lt; nt >= Ce; nt -= Ce) ke.push((it >> nt - Ce & ot) >>> 0);
      it &= 2 ** nt - 1;
    }
    if (it = it << Ce - nt & ot, !st && nt >= lt) throw new Error("Excess padding");
    if (!st && it) throw new Error(`Non-zero padding: ${it}`);
    return st && nt > 0 && ke.push(it >>> 0), ke;
  }
  function rt(at) {
    return { encode: (lt) => {
      if (!L(lt)) throw new Error("radix.encode input should be Uint8Array");
      return oe(Array.from(lt), 256, at);
    }, decode: (lt) => {
      if (!Array.isArray(lt) || lt.length && typeof lt[0] != "number") throw new Error("radix.decode input should be array of numbers");
      return Uint8Array.from(oe(lt, at, 256));
    } };
  }
  function ut(at, lt = !1) {
    if (at <= 0 || at > 32) throw new Error("radix2: bits should be in (0..32]");
    if (ce(8, at) > 32 || ce(at, 8) > 32) throw new Error("radix2: carry overflow");
    return { encode: (Ce) => {
      if (!L(Ce)) throw new Error("radix2.encode input should be Uint8Array");
      return Oe(Array.from(Ce), 8, at, !lt);
    }, decode: (Ce) => {
      if (!Array.isArray(Ce) || Ce.length && typeof Ce[0] != "number") throw new Error("radix2.decode input should be array of numbers");
      return Uint8Array.from(Oe(Ce, at, 8, lt));
    } };
  }
  function dt(at) {
    if (typeof at != "function") throw new Error("unsafeWrapper fn should be function");
    return function(...lt) {
      try {
        return at.apply(null, lt);
      } catch {
      }
    };
  }
  function ht(at, lt) {
    if (typeof lt != "function") throw new Error("checksum fn should be function");
    return { encode(Ce) {
      if (!L(Ce)) throw new Error("checksum.encode: input should be Uint8Array");
      const st = lt(Ce).slice(0, at), it = new Uint8Array(Ce.length + at);
      return it.set(Ce), it.set(st, Ce.length), it;
    }, decode(Ce) {
      if (!L(Ce)) throw new Error("checksum.decode: input should be Uint8Array");
      const st = Ce.slice(0, -at), it = lt(st).slice(0, at), nt = Ce.slice(-at);
      for (let ot = 0; ot < at; ot++) if (it[ot] !== nt[ot]) throw new Error("Invalid checksum");
      return st;
    } };
  }
  B.utils = { alphabet: J, chain: V, checksum: ht, convertRadix: oe, convertRadix2: Oe, radix: rt, radix2: ut, join: re, padding: ne }, B.base16 = V(ut(4), J("0123456789ABCDEF"), re("")), B.base32 = V(ut(5), J("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"), ne(5), re("")), B.base32nopad = V(ut(5), J("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"), re("")), B.base32hex = V(ut(5), J("0123456789ABCDEFGHIJKLMNOPQRSTUV"), ne(5), re("")), B.base32hexnopad = V(ut(5), J("0123456789ABCDEFGHIJKLMNOPQRSTUV"), re("")), B.base32crockford = V(ut(5), J("0123456789ABCDEFGHJKMNPQRSTVWXYZ"), re(""), ie((at) => at.toUpperCase().replace(/O/g, "0").replace(/[IL]/g, "1"))), B.base64 = V(ut(6), J("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"), ne(6), re("")), B.base64nopad = V(ut(6), J("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"), re("")), B.base64url = V(ut(6), J("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"), ne(6), re("")), B.base64urlnopad = V(ut(6), J("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"), re(""));
  const bt = (at) => V(rt(58), J(at), re(""));
  B.base58 = bt("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"), B.base58flickr = bt("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"), B.base58xrp = bt("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");
  const Tt = [0, 2, 3, 5, 6, 7, 9, 10, 11];
  B.base58xmr = { encode(at) {
    let lt = "";
    for (let Ce = 0; Ce < at.length; Ce += 8) {
      const st = at.subarray(Ce, Ce + 8);
      lt += B.base58.encode(st).padStart(Tt[st.length], "1");
    }
    return lt;
  }, decode(at) {
    let lt = [];
    for (let Ce = 0; Ce < at.length; Ce += 11) {
      const st = at.slice(Ce, Ce + 11), it = Tt.indexOf(st.length), nt = B.base58.decode(st);
      for (let ot = 0; ot < nt.length - it; ot++) if (nt[ot] !== 0) throw new Error("base58xmr: wrong padding");
      lt = lt.concat(Array.from(nt.slice(nt.length - it)));
    }
    return Uint8Array.from(lt);
  } }, B.createBase58check = (at) => V(ht(4, (lt) => at(at(lt))), B.base58), B.base58check = B.createBase58check;
  const wt = V(J("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), re("")), Et = [996825010, 642813549, 513874426, 1027748829, 705979059];
  function Rt(at) {
    const lt = at >> 25;
    let Ce = (33554431 & at) << 5;
    for (let st = 0; st < Et.length; st++) (lt >> st & 1) == 1 && (Ce ^= Et[st]);
    return Ce;
  }
  function Bt(at, lt, Ce = 1) {
    const st = at.length;
    let it = 1;
    for (let nt = 0; nt < st; nt++) {
      const ot = at.charCodeAt(nt);
      if (ot < 33 || ot > 126) throw new Error(`Invalid prefix (${at})`);
      it = Rt(it) ^ ot >> 5;
    }
    it = Rt(it);
    for (let nt = 0; nt < st; nt++) it = Rt(it) ^ 31 & at.charCodeAt(nt);
    for (let nt of lt) it = Rt(it) ^ nt;
    for (let nt = 0; nt < 6; nt++) it = Rt(it);
    return it ^= Ce, wt.encode(Oe([it % 2 ** 30], 30, 5, !1));
  }
  function Pt(at) {
    const lt = at === "bech32" ? 1 : 734539939, Ce = ut(5), st = Ce.decode, it = Ce.encode, nt = dt(st);
    function ot(ke, ct = 90) {
      if (typeof ke != "string") throw new Error("bech32.decode input should be string, not " + typeof ke);
      if (ke.length < 8 || ct !== !1 && ke.length > ct) throw new TypeError(`Wrong string length: ${ke.length} (${ke}). Expected (8..${ct})`);
      const yt = ke.toLowerCase();
      if (ke !== yt && ke !== ke.toUpperCase()) throw new Error("String must be lowercase or uppercase");
      const $t = yt.lastIndexOf("1");
      if ($t === 0 || $t === -1) throw new Error('Letter "1" must be present between prefix and data only');
      const gt = yt.slice(0, $t), xt = yt.slice($t + 1);
      if (xt.length < 6) throw new Error("Data must be at least 6 characters long");
      const At = wt.decode(xt).slice(0, -6), mt = Bt(gt, At, lt);
      if (!xt.endsWith(mt)) throw new Error(`Invalid checksum in ${ke}: expected "${mt}"`);
      return { prefix: gt, words: At };
    }
    return { encode: function(ke, ct, yt = 90) {
      if (typeof ke != "string") throw new Error("bech32.encode prefix should be string, not " + typeof ke);
      if (!Array.isArray(ct) || ct.length && typeof ct[0] != "number") throw new Error("bech32.encode words should be array of numbers, not " + typeof ct);
      if (ke.length === 0) throw new TypeError(`Invalid prefix length ${ke.length}`);
      const $t = ke.length + 7 + ct.length;
      if (yt !== !1 && $t > yt) throw new TypeError(`Length ${$t} exceeds limit ${yt}`);
      const gt = ke.toLowerCase(), xt = Bt(gt, ct, lt);
      return `${gt}1${wt.encode(ct)}${xt}`;
    }, decode: ot, decodeToBytes: function(ke) {
      const { prefix: ct, words: yt } = ot(ke, !1);
      return { prefix: ct, words: yt, bytes: st(yt) };
    }, decodeUnsafe: dt(ot), fromWords: st, fromWordsUnsafe: nt, toWords: it };
  }
  B.bech32 = Pt("bech32"), B.bech32m = Pt("bech32m"), B.utf8 = { encode: (at) => new TextDecoder().decode(at), decode: (at) => new TextEncoder().encode(at) }, B.hex = V(ut(4), J("0123456789abcdef"), re(""), ie((at) => {
    if (typeof at != "string" || at.length % 2) throw new TypeError(`hex.decode: expected string, got ${typeof at} with length ${at.length}`);
    return at.toLowerCase();
  }));
  const Dt = { utf8: B.utf8, hex: B.hex, base16: B.base16, base32: B.base32, base64: B.base64, base64url: B.base64url, base58: B.base58, base58xmr: B.base58xmr }, Gt = "Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr";
  B.bytesToString = (at, lt) => {
    if (typeof at != "string" || !Dt.hasOwnProperty(at)) throw new TypeError(Gt);
    if (!L(lt)) throw new TypeError("bytesToString() expects Uint8Array");
    return Dt[at].encode(lt);
  }, B.str = B.bytesToString, B.stringToBytes = (at, lt) => {
    if (!Dt.hasOwnProperty(at)) throw new TypeError(Gt);
    if (typeof lt != "string") throw new TypeError("stringToBytes() expects string");
    return Dt[at].decode(lt);
  }, B.bytes = B.stringToBytes;
})(lib$2);
var inherits_browser = { exports: {} };
typeof Object.create == "function" ? inherits_browser.exports = function(B, L) {
  L && (B.super_ = L, B.prototype = Object.create(L.prototype, { constructor: { value: B, enumerable: !1, writable: !0, configurable: !0 } }));
} : inherits_browser.exports = function(B, L) {
  if (L) {
    B.super_ = L;
    var V = function() {
    };
    V.prototype = L.prototype, B.prototype = new V(), B.prototype.constructor = B;
  }
};
var inherits_browserExports = inherits_browser.exports, readableBrowser$1 = { exports: {} }, events = { exports: {} }, R = typeof Reflect == "object" ? Reflect : null, ReflectApply = R && typeof R.apply == "function" ? R.apply : function(B, L, V) {
  return Function.prototype.apply.call(B, L, V);
}, ReflectOwnKeys;
function ProcessEmitWarning(B) {
  console && console.warn && console.warn(B);
}
ReflectOwnKeys = R && typeof R.ownKeys == "function" ? R.ownKeys : Object.getOwnPropertySymbols ? function(B) {
  return Object.getOwnPropertyNames(B).concat(Object.getOwnPropertySymbols(B));
} : function(B) {
  return Object.getOwnPropertyNames(B);
};
var NumberIsNaN = Number.isNaN || function(B) {
  return B != B;
};
function EventEmitter() {
  EventEmitter.init.call(this);
}
events.exports = EventEmitter, events.exports.once = once$2, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._eventsCount = 0, EventEmitter.prototype._maxListeners = void 0;
var defaultMaxListeners = 10;
function checkListener(B) {
  if (typeof B != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof B);
}
function _getMaxListeners(B) {
  return B._maxListeners === void 0 ? EventEmitter.defaultMaxListeners : B._maxListeners;
}
function _addListener(B, L, V, J) {
  var re, ne, ie;
  if (checkListener(V), (ne = B._events) === void 0 ? (ne = B._events = /* @__PURE__ */ Object.create(null), B._eventsCount = 0) : (ne.newListener !== void 0 && (B.emit("newListener", L, V.listener ? V.listener : V), ne = B._events), ie = ne[L]), ie === void 0) ie = ne[L] = V, ++B._eventsCount;
  else if (typeof ie == "function" ? ie = ne[L] = J ? [V, ie] : [ie, V] : J ? ie.unshift(V) : ie.push(V), (re = _getMaxListeners(B)) > 0 && ie.length > re && !ie.warned) {
    ie.warned = !0;
    var oe = new Error("Possible EventEmitter memory leak detected. " + ie.length + " " + String(L) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    oe.name = "MaxListenersExceededWarning", oe.emitter = B, oe.type = L, oe.count = ie.length, ProcessEmitWarning(oe);
  }
  return B;
}
function onceWrapper() {
  if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function _onceWrap(B, L, V) {
  var J = { fired: !1, wrapFn: void 0, target: B, type: L, listener: V }, re = onceWrapper.bind(J);
  return re.listener = V, J.wrapFn = re, re;
}
function _listeners(B, L, V) {
  var J = B._events;
  if (J === void 0) return [];
  var re = J[L];
  return re === void 0 ? [] : typeof re == "function" ? V ? [re.listener || re] : [re] : V ? unwrapListeners(re) : arrayClone(re, re.length);
}
function listenerCount(B) {
  var L = this._events;
  if (L !== void 0) {
    var V = L[B];
    if (typeof V == "function") return 1;
    if (V !== void 0) return V.length;
  }
  return 0;
}
function arrayClone(B, L) {
  for (var V = new Array(L), J = 0; J < L; ++J) V[J] = B[J];
  return V;
}
function spliceOne(B, L) {
  for (; L + 1 < B.length; L++) B[L] = B[L + 1];
  B.pop();
}
function unwrapListeners(B) {
  for (var L = new Array(B.length), V = 0; V < L.length; ++V) L[V] = B[V].listener || B[V];
  return L;
}
function once$2(B, L) {
  return new Promise(function(V, J) {
    function re(ie) {
      B.removeListener(L, ne), J(ie);
    }
    function ne() {
      typeof B.removeListener == "function" && B.removeListener("error", re), V([].slice.call(arguments));
    }
    eventTargetAgnosticAddListener(B, L, ne, { once: !0 }), L !== "error" && addErrorHandlerIfEventEmitter(B, re, { once: !0 });
  });
}
function addErrorHandlerIfEventEmitter(B, L, V) {
  typeof B.on == "function" && eventTargetAgnosticAddListener(B, "error", L, V);
}
function eventTargetAgnosticAddListener(B, L, V, J) {
  if (typeof B.on == "function") J.once ? B.once(L, V) : B.on(L, V);
  else {
    if (typeof B.addEventListener != "function") throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof B);
    B.addEventListener(L, function re(ne) {
      J.once && B.removeEventListener(L, re), V(ne);
    });
  }
}
Object.defineProperty(EventEmitter, "defaultMaxListeners", { enumerable: !0, get: function() {
  return defaultMaxListeners;
}, set: function(B) {
  if (typeof B != "number" || B < 0 || NumberIsNaN(B)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + B + ".");
  defaultMaxListeners = B;
} }), EventEmitter.init = function() {
  this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
}, EventEmitter.prototype.setMaxListeners = function(B) {
  if (typeof B != "number" || B < 0 || NumberIsNaN(B)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + B + ".");
  return this._maxListeners = B, this;
}, EventEmitter.prototype.getMaxListeners = function() {
  return _getMaxListeners(this);
}, EventEmitter.prototype.emit = function(B) {
  for (var L = [], V = 1; V < arguments.length; V++) L.push(arguments[V]);
  var J = B === "error", re = this._events;
  if (re !== void 0) J = J && re.error === void 0;
  else if (!J) return !1;
  if (J) {
    var ne;
    if (L.length > 0 && (ne = L[0]), ne instanceof Error) throw ne;
    var ie = new Error("Unhandled error." + (ne ? " (" + ne.message + ")" : ""));
    throw ie.context = ne, ie;
  }
  var oe = re[B];
  if (oe === void 0) return !1;
  if (typeof oe == "function") ReflectApply(oe, this, L);
  else {
    var pe = oe.length, ce = arrayClone(oe, pe);
    for (V = 0; V < pe; ++V) ReflectApply(ce[V], this, L);
  }
  return !0;
}, EventEmitter.prototype.addListener = function(B, L) {
  return _addListener(this, B, L, !1);
}, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.prependListener = function(B, L) {
  return _addListener(this, B, L, !0);
}, EventEmitter.prototype.once = function(B, L) {
  return checkListener(L), this.on(B, _onceWrap(this, B, L)), this;
}, EventEmitter.prototype.prependOnceListener = function(B, L) {
  return checkListener(L), this.prependListener(B, _onceWrap(this, B, L)), this;
}, EventEmitter.prototype.removeListener = function(B, L) {
  var V, J, re, ne, ie;
  if (checkListener(L), (J = this._events) === void 0) return this;
  if ((V = J[B]) === void 0) return this;
  if (V === L || V.listener === L) --this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete J[B], J.removeListener && this.emit("removeListener", B, V.listener || L));
  else if (typeof V != "function") {
    for (re = -1, ne = V.length - 1; ne >= 0; ne--) if (V[ne] === L || V[ne].listener === L) {
      ie = V[ne].listener, re = ne;
      break;
    }
    if (re < 0) return this;
    re === 0 ? V.shift() : spliceOne(V, re), V.length === 1 && (J[B] = V[0]), J.removeListener !== void 0 && this.emit("removeListener", B, ie || L);
  }
  return this;
}, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.removeAllListeners = function(B) {
  var L, V, J;
  if ((V = this._events) === void 0) return this;
  if (V.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : V[B] !== void 0 && (--this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete V[B]), this;
  if (arguments.length === 0) {
    var re, ne = Object.keys(V);
    for (J = 0; J < ne.length; ++J) (re = ne[J]) !== "removeListener" && this.removeAllListeners(re);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (typeof (L = V[B]) == "function") this.removeListener(B, L);
  else if (L !== void 0) for (J = L.length - 1; J >= 0; J--) this.removeListener(B, L[J]);
  return this;
}, EventEmitter.prototype.listeners = function(B) {
  return _listeners(this, B, !0);
}, EventEmitter.prototype.rawListeners = function(B) {
  return _listeners(this, B, !1);
}, EventEmitter.listenerCount = function(B, L) {
  return typeof B.listenerCount == "function" ? B.listenerCount(L) : listenerCount.call(B, L);
}, EventEmitter.prototype.listenerCount = listenerCount, EventEmitter.prototype.eventNames = function() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};
var eventsExports = events.exports, streamBrowser$1 = eventsExports.EventEmitter, util$3 = {}, types$2 = {}, shams$1 = function() {
  if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
  if (typeof Symbol.iterator == "symbol") return !0;
  var B = {}, L = Symbol("test"), V = Object(L);
  if (typeof L == "string" || Object.prototype.toString.call(L) !== "[object Symbol]" || Object.prototype.toString.call(V) !== "[object Symbol]") return !1;
  for (L in B[L] = 42, B) return !1;
  if (typeof Object.keys == "function" && Object.keys(B).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(B).length !== 0) return !1;
  var J = Object.getOwnPropertySymbols(B);
  if (J.length !== 1 || J[0] !== L || !Object.prototype.propertyIsEnumerable.call(B, L)) return !1;
  if (typeof Object.getOwnPropertyDescriptor == "function") {
    var re = Object.getOwnPropertyDescriptor(B, L);
    if (re.value !== 42 || re.enumerable !== !0) return !1;
  }
  return !0;
}, hasSymbols$2 = shams$1, shams = function() {
  return hasSymbols$2() && !!Symbol.toStringTag;
}, esErrors = Error, _eval = EvalError, range = RangeError, ref = ReferenceError, syntax = SyntaxError, type = TypeError, uri = URIError, origSymbol = typeof Symbol < "u" && Symbol, hasSymbolSham = shams$1, hasSymbols$1 = function() {
  return typeof origSymbol == "function" && typeof Symbol == "function" && typeof origSymbol("foo") == "symbol" && typeof Symbol("bar") == "symbol" && hasSymbolSham();
}, test = { __proto__: null, foo: {} }, $Object = Object, hasProto$1 = function() {
  return { __proto__: test }.foo === test.foo && !(test instanceof $Object);
}, ERROR_MESSAGE = "Function.prototype.bind called on incompatible ", toStr$3 = Object.prototype.toString, max = Math.max, funcType = "[object Function]", concatty = function(B, L) {
  for (var V = [], J = 0; J < B.length; J += 1) V[J] = B[J];
  for (var re = 0; re < L.length; re += 1) V[re + B.length] = L[re];
  return V;
}, slicy = function(B, L) {
  for (var V = [], J = L, re = 0; J < B.length; J += 1, re += 1) V[re] = B[J];
  return V;
}, joiny = function(B, L) {
  for (var V = "", J = 0; J < B.length; J += 1) V += B[J], J + 1 < B.length && (V += L);
  return V;
}, implementation$1 = function(B) {
  var L = this;
  if (typeof L != "function" || toStr$3.apply(L) !== funcType) throw new TypeError(ERROR_MESSAGE + L);
  for (var V, J = slicy(arguments, 1), re = max(0, L.length - J.length), ne = [], ie = 0; ie < re; ie++) ne[ie] = "$" + ie;
  if (V = Function("binder", "return function (" + joiny(ne, ",") + "){ return binder.apply(this,arguments); }")(function() {
    if (this instanceof V) {
      var pe = L.apply(this, concatty(J, arguments));
      return Object(pe) === pe ? pe : this;
    }
    return L.apply(B, concatty(J, arguments));
  }), L.prototype) {
    var oe = function() {
    };
    oe.prototype = L.prototype, V.prototype = new oe(), oe.prototype = null;
  }
  return V;
}, implementation = implementation$1, functionBind = Function.prototype.bind || implementation, call$1 = Function.prototype.call, $hasOwn = Object.prototype.hasOwnProperty, bind$1 = functionBind, hasown = bind$1.call(call$1, $hasOwn), undefined$1, $Error = esErrors, $EvalError = _eval, $RangeError = range, $ReferenceError = ref, $SyntaxError$1 = syntax, $TypeError$2 = type, $URIError = uri, $Function = Function, getEvalledConstructor = function(B) {
  try {
    return $Function('"use strict"; return (' + B + ").constructor;")();
  } catch {
  }
}, $gOPD$1 = Object.getOwnPropertyDescriptor;
if ($gOPD$1) try {
  $gOPD$1({}, "");
} catch {
  $gOPD$1 = null;
}
var throwTypeError = function() {
  throw new $TypeError$2();
}, ThrowTypeError = $gOPD$1 ? function() {
  try {
    return throwTypeError;
  } catch {
    try {
      return $gOPD$1(arguments, "callee").get;
    } catch {
      return throwTypeError;
    }
  }
}() : throwTypeError, hasSymbols = hasSymbols$1(), hasProto = hasProto$1(), getProto$1 = Object.getPrototypeOf || (hasProto ? function(B) {
  return B.__proto__;
} : null), needsEval = {}, TypedArray = typeof Uint8Array < "u" && getProto$1 ? getProto$1(Uint8Array) : undefined$1, INTRINSICS = { __proto__: null, "%AggregateError%": typeof AggregateError > "u" ? undefined$1 : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? undefined$1 : ArrayBuffer, "%ArrayIteratorPrototype%": hasSymbols && getProto$1 ? getProto$1([][Symbol.iterator]()) : undefined$1, "%AsyncFromSyncIteratorPrototype%": undefined$1, "%AsyncFunction%": needsEval, "%AsyncGenerator%": needsEval, "%AsyncGeneratorFunction%": needsEval, "%AsyncIteratorPrototype%": needsEval, "%Atomics%": typeof Atomics > "u" ? undefined$1 : Atomics, "%BigInt%": typeof BigInt > "u" ? undefined$1 : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? undefined$1 : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? undefined$1 : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? undefined$1 : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": $Error, "%eval%": eval, "%EvalError%": $EvalError, "%Float32Array%": typeof Float32Array > "u" ? undefined$1 : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? undefined$1 : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? undefined$1 : FinalizationRegistry, "%Function%": $Function, "%GeneratorFunction%": needsEval, "%Int8Array%": typeof Int8Array > "u" ? undefined$1 : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? undefined$1 : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? undefined$1 : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": hasSymbols && getProto$1 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$1, "%JSON%": typeof JSON == "object" ? JSON : undefined$1, "%Map%": typeof Map > "u" ? undefined$1 : Map, "%MapIteratorPrototype%": typeof Map < "u" && hasSymbols && getProto$1 ? getProto$1((/* @__PURE__ */ new Map())[Symbol.iterator]()) : undefined$1, "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? undefined$1 : Promise, "%Proxy%": typeof Proxy > "u" ? undefined$1 : Proxy, "%RangeError%": $RangeError, "%ReferenceError%": $ReferenceError, "%Reflect%": typeof Reflect > "u" ? undefined$1 : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? undefined$1 : Set, "%SetIteratorPrototype%": typeof Set < "u" && hasSymbols && getProto$1 ? getProto$1((/* @__PURE__ */ new Set())[Symbol.iterator]()) : undefined$1, "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? undefined$1 : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": hasSymbols && getProto$1 ? getProto$1(""[Symbol.iterator]()) : undefined$1, "%Symbol%": hasSymbols ? Symbol : undefined$1, "%SyntaxError%": $SyntaxError$1, "%ThrowTypeError%": ThrowTypeError, "%TypedArray%": TypedArray, "%TypeError%": $TypeError$2, "%Uint8Array%": typeof Uint8Array > "u" ? undefined$1 : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? undefined$1 : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? undefined$1 : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? undefined$1 : Uint32Array, "%URIError%": $URIError, "%WeakMap%": typeof WeakMap > "u" ? undefined$1 : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? undefined$1 : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? undefined$1 : WeakSet };
if (getProto$1) try {
  null.error;
} catch (B) {
  var errorProto = getProto$1(getProto$1(B));
  INTRINSICS["%Error.prototype%"] = errorProto;
}
var doEval = function B(L) {
  var V;
  if (L === "%AsyncFunction%") V = getEvalledConstructor("async function () {}");
  else if (L === "%GeneratorFunction%") V = getEvalledConstructor("function* () {}");
  else if (L === "%AsyncGeneratorFunction%") V = getEvalledConstructor("async function* () {}");
  else if (L === "%AsyncGenerator%") {
    var J = B("%AsyncGeneratorFunction%");
    J && (V = J.prototype);
  } else if (L === "%AsyncIteratorPrototype%") {
    var re = B("%AsyncGenerator%");
    re && getProto$1 && (V = getProto$1(re.prototype));
  }
  return INTRINSICS[L] = V, V;
}, LEGACY_ALIASES = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, bind = functionBind, hasOwn = hasown, $concat = bind.call(Function.call, Array.prototype.concat), $spliceApply = bind.call(Function.apply, Array.prototype.splice), $replace = bind.call(Function.call, String.prototype.replace), $strSlice = bind.call(Function.call, String.prototype.slice), $exec = bind.call(Function.call, RegExp.prototype.exec), rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, reEscapeChar = /\\(\\)?/g, stringToPath = function(B) {
  var L = $strSlice(B, 0, 1), V = $strSlice(B, -1);
  if (L === "%" && V !== "%") throw new $SyntaxError$1("invalid intrinsic syntax, expected closing `%`");
  if (V === "%" && L !== "%") throw new $SyntaxError$1("invalid intrinsic syntax, expected opening `%`");
  var J = [];
  return $replace(B, rePropName, function(re, ne, ie, oe) {
    J[J.length] = ie ? $replace(oe, reEscapeChar, "$1") : ne || re;
  }), J;
}, getBaseIntrinsic = function(B, L) {
  var V, J = B;
  if (hasOwn(LEGACY_ALIASES, J) && (J = "%" + (V = LEGACY_ALIASES[J])[0] + "%"), hasOwn(INTRINSICS, J)) {
    var re = INTRINSICS[J];
    if (re === needsEval && (re = doEval(J)), re === void 0 && !L) throw new $TypeError$2("intrinsic " + B + " exists, but is not available. Please file an issue!");
    return { alias: V, name: J, value: re };
  }
  throw new $SyntaxError$1("intrinsic " + B + " does not exist!");
}, getIntrinsic = function(B, L) {
  if (typeof B != "string" || B.length === 0) throw new $TypeError$2("intrinsic name must be a non-empty string");
  if (arguments.length > 1 && typeof L != "boolean") throw new $TypeError$2('"allowMissing" argument must be a boolean');
  if ($exec(/^%?[^%]*%?$/, B) === null) throw new $SyntaxError$1("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
  var V = stringToPath(B), J = V.length > 0 ? V[0] : "", re = getBaseIntrinsic("%" + J + "%", L), ne = re.name, ie = re.value, oe = !1, pe = re.alias;
  pe && (J = pe[0], $spliceApply(V, $concat([0, 1], pe)));
  for (var ce = 1, Oe = !0; ce < V.length; ce += 1) {
    var rt = V[ce], ut = $strSlice(rt, 0, 1), dt = $strSlice(rt, -1);
    if ((ut === '"' || ut === "'" || ut === "`" || dt === '"' || dt === "'" || dt === "`") && ut !== dt) throw new $SyntaxError$1("property names with quotes must have matching quotes");
    if (rt !== "constructor" && Oe || (oe = !0), hasOwn(INTRINSICS, ne = "%" + (J += "." + rt) + "%")) ie = INTRINSICS[ne];
    else if (ie != null) {
      if (!(rt in ie)) {
        if (!L) throw new $TypeError$2("base intrinsic for " + B + " exists, but the property is not available.");
        return;
      }
      if ($gOPD$1 && ce + 1 >= V.length) {
        var ht = $gOPD$1(ie, rt);
        ie = (Oe = !!ht) && "get" in ht && !("originalValue" in ht.get) ? ht.get : ie[rt];
      } else Oe = hasOwn(ie, rt), ie = ie[rt];
      Oe && !oe && (INTRINSICS[ne] = ie);
    }
  }
  return ie;
}, callBind$2 = { exports: {} }, esDefineProperty, hasRequiredEsDefineProperty;
function requireEsDefineProperty() {
  if (hasRequiredEsDefineProperty) return esDefineProperty;
  hasRequiredEsDefineProperty = 1;
  var B = getIntrinsic("%Object.defineProperty%", !0) || !1;
  if (B) try {
    B({}, "a", { value: 1 });
  } catch {
    B = !1;
  }
  return esDefineProperty = B;
}
var GetIntrinsic$2 = getIntrinsic, $gOPD = GetIntrinsic$2("%Object.getOwnPropertyDescriptor%", !0);
if ($gOPD) try {
  $gOPD([], "length");
} catch {
  $gOPD = null;
}
var gopd$1 = $gOPD, $defineProperty$1 = requireEsDefineProperty(), $SyntaxError = syntax, $TypeError$1 = type, gopd = gopd$1, defineDataProperty = function(B, L, V) {
  if (!B || typeof B != "object" && typeof B != "function") throw new $TypeError$1("`obj` must be an object or a function`");
  if (typeof L != "string" && typeof L != "symbol") throw new $TypeError$1("`property` must be a string or a symbol`");
  if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) throw new $TypeError$1("`nonEnumerable`, if provided, must be a boolean or null");
  if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) throw new $TypeError$1("`nonWritable`, if provided, must be a boolean or null");
  if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) throw new $TypeError$1("`nonConfigurable`, if provided, must be a boolean or null");
  if (arguments.length > 6 && typeof arguments[6] != "boolean") throw new $TypeError$1("`loose`, if provided, must be a boolean");
  var J = arguments.length > 3 ? arguments[3] : null, re = arguments.length > 4 ? arguments[4] : null, ne = arguments.length > 5 ? arguments[5] : null, ie = arguments.length > 6 && arguments[6], oe = !!gopd && gopd(B, L);
  if ($defineProperty$1) $defineProperty$1(B, L, { configurable: ne === null && oe ? oe.configurable : !ne, enumerable: J === null && oe ? oe.enumerable : !J, value: V, writable: re === null && oe ? oe.writable : !re });
  else {
    if (!ie && (J || re || ne)) throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
    B[L] = V;
  }
}, $defineProperty = requireEsDefineProperty(), hasPropertyDescriptors = function() {
  return !!$defineProperty;
};
hasPropertyDescriptors.hasArrayLengthDefineBug = function() {
  if (!$defineProperty) return null;
  try {
    return $defineProperty([], "length", { value: 1 }).length !== 1;
  } catch {
    return !0;
  }
};
var hasPropertyDescriptors_1 = hasPropertyDescriptors, GetIntrinsic$1 = getIntrinsic, define = defineDataProperty, hasDescriptors = hasPropertyDescriptors_1(), gOPD$1 = gopd$1, $TypeError = type, $floor = GetIntrinsic$1("%Math.floor%"), setFunctionLength = function(B, L) {
  if (typeof B != "function") throw new $TypeError("`fn` is not a function");
  if (typeof L != "number" || L < 0 || L > 4294967295 || $floor(L) !== L) throw new $TypeError("`length` must be a positive 32-bit integer");
  var V = arguments.length > 2 && !!arguments[2], J = !0, re = !0;
  if ("length" in B && gOPD$1) {
    var ne = gOPD$1(B, "length");
    ne && !ne.configurable && (J = !1), ne && !ne.writable && (re = !1);
  }
  return (J || re || !V) && (hasDescriptors ? define(B, "length", L, !0, !0) : define(B, "length", L)), B;
};
(function(B) {
  var L = functionBind, V = getIntrinsic, J = setFunctionLength, re = type, ne = V("%Function.prototype.apply%"), ie = V("%Function.prototype.call%"), oe = V("%Reflect.apply%", !0) || L.call(ie, ne), pe = requireEsDefineProperty(), ce = V("%Math.max%");
  B.exports = function(rt) {
    if (typeof rt != "function") throw new re("a function is required");
    var ut = oe(L, ie, arguments);
    return J(ut, 1 + ce(0, rt.length - (arguments.length - 1)), !0);
  };
  var Oe = function() {
    return oe(L, ne, arguments);
  };
  pe ? pe(B.exports, "apply", { value: Oe }) : B.exports.apply = Oe;
})(callBind$2);
var callBindExports = callBind$2.exports, GetIntrinsic = getIntrinsic, callBind$1 = callBindExports, $indexOf$1 = callBind$1(GetIntrinsic("String.prototype.indexOf")), callBound$2 = function(B, L) {
  var V = GetIntrinsic(B, !!L);
  return typeof V == "function" && $indexOf$1(B, ".prototype.") > -1 ? callBind$1(V) : V;
}, hasToStringTag$3 = shams(), callBound$1 = callBound$2, $toString$1 = callBound$1("Object.prototype.toString"), isStandardArguments = function(B) {
  return !(hasToStringTag$3 && B && typeof B == "object" && Symbol.toStringTag in B) && $toString$1(B) === "[object Arguments]";
}, isLegacyArguments = function(B) {
  return !!isStandardArguments(B) || B !== null && typeof B == "object" && typeof B.length == "number" && B.length >= 0 && $toString$1(B) !== "[object Array]" && $toString$1(B.callee) === "[object Function]";
}, supportsStandardArguments = function() {
  return isStandardArguments(arguments);
}();
isStandardArguments.isLegacyArguments = isLegacyArguments;
var isArguments = supportsStandardArguments ? isStandardArguments : isLegacyArguments, toStr$2 = Object.prototype.toString, fnToStr$1 = Function.prototype.toString, isFnRegex = /^\s*(?:function)?\*/, hasToStringTag$2 = shams(), getProto = Object.getPrototypeOf, getGeneratorFunc = function() {
  if (!hasToStringTag$2) return !1;
  try {
    return Function("return function*() {}")();
  } catch {
  }
}, GeneratorFunction, isGeneratorFunction = function(B) {
  if (typeof B != "function") return !1;
  if (isFnRegex.test(fnToStr$1.call(B))) return !0;
  if (!hasToStringTag$2) return toStr$2.call(B) === "[object GeneratorFunction]";
  if (!getProto) return !1;
  if (GeneratorFunction === void 0) {
    var L = getGeneratorFunc();
    GeneratorFunction = !!L && getProto(L);
  }
  return getProto(B) === GeneratorFunction;
}, fnToStr = Function.prototype.toString, reflectApply = typeof Reflect == "object" && Reflect !== null && Reflect.apply, badArrayLike, isCallableMarker;
if (typeof reflectApply == "function" && typeof Object.defineProperty == "function") try {
  badArrayLike = Object.defineProperty({}, "length", { get: function() {
    throw isCallableMarker;
  } }), isCallableMarker = {}, reflectApply(function() {
    throw 42;
  }, null, badArrayLike);
} catch (B) {
  B !== isCallableMarker && (reflectApply = null);
}
else reflectApply = null;
var constructorRegex = /^\s*class\b/, isES6ClassFn = function(B) {
  try {
    var L = fnToStr.call(B);
    return constructorRegex.test(L);
  } catch {
    return !1;
  }
}, tryFunctionObject = function(B) {
  try {
    return !isES6ClassFn(B) && (fnToStr.call(B), !0);
  } catch {
    return !1;
  }
}, toStr$1 = Object.prototype.toString, objectClass = "[object Object]", fnClass = "[object Function]", genClass = "[object GeneratorFunction]", ddaClass = "[object HTMLAllCollection]", ddaClass2 = "[object HTML document.all class]", ddaClass3 = "[object HTMLCollection]", hasToStringTag$1 = typeof Symbol == "function" && !!Symbol.toStringTag, isIE68 = !(0 in [,]), isDDA = function() {
  return !1;
};
if (typeof document == "object") {
  var all = document.all;
  toStr$1.call(all) === toStr$1.call(document.all) && (isDDA = function(B) {
    if ((isIE68 || !B) && (B === void 0 || typeof B == "object")) try {
      var L = toStr$1.call(B);
      return (L === ddaClass || L === ddaClass2 || L === ddaClass3 || L === objectClass) && B("") == null;
    } catch {
    }
    return !1;
  });
}
var isCallable$1 = reflectApply ? function(B) {
  if (isDDA(B)) return !0;
  if (!B || typeof B != "function" && typeof B != "object") return !1;
  try {
    reflectApply(B, null, badArrayLike);
  } catch (L) {
    if (L !== isCallableMarker) return !1;
  }
  return !isES6ClassFn(B) && tryFunctionObject(B);
} : function(B) {
  if (isDDA(B)) return !0;
  if (!B || typeof B != "function" && typeof B != "object") return !1;
  if (hasToStringTag$1) return tryFunctionObject(B);
  if (isES6ClassFn(B)) return !1;
  var L = toStr$1.call(B);
  return !(L !== fnClass && L !== genClass && !/^\[object HTML/.test(L)) && tryFunctionObject(B);
}, isCallable = isCallable$1, toStr = Object.prototype.toString, hasOwnProperty$1 = Object.prototype.hasOwnProperty, forEachArray = function(B, L, V) {
  for (var J = 0, re = B.length; J < re; J++) hasOwnProperty$1.call(B, J) && (V == null ? L(B[J], J, B) : L.call(V, B[J], J, B));
}, forEachString = function(B, L, V) {
  for (var J = 0, re = B.length; J < re; J++) V == null ? L(B.charAt(J), J, B) : L.call(V, B.charAt(J), J, B);
}, forEachObject = function(B, L, V) {
  for (var J in B) hasOwnProperty$1.call(B, J) && (V == null ? L(B[J], J, B) : L.call(V, B[J], J, B));
}, forEach$1 = function(B, L, V) {
  if (!isCallable(L)) throw new TypeError("iterator must be a function");
  var J;
  arguments.length >= 3 && (J = V), toStr.call(B) === "[object Array]" ? forEachArray(B, L, J) : typeof B == "string" ? forEachString(B, L, J) : forEachObject(B, L, J);
}, forEach_1 = forEach$1, possibleTypedArrayNames = ["Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"], possibleNames = possibleTypedArrayNames, g$1 = typeof globalThis > "u" ? commonjsGlobal : globalThis, availableTypedArrays$1 = function() {
  for (var B = [], L = 0; L < possibleNames.length; L++) typeof g$1[possibleNames[L]] == "function" && (B[B.length] = possibleNames[L]);
  return B;
}, forEach = forEach_1, availableTypedArrays = availableTypedArrays$1, callBind = callBindExports, callBound = callBound$2, gOPD = gopd$1, $toString = callBound("Object.prototype.toString"), hasToStringTag = shams(), g = typeof globalThis > "u" ? commonjsGlobal : globalThis, typedArrays = availableTypedArrays(), $slice = callBound("String.prototype.slice"), getPrototypeOf = Object.getPrototypeOf, $indexOf = callBound("Array.prototype.indexOf", !0) || function(B, L) {
  for (var V = 0; V < B.length; V += 1) if (B[V] === L) return V;
  return -1;
}, cache = { __proto__: null };
forEach(typedArrays, hasToStringTag && gOPD && getPrototypeOf ? function(B) {
  var L = new g[B]();
  if (Symbol.toStringTag in L) {
    var V = getPrototypeOf(L), J = gOPD(V, Symbol.toStringTag);
    if (!J) {
      var re = getPrototypeOf(V);
      J = gOPD(re, Symbol.toStringTag);
    }
    cache["$" + B] = callBind(J.get);
  }
} : function(B) {
  var L = new g[B](), V = L.slice || L.set;
  V && (cache["$" + B] = callBind(V));
});
var tryTypedArrays = function(B) {
  var L = !1;
  return forEach(cache, function(V, J) {
    if (!L) try {
      "$" + V(B) === J && (L = $slice(J, 1));
    } catch {
    }
  }), L;
}, trySlices = function(B) {
  var L = !1;
  return forEach(cache, function(V, J) {
    if (!L) try {
      V(B), L = $slice(J, 1);
    } catch {
    }
  }), L;
}, whichTypedArray$1 = function(B) {
  if (!B || typeof B != "object") return !1;
  if (!hasToStringTag) {
    var L = $slice($toString(B), 8, -1);
    return $indexOf(typedArrays, L) > -1 ? L : L === "Object" && trySlices(B);
  }
  return gOPD ? tryTypedArrays(B) : null;
}, whichTypedArray = whichTypedArray$1, isTypedArray = function(B) {
  return !!whichTypedArray(B);
};
(function(B) {
  var L = isArguments, V = isGeneratorFunction, J = whichTypedArray$1, re = isTypedArray;
  function ne(ke) {
    return ke.call.bind(ke);
  }
  var ie = typeof BigInt < "u", oe = typeof Symbol < "u", pe = ne(Object.prototype.toString), ce = ne(Number.prototype.valueOf), Oe = ne(String.prototype.valueOf), rt = ne(Boolean.prototype.valueOf);
  if (ie) var ut = ne(BigInt.prototype.valueOf);
  if (oe) var dt = ne(Symbol.prototype.valueOf);
  function ht(ke, ct) {
    if (typeof ke != "object") return !1;
    try {
      return ct(ke), !0;
    } catch {
      return !1;
    }
  }
  function bt(ke) {
    return pe(ke) === "[object Map]";
  }
  function Tt(ke) {
    return pe(ke) === "[object Set]";
  }
  function wt(ke) {
    return pe(ke) === "[object WeakMap]";
  }
  function Et(ke) {
    return pe(ke) === "[object WeakSet]";
  }
  function Rt(ke) {
    return pe(ke) === "[object ArrayBuffer]";
  }
  function Bt(ke) {
    return typeof ArrayBuffer < "u" && (Rt.working ? Rt(ke) : ke instanceof ArrayBuffer);
  }
  function Pt(ke) {
    return pe(ke) === "[object DataView]";
  }
  function Dt(ke) {
    return typeof DataView < "u" && (Pt.working ? Pt(ke) : ke instanceof DataView);
  }
  B.isArgumentsObject = L, B.isGeneratorFunction = V, B.isTypedArray = re, B.isPromise = function(ke) {
    return typeof Promise < "u" && ke instanceof Promise || ke !== null && typeof ke == "object" && typeof ke.then == "function" && typeof ke.catch == "function";
  }, B.isArrayBufferView = function(ke) {
    return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(ke) : re(ke) || Dt(ke);
  }, B.isUint8Array = function(ke) {
    return J(ke) === "Uint8Array";
  }, B.isUint8ClampedArray = function(ke) {
    return J(ke) === "Uint8ClampedArray";
  }, B.isUint16Array = function(ke) {
    return J(ke) === "Uint16Array";
  }, B.isUint32Array = function(ke) {
    return J(ke) === "Uint32Array";
  }, B.isInt8Array = function(ke) {
    return J(ke) === "Int8Array";
  }, B.isInt16Array = function(ke) {
    return J(ke) === "Int16Array";
  }, B.isInt32Array = function(ke) {
    return J(ke) === "Int32Array";
  }, B.isFloat32Array = function(ke) {
    return J(ke) === "Float32Array";
  }, B.isFloat64Array = function(ke) {
    return J(ke) === "Float64Array";
  }, B.isBigInt64Array = function(ke) {
    return J(ke) === "BigInt64Array";
  }, B.isBigUint64Array = function(ke) {
    return J(ke) === "BigUint64Array";
  }, bt.working = typeof Map < "u" && bt(/* @__PURE__ */ new Map()), B.isMap = function(ke) {
    return typeof Map < "u" && (bt.working ? bt(ke) : ke instanceof Map);
  }, Tt.working = typeof Set < "u" && Tt(/* @__PURE__ */ new Set()), B.isSet = function(ke) {
    return typeof Set < "u" && (Tt.working ? Tt(ke) : ke instanceof Set);
  }, wt.working = typeof WeakMap < "u" && wt(/* @__PURE__ */ new WeakMap()), B.isWeakMap = function(ke) {
    return typeof WeakMap < "u" && (wt.working ? wt(ke) : ke instanceof WeakMap);
  }, Et.working = typeof WeakSet < "u" && Et(/* @__PURE__ */ new WeakSet()), B.isWeakSet = function(ke) {
    return Et(ke);
  }, Rt.working = typeof ArrayBuffer < "u" && Rt(new ArrayBuffer()), B.isArrayBuffer = Bt, Pt.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && Pt(new DataView(new ArrayBuffer(1), 0, 1)), B.isDataView = Dt;
  var Gt = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
  function at(ke) {
    return pe(ke) === "[object SharedArrayBuffer]";
  }
  function lt(ke) {
    return Gt !== void 0 && (at.working === void 0 && (at.working = at(new Gt())), at.working ? at(ke) : ke instanceof Gt);
  }
  function Ce(ke) {
    return ht(ke, ce);
  }
  function st(ke) {
    return ht(ke, Oe);
  }
  function it(ke) {
    return ht(ke, rt);
  }
  function nt(ke) {
    return ie && ht(ke, ut);
  }
  function ot(ke) {
    return oe && ht(ke, dt);
  }
  B.isSharedArrayBuffer = lt, B.isAsyncFunction = function(ke) {
    return pe(ke) === "[object AsyncFunction]";
  }, B.isMapIterator = function(ke) {
    return pe(ke) === "[object Map Iterator]";
  }, B.isSetIterator = function(ke) {
    return pe(ke) === "[object Set Iterator]";
  }, B.isGeneratorObject = function(ke) {
    return pe(ke) === "[object Generator]";
  }, B.isWebAssemblyCompiledModule = function(ke) {
    return pe(ke) === "[object WebAssembly.Module]";
  }, B.isNumberObject = Ce, B.isStringObject = st, B.isBooleanObject = it, B.isBigIntObject = nt, B.isSymbolObject = ot, B.isBoxedPrimitive = function(ke) {
    return Ce(ke) || st(ke) || it(ke) || nt(ke) || ot(ke);
  }, B.isAnyArrayBuffer = function(ke) {
    return typeof Uint8Array < "u" && (Bt(ke) || lt(ke));
  }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(ke) {
    Object.defineProperty(B, ke, { enumerable: !1, value: function() {
      throw new Error(ke + " is not supported in userland");
    } });
  });
})(types$2);
var isBufferBrowser = function(B) {
  return B && typeof B == "object" && typeof B.copy == "function" && typeof B.fill == "function" && typeof B.readUInt8 == "function";
}, buffer_list, hasRequiredBuffer_list;
function requireBuffer_list() {
  if (hasRequiredBuffer_list) return buffer_list;
  function B(ce, Oe) {
    var rt = Object.keys(ce);
    if (Object.getOwnPropertySymbols) {
      var ut = Object.getOwnPropertySymbols(ce);
      Oe && (ut = ut.filter(function(dt) {
        return Object.getOwnPropertyDescriptor(ce, dt).enumerable;
      })), rt.push.apply(rt, ut);
    }
    return rt;
  }
  function L(ce) {
    for (var Oe = 1; Oe < arguments.length; Oe++) {
      var rt = arguments[Oe] != null ? arguments[Oe] : {};
      Oe % 2 ? B(Object(rt), !0).forEach(function(ut) {
        V(ce, ut, rt[ut]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(ce, Object.getOwnPropertyDescriptors(rt)) : B(Object(rt)).forEach(function(ut) {
        Object.defineProperty(ce, ut, Object.getOwnPropertyDescriptor(rt, ut));
      });
    }
    return ce;
  }
  function V(ce, Oe, rt) {
    return (Oe = re(Oe)) in ce ? Object.defineProperty(ce, Oe, { value: rt, enumerable: !0, configurable: !0, writable: !0 }) : ce[Oe] = rt, ce;
  }
  function J(ce, Oe, rt) {
    return Oe && function(ut, dt) {
      for (var ht = 0; ht < dt.length; ht++) {
        var bt = dt[ht];
        bt.enumerable = bt.enumerable || !1, bt.configurable = !0, "value" in bt && (bt.writable = !0), Object.defineProperty(ut, re(bt.key), bt);
      }
    }(ce.prototype, Oe), Object.defineProperty(ce, "prototype", { writable: !1 }), ce;
  }
  function re(ce) {
    var Oe = function(rt, ut) {
      if (typeof rt != "object" || rt === null) return rt;
      var dt = rt[Symbol.toPrimitive];
      if (dt !== void 0) {
        var ht = dt.call(rt, ut || "default");
        if (typeof ht != "object") return ht;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (ut === "string" ? String : Number)(rt);
    }(ce, "string");
    return typeof Oe == "symbol" ? Oe : String(Oe);
  }
  hasRequiredBuffer_list = 1;
  var ne = require$$1$2.Buffer, ie = util$3.inspect, oe = ie && ie.custom || "inspect";
  function pe(ce, Oe, rt) {
    ne.prototype.copy.call(ce, Oe, rt);
  }
  return buffer_list = function() {
    function ce() {
      (function(Oe, rt) {
        if (!(Oe instanceof rt)) throw new TypeError("Cannot call a class as a function");
      })(this, ce), this.head = null, this.tail = null, this.length = 0;
    }
    return J(ce, [{ key: "push", value: function(Oe) {
      var rt = { data: Oe, next: null };
      this.length > 0 ? this.tail.next = rt : this.head = rt, this.tail = rt, ++this.length;
    } }, { key: "unshift", value: function(Oe) {
      var rt = { data: Oe, next: this.head };
      this.length === 0 && (this.tail = rt), this.head = rt, ++this.length;
    } }, { key: "shift", value: function() {
      if (this.length !== 0) {
        var Oe = this.head.data;
        return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, Oe;
      }
    } }, { key: "clear", value: function() {
      this.head = this.tail = null, this.length = 0;
    } }, { key: "join", value: function(Oe) {
      if (this.length === 0) return "";
      for (var rt = this.head, ut = "" + rt.data; rt = rt.next; ) ut += Oe + rt.data;
      return ut;
    } }, { key: "concat", value: function(Oe) {
      if (this.length === 0) return ne.alloc(0);
      for (var rt = ne.allocUnsafe(Oe >>> 0), ut = this.head, dt = 0; ut; ) pe(ut.data, rt, dt), dt += ut.data.length, ut = ut.next;
      return rt;
    } }, { key: "consume", value: function(Oe, rt) {
      var ut;
      return Oe < this.head.data.length ? (ut = this.head.data.slice(0, Oe), this.head.data = this.head.data.slice(Oe)) : ut = Oe === this.head.data.length ? this.shift() : rt ? this._getString(Oe) : this._getBuffer(Oe), ut;
    } }, { key: "first", value: function() {
      return this.head.data;
    } }, { key: "_getString", value: function(Oe) {
      var rt = this.head, ut = 1, dt = rt.data;
      for (Oe -= dt.length; rt = rt.next; ) {
        var ht = rt.data, bt = Oe > ht.length ? ht.length : Oe;
        if (bt === ht.length ? dt += ht : dt += ht.slice(0, Oe), (Oe -= bt) === 0) {
          bt === ht.length ? (++ut, rt.next ? this.head = rt.next : this.head = this.tail = null) : (this.head = rt, rt.data = ht.slice(bt));
          break;
        }
        ++ut;
      }
      return this.length -= ut, dt;
    } }, { key: "_getBuffer", value: function(Oe) {
      var rt = ne.allocUnsafe(Oe), ut = this.head, dt = 1;
      for (ut.data.copy(rt), Oe -= ut.data.length; ut = ut.next; ) {
        var ht = ut.data, bt = Oe > ht.length ? ht.length : Oe;
        if (ht.copy(rt, rt.length - Oe, 0, bt), (Oe -= bt) === 0) {
          bt === ht.length ? (++dt, ut.next ? this.head = ut.next : this.head = this.tail = null) : (this.head = ut, ut.data = ht.slice(bt));
          break;
        }
        ++dt;
      }
      return this.length -= dt, rt;
    } }, { key: oe, value: function(Oe, rt) {
      return ie(this, L(L({}, rt), {}, { depth: 0, customInspect: !1 }));
    } }]), ce;
  }(), buffer_list;
}
function destroy$1(B, L) {
  var V = this, J = this._readableState && this._readableState.destroyed, re = this._writableState && this._writableState.destroyed;
  return J || re ? (L ? L(B) : B && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, process$1.nextTick(emitErrorNT$1, this, B)) : process$1.nextTick(emitErrorNT$1, this, B)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(B || null, function(ne) {
    !L && ne ? V._writableState ? V._writableState.errorEmitted ? process$1.nextTick(emitCloseNT, V) : (V._writableState.errorEmitted = !0, process$1.nextTick(emitErrorAndCloseNT, V, ne)) : process$1.nextTick(emitErrorAndCloseNT, V, ne) : L ? (process$1.nextTick(emitCloseNT, V), L(ne)) : process$1.nextTick(emitCloseNT, V);
  }), this);
}
function emitErrorAndCloseNT(B, L) {
  emitErrorNT$1(B, L), emitCloseNT(B);
}
function emitCloseNT(B) {
  B._writableState && !B._writableState.emitClose || B._readableState && !B._readableState.emitClose || B.emit("close");
}
function undestroy$1() {
  this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
}
function emitErrorNT$1(B, L) {
  B.emit("error", L);
}
function errorOrDestroy(B, L) {
  var V = B._readableState, J = B._writableState;
  V && V.autoDestroy || J && J.autoDestroy ? B.destroy(L) : B.emit("error", L);
}
(function(B) {
  var L = Object.getOwnPropertyDescriptors || function(nt) {
    for (var ot = Object.keys(nt), ke = {}, ct = 0; ct < ot.length; ct++) ke[ot[ct]] = Object.getOwnPropertyDescriptor(nt, ot[ct]);
    return ke;
  }, V = /%[sdj%]/g;
  B.format = function(nt) {
    if (!Tt(nt)) {
      for (var ot = [], ke = 0; ke < arguments.length; ke++) ot.push(ie(arguments[ke]));
      return ot.join(" ");
    }
    ke = 1;
    for (var ct = arguments, yt = ct.length, $t = String(nt).replace(V, function(xt) {
      if (xt === "%%") return "%";
      if (ke >= yt) return xt;
      switch (xt) {
        case "%s":
          return String(ct[ke++]);
        case "%d":
          return Number(ct[ke++]);
        case "%j":
          try {
            return JSON.stringify(ct[ke++]);
          } catch {
            return "[Circular]";
          }
        default:
          return xt;
      }
    }), gt = ct[ke]; ke < yt; gt = ct[++ke]) ht(gt) || !Rt(gt) ? $t += " " + gt : $t += " " + ie(gt);
    return $t;
  }, B.deprecate = function(nt, ot) {
    if (process$1 !== void 0 && process$1.noDeprecation === !0) return nt;
    if (process$1 === void 0) return function() {
      return B.deprecate(nt, ot).apply(this, arguments);
    };
    var ke = !1;
    return function() {
      if (!ke) {
        if (process$1.throwDeprecation) throw new Error(ot);
        process$1.traceDeprecation ? console.trace(ot) : console.error(ot), ke = !0;
      }
      return nt.apply(this, arguments);
    };
  };
  var J = {}, re = /^$/;
  if (process$1.env.NODE_DEBUG) {
    var ne = process$1.env.NODE_DEBUG;
    ne = ne.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), re = new RegExp("^" + ne + "$", "i");
  }
  function ie(nt, ot) {
    var ke = { seen: [], stylize: pe };
    return arguments.length >= 3 && (ke.depth = arguments[2]), arguments.length >= 4 && (ke.colors = arguments[3]), dt(ot) ? ke.showHidden = ot : ot && B._extend(ke, ot), wt(ke.showHidden) && (ke.showHidden = !1), wt(ke.depth) && (ke.depth = 2), wt(ke.colors) && (ke.colors = !1), wt(ke.customInspect) && (ke.customInspect = !0), ke.colors && (ke.stylize = oe), ce(ke, nt, ke.depth);
  }
  function oe(nt, ot) {
    var ke = ie.styles[ot];
    return ke ? "\x1B[" + ie.colors[ke][0] + "m" + nt + "\x1B[" + ie.colors[ke][1] + "m" : nt;
  }
  function pe(nt, ot) {
    return nt;
  }
  function ce(nt, ot, ke) {
    if (nt.customInspect && ot && Dt(ot.inspect) && ot.inspect !== B.inspect && (!ot.constructor || ot.constructor.prototype !== ot)) {
      var ct = ot.inspect(ke, nt);
      return Tt(ct) || (ct = ce(nt, ct, ke)), ct;
    }
    var yt = function(It, Ft) {
      if (wt(Ft)) return It.stylize("undefined", "undefined");
      if (Tt(Ft)) {
        var Vt = "'" + JSON.stringify(Ft).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return It.stylize(Vt, "string");
      }
      if (bt(Ft)) return It.stylize("" + Ft, "number");
      if (dt(Ft)) return It.stylize("" + Ft, "boolean");
      if (ht(Ft)) return It.stylize("null", "null");
    }(nt, ot);
    if (yt) return yt;
    var $t = Object.keys(ot), gt = function(It) {
      var Ft = {};
      return It.forEach(function(Vt, qt) {
        Ft[Vt] = !0;
      }), Ft;
    }($t);
    if (nt.showHidden && ($t = Object.getOwnPropertyNames(ot)), Pt(ot) && ($t.indexOf("message") >= 0 || $t.indexOf("description") >= 0)) return Oe(ot);
    if ($t.length === 0) {
      if (Dt(ot)) {
        var xt = ot.name ? ": " + ot.name : "";
        return nt.stylize("[Function" + xt + "]", "special");
      }
      if (Et(ot)) return nt.stylize(RegExp.prototype.toString.call(ot), "regexp");
      if (Bt(ot)) return nt.stylize(Date.prototype.toString.call(ot), "date");
      if (Pt(ot)) return Oe(ot);
    }
    var At, mt = "", St = !1, Mt = ["{", "}"];
    return ut(ot) && (St = !0, Mt = ["[", "]"]), Dt(ot) && (mt = " [Function" + (ot.name ? ": " + ot.name : "") + "]"), Et(ot) && (mt = " " + RegExp.prototype.toString.call(ot)), Bt(ot) && (mt = " " + Date.prototype.toUTCString.call(ot)), Pt(ot) && (mt = " " + Oe(ot)), $t.length !== 0 || St && ot.length != 0 ? ke < 0 ? Et(ot) ? nt.stylize(RegExp.prototype.toString.call(ot), "regexp") : nt.stylize("[Object]", "special") : (nt.seen.push(ot), At = St ? function(It, Ft, Vt, qt, er) {
      for (var tr = [], Jt = 0, ur = Ft.length; Jt < ur; ++Jt) Ce(Ft, String(Jt)) ? tr.push(rt(It, Ft, Vt, qt, String(Jt), !0)) : tr.push("");
      return er.forEach(function(pr) {
        pr.match(/^\d+$/) || tr.push(rt(It, Ft, Vt, qt, pr, !0));
      }), tr;
    }(nt, ot, ke, gt, $t) : $t.map(function(It) {
      return rt(nt, ot, ke, gt, It, St);
    }), nt.seen.pop(), function(It, Ft, Vt) {
      var qt = It.reduce(function(er, tr) {
        return tr.indexOf(`
`), er + tr.replace(/\u001b\[\d\d?m/g, "").length + 1;
      }, 0);
      return qt > 60 ? Vt[0] + (Ft === "" ? "" : Ft + `
 `) + " " + It.join(`,
  `) + " " + Vt[1] : Vt[0] + Ft + " " + It.join(", ") + " " + Vt[1];
    }(At, mt, Mt)) : Mt[0] + mt + Mt[1];
  }
  function Oe(nt) {
    return "[" + Error.prototype.toString.call(nt) + "]";
  }
  function rt(nt, ot, ke, ct, yt, $t) {
    var gt, xt, At;
    if ((At = Object.getOwnPropertyDescriptor(ot, yt) || { value: ot[yt] }).get ? xt = At.set ? nt.stylize("[Getter/Setter]", "special") : nt.stylize("[Getter]", "special") : At.set && (xt = nt.stylize("[Setter]", "special")), Ce(ct, yt) || (gt = "[" + yt + "]"), xt || (nt.seen.indexOf(At.value) < 0 ? (xt = ht(ke) ? ce(nt, At.value, null) : ce(nt, At.value, ke - 1)).indexOf(`
`) > -1 && (xt = $t ? xt.split(`
`).map(function(mt) {
      return "  " + mt;
    }).join(`
`).slice(2) : `
` + xt.split(`
`).map(function(mt) {
      return "   " + mt;
    }).join(`
`)) : xt = nt.stylize("[Circular]", "special")), wt(gt)) {
      if ($t && yt.match(/^\d+$/)) return xt;
      (gt = JSON.stringify("" + yt)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (gt = gt.slice(1, -1), gt = nt.stylize(gt, "name")) : (gt = gt.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), gt = nt.stylize(gt, "string"));
    }
    return gt + ": " + xt;
  }
  function ut(nt) {
    return Array.isArray(nt);
  }
  function dt(nt) {
    return typeof nt == "boolean";
  }
  function ht(nt) {
    return nt === null;
  }
  function bt(nt) {
    return typeof nt == "number";
  }
  function Tt(nt) {
    return typeof nt == "string";
  }
  function wt(nt) {
    return nt === void 0;
  }
  function Et(nt) {
    return Rt(nt) && Gt(nt) === "[object RegExp]";
  }
  function Rt(nt) {
    return typeof nt == "object" && nt !== null;
  }
  function Bt(nt) {
    return Rt(nt) && Gt(nt) === "[object Date]";
  }
  function Pt(nt) {
    return Rt(nt) && (Gt(nt) === "[object Error]" || nt instanceof Error);
  }
  function Dt(nt) {
    return typeof nt == "function";
  }
  function Gt(nt) {
    return Object.prototype.toString.call(nt);
  }
  function at(nt) {
    return nt < 10 ? "0" + nt.toString(10) : nt.toString(10);
  }
  B.debuglog = function(nt) {
    if (nt = nt.toUpperCase(), !J[nt]) if (re.test(nt)) {
      var ot = process$1.pid;
      J[nt] = function() {
        var ke = B.format.apply(B, arguments);
        console.error("%s %d: %s", nt, ot, ke);
      };
    } else J[nt] = function() {
    };
    return J[nt];
  }, B.inspect = ie, ie.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, ie.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, B.types = types$2, B.isArray = ut, B.isBoolean = dt, B.isNull = ht, B.isNullOrUndefined = function(nt) {
    return nt == null;
  }, B.isNumber = bt, B.isString = Tt, B.isSymbol = function(nt) {
    return typeof nt == "symbol";
  }, B.isUndefined = wt, B.isRegExp = Et, B.types.isRegExp = Et, B.isObject = Rt, B.isDate = Bt, B.types.isDate = Bt, B.isError = Pt, B.types.isNativeError = Pt, B.isFunction = Dt, B.isPrimitive = function(nt) {
    return nt === null || typeof nt == "boolean" || typeof nt == "number" || typeof nt == "string" || typeof nt == "symbol" || nt === void 0;
  }, B.isBuffer = isBufferBrowser;
  var lt = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  function Ce(nt, ot) {
    return Object.prototype.hasOwnProperty.call(nt, ot);
  }
  B.log = function() {
    console.log("%s - %s", function() {
      var nt = /* @__PURE__ */ new Date(), ot = [at(nt.getHours()), at(nt.getMinutes()), at(nt.getSeconds())].join(":");
      return [nt.getDate(), lt[nt.getMonth()], ot].join(" ");
    }(), B.format.apply(B, arguments));
  }, B.inherits = inherits_browserExports, B._extend = function(nt, ot) {
    if (!ot || !Rt(ot)) return nt;
    for (var ke = Object.keys(ot), ct = ke.length; ct--; ) nt[ke[ct]] = ot[ke[ct]];
    return nt;
  };
  var st = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
  function it(nt, ot) {
    if (!nt) {
      var ke = new Error("Promise was rejected with a falsy value");
      ke.reason = nt, nt = ke;
    }
    return ot(nt);
  }
  B.promisify = function(nt) {
    if (typeof nt != "function") throw new TypeError('The "original" argument must be of type Function');
    if (st && nt[st]) {
      var ot;
      if (typeof (ot = nt[st]) != "function") throw new TypeError('The "util.promisify.custom" argument must be of type Function');
      return Object.defineProperty(ot, st, { value: ot, enumerable: !1, writable: !1, configurable: !0 }), ot;
    }
    function ot() {
      for (var ke, ct, yt = new Promise(function(xt, At) {
        ke = xt, ct = At;
      }), $t = [], gt = 0; gt < arguments.length; gt++) $t.push(arguments[gt]);
      $t.push(function(xt, At) {
        xt ? ct(xt) : ke(At);
      });
      try {
        nt.apply(this, $t);
      } catch (xt) {
        ct(xt);
      }
      return yt;
    }
    return Object.setPrototypeOf(ot, Object.getPrototypeOf(nt)), st && Object.defineProperty(ot, st, { value: ot, enumerable: !1, writable: !1, configurable: !0 }), Object.defineProperties(ot, L(nt));
  }, B.promisify.custom = st, B.callbackify = function(nt) {
    if (typeof nt != "function") throw new TypeError('The "original" argument must be of type Function');
    function ot() {
      for (var ke = [], ct = 0; ct < arguments.length; ct++) ke.push(arguments[ct]);
      var yt = ke.pop();
      if (typeof yt != "function") throw new TypeError("The last argument must be of type Function");
      var $t = this, gt = function() {
        return yt.apply($t, arguments);
      };
      nt.apply(this, ke).then(function(xt) {
        process$1.nextTick(gt.bind(null, null, xt));
      }, function(xt) {
        process$1.nextTick(it.bind(null, xt, gt));
      });
    }
    return Object.setPrototypeOf(ot, Object.getPrototypeOf(nt)), Object.defineProperties(ot, L(nt)), ot;
  };
})(util$3);
var destroy_1$1 = { destroy: destroy$1, undestroy: undestroy$1, errorOrDestroy }, errorsBrowser = {};
function _inheritsLoose(B, L) {
  B.prototype = Object.create(L.prototype), B.prototype.constructor = B, B.__proto__ = L;
}
var codes = {};
function createErrorType(B, L, V) {
  V || (V = Error);
  var J = function(re) {
    function ne(ie, oe, pe) {
      return re.call(this, function(ce, Oe, rt) {
        return typeof L == "string" ? L : L(ce, Oe, rt);
      }(ie, oe, pe)) || this;
    }
    return _inheritsLoose(ne, re), ne;
  }(V);
  J.prototype.name = V.name, J.prototype.code = B, codes[B] = J;
}
function oneOf(B, L) {
  if (Array.isArray(B)) {
    var V = B.length;
    return B = B.map(function(J) {
      return String(J);
    }), V > 2 ? "one of ".concat(L, " ").concat(B.slice(0, V - 1).join(", "), ", or ") + B[V - 1] : V === 2 ? "one of ".concat(L, " ").concat(B[0], " or ").concat(B[1]) : "of ".concat(L, " ").concat(B[0]);
  }
  return "of ".concat(L, " ").concat(String(B));
}
function startsWith(B, L, V) {
  return B.substr(0, L.length) === L;
}
function endsWith(B, L, V) {
  return (V === void 0 || V > B.length) && (V = B.length), B.substring(V - L.length, V) === L;
}
function includes(B, L, V) {
  return typeof V != "number" && (V = 0), !(V + L.length > B.length) && B.indexOf(L, V) !== -1;
}
createErrorType("ERR_INVALID_OPT_VALUE", function(B, L) {
  return 'The value "' + L + '" is invalid for option "' + B + '"';
}, TypeError), createErrorType("ERR_INVALID_ARG_TYPE", function(B, L, V) {
  var J, re;
  if (typeof L == "string" && startsWith(L, "not ") ? (J = "must not be", L = L.replace(/^not /, "")) : J = "must be", endsWith(B, " argument")) re = "The ".concat(B, " ").concat(J, " ").concat(oneOf(L, "type"));
  else {
    var ne = includes(B, ".") ? "property" : "argument";
    re = 'The "'.concat(B, '" ').concat(ne, " ").concat(J, " ").concat(oneOf(L, "type"));
  }
  return re += ". Received type ".concat(typeof V);
}, TypeError), createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function(B) {
  return "The " + B + " method is not implemented";
}), createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), createErrorType("ERR_STREAM_DESTROYED", function(B) {
  return "Cannot call " + B + " after a stream was destroyed";
}), createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end"), createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), createErrorType("ERR_UNKNOWN_ENCODING", function(B) {
  return "Unknown encoding: " + B;
}, TypeError), createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), errorsBrowser.codes = codes;
var ERR_INVALID_OPT_VALUE = errorsBrowser.codes.ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(B, L, V) {
  return B.highWaterMark != null ? B.highWaterMark : L ? B[V] : null;
}
function getHighWaterMark(B, L, V, J) {
  var re = highWaterMarkFrom(L, J, V);
  if (re != null) {
    if (!isFinite(re) || Math.floor(re) !== re || re < 0) throw new ERR_INVALID_OPT_VALUE(J ? V : "highWaterMark", re);
    return Math.floor(re);
  }
  return B.objectMode ? 16 : 16384;
}
var state = { getHighWaterMark }, browser$b = deprecate, _stream_writable$1, hasRequired_stream_writable$1, _stream_duplex$1, hasRequired_stream_duplex$1;
function deprecate(B, L) {
  if (config("noDeprecation")) return B;
  var V = !1;
  return function() {
    if (!V) {
      if (config("throwDeprecation")) throw new Error(L);
      config("traceDeprecation") ? console.trace(L) : console.warn(L), V = !0;
    }
    return B.apply(this, arguments);
  };
}
function config(B) {
  try {
    if (!commonjsGlobal.localStorage) return !1;
  } catch {
    return !1;
  }
  var L = commonjsGlobal.localStorage[B];
  return L != null && String(L).toLowerCase() === "true";
}
function require_stream_writable$1() {
  if (hasRequired_stream_writable$1) return _stream_writable$1;
  function B(it) {
    var nt = this;
    this.next = null, this.entry = null, this.finish = function() {
      (function(ot, ke, ct) {
        var yt = ot.entry;
        for (ot.entry = null; yt; ) {
          var $t = yt.callback;
          ke.pendingcb--, $t(ct), yt = yt.next;
        }
        ke.corkedRequestsFree.next = ot;
      })(nt, it);
    };
  }
  var L;
  hasRequired_stream_writable$1 = 1, _stream_writable$1 = Pt, Pt.WritableState = Bt;
  var V = { deprecate: browser$b }, J = streamBrowser$1, re = require$$1$2.Buffer, ne = (commonjsGlobal !== void 0 ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
  }, ie, oe = destroy_1$1, pe = state.getHighWaterMark, ce = errorsBrowser.codes, Oe = ce.ERR_INVALID_ARG_TYPE, rt = ce.ERR_METHOD_NOT_IMPLEMENTED, ut = ce.ERR_MULTIPLE_CALLBACK, dt = ce.ERR_STREAM_CANNOT_PIPE, ht = ce.ERR_STREAM_DESTROYED, bt = ce.ERR_STREAM_NULL_VALUES, Tt = ce.ERR_STREAM_WRITE_AFTER_END, wt = ce.ERR_UNKNOWN_ENCODING, Et = oe.errorOrDestroy;
  function Rt() {
  }
  function Bt(it, nt, ot) {
    L = L || require_stream_duplex$1(), it = it || {}, typeof ot != "boolean" && (ot = nt instanceof L), this.objectMode = !!it.objectMode, ot && (this.objectMode = this.objectMode || !!it.writableObjectMode), this.highWaterMark = pe(this, it, "writableHighWaterMark", ot), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
    var ke = it.decodeStrings === !1;
    this.decodeStrings = !ke, this.defaultEncoding = it.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(ct) {
      (function(yt, $t) {
        var gt = yt._writableState, xt = gt.sync, At = gt.writecb;
        if (typeof At != "function") throw new ut();
        if (function(St) {
          St.writing = !1, St.writecb = null, St.length -= St.writelen, St.writelen = 0;
        }(gt), $t) (function(St, Mt, It, Ft, Vt) {
          --Mt.pendingcb, It ? (process$1.nextTick(Vt, Ft), process$1.nextTick(st, St, Mt), St._writableState.errorEmitted = !0, Et(St, Ft)) : (Vt(Ft), St._writableState.errorEmitted = !0, Et(St, Ft), st(St, Mt));
        })(yt, gt, xt, $t, At);
        else {
          var mt = lt(gt) || yt.destroyed;
          mt || gt.corked || gt.bufferProcessing || !gt.bufferedRequest || at(yt, gt), xt ? process$1.nextTick(Gt, yt, gt, mt, At) : Gt(yt, gt, mt, At);
        }
      })(nt, ct);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = it.emitClose !== !1, this.autoDestroy = !!it.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new B(this);
  }
  function Pt(it) {
    var nt = this instanceof (L = L || require_stream_duplex$1());
    if (!nt && !ie.call(Pt, this)) return new Pt(it);
    this._writableState = new Bt(it, this, nt), this.writable = !0, it && (typeof it.write == "function" && (this._write = it.write), typeof it.writev == "function" && (this._writev = it.writev), typeof it.destroy == "function" && (this._destroy = it.destroy), typeof it.final == "function" && (this._final = it.final)), J.call(this);
  }
  function Dt(it, nt, ot, ke, ct, yt, $t) {
    nt.writelen = ke, nt.writecb = $t, nt.writing = !0, nt.sync = !0, nt.destroyed ? nt.onwrite(new ht("write")) : ot ? it._writev(ct, nt.onwrite) : it._write(ct, yt, nt.onwrite), nt.sync = !1;
  }
  function Gt(it, nt, ot, ke) {
    ot || function(ct, yt) {
      yt.length === 0 && yt.needDrain && (yt.needDrain = !1, ct.emit("drain"));
    }(it, nt), nt.pendingcb--, ke(), st(it, nt);
  }
  function at(it, nt) {
    nt.bufferProcessing = !0;
    var ot = nt.bufferedRequest;
    if (it._writev && ot && ot.next) {
      var ke = nt.bufferedRequestCount, ct = new Array(ke), yt = nt.corkedRequestsFree;
      yt.entry = ot;
      for (var $t = 0, gt = !0; ot; ) ct[$t] = ot, ot.isBuf || (gt = !1), ot = ot.next, $t += 1;
      ct.allBuffers = gt, Dt(it, nt, !0, nt.length, ct, "", yt.finish), nt.pendingcb++, nt.lastBufferedRequest = null, yt.next ? (nt.corkedRequestsFree = yt.next, yt.next = null) : nt.corkedRequestsFree = new B(nt), nt.bufferedRequestCount = 0;
    } else {
      for (; ot; ) {
        var xt = ot.chunk, At = ot.encoding, mt = ot.callback;
        if (Dt(it, nt, !1, nt.objectMode ? 1 : xt.length, xt, At, mt), ot = ot.next, nt.bufferedRequestCount--, nt.writing) break;
      }
      ot === null && (nt.lastBufferedRequest = null);
    }
    nt.bufferedRequest = ot, nt.bufferProcessing = !1;
  }
  function lt(it) {
    return it.ending && it.length === 0 && it.bufferedRequest === null && !it.finished && !it.writing;
  }
  function Ce(it, nt) {
    it._final(function(ot) {
      nt.pendingcb--, ot && Et(it, ot), nt.prefinished = !0, it.emit("prefinish"), st(it, nt);
    });
  }
  function st(it, nt) {
    var ot = lt(nt);
    if (ot && (function(ct, yt) {
      yt.prefinished || yt.finalCalled || (typeof ct._final != "function" || yt.destroyed ? (yt.prefinished = !0, ct.emit("prefinish")) : (yt.pendingcb++, yt.finalCalled = !0, process$1.nextTick(Ce, ct, yt)));
    }(it, nt), nt.pendingcb === 0 && (nt.finished = !0, it.emit("finish"), nt.autoDestroy))) {
      var ke = it._readableState;
      (!ke || ke.autoDestroy && ke.endEmitted) && it.destroy();
    }
    return ot;
  }
  return inherits_browserExports(Pt, J), Bt.prototype.getBuffer = function() {
    for (var it = this.bufferedRequest, nt = []; it; ) nt.push(it), it = it.next;
    return nt;
  }, function() {
    try {
      Object.defineProperty(Bt.prototype, "buffer", { get: V.deprecate(function() {
        return this.getBuffer();
      }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
    } catch {
    }
  }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (ie = Function.prototype[Symbol.hasInstance], Object.defineProperty(Pt, Symbol.hasInstance, { value: function(it) {
    return !!ie.call(this, it) || this === Pt && it && it._writableState instanceof Bt;
  } })) : ie = function(it) {
    return it instanceof this;
  }, Pt.prototype.pipe = function() {
    Et(this, new dt());
  }, Pt.prototype.write = function(it, nt, ot) {
    var ke, ct = this._writableState, yt = !1, $t = !ct.objectMode && (ke = it, re.isBuffer(ke) || ke instanceof ne);
    return $t && !re.isBuffer(it) && (it = function(gt) {
      return re.from(gt);
    }(it)), typeof nt == "function" && (ot = nt, nt = null), $t ? nt = "buffer" : nt || (nt = ct.defaultEncoding), typeof ot != "function" && (ot = Rt), ct.ending ? function(gt, xt) {
      var At = new Tt();
      Et(gt, At), process$1.nextTick(xt, At);
    }(this, ot) : ($t || function(gt, xt, At, mt) {
      var St;
      return At === null ? St = new bt() : typeof At == "string" || xt.objectMode || (St = new Oe("chunk", ["string", "Buffer"], At)), !St || (Et(gt, St), process$1.nextTick(mt, St), !1);
    }(this, ct, it, ot)) && (ct.pendingcb++, yt = function(gt, xt, At, mt, St, Mt) {
      if (!At) {
        var It = function(er, tr, Jt) {
          return er.objectMode || er.decodeStrings === !1 || typeof tr != "string" || (tr = re.from(tr, Jt)), tr;
        }(xt, mt, St);
        mt !== It && (At = !0, St = "buffer", mt = It);
      }
      var Ft = xt.objectMode ? 1 : mt.length;
      xt.length += Ft;
      var Vt = xt.length < xt.highWaterMark;
      if (Vt || (xt.needDrain = !0), xt.writing || xt.corked) {
        var qt = xt.lastBufferedRequest;
        xt.lastBufferedRequest = { chunk: mt, encoding: St, isBuf: At, callback: Mt, next: null }, qt ? qt.next = xt.lastBufferedRequest : xt.bufferedRequest = xt.lastBufferedRequest, xt.bufferedRequestCount += 1;
      } else Dt(gt, xt, !1, Ft, mt, St, Mt);
      return Vt;
    }(this, ct, $t, it, nt, ot)), yt;
  }, Pt.prototype.cork = function() {
    this._writableState.corked++;
  }, Pt.prototype.uncork = function() {
    var it = this._writableState;
    it.corked && (it.corked--, it.writing || it.corked || it.bufferProcessing || !it.bufferedRequest || at(this, it));
  }, Pt.prototype.setDefaultEncoding = function(it) {
    if (typeof it == "string" && (it = it.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((it + "").toLowerCase()) > -1)) throw new wt(it);
    return this._writableState.defaultEncoding = it, this;
  }, Object.defineProperty(Pt.prototype, "writableBuffer", { enumerable: !1, get: function() {
    return this._writableState && this._writableState.getBuffer();
  } }), Object.defineProperty(Pt.prototype, "writableHighWaterMark", { enumerable: !1, get: function() {
    return this._writableState.highWaterMark;
  } }), Pt.prototype._write = function(it, nt, ot) {
    ot(new rt("_write()"));
  }, Pt.prototype._writev = null, Pt.prototype.end = function(it, nt, ot) {
    var ke = this._writableState;
    return typeof it == "function" ? (ot = it, it = null, nt = null) : typeof nt == "function" && (ot = nt, nt = null), it != null && this.write(it, nt), ke.corked && (ke.corked = 1, this.uncork()), ke.ending || function(ct, yt, $t) {
      yt.ending = !0, st(ct, yt), $t && (yt.finished ? process$1.nextTick($t) : ct.once("finish", $t)), yt.ended = !0, ct.writable = !1;
    }(this, ke, ot), this;
  }, Object.defineProperty(Pt.prototype, "writableLength", { enumerable: !1, get: function() {
    return this._writableState.length;
  } }), Object.defineProperty(Pt.prototype, "destroyed", { enumerable: !1, get: function() {
    return this._writableState !== void 0 && this._writableState.destroyed;
  }, set: function(it) {
    this._writableState && (this._writableState.destroyed = it);
  } }), Pt.prototype.destroy = oe.destroy, Pt.prototype._undestroy = oe.undestroy, Pt.prototype._destroy = function(it, nt) {
    nt(it);
  }, _stream_writable$1;
}
function require_stream_duplex$1() {
  if (hasRequired_stream_duplex$1) return _stream_duplex$1;
  hasRequired_stream_duplex$1 = 1;
  var B = Object.keys || function(ce) {
    var Oe = [];
    for (var rt in ce) Oe.push(rt);
    return Oe;
  };
  _stream_duplex$1 = ie;
  var L = require_stream_readable$1(), V = require_stream_writable$1();
  inherits_browserExports(ie, L);
  for (var J = B(V.prototype), re = 0; re < J.length; re++) {
    var ne = J[re];
    ie.prototype[ne] || (ie.prototype[ne] = V.prototype[ne]);
  }
  function ie(ce) {
    if (!(this instanceof ie)) return new ie(ce);
    L.call(this, ce), V.call(this, ce), this.allowHalfOpen = !0, ce && (ce.readable === !1 && (this.readable = !1), ce.writable === !1 && (this.writable = !1), ce.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", oe)));
  }
  function oe() {
    this._writableState.ended || process$1.nextTick(pe, this);
  }
  function pe(ce) {
    ce.end();
  }
  return Object.defineProperty(ie.prototype, "writableHighWaterMark", { enumerable: !1, get: function() {
    return this._writableState.highWaterMark;
  } }), Object.defineProperty(ie.prototype, "writableBuffer", { enumerable: !1, get: function() {
    return this._writableState && this._writableState.getBuffer();
  } }), Object.defineProperty(ie.prototype, "writableLength", { enumerable: !1, get: function() {
    return this._writableState.length;
  } }), Object.defineProperty(ie.prototype, "destroyed", { enumerable: !1, get: function() {
    return this._readableState !== void 0 && this._writableState !== void 0 && this._readableState.destroyed && this._writableState.destroyed;
  }, set: function(ce) {
    this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed = ce, this._writableState.destroyed = ce);
  } }), _stream_duplex$1;
}
var string_decoder = {}, Buffer$B = safeBufferExports$1.Buffer, isEncoding = Buffer$B.isEncoding || function(B) {
  switch ((B = "" + B) && B.toLowerCase()) {
    case "hex":
    case "utf8":
    case "utf-8":
    case "ascii":
    case "binary":
    case "base64":
    case "ucs2":
    case "ucs-2":
    case "utf16le":
    case "utf-16le":
    case "raw":
      return !0;
    default:
      return !1;
  }
};
function _normalizeEncoding(B) {
  if (!B) return "utf8";
  for (var L; ; ) switch (B) {
    case "utf8":
    case "utf-8":
      return "utf8";
    case "ucs2":
    case "ucs-2":
    case "utf16le":
    case "utf-16le":
      return "utf16le";
    case "latin1":
    case "binary":
      return "latin1";
    case "base64":
    case "ascii":
    case "hex":
      return B;
    default:
      if (L) return;
      B = ("" + B).toLowerCase(), L = !0;
  }
}
function normalizeEncoding(B) {
  var L = _normalizeEncoding(B);
  if (typeof L != "string" && (Buffer$B.isEncoding === isEncoding || !isEncoding(B))) throw new Error("Unknown encoding: " + B);
  return L || B;
}
function StringDecoder$1(B) {
  var L;
  switch (this.encoding = normalizeEncoding(B), this.encoding) {
    case "utf16le":
      this.text = utf16Text, this.end = utf16End, L = 4;
      break;
    case "utf8":
      this.fillLast = utf8FillLast, L = 4;
      break;
    case "base64":
      this.text = base64Text, this.end = base64End, L = 3;
      break;
    default:
      return this.write = simpleWrite, void (this.end = simpleEnd);
  }
  this.lastNeed = 0, this.lastTotal = 0, this.lastChar = Buffer$B.allocUnsafe(L);
}
function utf8CheckByte(B) {
  return B <= 127 ? 0 : B >> 5 == 6 ? 2 : B >> 4 == 14 ? 3 : B >> 3 == 30 ? 4 : B >> 6 == 2 ? -1 : -2;
}
function utf8CheckIncomplete(B, L, V) {
  var J = L.length - 1;
  if (J < V) return 0;
  var re = utf8CheckByte(L[J]);
  return re >= 0 ? (re > 0 && (B.lastNeed = re - 1), re) : --J < V || re === -2 ? 0 : (re = utf8CheckByte(L[J])) >= 0 ? (re > 0 && (B.lastNeed = re - 2), re) : --J < V || re === -2 ? 0 : (re = utf8CheckByte(L[J])) >= 0 ? (re > 0 && (re === 2 ? re = 0 : B.lastNeed = re - 3), re) : 0;
}
function utf8CheckExtraBytes(B, L, V) {
  if ((192 & L[0]) != 128) return B.lastNeed = 0, "�";
  if (B.lastNeed > 1 && L.length > 1) {
    if ((192 & L[1]) != 128) return B.lastNeed = 1, "�";
    if (B.lastNeed > 2 && L.length > 2 && (192 & L[2]) != 128) return B.lastNeed = 2, "�";
  }
}
function utf8FillLast(B) {
  var L = this.lastTotal - this.lastNeed, V = utf8CheckExtraBytes(this, B);
  return V !== void 0 ? V : this.lastNeed <= B.length ? (B.copy(this.lastChar, L, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (B.copy(this.lastChar, L, 0, B.length), void (this.lastNeed -= B.length));
}
function utf8Text(B, L) {
  var V = utf8CheckIncomplete(this, B, L);
  if (!this.lastNeed) return B.toString("utf8", L);
  this.lastTotal = V;
  var J = B.length - (V - this.lastNeed);
  return B.copy(this.lastChar, 0, J), B.toString("utf8", L, J);
}
function utf8End(B) {
  var L = B && B.length ? this.write(B) : "";
  return this.lastNeed ? L + "�" : L;
}
function utf16Text(B, L) {
  if ((B.length - L) % 2 == 0) {
    var V = B.toString("utf16le", L);
    if (V) {
      var J = V.charCodeAt(V.length - 1);
      if (J >= 55296 && J <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = B[B.length - 2], this.lastChar[1] = B[B.length - 1], V.slice(0, -1);
    }
    return V;
  }
  return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = B[B.length - 1], B.toString("utf16le", L, B.length - 1);
}
function utf16End(B) {
  var L = B && B.length ? this.write(B) : "";
  if (this.lastNeed) {
    var V = this.lastTotal - this.lastNeed;
    return L + this.lastChar.toString("utf16le", 0, V);
  }
  return L;
}
function base64Text(B, L) {
  var V = (B.length - L) % 3;
  return V === 0 ? B.toString("base64", L) : (this.lastNeed = 3 - V, this.lastTotal = 3, V === 1 ? this.lastChar[0] = B[B.length - 1] : (this.lastChar[0] = B[B.length - 2], this.lastChar[1] = B[B.length - 1]), B.toString("base64", L, B.length - V));
}
function base64End(B) {
  var L = B && B.length ? this.write(B) : "";
  return this.lastNeed ? L + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : L;
}
function simpleWrite(B) {
  return B.toString(this.encoding);
}
function simpleEnd(B) {
  return B && B.length ? this.write(B) : "";
}
string_decoder.StringDecoder = StringDecoder$1, StringDecoder$1.prototype.write = function(B) {
  if (B.length === 0) return "";
  var L, V;
  if (this.lastNeed) {
    if ((L = this.fillLast(B)) === void 0) return "";
    V = this.lastNeed, this.lastNeed = 0;
  } else V = 0;
  return V < B.length ? L ? L + this.text(B, V) : this.text(B, V) : L || "";
}, StringDecoder$1.prototype.end = utf8End, StringDecoder$1.prototype.text = utf8Text, StringDecoder$1.prototype.fillLast = function(B) {
  if (this.lastNeed <= B.length) return B.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
  B.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, B.length), this.lastNeed -= B.length;
};
var ERR_STREAM_PREMATURE_CLOSE = errorsBrowser.codes.ERR_STREAM_PREMATURE_CLOSE;
function once$1(B) {
  var L = !1;
  return function() {
    if (!L) {
      L = !0;
      for (var V = arguments.length, J = new Array(V), re = 0; re < V; re++) J[re] = arguments[re];
      B.apply(this, J);
    }
  };
}
function noop$1() {
}
function isRequest$1(B) {
  return B.setHeader && typeof B.abort == "function";
}
function eos$1(B, L, V) {
  if (typeof L == "function") return eos$1(B, null, L);
  L || (L = {}), V = once$1(V || noop$1);
  var J = L.readable || L.readable !== !1 && B.readable, re = L.writable || L.writable !== !1 && B.writable, ne = function() {
    B.writable || oe();
  }, ie = B._writableState && B._writableState.finished, oe = function() {
    re = !1, ie = !0, J || V.call(B);
  }, pe = B._readableState && B._readableState.endEmitted, ce = function() {
    J = !1, pe = !0, re || V.call(B);
  }, Oe = function(dt) {
    V.call(B, dt);
  }, rt = function() {
    var dt;
    return J && !pe ? (B._readableState && B._readableState.ended || (dt = new ERR_STREAM_PREMATURE_CLOSE()), V.call(B, dt)) : re && !ie ? (B._writableState && B._writableState.ended || (dt = new ERR_STREAM_PREMATURE_CLOSE()), V.call(B, dt)) : void 0;
  }, ut = function() {
    B.req.on("finish", oe);
  };
  return isRequest$1(B) ? (B.on("complete", oe), B.on("abort", rt), B.req ? ut() : B.on("request", ut)) : re && !B._writableState && (B.on("end", ne), B.on("close", ne)), B.on("end", ce), B.on("finish", oe), L.error !== !1 && B.on("error", Oe), B.on("close", rt), function() {
    B.removeListener("complete", oe), B.removeListener("abort", rt), B.removeListener("request", ut), B.req && B.req.removeListener("finish", oe), B.removeListener("end", ne), B.removeListener("close", ne), B.removeListener("finish", oe), B.removeListener("end", ce), B.removeListener("error", Oe), B.removeListener("close", rt);
  };
}
var endOfStream = eos$1, async_iterator, hasRequiredAsync_iterator, fromBrowser, hasRequiredFromBrowser, _stream_readable$1, hasRequired_stream_readable$1;
function requireAsync_iterator() {
  if (hasRequiredAsync_iterator) return async_iterator;
  var B;
  function L(bt, Tt, wt) {
    return (Tt = function(Et) {
      var Rt = function(Bt, Pt) {
        if (typeof Bt != "object" || Bt === null) return Bt;
        var Dt = Bt[Symbol.toPrimitive];
        if (Dt !== void 0) {
          var Gt = Dt.call(Bt, Pt || "default");
          if (typeof Gt != "object") return Gt;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (Pt === "string" ? String : Number)(Bt);
      }(Et, "string");
      return typeof Rt == "symbol" ? Rt : String(Rt);
    }(Tt)) in bt ? Object.defineProperty(bt, Tt, { value: wt, enumerable: !0, configurable: !0, writable: !0 }) : bt[Tt] = wt, bt;
  }
  hasRequiredAsync_iterator = 1;
  var V = endOfStream, J = Symbol("lastResolve"), re = Symbol("lastReject"), ne = Symbol("error"), ie = Symbol("ended"), oe = Symbol("lastPromise"), pe = Symbol("handlePromise"), ce = Symbol("stream");
  function Oe(bt, Tt) {
    return { value: bt, done: Tt };
  }
  function rt(bt) {
    var Tt = bt[J];
    if (Tt !== null) {
      var wt = bt[ce].read();
      wt !== null && (bt[oe] = null, bt[J] = null, bt[re] = null, Tt(Oe(wt, !1)));
    }
  }
  function ut(bt) {
    process$1.nextTick(rt, bt);
  }
  var dt = Object.getPrototypeOf(function() {
  }), ht = Object.setPrototypeOf((L(B = { get stream() {
    return this[ce];
  }, next: function() {
    var bt = this, Tt = this[ne];
    if (Tt !== null) return Promise.reject(Tt);
    if (this[ie]) return Promise.resolve(Oe(void 0, !0));
    if (this[ce].destroyed) return new Promise(function(Bt, Pt) {
      process$1.nextTick(function() {
        bt[ne] ? Pt(bt[ne]) : Bt(Oe(void 0, !0));
      });
    });
    var wt, Et = this[oe];
    if (Et) wt = new Promise(/* @__PURE__ */ function(Bt, Pt) {
      return function(Dt, Gt) {
        Bt.then(function() {
          Pt[ie] ? Dt(Oe(void 0, !0)) : Pt[pe](Dt, Gt);
        }, Gt);
      };
    }(Et, this));
    else {
      var Rt = this[ce].read();
      if (Rt !== null) return Promise.resolve(Oe(Rt, !1));
      wt = new Promise(this[pe]);
    }
    return this[oe] = wt, wt;
  } }, Symbol.asyncIterator, function() {
    return this;
  }), L(B, "return", function() {
    var bt = this;
    return new Promise(function(Tt, wt) {
      bt[ce].destroy(null, function(Et) {
        Et ? wt(Et) : Tt(Oe(void 0, !0));
      });
    });
  }), B), dt);
  return async_iterator = function(bt) {
    var Tt, wt = Object.create(ht, (L(Tt = {}, ce, { value: bt, writable: !0 }), L(Tt, J, { value: null, writable: !0 }), L(Tt, re, { value: null, writable: !0 }), L(Tt, ne, { value: null, writable: !0 }), L(Tt, ie, { value: bt._readableState.endEmitted, writable: !0 }), L(Tt, pe, { value: function(Et, Rt) {
      var Bt = wt[ce].read();
      Bt ? (wt[oe] = null, wt[J] = null, wt[re] = null, Et(Oe(Bt, !1))) : (wt[J] = Et, wt[re] = Rt);
    }, writable: !0 }), Tt));
    return wt[oe] = null, V(bt, function(Et) {
      if (Et && Et.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var Rt = wt[re];
        return Rt !== null && (wt[oe] = null, wt[J] = null, wt[re] = null, Rt(Et)), void (wt[ne] = Et);
      }
      var Bt = wt[J];
      Bt !== null && (wt[oe] = null, wt[J] = null, wt[re] = null, Bt(Oe(void 0, !0))), wt[ie] = !0;
    }), bt.on("readable", ut.bind(null, wt)), wt;
  };
}
function requireFromBrowser() {
  return hasRequiredFromBrowser ? fromBrowser : (hasRequiredFromBrowser = 1, fromBrowser = function() {
    throw new Error("Readable.from is not available in the browser");
  });
}
function require_stream_readable$1() {
  if (hasRequired_stream_readable$1) return _stream_readable$1;
  var B;
  hasRequired_stream_readable$1 = 1, _stream_readable$1 = Pt, Pt.ReadableState = Bt, eventsExports.EventEmitter;
  var L = function(mt, St) {
    return mt.listeners(St).length;
  }, V = streamBrowser$1, J = require$$1$2.Buffer, re = (commonjsGlobal !== void 0 ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
  }, ne, ie = util$3;
  ne = ie && ie.debuglog ? ie.debuglog("stream") : function() {
  };
  var oe, pe, ce, Oe = requireBuffer_list(), rt = destroy_1$1, ut = state.getHighWaterMark, dt = errorsBrowser.codes, ht = dt.ERR_INVALID_ARG_TYPE, bt = dt.ERR_STREAM_PUSH_AFTER_EOF, Tt = dt.ERR_METHOD_NOT_IMPLEMENTED, wt = dt.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
  inherits_browserExports(Pt, V);
  var Et = rt.errorOrDestroy, Rt = ["error", "close", "destroy", "pause", "resume"];
  function Bt(mt, St, Mt) {
    B = B || require_stream_duplex$1(), mt = mt || {}, typeof Mt != "boolean" && (Mt = St instanceof B), this.objectMode = !!mt.objectMode, Mt && (this.objectMode = this.objectMode || !!mt.readableObjectMode), this.highWaterMark = ut(this, mt, "readableHighWaterMark", Mt), this.buffer = new Oe(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = mt.emitClose !== !1, this.autoDestroy = !!mt.autoDestroy, this.destroyed = !1, this.defaultEncoding = mt.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, mt.encoding && (oe || (oe = string_decoder.StringDecoder), this.decoder = new oe(mt.encoding), this.encoding = mt.encoding);
  }
  function Pt(mt) {
    if (B = B || require_stream_duplex$1(), !(this instanceof Pt)) return new Pt(mt);
    var St = this instanceof B;
    this._readableState = new Bt(mt, this, St), this.readable = !0, mt && (typeof mt.read == "function" && (this._read = mt.read), typeof mt.destroy == "function" && (this._destroy = mt.destroy)), V.call(this);
  }
  function Dt(mt, St, Mt, It, Ft) {
    ne("readableAddChunk", St);
    var Vt, qt = mt._readableState;
    if (St === null) qt.reading = !1, function(er, tr) {
      if (ne("onEofChunk"), !tr.ended) {
        if (tr.decoder) {
          var Jt = tr.decoder.end();
          Jt && Jt.length && (tr.buffer.push(Jt), tr.length += tr.objectMode ? 1 : Jt.length);
        }
        tr.ended = !0, tr.sync ? Ce(er) : (tr.needReadable = !1, tr.emittedReadable || (tr.emittedReadable = !0, st(er)));
      }
    }(mt, qt);
    else if (Ft || (Vt = function(er, tr) {
      var Jt;
      ur = tr, J.isBuffer(ur) || ur instanceof re || typeof tr == "string" || tr === void 0 || er.objectMode || (Jt = new ht("chunk", ["string", "Buffer", "Uint8Array"], tr));
      var ur;
      return Jt;
    }(qt, St)), Vt) Et(mt, Vt);
    else if (qt.objectMode || St && St.length > 0) if (typeof St == "string" || qt.objectMode || Object.getPrototypeOf(St) === J.prototype || (St = function(er) {
      return J.from(er);
    }(St)), It) qt.endEmitted ? Et(mt, new wt()) : Gt(mt, qt, St, !0);
    else if (qt.ended) Et(mt, new bt());
    else {
      if (qt.destroyed) return !1;
      qt.reading = !1, qt.decoder && !Mt ? (St = qt.decoder.write(St), qt.objectMode || St.length !== 0 ? Gt(mt, qt, St, !1) : it(mt, qt)) : Gt(mt, qt, St, !1);
    }
    else It || (qt.reading = !1, it(mt, qt));
    return !qt.ended && (qt.length < qt.highWaterMark || qt.length === 0);
  }
  function Gt(mt, St, Mt, It) {
    St.flowing && St.length === 0 && !St.sync ? (St.awaitDrain = 0, mt.emit("data", Mt)) : (St.length += St.objectMode ? 1 : Mt.length, It ? St.buffer.unshift(Mt) : St.buffer.push(Mt), St.needReadable && Ce(mt)), it(mt, St);
  }
  Object.defineProperty(Pt.prototype, "destroyed", { enumerable: !1, get: function() {
    return this._readableState !== void 0 && this._readableState.destroyed;
  }, set: function(mt) {
    this._readableState && (this._readableState.destroyed = mt);
  } }), Pt.prototype.destroy = rt.destroy, Pt.prototype._undestroy = rt.undestroy, Pt.prototype._destroy = function(mt, St) {
    St(mt);
  }, Pt.prototype.push = function(mt, St) {
    var Mt, It = this._readableState;
    return It.objectMode ? Mt = !0 : typeof mt == "string" && ((St = St || It.defaultEncoding) !== It.encoding && (mt = J.from(mt, St), St = ""), Mt = !0), Dt(this, mt, St, !1, Mt);
  }, Pt.prototype.unshift = function(mt) {
    return Dt(this, mt, null, !0, !1);
  }, Pt.prototype.isPaused = function() {
    return this._readableState.flowing === !1;
  }, Pt.prototype.setEncoding = function(mt) {
    oe || (oe = string_decoder.StringDecoder);
    var St = new oe(mt);
    this._readableState.decoder = St, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var Mt = this._readableState.buffer.head, It = ""; Mt !== null; ) It += St.write(Mt.data), Mt = Mt.next;
    return this._readableState.buffer.clear(), It !== "" && this._readableState.buffer.push(It), this._readableState.length = It.length, this;
  };
  var at = 1073741824;
  function lt(mt, St) {
    return mt <= 0 || St.length === 0 && St.ended ? 0 : St.objectMode ? 1 : mt != mt ? St.flowing && St.length ? St.buffer.head.data.length : St.length : (mt > St.highWaterMark && (St.highWaterMark = function(Mt) {
      return Mt >= at ? Mt = at : (Mt--, Mt |= Mt >>> 1, Mt |= Mt >>> 2, Mt |= Mt >>> 4, Mt |= Mt >>> 8, Mt |= Mt >>> 16, Mt++), Mt;
    }(mt)), mt <= St.length ? mt : St.ended ? St.length : (St.needReadable = !0, 0));
  }
  function Ce(mt) {
    var St = mt._readableState;
    ne("emitReadable", St.needReadable, St.emittedReadable), St.needReadable = !1, St.emittedReadable || (ne("emitReadable", St.flowing), St.emittedReadable = !0, process$1.nextTick(st, mt));
  }
  function st(mt) {
    var St = mt._readableState;
    ne("emitReadable_", St.destroyed, St.length, St.ended), St.destroyed || !St.length && !St.ended || (mt.emit("readable"), St.emittedReadable = !1), St.needReadable = !St.flowing && !St.ended && St.length <= St.highWaterMark, yt(mt);
  }
  function it(mt, St) {
    St.readingMore || (St.readingMore = !0, process$1.nextTick(nt, mt, St));
  }
  function nt(mt, St) {
    for (; !St.reading && !St.ended && (St.length < St.highWaterMark || St.flowing && St.length === 0); ) {
      var Mt = St.length;
      if (ne("maybeReadMore read 0"), mt.read(0), Mt === St.length) break;
    }
    St.readingMore = !1;
  }
  function ot(mt) {
    var St = mt._readableState;
    St.readableListening = mt.listenerCount("readable") > 0, St.resumeScheduled && !St.paused ? St.flowing = !0 : mt.listenerCount("data") > 0 && mt.resume();
  }
  function ke(mt) {
    ne("readable nexttick read 0"), mt.read(0);
  }
  function ct(mt, St) {
    ne("resume", St.reading), St.reading || mt.read(0), St.resumeScheduled = !1, mt.emit("resume"), yt(mt), St.flowing && !St.reading && mt.read(0);
  }
  function yt(mt) {
    var St = mt._readableState;
    for (ne("flow", St.flowing); St.flowing && mt.read() !== null; ) ;
  }
  function $t(mt, St) {
    return St.length === 0 ? null : (St.objectMode ? Mt = St.buffer.shift() : !mt || mt >= St.length ? (Mt = St.decoder ? St.buffer.join("") : St.buffer.length === 1 ? St.buffer.first() : St.buffer.concat(St.length), St.buffer.clear()) : Mt = St.buffer.consume(mt, St.decoder), Mt);
    var Mt;
  }
  function gt(mt) {
    var St = mt._readableState;
    ne("endReadable", St.endEmitted), St.endEmitted || (St.ended = !0, process$1.nextTick(xt, St, mt));
  }
  function xt(mt, St) {
    if (ne("endReadableNT", mt.endEmitted, mt.length), !mt.endEmitted && mt.length === 0 && (mt.endEmitted = !0, St.readable = !1, St.emit("end"), mt.autoDestroy)) {
      var Mt = St._writableState;
      (!Mt || Mt.autoDestroy && Mt.finished) && St.destroy();
    }
  }
  function At(mt, St) {
    for (var Mt = 0, It = mt.length; Mt < It; Mt++) if (mt[Mt] === St) return Mt;
    return -1;
  }
  return Pt.prototype.read = function(mt) {
    ne("read", mt), mt = parseInt(mt, 10);
    var St = this._readableState, Mt = mt;
    if (mt !== 0 && (St.emittedReadable = !1), mt === 0 && St.needReadable && ((St.highWaterMark !== 0 ? St.length >= St.highWaterMark : St.length > 0) || St.ended)) return ne("read: emitReadable", St.length, St.ended), St.length === 0 && St.ended ? gt(this) : Ce(this), null;
    if ((mt = lt(mt, St)) === 0 && St.ended) return St.length === 0 && gt(this), null;
    var It, Ft = St.needReadable;
    return ne("need readable", Ft), (St.length === 0 || St.length - mt < St.highWaterMark) && ne("length less than watermark", Ft = !0), St.ended || St.reading ? ne("reading or ended", Ft = !1) : Ft && (ne("do read"), St.reading = !0, St.sync = !0, St.length === 0 && (St.needReadable = !0), this._read(St.highWaterMark), St.sync = !1, St.reading || (mt = lt(Mt, St))), (It = mt > 0 ? $t(mt, St) : null) === null ? (St.needReadable = St.length <= St.highWaterMark, mt = 0) : (St.length -= mt, St.awaitDrain = 0), St.length === 0 && (St.ended || (St.needReadable = !0), Mt !== mt && St.ended && gt(this)), It !== null && this.emit("data", It), It;
  }, Pt.prototype._read = function(mt) {
    Et(this, new Tt("_read()"));
  }, Pt.prototype.pipe = function(mt, St) {
    var Mt = this, It = this._readableState;
    switch (It.pipesCount) {
      case 0:
        It.pipes = mt;
        break;
      case 1:
        It.pipes = [It.pipes, mt];
        break;
      default:
        It.pipes.push(mt);
    }
    It.pipesCount += 1, ne("pipe count=%d opts=%j", It.pipesCount, St);
    var Ft = (!St || St.end !== !1) && mt !== process$1.stdout && mt !== process$1.stderr ? qt : Pr;
    function Vt(Sr, lr) {
      ne("onunpipe"), Sr === Mt && lr && lr.hasUnpiped === !1 && (lr.hasUnpiped = !0, ne("cleanup"), mt.removeListener("close", pr), mt.removeListener("finish", dr), mt.removeListener("drain", er), mt.removeListener("error", ur), mt.removeListener("unpipe", Vt), Mt.removeListener("end", qt), Mt.removeListener("end", Pr), Mt.removeListener("data", Jt), tr = !0, !It.awaitDrain || mt._writableState && !mt._writableState.needDrain || er());
    }
    function qt() {
      ne("onend"), mt.end();
    }
    It.endEmitted ? process$1.nextTick(Ft) : Mt.once("end", Ft), mt.on("unpipe", Vt);
    var er = /* @__PURE__ */ function(Sr) {
      return function() {
        var lr = Sr._readableState;
        ne("pipeOnDrain", lr.awaitDrain), lr.awaitDrain && lr.awaitDrain--, lr.awaitDrain === 0 && L(Sr, "data") && (lr.flowing = !0, yt(Sr));
      };
    }(Mt);
    mt.on("drain", er);
    var tr = !1;
    function Jt(Sr) {
      ne("ondata");
      var lr = mt.write(Sr);
      ne("dest.write", lr), lr === !1 && ((It.pipesCount === 1 && It.pipes === mt || It.pipesCount > 1 && At(It.pipes, mt) !== -1) && !tr && (ne("false write response, pause", It.awaitDrain), It.awaitDrain++), Mt.pause());
    }
    function ur(Sr) {
      ne("onerror", Sr), Pr(), mt.removeListener("error", ur), L(mt, "error") === 0 && Et(mt, Sr);
    }
    function pr() {
      mt.removeListener("finish", dr), Pr();
    }
    function dr() {
      ne("onfinish"), mt.removeListener("close", pr), Pr();
    }
    function Pr() {
      ne("unpipe"), Mt.unpipe(mt);
    }
    return Mt.on("data", Jt), function(Sr, lr, kr) {
      if (typeof Sr.prependListener == "function") return Sr.prependListener(lr, kr);
      Sr._events && Sr._events[lr] ? Array.isArray(Sr._events[lr]) ? Sr._events[lr].unshift(kr) : Sr._events[lr] = [kr, Sr._events[lr]] : Sr.on(lr, kr);
    }(mt, "error", ur), mt.once("close", pr), mt.once("finish", dr), mt.emit("pipe", Mt), It.flowing || (ne("pipe resume"), Mt.resume()), mt;
  }, Pt.prototype.unpipe = function(mt) {
    var St = this._readableState, Mt = { hasUnpiped: !1 };
    if (St.pipesCount === 0) return this;
    if (St.pipesCount === 1) return mt && mt !== St.pipes || (mt || (mt = St.pipes), St.pipes = null, St.pipesCount = 0, St.flowing = !1, mt && mt.emit("unpipe", this, Mt)), this;
    if (!mt) {
      var It = St.pipes, Ft = St.pipesCount;
      St.pipes = null, St.pipesCount = 0, St.flowing = !1;
      for (var Vt = 0; Vt < Ft; Vt++) It[Vt].emit("unpipe", this, { hasUnpiped: !1 });
      return this;
    }
    var qt = At(St.pipes, mt);
    return qt === -1 || (St.pipes.splice(qt, 1), St.pipesCount -= 1, St.pipesCount === 1 && (St.pipes = St.pipes[0]), mt.emit("unpipe", this, Mt)), this;
  }, Pt.prototype.on = function(mt, St) {
    var Mt = V.prototype.on.call(this, mt, St), It = this._readableState;
    return mt === "data" ? (It.readableListening = this.listenerCount("readable") > 0, It.flowing !== !1 && this.resume()) : mt === "readable" && (It.endEmitted || It.readableListening || (It.readableListening = It.needReadable = !0, It.flowing = !1, It.emittedReadable = !1, ne("on readable", It.length, It.reading), It.length ? Ce(this) : It.reading || process$1.nextTick(ke, this))), Mt;
  }, Pt.prototype.addListener = Pt.prototype.on, Pt.prototype.removeListener = function(mt, St) {
    var Mt = V.prototype.removeListener.call(this, mt, St);
    return mt === "readable" && process$1.nextTick(ot, this), Mt;
  }, Pt.prototype.removeAllListeners = function(mt) {
    var St = V.prototype.removeAllListeners.apply(this, arguments);
    return mt !== "readable" && mt !== void 0 || process$1.nextTick(ot, this), St;
  }, Pt.prototype.resume = function() {
    var mt = this._readableState;
    return mt.flowing || (ne("resume"), mt.flowing = !mt.readableListening, function(St, Mt) {
      Mt.resumeScheduled || (Mt.resumeScheduled = !0, process$1.nextTick(ct, St, Mt));
    }(this, mt)), mt.paused = !1, this;
  }, Pt.prototype.pause = function() {
    return ne("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (ne("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
  }, Pt.prototype.wrap = function(mt) {
    var St = this, Mt = this._readableState, It = !1;
    for (var Ft in mt.on("end", function() {
      if (ne("wrapped end"), Mt.decoder && !Mt.ended) {
        var qt = Mt.decoder.end();
        qt && qt.length && St.push(qt);
      }
      St.push(null);
    }), mt.on("data", function(qt) {
      ne("wrapped data"), Mt.decoder && (qt = Mt.decoder.write(qt)), Mt.objectMode && qt == null || (Mt.objectMode || qt && qt.length) && (St.push(qt) || (It = !0, mt.pause()));
    }), mt) this[Ft] === void 0 && typeof mt[Ft] == "function" && (this[Ft] = /* @__PURE__ */ function(qt) {
      return function() {
        return mt[qt].apply(mt, arguments);
      };
    }(Ft));
    for (var Vt = 0; Vt < Rt.length; Vt++) mt.on(Rt[Vt], this.emit.bind(this, Rt[Vt]));
    return this._read = function(qt) {
      ne("wrapped _read", qt), It && (It = !1, mt.resume());
    }, this;
  }, typeof Symbol == "function" && (Pt.prototype[Symbol.asyncIterator] = function() {
    return pe === void 0 && (pe = requireAsync_iterator()), pe(this);
  }), Object.defineProperty(Pt.prototype, "readableHighWaterMark", { enumerable: !1, get: function() {
    return this._readableState.highWaterMark;
  } }), Object.defineProperty(Pt.prototype, "readableBuffer", { enumerable: !1, get: function() {
    return this._readableState && this._readableState.buffer;
  } }), Object.defineProperty(Pt.prototype, "readableFlowing", { enumerable: !1, get: function() {
    return this._readableState.flowing;
  }, set: function(mt) {
    this._readableState && (this._readableState.flowing = mt);
  } }), Pt._fromList = $t, Object.defineProperty(Pt.prototype, "readableLength", { enumerable: !1, get: function() {
    return this._readableState.length;
  } }), typeof Symbol == "function" && (Pt.from = function(mt, St) {
    return ce === void 0 && (ce = requireFromBrowser()), ce(Pt, mt, St);
  }), _stream_readable$1;
}
var _stream_transform$1 = Transform$9, _require$codes$1 = errorsBrowser.codes, ERR_METHOD_NOT_IMPLEMENTED = _require$codes$1.ERR_METHOD_NOT_IMPLEMENTED, ERR_MULTIPLE_CALLBACK = _require$codes$1.ERR_MULTIPLE_CALLBACK, ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes$1.ERR_TRANSFORM_ALREADY_TRANSFORMING, ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes$1.ERR_TRANSFORM_WITH_LENGTH_0, Duplex$1 = require_stream_duplex$1();
function afterTransform$1(B, L) {
  var V = this._transformState;
  V.transforming = !1;
  var J = V.writecb;
  if (J === null) return this.emit("error", new ERR_MULTIPLE_CALLBACK());
  V.writechunk = null, V.writecb = null, L != null && this.push(L), J(B);
  var re = this._readableState;
  re.reading = !1, (re.needReadable || re.length < re.highWaterMark) && this._read(re.highWaterMark);
}
function Transform$9(B) {
  if (!(this instanceof Transform$9)) return new Transform$9(B);
  Duplex$1.call(this, B), this._transformState = { afterTransform: afterTransform$1.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = !0, this._readableState.sync = !1, B && (typeof B.transform == "function" && (this._transform = B.transform), typeof B.flush == "function" && (this._flush = B.flush)), this.on("prefinish", prefinish$1);
}
function prefinish$1() {
  var B = this;
  typeof this._flush != "function" || this._readableState.destroyed ? done$1(this, null, null) : this._flush(function(L, V) {
    done$1(B, L, V);
  });
}
function done$1(B, L, V) {
  if (L) return B.emit("error", L);
  if (V != null && B.push(V), B._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (B._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return B.push(null);
}
inherits_browserExports(Transform$9, Duplex$1), Transform$9.prototype.push = function(B, L) {
  return this._transformState.needTransform = !1, Duplex$1.prototype.push.call(this, B, L);
}, Transform$9.prototype._transform = function(B, L, V) {
  V(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
}, Transform$9.prototype._write = function(B, L, V) {
  var J = this._transformState;
  if (J.writecb = V, J.writechunk = B, J.writeencoding = L, !J.transforming) {
    var re = this._readableState;
    (J.needTransform || re.needReadable || re.length < re.highWaterMark) && this._read(re.highWaterMark);
  }
}, Transform$9.prototype._read = function(B) {
  var L = this._transformState;
  L.writechunk === null || L.transforming ? L.needTransform = !0 : (L.transforming = !0, this._transform(L.writechunk, L.writeencoding, L.afterTransform));
}, Transform$9.prototype._destroy = function(B, L) {
  Duplex$1.prototype._destroy.call(this, B, function(V) {
    L(V);
  });
};
var _stream_passthrough$1 = PassThrough$1, Transform$8 = _stream_transform$1, eos;
function PassThrough$1(B) {
  if (!(this instanceof PassThrough$1)) return new PassThrough$1(B);
  Transform$8.call(this, B);
}
function once(B) {
  var L = !1;
  return function() {
    L || (L = !0, B.apply(void 0, arguments));
  };
}
inherits_browserExports(PassThrough$1, Transform$8), PassThrough$1.prototype._transform = function(B, L, V) {
  V(null, B);
};
var _require$codes = errorsBrowser.codes, ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS, ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(B) {
  if (B) throw B;
}
function isRequest(B) {
  return B.setHeader && typeof B.abort == "function";
}
function destroyer(B, L, V, J) {
  J = once(J);
  var re = !1;
  B.on("close", function() {
    re = !0;
  }), eos === void 0 && (eos = endOfStream), eos(B, { readable: L, writable: V }, function(ie) {
    if (ie) return J(ie);
    re = !0, J();
  });
  var ne = !1;
  return function(ie) {
    if (!re && !ne) return ne = !0, isRequest(B) ? B.abort() : typeof B.destroy == "function" ? B.destroy() : void J(ie || new ERR_STREAM_DESTROYED("pipe"));
  };
}
function call(B) {
  B();
}
function pipe(B, L) {
  return B.pipe(L);
}
function popCallback(B) {
  return B.length ? typeof B[B.length - 1] != "function" ? noop : B.pop() : noop;
}
function pipeline() {
  for (var B = arguments.length, L = new Array(B), V = 0; V < B; V++) L[V] = arguments[V];
  var J, re = popCallback(L);
  if (Array.isArray(L[0]) && (L = L[0]), L.length < 2) throw new ERR_MISSING_ARGS("streams");
  var ne = L.map(function(ie, oe) {
    var pe = oe < L.length - 1;
    return destroyer(ie, pe, oe > 0, function(ce) {
      J || (J = ce), ce && ne.forEach(call), pe || (ne.forEach(call), re(J));
    });
  });
  return L.reduce(pipe);
}
var pipeline_1 = pipeline;
(function(B, L) {
  (L = B.exports = require_stream_readable$1()).Stream = L, L.Readable = L, L.Writable = require_stream_writable$1(), L.Duplex = require_stream_duplex$1(), L.Transform = _stream_transform$1, L.PassThrough = _stream_passthrough$1, L.finished = endOfStream, L.pipeline = pipeline_1;
})(readableBrowser$1, readableBrowser$1.exports);
var readableBrowserExports$1 = readableBrowser$1.exports, Buffer$A = safeBufferExports$1.Buffer, Transform$7 = readableBrowserExports$1.Transform, inherits$q = inherits_browserExports;
function throwIfNotStringOrBuffer(B, L) {
  if (!Buffer$A.isBuffer(B) && typeof B != "string") throw new TypeError(L + " must be a string or a buffer");
}
function HashBase$2(B) {
  Transform$7.call(this), this._block = Buffer$A.allocUnsafe(B), this._blockSize = B, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = !1;
}
inherits$q(HashBase$2, Transform$7), HashBase$2.prototype._transform = function(B, L, V) {
  var J = null;
  try {
    this.update(B, L);
  } catch (re) {
    J = re;
  }
  V(J);
}, HashBase$2.prototype._flush = function(B) {
  var L = null;
  try {
    this.push(this.digest());
  } catch (V) {
    L = V;
  }
  B(L);
}, HashBase$2.prototype.update = function(B, L) {
  if (throwIfNotStringOrBuffer(B, "Data"), this._finalized) throw new Error("Digest already called");
  Buffer$A.isBuffer(B) || (B = Buffer$A.from(B, L));
  for (var V = this._block, J = 0; this._blockOffset + B.length - J >= this._blockSize; ) {
    for (var re = this._blockOffset; re < this._blockSize; ) V[re++] = B[J++];
    this._update(), this._blockOffset = 0;
  }
  for (; J < B.length; ) V[this._blockOffset++] = B[J++];
  for (var ne = 0, ie = 8 * B.length; ie > 0; ++ne) this._length[ne] += ie, (ie = this._length[ne] / 4294967296 | 0) > 0 && (this._length[ne] -= 4294967296 * ie);
  return this;
}, HashBase$2.prototype._update = function() {
  throw new Error("_update is not implemented");
}, HashBase$2.prototype.digest = function(B) {
  if (this._finalized) throw new Error("Digest already called");
  this._finalized = !0;
  var L = this._digest();
  B !== void 0 && (L = L.toString(B)), this._block.fill(0), this._blockOffset = 0;
  for (var V = 0; V < 4; ++V) this._length[V] = 0;
  return L;
}, HashBase$2.prototype._digest = function() {
  throw new Error("_digest is not implemented");
};
var hashBase = HashBase$2, inherits$p = inherits_browserExports, HashBase$1 = hashBase, Buffer$z = safeBufferExports$1.Buffer, ARRAY16$1 = new Array(16);
function MD5$3() {
  HashBase$1.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
}
function rotl$1(B, L) {
  return B << L | B >>> 32 - L;
}
function fnF(B, L, V, J, re, ne, ie) {
  return rotl$1(B + (L & V | ~L & J) + re + ne | 0, ie) + L | 0;
}
function fnG(B, L, V, J, re, ne, ie) {
  return rotl$1(B + (L & J | V & ~J) + re + ne | 0, ie) + L | 0;
}
function fnH(B, L, V, J, re, ne, ie) {
  return rotl$1(B + (L ^ V ^ J) + re + ne | 0, ie) + L | 0;
}
function fnI(B, L, V, J, re, ne, ie) {
  return rotl$1(B + (V ^ (L | ~J)) + re + ne | 0, ie) + L | 0;
}
inherits$p(MD5$3, HashBase$1), MD5$3.prototype._update = function() {
  for (var B = ARRAY16$1, L = 0; L < 16; ++L) B[L] = this._block.readInt32LE(4 * L);
  var V = this._a, J = this._b, re = this._c, ne = this._d;
  V = fnF(V, J, re, ne, B[0], 3614090360, 7), ne = fnF(ne, V, J, re, B[1], 3905402710, 12), re = fnF(re, ne, V, J, B[2], 606105819, 17), J = fnF(J, re, ne, V, B[3], 3250441966, 22), V = fnF(V, J, re, ne, B[4], 4118548399, 7), ne = fnF(ne, V, J, re, B[5], 1200080426, 12), re = fnF(re, ne, V, J, B[6], 2821735955, 17), J = fnF(J, re, ne, V, B[7], 4249261313, 22), V = fnF(V, J, re, ne, B[8], 1770035416, 7), ne = fnF(ne, V, J, re, B[9], 2336552879, 12), re = fnF(re, ne, V, J, B[10], 4294925233, 17), J = fnF(J, re, ne, V, B[11], 2304563134, 22), V = fnF(V, J, re, ne, B[12], 1804603682, 7), ne = fnF(ne, V, J, re, B[13], 4254626195, 12), re = fnF(re, ne, V, J, B[14], 2792965006, 17), V = fnG(V, J = fnF(J, re, ne, V, B[15], 1236535329, 22), re, ne, B[1], 4129170786, 5), ne = fnG(ne, V, J, re, B[6], 3225465664, 9), re = fnG(re, ne, V, J, B[11], 643717713, 14), J = fnG(J, re, ne, V, B[0], 3921069994, 20), V = fnG(V, J, re, ne, B[5], 3593408605, 5), ne = fnG(ne, V, J, re, B[10], 38016083, 9), re = fnG(re, ne, V, J, B[15], 3634488961, 14), J = fnG(J, re, ne, V, B[4], 3889429448, 20), V = fnG(V, J, re, ne, B[9], 568446438, 5), ne = fnG(ne, V, J, re, B[14], 3275163606, 9), re = fnG(re, ne, V, J, B[3], 4107603335, 14), J = fnG(J, re, ne, V, B[8], 1163531501, 20), V = fnG(V, J, re, ne, B[13], 2850285829, 5), ne = fnG(ne, V, J, re, B[2], 4243563512, 9), re = fnG(re, ne, V, J, B[7], 1735328473, 14), V = fnH(V, J = fnG(J, re, ne, V, B[12], 2368359562, 20), re, ne, B[5], 4294588738, 4), ne = fnH(ne, V, J, re, B[8], 2272392833, 11), re = fnH(re, ne, V, J, B[11], 1839030562, 16), J = fnH(J, re, ne, V, B[14], 4259657740, 23), V = fnH(V, J, re, ne, B[1], 2763975236, 4), ne = fnH(ne, V, J, re, B[4], 1272893353, 11), re = fnH(re, ne, V, J, B[7], 4139469664, 16), J = fnH(J, re, ne, V, B[10], 3200236656, 23), V = fnH(V, J, re, ne, B[13], 681279174, 4), ne = fnH(ne, V, J, re, B[0], 3936430074, 11), re = fnH(re, ne, V, J, B[3], 3572445317, 16), J = fnH(J, re, ne, V, B[6], 76029189, 23), V = fnH(V, J, re, ne, B[9], 3654602809, 4), ne = fnH(ne, V, J, re, B[12], 3873151461, 11), re = fnH(re, ne, V, J, B[15], 530742520, 16), V = fnI(V, J = fnH(J, re, ne, V, B[2], 3299628645, 23), re, ne, B[0], 4096336452, 6), ne = fnI(ne, V, J, re, B[7], 1126891415, 10), re = fnI(re, ne, V, J, B[14], 2878612391, 15), J = fnI(J, re, ne, V, B[5], 4237533241, 21), V = fnI(V, J, re, ne, B[12], 1700485571, 6), ne = fnI(ne, V, J, re, B[3], 2399980690, 10), re = fnI(re, ne, V, J, B[10], 4293915773, 15), J = fnI(J, re, ne, V, B[1], 2240044497, 21), V = fnI(V, J, re, ne, B[8], 1873313359, 6), ne = fnI(ne, V, J, re, B[15], 4264355552, 10), re = fnI(re, ne, V, J, B[6], 2734768916, 15), J = fnI(J, re, ne, V, B[13], 1309151649, 21), V = fnI(V, J, re, ne, B[4], 4149444226, 6), ne = fnI(ne, V, J, re, B[11], 3174756917, 10), re = fnI(re, ne, V, J, B[2], 718787259, 15), J = fnI(J, re, ne, V, B[9], 3951481745, 21), this._a = this._a + V | 0, this._b = this._b + J | 0, this._c = this._c + re | 0, this._d = this._d + ne | 0;
}, MD5$3.prototype._digest = function() {
  this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
  var B = Buffer$z.allocUnsafe(16);
  return B.writeInt32LE(this._a, 0), B.writeInt32LE(this._b, 4), B.writeInt32LE(this._c, 8), B.writeInt32LE(this._d, 12), B;
};
var md5_js = MD5$3, Buffer$y = require$$1$2.Buffer, inherits$o = inherits_browserExports, HashBase = hashBase, ARRAY16 = new Array(16), zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], hl = [0, 1518500249, 1859775393, 2400959708, 2840853838], hr = [1352829926, 1548603684, 1836072691, 2053994217, 0];
function RIPEMD160$4() {
  HashBase.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
}
function rotl(B, L) {
  return B << L | B >>> 32 - L;
}
function fn1(B, L, V, J, re, ne, ie, oe) {
  return rotl(B + (L ^ V ^ J) + ne + ie | 0, oe) + re | 0;
}
function fn2(B, L, V, J, re, ne, ie, oe) {
  return rotl(B + (L & V | ~L & J) + ne + ie | 0, oe) + re | 0;
}
function fn3(B, L, V, J, re, ne, ie, oe) {
  return rotl(B + ((L | ~V) ^ J) + ne + ie | 0, oe) + re | 0;
}
function fn4(B, L, V, J, re, ne, ie, oe) {
  return rotl(B + (L & J | V & ~J) + ne + ie | 0, oe) + re | 0;
}
function fn5(B, L, V, J, re, ne, ie, oe) {
  return rotl(B + (L ^ (V | ~J)) + ne + ie | 0, oe) + re | 0;
}
inherits$o(RIPEMD160$4, HashBase), RIPEMD160$4.prototype._update = function() {
  for (var B = ARRAY16, L = 0; L < 16; ++L) B[L] = this._block.readInt32LE(4 * L);
  for (var V = 0 | this._a, J = 0 | this._b, re = 0 | this._c, ne = 0 | this._d, ie = 0 | this._e, oe = 0 | this._a, pe = 0 | this._b, ce = 0 | this._c, Oe = 0 | this._d, rt = 0 | this._e, ut = 0; ut < 80; ut += 1) {
    var dt, ht;
    ut < 16 ? (dt = fn1(V, J, re, ne, ie, B[zl[ut]], hl[0], sl[ut]), ht = fn5(oe, pe, ce, Oe, rt, B[zr[ut]], hr[0], sr[ut])) : ut < 32 ? (dt = fn2(V, J, re, ne, ie, B[zl[ut]], hl[1], sl[ut]), ht = fn4(oe, pe, ce, Oe, rt, B[zr[ut]], hr[1], sr[ut])) : ut < 48 ? (dt = fn3(V, J, re, ne, ie, B[zl[ut]], hl[2], sl[ut]), ht = fn3(oe, pe, ce, Oe, rt, B[zr[ut]], hr[2], sr[ut])) : ut < 64 ? (dt = fn4(V, J, re, ne, ie, B[zl[ut]], hl[3], sl[ut]), ht = fn2(oe, pe, ce, Oe, rt, B[zr[ut]], hr[3], sr[ut])) : (dt = fn5(V, J, re, ne, ie, B[zl[ut]], hl[4], sl[ut]), ht = fn1(oe, pe, ce, Oe, rt, B[zr[ut]], hr[4], sr[ut])), V = ie, ie = ne, ne = rotl(re, 10), re = J, J = dt, oe = rt, rt = Oe, Oe = rotl(ce, 10), ce = pe, pe = ht;
  }
  var bt = this._b + re + Oe | 0;
  this._b = this._c + ne + rt | 0, this._c = this._d + ie + oe | 0, this._d = this._e + V + pe | 0, this._e = this._a + J + ce | 0, this._a = bt;
}, RIPEMD160$4.prototype._digest = function() {
  this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
  var B = Buffer$y.alloc ? Buffer$y.alloc(20) : new Buffer$y(20);
  return B.writeInt32LE(this._a, 0), B.writeInt32LE(this._b, 4), B.writeInt32LE(this._c, 8), B.writeInt32LE(this._d, 12), B.writeInt32LE(this._e, 16), B;
};
var ripemd160 = RIPEMD160$4, sha_js = { exports: {} }, Buffer$x = safeBufferExports$1.Buffer;
function Hash$7(B, L) {
  this._block = Buffer$x.alloc(B), this._finalSize = L, this._blockSize = B, this._len = 0;
}
Hash$7.prototype.update = function(B, L) {
  typeof B == "string" && (L = L || "utf8", B = Buffer$x.from(B, L));
  for (var V = this._block, J = this._blockSize, re = B.length, ne = this._len, ie = 0; ie < re; ) {
    for (var oe = ne % J, pe = Math.min(re - ie, J - oe), ce = 0; ce < pe; ce++) V[oe + ce] = B[ie + ce];
    ie += pe, (ne += pe) % J == 0 && this._update(V);
  }
  return this._len += re, this;
}, Hash$7.prototype.digest = function(B) {
  var L = this._len % this._blockSize;
  this._block[L] = 128, this._block.fill(0, L + 1), L >= this._finalSize && (this._update(this._block), this._block.fill(0));
  var V = 8 * this._len;
  if (V <= 4294967295) this._block.writeUInt32BE(V, this._blockSize - 4);
  else {
    var J = (4294967295 & V) >>> 0, re = (V - J) / 4294967296;
    this._block.writeUInt32BE(re, this._blockSize - 8), this._block.writeUInt32BE(J, this._blockSize - 4);
  }
  this._update(this._block);
  var ne = this._hash();
  return B ? ne.toString(B) : ne;
}, Hash$7.prototype._update = function() {
  throw new Error("_update must be implemented by subclass");
};
var hash$3 = Hash$7, inherits$n = inherits_browserExports, Hash$6 = hash$3, Buffer$w = safeBufferExports$1.Buffer, K$4 = [1518500249, 1859775393, -1894007588, -899497514], W$5 = new Array(80);
function Sha() {
  this.init(), this._w = W$5, Hash$6.call(this, 64, 56);
}
function rotl5$1(B) {
  return B << 5 | B >>> 27;
}
function rotl30$1(B) {
  return B << 30 | B >>> 2;
}
function ft$1(B, L, V, J) {
  return B === 0 ? L & V | ~L & J : B === 2 ? L & V | L & J | V & J : L ^ V ^ J;
}
inherits$n(Sha, Hash$6), Sha.prototype.init = function() {
  return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
}, Sha.prototype._update = function(B) {
  for (var L = this._w, V = 0 | this._a, J = 0 | this._b, re = 0 | this._c, ne = 0 | this._d, ie = 0 | this._e, oe = 0; oe < 16; ++oe) L[oe] = B.readInt32BE(4 * oe);
  for (; oe < 80; ++oe) L[oe] = L[oe - 3] ^ L[oe - 8] ^ L[oe - 14] ^ L[oe - 16];
  for (var pe = 0; pe < 80; ++pe) {
    var ce = ~~(pe / 20), Oe = rotl5$1(V) + ft$1(ce, J, re, ne) + ie + L[pe] + K$4[ce] | 0;
    ie = ne, ne = re, re = rotl30$1(J), J = V, V = Oe;
  }
  this._a = V + this._a | 0, this._b = J + this._b | 0, this._c = re + this._c | 0, this._d = ne + this._d | 0, this._e = ie + this._e | 0;
}, Sha.prototype._hash = function() {
  var B = Buffer$w.allocUnsafe(20);
  return B.writeInt32BE(0 | this._a, 0), B.writeInt32BE(0 | this._b, 4), B.writeInt32BE(0 | this._c, 8), B.writeInt32BE(0 | this._d, 12), B.writeInt32BE(0 | this._e, 16), B;
};
var sha$4 = Sha, inherits$m = inherits_browserExports, Hash$5 = hash$3, Buffer$v = safeBufferExports$1.Buffer, K$3 = [1518500249, 1859775393, -1894007588, -899497514], W$4 = new Array(80);
function Sha1() {
  this.init(), this._w = W$4, Hash$5.call(this, 64, 56);
}
function rotl1(B) {
  return B << 1 | B >>> 31;
}
function rotl5(B) {
  return B << 5 | B >>> 27;
}
function rotl30(B) {
  return B << 30 | B >>> 2;
}
function ft(B, L, V, J) {
  return B === 0 ? L & V | ~L & J : B === 2 ? L & V | L & J | V & J : L ^ V ^ J;
}
inherits$m(Sha1, Hash$5), Sha1.prototype.init = function() {
  return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
}, Sha1.prototype._update = function(B) {
  for (var L = this._w, V = 0 | this._a, J = 0 | this._b, re = 0 | this._c, ne = 0 | this._d, ie = 0 | this._e, oe = 0; oe < 16; ++oe) L[oe] = B.readInt32BE(4 * oe);
  for (; oe < 80; ++oe) L[oe] = rotl1(L[oe - 3] ^ L[oe - 8] ^ L[oe - 14] ^ L[oe - 16]);
  for (var pe = 0; pe < 80; ++pe) {
    var ce = ~~(pe / 20), Oe = rotl5(V) + ft(ce, J, re, ne) + ie + L[pe] + K$3[ce] | 0;
    ie = ne, ne = re, re = rotl30(J), J = V, V = Oe;
  }
  this._a = V + this._a | 0, this._b = J + this._b | 0, this._c = re + this._c | 0, this._d = ne + this._d | 0, this._e = ie + this._e | 0;
}, Sha1.prototype._hash = function() {
  var B = Buffer$v.allocUnsafe(20);
  return B.writeInt32BE(0 | this._a, 0), B.writeInt32BE(0 | this._b, 4), B.writeInt32BE(0 | this._c, 8), B.writeInt32BE(0 | this._d, 12), B.writeInt32BE(0 | this._e, 16), B;
};
var sha1 = Sha1, inherits$l = inherits_browserExports, Hash$4 = hash$3, Buffer$u = safeBufferExports$1.Buffer, K$2 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], W$3 = new Array(64);
function Sha256$1() {
  this.init(), this._w = W$3, Hash$4.call(this, 64, 56);
}
function ch(B, L, V) {
  return V ^ B & (L ^ V);
}
function maj$1(B, L, V) {
  return B & L | V & (B | L);
}
function sigma0$1(B) {
  return (B >>> 2 | B << 30) ^ (B >>> 13 | B << 19) ^ (B >>> 22 | B << 10);
}
function sigma1$1(B) {
  return (B >>> 6 | B << 26) ^ (B >>> 11 | B << 21) ^ (B >>> 25 | B << 7);
}
function gamma0(B) {
  return (B >>> 7 | B << 25) ^ (B >>> 18 | B << 14) ^ B >>> 3;
}
function gamma1(B) {
  return (B >>> 17 | B << 15) ^ (B >>> 19 | B << 13) ^ B >>> 10;
}
inherits$l(Sha256$1, Hash$4), Sha256$1.prototype.init = function() {
  return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
}, Sha256$1.prototype._update = function(B) {
  for (var L = this._w, V = 0 | this._a, J = 0 | this._b, re = 0 | this._c, ne = 0 | this._d, ie = 0 | this._e, oe = 0 | this._f, pe = 0 | this._g, ce = 0 | this._h, Oe = 0; Oe < 16; ++Oe) L[Oe] = B.readInt32BE(4 * Oe);
  for (; Oe < 64; ++Oe) L[Oe] = gamma1(L[Oe - 2]) + L[Oe - 7] + gamma0(L[Oe - 15]) + L[Oe - 16] | 0;
  for (var rt = 0; rt < 64; ++rt) {
    var ut = ce + sigma1$1(ie) + ch(ie, oe, pe) + K$2[rt] + L[rt] | 0, dt = sigma0$1(V) + maj$1(V, J, re) | 0;
    ce = pe, pe = oe, oe = ie, ie = ne + ut | 0, ne = re, re = J, J = V, V = ut + dt | 0;
  }
  this._a = V + this._a | 0, this._b = J + this._b | 0, this._c = re + this._c | 0, this._d = ne + this._d | 0, this._e = ie + this._e | 0, this._f = oe + this._f | 0, this._g = pe + this._g | 0, this._h = ce + this._h | 0;
}, Sha256$1.prototype._hash = function() {
  var B = Buffer$u.allocUnsafe(32);
  return B.writeInt32BE(this._a, 0), B.writeInt32BE(this._b, 4), B.writeInt32BE(this._c, 8), B.writeInt32BE(this._d, 12), B.writeInt32BE(this._e, 16), B.writeInt32BE(this._f, 20), B.writeInt32BE(this._g, 24), B.writeInt32BE(this._h, 28), B;
};
var sha256$3 = Sha256$1, inherits$k = inherits_browserExports, Sha256 = sha256$3, Hash$3 = hash$3, Buffer$t = safeBufferExports$1.Buffer, W$2 = new Array(64);
function Sha224() {
  this.init(), this._w = W$2, Hash$3.call(this, 64, 56);
}
inherits$k(Sha224, Sha256), Sha224.prototype.init = function() {
  return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
}, Sha224.prototype._hash = function() {
  var B = Buffer$t.allocUnsafe(28);
  return B.writeInt32BE(this._a, 0), B.writeInt32BE(this._b, 4), B.writeInt32BE(this._c, 8), B.writeInt32BE(this._d, 12), B.writeInt32BE(this._e, 16), B.writeInt32BE(this._f, 20), B.writeInt32BE(this._g, 24), B;
};
var sha224$1 = Sha224, inherits$j = inherits_browserExports, Hash$2 = hash$3, Buffer$s = safeBufferExports$1.Buffer, K$1 = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], W$1 = new Array(160);
function Sha512() {
  this.init(), this._w = W$1, Hash$2.call(this, 128, 112);
}
function Ch(B, L, V) {
  return V ^ B & (L ^ V);
}
function maj(B, L, V) {
  return B & L | V & (B | L);
}
function sigma0(B, L) {
  return (B >>> 28 | L << 4) ^ (L >>> 2 | B << 30) ^ (L >>> 7 | B << 25);
}
function sigma1(B, L) {
  return (B >>> 14 | L << 18) ^ (B >>> 18 | L << 14) ^ (L >>> 9 | B << 23);
}
function Gamma0(B, L) {
  return (B >>> 1 | L << 31) ^ (B >>> 8 | L << 24) ^ B >>> 7;
}
function Gamma0l(B, L) {
  return (B >>> 1 | L << 31) ^ (B >>> 8 | L << 24) ^ (B >>> 7 | L << 25);
}
function Gamma1(B, L) {
  return (B >>> 19 | L << 13) ^ (L >>> 29 | B << 3) ^ B >>> 6;
}
function Gamma1l(B, L) {
  return (B >>> 19 | L << 13) ^ (L >>> 29 | B << 3) ^ (B >>> 6 | L << 26);
}
function getCarry(B, L) {
  return B >>> 0 < L >>> 0 ? 1 : 0;
}
inherits$j(Sha512, Hash$2), Sha512.prototype.init = function() {
  return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
}, Sha512.prototype._update = function(B) {
  for (var L = this._w, V = 0 | this._ah, J = 0 | this._bh, re = 0 | this._ch, ne = 0 | this._dh, ie = 0 | this._eh, oe = 0 | this._fh, pe = 0 | this._gh, ce = 0 | this._hh, Oe = 0 | this._al, rt = 0 | this._bl, ut = 0 | this._cl, dt = 0 | this._dl, ht = 0 | this._el, bt = 0 | this._fl, Tt = 0 | this._gl, wt = 0 | this._hl, Et = 0; Et < 32; Et += 2) L[Et] = B.readInt32BE(4 * Et), L[Et + 1] = B.readInt32BE(4 * Et + 4);
  for (; Et < 160; Et += 2) {
    var Rt = L[Et - 30], Bt = L[Et - 30 + 1], Pt = Gamma0(Rt, Bt), Dt = Gamma0l(Bt, Rt), Gt = Gamma1(Rt = L[Et - 4], Bt = L[Et - 4 + 1]), at = Gamma1l(Bt, Rt), lt = L[Et - 14], Ce = L[Et - 14 + 1], st = L[Et - 32], it = L[Et - 32 + 1], nt = Dt + Ce | 0, ot = Pt + lt + getCarry(nt, Dt) | 0;
    ot = (ot = ot + Gt + getCarry(nt = nt + at | 0, at) | 0) + st + getCarry(nt = nt + it | 0, it) | 0, L[Et] = ot, L[Et + 1] = nt;
  }
  for (var ke = 0; ke < 160; ke += 2) {
    ot = L[ke], nt = L[ke + 1];
    var ct = maj(V, J, re), yt = maj(Oe, rt, ut), $t = sigma0(V, Oe), gt = sigma0(Oe, V), xt = sigma1(ie, ht), At = sigma1(ht, ie), mt = K$1[ke], St = K$1[ke + 1], Mt = Ch(ie, oe, pe), It = Ch(ht, bt, Tt), Ft = wt + At | 0, Vt = ce + xt + getCarry(Ft, wt) | 0;
    Vt = (Vt = (Vt = Vt + Mt + getCarry(Ft = Ft + It | 0, It) | 0) + mt + getCarry(Ft = Ft + St | 0, St) | 0) + ot + getCarry(Ft = Ft + nt | 0, nt) | 0;
    var qt = gt + yt | 0, er = $t + ct + getCarry(qt, gt) | 0;
    ce = pe, wt = Tt, pe = oe, Tt = bt, oe = ie, bt = ht, ie = ne + Vt + getCarry(ht = dt + Ft | 0, dt) | 0, ne = re, dt = ut, re = J, ut = rt, J = V, rt = Oe, V = Vt + er + getCarry(Oe = Ft + qt | 0, Ft) | 0;
  }
  this._al = this._al + Oe | 0, this._bl = this._bl + rt | 0, this._cl = this._cl + ut | 0, this._dl = this._dl + dt | 0, this._el = this._el + ht | 0, this._fl = this._fl + bt | 0, this._gl = this._gl + Tt | 0, this._hl = this._hl + wt | 0, this._ah = this._ah + V + getCarry(this._al, Oe) | 0, this._bh = this._bh + J + getCarry(this._bl, rt) | 0, this._ch = this._ch + re + getCarry(this._cl, ut) | 0, this._dh = this._dh + ne + getCarry(this._dl, dt) | 0, this._eh = this._eh + ie + getCarry(this._el, ht) | 0, this._fh = this._fh + oe + getCarry(this._fl, bt) | 0, this._gh = this._gh + pe + getCarry(this._gl, Tt) | 0, this._hh = this._hh + ce + getCarry(this._hl, wt) | 0;
}, Sha512.prototype._hash = function() {
  var B = Buffer$s.allocUnsafe(64);
  function L(V, J, re) {
    B.writeInt32BE(V, re), B.writeInt32BE(J, re + 4);
  }
  return L(this._ah, this._al, 0), L(this._bh, this._bl, 8), L(this._ch, this._cl, 16), L(this._dh, this._dl, 24), L(this._eh, this._el, 32), L(this._fh, this._fl, 40), L(this._gh, this._gl, 48), L(this._hh, this._hl, 56), B;
};
var sha512$1 = Sha512, inherits$i = inherits_browserExports, SHA512$2 = sha512$1, Hash$1 = hash$3, Buffer$r = safeBufferExports$1.Buffer, W = new Array(160);
function Sha384() {
  this.init(), this._w = W, Hash$1.call(this, 128, 112);
}
inherits$i(Sha384, SHA512$2), Sha384.prototype.init = function() {
  return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
}, Sha384.prototype._hash = function() {
  var B = Buffer$r.allocUnsafe(48);
  function L(V, J, re) {
    B.writeInt32BE(V, re), B.writeInt32BE(J, re + 4);
  }
  return L(this._ah, this._al, 0), L(this._bh, this._bl, 8), L(this._ch, this._cl, 16), L(this._dh, this._dl, 24), L(this._eh, this._el, 32), L(this._fh, this._fl, 40), B;
};
var sha384$1 = Sha384, exports = sha_js.exports = function(B) {
  B = B.toLowerCase();
  var L = exports[B];
  if (!L) throw new Error(B + " is not supported (we accept pull requests)");
  return new L();
};
exports.sha = sha$4, exports.sha1 = sha1, exports.sha224 = sha224$1, exports.sha256 = sha256$3, exports.sha384 = sha384$1, exports.sha512 = sha512$1;
var sha_jsExports = sha_js.exports, streamBrowserify = Stream, EE = eventsExports.EventEmitter, inherits$h = inherits_browserExports;
function Stream() {
  EE.call(this);
}
inherits$h(Stream, EE), Stream.Readable = require_stream_readable$1(), Stream.Writable = require_stream_writable$1(), Stream.Duplex = require_stream_duplex$1(), Stream.Transform = _stream_transform$1, Stream.PassThrough = _stream_passthrough$1, Stream.finished = endOfStream, Stream.pipeline = pipeline_1, Stream.Stream = Stream, Stream.prototype.pipe = function(B, L) {
  var V = this;
  function J(Oe) {
    B.writable && B.write(Oe) === !1 && V.pause && V.pause();
  }
  function re() {
    V.readable && V.resume && V.resume();
  }
  V.on("data", J), B.on("drain", re), B._isStdio || L && L.end === !1 || (V.on("end", ie), V.on("close", oe));
  var ne = !1;
  function ie() {
    ne || (ne = !0, B.end());
  }
  function oe() {
    ne || (ne = !0, typeof B.destroy == "function" && B.destroy());
  }
  function pe(Oe) {
    if (ce(), EE.listenerCount(this, "error") === 0) throw Oe;
  }
  function ce() {
    V.removeListener("data", J), B.removeListener("drain", re), V.removeListener("end", ie), V.removeListener("close", oe), V.removeListener("error", pe), B.removeListener("error", pe), V.removeListener("end", ce), V.removeListener("close", ce), B.removeListener("close", ce);
  }
  return V.on("error", pe), B.on("error", pe), V.on("end", ce), V.on("close", ce), B.on("close", ce), B.emit("pipe", V), B;
};
var Buffer$q = safeBufferExports$1.Buffer, Transform$6 = streamBrowserify.Transform, StringDecoder = string_decoder.StringDecoder, inherits$g = inherits_browserExports;
function CipherBase$1(B) {
  Transform$6.call(this), this.hashMode = typeof B == "string", this.hashMode ? this[B] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
}
inherits$g(CipherBase$1, Transform$6), CipherBase$1.prototype.update = function(B, L, V) {
  typeof B == "string" && (B = Buffer$q.from(B, L));
  var J = this._update(B);
  return this.hashMode ? this : (V && (J = this._toString(J, V)), J);
}, CipherBase$1.prototype.setAutoPadding = function() {
}, CipherBase$1.prototype.getAuthTag = function() {
  throw new Error("trying to get auth tag in unsupported state");
}, CipherBase$1.prototype.setAuthTag = function() {
  throw new Error("trying to set auth tag in unsupported state");
}, CipherBase$1.prototype.setAAD = function() {
  throw new Error("trying to set aad in unsupported state");
}, CipherBase$1.prototype._transform = function(B, L, V) {
  var J;
  try {
    this.hashMode ? this._update(B) : this.push(this._update(B));
  } catch (re) {
    J = re;
  } finally {
    V(J);
  }
}, CipherBase$1.prototype._flush = function(B) {
  var L;
  try {
    this.push(this.__final());
  } catch (V) {
    L = V;
  }
  B(L);
}, CipherBase$1.prototype._finalOrDigest = function(B) {
  var L = this.__final() || Buffer$q.alloc(0);
  return B && (L = this._toString(L, B, !0)), L;
}, CipherBase$1.prototype._toString = function(B, L, V) {
  if (this._decoder || (this._decoder = new StringDecoder(L), this._encoding = L), this._encoding !== L) throw new Error("can't switch encodings");
  var J = this._decoder.write(B);
  return V && (J += this._decoder.end()), J;
};
var cipherBase = CipherBase$1, inherits$f = inherits_browserExports, MD5$2 = md5_js, RIPEMD160$3 = ripemd160, sha$3 = sha_jsExports, Base$5 = cipherBase;
function Hash(B) {
  Base$5.call(this, "digest"), this._hash = B;
}
inherits$f(Hash, Base$5), Hash.prototype._update = function(B) {
  this._hash.update(B);
}, Hash.prototype._final = function() {
  return this._hash.digest();
};
var browser$a = function(B) {
  return (B = B.toLowerCase()) === "md5" ? new MD5$2() : B === "rmd160" || B === "ripemd160" ? new RIPEMD160$3() : new Hash(sha$3(B));
}, _Buffer = safeBufferExports$1.Buffer;
function base$3(B) {
  if (B.length >= 255) throw new TypeError("Alphabet too long");
  for (var L = new Uint8Array(256), V = 0; V < L.length; V++) L[V] = 255;
  for (var J = 0; J < B.length; J++) {
    var re = B.charAt(J), ne = re.charCodeAt(0);
    if (L[ne] !== 255) throw new TypeError(re + " is ambiguous");
    L[ne] = J;
  }
  var ie = B.length, oe = B.charAt(0), pe = Math.log(ie) / Math.log(256), ce = Math.log(256) / Math.log(ie);
  function Oe(rt) {
    if (typeof rt != "string") throw new TypeError("Expected String");
    if (rt.length === 0) return _Buffer.alloc(0);
    for (var ut = 0, dt = 0, ht = 0; rt[ut] === oe; ) dt++, ut++;
    for (var bt = (rt.length - ut) * pe + 1 >>> 0, Tt = new Uint8Array(bt); ut < rt.length; ) {
      var wt = L[rt.charCodeAt(ut)];
      if (wt === 255) return;
      for (var Et = 0, Rt = bt - 1; (wt !== 0 || Et < ht) && Rt !== -1; Rt--, Et++) wt += ie * Tt[Rt] >>> 0, Tt[Rt] = wt % 256 >>> 0, wt = wt / 256 >>> 0;
      if (wt !== 0) throw new Error("Non-zero carry");
      ht = Et, ut++;
    }
    for (var Bt = bt - ht; Bt !== bt && Tt[Bt] === 0; ) Bt++;
    var Pt = _Buffer.allocUnsafe(dt + (bt - Bt));
    Pt.fill(0, 0, dt);
    for (var Dt = dt; Bt !== bt; ) Pt[Dt++] = Tt[Bt++];
    return Pt;
  }
  return { encode: function(rt) {
    if ((Array.isArray(rt) || rt instanceof Uint8Array) && (rt = _Buffer.from(rt)), !_Buffer.isBuffer(rt)) throw new TypeError("Expected Buffer");
    if (rt.length === 0) return "";
    for (var ut = 0, dt = 0, ht = 0, bt = rt.length; ht !== bt && rt[ht] === 0; ) ht++, ut++;
    for (var Tt = (bt - ht) * ce + 1 >>> 0, wt = new Uint8Array(Tt); ht !== bt; ) {
      for (var Et = rt[ht], Rt = 0, Bt = Tt - 1; (Et !== 0 || Rt < dt) && Bt !== -1; Bt--, Rt++) Et += 256 * wt[Bt] >>> 0, wt[Bt] = Et % ie >>> 0, Et = Et / ie >>> 0;
      if (Et !== 0) throw new Error("Non-zero carry");
      dt = Rt, ht++;
    }
    for (var Pt = Tt - dt; Pt !== Tt && wt[Pt] === 0; ) Pt++;
    for (var Dt = oe.repeat(ut); Pt < Tt; ++Pt) Dt += B.charAt(wt[Pt]);
    return Dt;
  }, decodeUnsafe: Oe, decode: function(rt) {
    var ut = Oe(rt);
    if (ut) return ut;
    throw new Error("Non-base" + ie + " character");
  } };
}
var src$1 = base$3, basex = src$1, ALPHABET = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz", bs58 = basex(ALPHABET), base58 = bs58, Buffer$p = safeBufferExports$1.Buffer, base$2 = function(B) {
  function L(V) {
    var J = V.slice(0, -4), re = V.slice(-4), ne = B(J);
    if (!(re[0] ^ ne[0] | re[1] ^ ne[1] | re[2] ^ ne[2] | re[3] ^ ne[3])) return J;
  }
  return { encode: function(V) {
    var J = B(V);
    return base58.encode(Buffer$p.concat([V, J], V.length + 4));
  }, decode: function(V) {
    var J = L(base58.decode(V));
    if (!J) throw new Error("Invalid checksum");
    return J;
  }, decodeUnsafe: function(V) {
    var J = base58.decodeUnsafe(V);
    if (J) return L(J);
  } };
}, createHash$3 = browser$a, bs58checkBase = base$2;
function sha256x2(B) {
  var L = createHash$3("sha256").update(B).digest();
  return createHash$3("sha256").update(L).digest();
}
var bs58check$2 = bs58checkBase(sha256x2), bs58check$1 = bs58check$2;
function decodeRaw(B, L) {
  if (L !== void 0 && B[0] !== L) throw new Error("Invalid network version");
  if (B.length === 33) return { version: B[0], privateKey: B.slice(1, 33), compressed: !1 };
  if (B.length !== 34) throw new Error("Invalid WIF length");
  if (B[33] !== 1) throw new Error("Invalid compression flag");
  return { version: B[0], privateKey: B.slice(1, 33), compressed: !0 };
}
function encodeRaw(B, L, V) {
  var J = new Buffer$D(V ? 34 : 33);
  return J.writeUInt8(B, 0), L.copy(J, 1), V && (J[33] = 1), J;
}
function decode$2(B, L) {
  return decodeRaw(bs58check$1.decode(B), L);
}
function encode$1(B, L, V) {
  return typeof B == "number" ? bs58check$1.encode(encodeRaw(B, L, V)) : bs58check$1.encode(encodeRaw(B.version, B.privateKey, B.compressed));
}
var wif$2 = { decode: decode$2, decodeRaw, encode: encode$1, encodeRaw };
Object.defineProperty(bip32, "__esModule", { value: !0 }), bip32.BIP32Factory = void 0;
const crypto$3 = crypto$4, testecc_1$1 = testecc$1, base_1 = lib$2, sha256_1$4 = sha256$5, typeforce = typeforce_1, wif$1 = wif$2, _bs58check = (0, base_1.base58check)(sha256_1$4.sha256), bs58check = { encode: (B) => _bs58check.encode(Uint8Array.from(B)), decode: (B) => Buffer$D.from(_bs58check.decode(B)) };
function BIP32Factory(B) {
  (0, testecc_1$1.testEcc)(B);
  const L = typeforce.BufferN(32), V = typeforce.compile({ wif: typeforce.UInt8, bip32: { public: typeforce.UInt32, private: typeforce.UInt32 } }), J = { messagePrefix: `Bitcoin Signed Message:
`, bech32: "bc", bip32: { public: 76067358, private: 76066276 }, pubKeyHash: 0, scriptHash: 5, wif: 128 }, re = 2147483648, ne = Math.pow(2, 31) - 1;
  function ie(dt) {
    return typeforce.String(dt) && dt.match(/^(m\/)?(\d+'?\/)*\d+'?$/) !== null;
  }
  function oe(dt) {
    return typeforce.UInt32(dt) && dt <= ne;
  }
  class pe {
    constructor(ht, bt) {
      this.__D = ht, this.__Q = bt, this.lowR = !1;
    }
    get publicKey() {
      return this.__Q === void 0 && (this.__Q = Buffer$D.from(B.pointFromScalar(this.__D, !0))), this.__Q;
    }
    get privateKey() {
      return this.__D;
    }
    sign(ht, bt) {
      if (!this.privateKey) throw new Error("Missing private key");
      if (bt === void 0 && (bt = this.lowR), bt === !1) return Buffer$D.from(B.sign(ht, this.privateKey));
      {
        let Tt = Buffer$D.from(B.sign(ht, this.privateKey));
        const wt = Buffer$D.alloc(32, 0);
        let Et = 0;
        for (; Tt[0] > 127; ) Et++, wt.writeUIntLE(Et, 0, 6), Tt = Buffer$D.from(B.sign(ht, this.privateKey, wt));
        return Tt;
      }
    }
    signSchnorr(ht) {
      if (!this.privateKey) throw new Error("Missing private key");
      if (!B.signSchnorr) throw new Error("signSchnorr not supported by ecc library");
      return Buffer$D.from(B.signSchnorr(ht, this.privateKey));
    }
    verify(ht, bt) {
      return B.verify(ht, this.publicKey, bt);
    }
    verifySchnorr(ht, bt) {
      if (!B.verifySchnorr) throw new Error("verifySchnorr not supported by ecc library");
      return B.verifySchnorr(ht, this.publicKey.subarray(1, 33), bt);
    }
  }
  class ce extends pe {
    constructor(ht, bt, Tt, wt, Et = 0, Rt = 0, Bt = 0) {
      super(ht, bt), this.chainCode = Tt, this.network = wt, this.__DEPTH = Et, this.__INDEX = Rt, this.__PARENT_FINGERPRINT = Bt, typeforce(V, wt);
    }
    get depth() {
      return this.__DEPTH;
    }
    get index() {
      return this.__INDEX;
    }
    get parentFingerprint() {
      return this.__PARENT_FINGERPRINT;
    }
    get identifier() {
      return crypto$3.hash160(this.publicKey);
    }
    get fingerprint() {
      return this.identifier.slice(0, 4);
    }
    get compressed() {
      return !0;
    }
    isNeutered() {
      return this.__D === void 0;
    }
    neutered() {
      return ut(this.publicKey, this.chainCode, this.network, this.depth, this.index, this.parentFingerprint);
    }
    toBase58() {
      const ht = this.network, bt = this.isNeutered() ? ht.bip32.public : ht.bip32.private, Tt = Buffer$D.allocUnsafe(78);
      return Tt.writeUInt32BE(bt, 0), Tt.writeUInt8(this.depth, 4), Tt.writeUInt32BE(this.parentFingerprint, 5), Tt.writeUInt32BE(this.index, 9), this.chainCode.copy(Tt, 13), this.isNeutered() ? this.publicKey.copy(Tt, 45) : (Tt.writeUInt8(0, 45), this.privateKey.copy(Tt, 46)), bs58check.encode(Tt);
    }
    toWIF() {
      if (!this.privateKey) throw new TypeError("Missing private key");
      return wif$1.encode(this.network.wif, this.privateKey, !0);
    }
    derive(ht) {
      typeforce(typeforce.UInt32, ht);
      const bt = ht >= re, Tt = Buffer$D.allocUnsafe(37);
      if (bt) {
        if (this.isNeutered()) throw new TypeError("Missing private key for hardened child key");
        Tt[0] = 0, this.privateKey.copy(Tt, 1), Tt.writeUInt32BE(ht, 33);
      } else this.publicKey.copy(Tt, 0), Tt.writeUInt32BE(ht, 33);
      const wt = crypto$3.hmacSHA512(this.chainCode, Tt), Et = wt.slice(0, 32), Rt = wt.slice(32);
      if (!B.isPrivate(Et)) return this.derive(ht + 1);
      let Bt;
      if (this.isNeutered()) {
        const Pt = Buffer$D.from(B.pointAddScalar(this.publicKey, Et, !0));
        if (Pt === null) return this.derive(ht + 1);
        Bt = ut(Pt, Rt, this.network, this.depth + 1, ht, this.fingerprint.readUInt32BE(0));
      } else {
        const Pt = Buffer$D.from(B.privateAdd(this.privateKey, Et));
        if (Pt == null) return this.derive(ht + 1);
        Bt = rt(Pt, Rt, this.network, this.depth + 1, ht, this.fingerprint.readUInt32BE(0));
      }
      return Bt;
    }
    deriveHardened(ht) {
      return typeforce(oe, ht), this.derive(ht + re);
    }
    derivePath(ht) {
      typeforce(ie, ht);
      let bt = ht.split("/");
      if (bt[0] === "m") {
        if (this.parentFingerprint) throw new TypeError("Expected master, got child");
        bt = bt.slice(1);
      }
      return bt.reduce((Tt, wt) => {
        let Et;
        return wt.slice(-1) === "'" ? (Et = parseInt(wt.slice(0, -1), 10), Tt.deriveHardened(Et)) : (Et = parseInt(wt, 10), Tt.derive(Et));
      }, this);
    }
    tweak(ht) {
      return this.privateKey ? this.tweakFromPrivateKey(ht) : this.tweakFromPublicKey(ht);
    }
    tweakFromPublicKey(ht) {
      const bt = (Tt = this.publicKey).length === 32 ? Tt : Tt.slice(1, 33);
      var Tt;
      if (!B.xOnlyPointAddTweak) throw new Error("xOnlyPointAddTweak not supported by ecc library");
      const wt = B.xOnlyPointAddTweak(bt, ht);
      if (!wt || wt.xOnlyPubkey === null) throw new Error("Cannot tweak public key!");
      const Et = Buffer$D.from([wt.parity === 0 ? 2 : 3]), Rt = Buffer$D.concat([Et, wt.xOnlyPubkey]);
      return new pe(void 0, Rt);
    }
    tweakFromPrivateKey(ht) {
      const bt = this.publicKey[0] === 3 || this.publicKey[0] === 4 && !(1 & ~this.publicKey[64]), Tt = (() => {
        if (bt) {
          if (B.privateNegate) return B.privateNegate(this.privateKey);
          throw new Error("privateNegate not supported by ecc library");
        }
        return this.privateKey;
      })(), wt = B.privateAdd(Tt, ht);
      if (!wt) throw new Error("Invalid tweaked private key!");
      return new pe(Buffer$D.from(wt), void 0);
    }
  }
  function Oe(dt, ht, bt) {
    return rt(dt, ht, bt);
  }
  function rt(dt, ht, bt, Tt, wt, Et) {
    if (typeforce({ privateKey: L, chainCode: L }, { privateKey: dt, chainCode: ht }), bt = bt || J, !B.isPrivate(dt)) throw new TypeError("Private key not in range [1, n)");
    return new ce(dt, void 0, ht, bt, Tt, wt, Et);
  }
  function ut(dt, ht, bt, Tt, wt, Et) {
    if (typeforce({ publicKey: typeforce.BufferN(33), chainCode: L }, { publicKey: dt, chainCode: ht }), bt = bt || J, !B.isPoint(dt)) throw new TypeError("Point is not on the curve");
    return new ce(void 0, dt, ht, bt, Tt, wt, Et);
  }
  return { fromSeed: function(dt, ht) {
    if (typeforce(typeforce.Buffer, dt), dt.length < 16) throw new TypeError("Seed should be at least 128 bits");
    if (dt.length > 64) throw new TypeError("Seed should be at most 512 bits");
    ht = ht || J;
    const bt = crypto$3.hmacSHA512(Buffer$D.from("Bitcoin seed", "utf8"), dt);
    return Oe(bt.slice(0, 32), bt.slice(32), ht);
  }, fromBase58: function(dt, ht) {
    const bt = bs58check.decode(dt);
    if (bt.length !== 78) throw new TypeError("Invalid buffer length");
    ht = ht || J;
    const Tt = bt.readUInt32BE(0);
    if (Tt !== ht.bip32.private && Tt !== ht.bip32.public) throw new TypeError("Invalid network version");
    const wt = bt[4], Et = bt.readUInt32BE(5);
    if (wt === 0 && Et !== 0) throw new TypeError("Invalid parent fingerprint");
    const Rt = bt.readUInt32BE(9);
    if (wt === 0 && Rt !== 0) throw new TypeError("Invalid index");
    const Bt = bt.slice(13, 45);
    let Pt;
    if (Tt === ht.bip32.private) {
      if (bt.readUInt8(45) !== 0) throw new TypeError("Invalid private key");
      Pt = rt(bt.slice(46, 78), Bt, ht, wt, Rt, Et);
    } else
      Pt = ut(bt.slice(45, 78), Bt, ht, wt, Rt, Et);
    return Pt;
  }, fromPublicKey: function(dt, ht, bt) {
    return ut(dt, ht, bt);
  }, fromPrivateKey: Oe };
}
bip32.BIP32Factory = BIP32Factory, function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.BIP32Factory = B.default = void 0;
  var L = bip32;
  Object.defineProperty(B, "default", { enumerable: !0, get: function() {
    return L.BIP32Factory;
  } }), Object.defineProperty(B, "BIP32Factory", { enumerable: !0, get: function() {
    return L.BIP32Factory;
  } });
}(src$2);
var dist = {}, lib$1 = {}, cryptoBrowserify = {}, browser$9 = { exports: {} }, MAX_BYTES = 65536, MAX_UINT32 = 4294967295;
function oldBrowser$1() {
  throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
}
var Buffer$o = safeBufferExports$1.Buffer, crypto$2 = commonjsGlobal.crypto || commonjsGlobal.msCrypto;
function randomBytes$3(B, L) {
  if (B > MAX_UINT32) throw new RangeError("requested too many random bytes");
  var V = Buffer$o.allocUnsafe(B);
  if (B > 0) if (B > MAX_BYTES) for (var J = 0; J < B; J += MAX_BYTES) crypto$2.getRandomValues(V.slice(J, J + MAX_BYTES));
  else crypto$2.getRandomValues(V);
  return typeof L == "function" ? process$1.nextTick(function() {
    L(null, V);
  }) : V;
}
crypto$2 && crypto$2.getRandomValues ? browser$9.exports = randomBytes$3 : browser$9.exports = oldBrowser$1;
var browserExports = browser$9.exports, inherits$e = inherits_browserExports, Buffer$n = safeBufferExports$1.Buffer, Base$4 = cipherBase, ZEROS$2 = Buffer$n.alloc(128), blocksize = 64;
function Hmac$3(B, L) {
  Base$4.call(this, "digest"), typeof L == "string" && (L = Buffer$n.from(L)), this._alg = B, this._key = L, L.length > blocksize ? L = B(L) : L.length < blocksize && (L = Buffer$n.concat([L, ZEROS$2], blocksize));
  for (var V = this._ipad = Buffer$n.allocUnsafe(blocksize), J = this._opad = Buffer$n.allocUnsafe(blocksize), re = 0; re < blocksize; re++) V[re] = 54 ^ L[re], J[re] = 92 ^ L[re];
  this._hash = [V];
}
inherits$e(Hmac$3, Base$4), Hmac$3.prototype._update = function(B) {
  this._hash.push(B);
}, Hmac$3.prototype._final = function() {
  var B = this._alg(Buffer$n.concat(this._hash));
  return this._alg(Buffer$n.concat([this._opad, B]));
};
var legacy = Hmac$3, MD5$1 = md5_js, md5$2 = function(B) {
  return new MD5$1().update(B).digest();
}, inherits$d = inherits_browserExports, Legacy = legacy, Base$3 = cipherBase, Buffer$m = safeBufferExports$1.Buffer, md5$1 = md5$2, RIPEMD160$2 = ripemd160, sha$2 = sha_jsExports, ZEROS$1 = Buffer$m.alloc(128);
function Hmac$2(B, L) {
  Base$3.call(this, "digest"), typeof L == "string" && (L = Buffer$m.from(L));
  var V = B === "sha512" || B === "sha384" ? 128 : 64;
  this._alg = B, this._key = L, L.length > V ? L = (B === "rmd160" ? new RIPEMD160$2() : sha$2(B)).update(L).digest() : L.length < V && (L = Buffer$m.concat([L, ZEROS$1], V));
  for (var J = this._ipad = Buffer$m.allocUnsafe(V), re = this._opad = Buffer$m.allocUnsafe(V), ne = 0; ne < V; ne++) J[ne] = 54 ^ L[ne], re[ne] = 92 ^ L[ne];
  this._hash = B === "rmd160" ? new RIPEMD160$2() : sha$2(B), this._hash.update(J);
}
inherits$d(Hmac$2, Base$3), Hmac$2.prototype._update = function(B) {
  this._hash.update(B);
}, Hmac$2.prototype._final = function() {
  var B = this._hash.digest();
  return (this._alg === "rmd160" ? new RIPEMD160$2() : sha$2(this._alg)).update(this._opad).update(B).digest();
};
var browser$8 = function(B, L) {
  return (B = B.toLowerCase()) === "rmd160" || B === "ripemd160" ? new Hmac$2("rmd160", L) : B === "md5" ? new Legacy(md5$1, L) : new Hmac$2(B, L);
};
const sha224WithRSAEncryption = { sign: "rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, sha256WithRSAEncryption = { sign: "rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, sha384WithRSAEncryption = { sign: "rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, sha512WithRSAEncryption = { sign: "rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, sha256$2 = { sign: "ecdsa", hash: "sha256", id: "" }, sha224 = { sign: "ecdsa", hash: "sha224", id: "" }, sha384 = { sign: "ecdsa", hash: "sha384", id: "" }, sha512 = { sign: "ecdsa", hash: "sha512", id: "" }, DSA = { sign: "dsa", hash: "sha1", id: "" }, ripemd160WithRSA = { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, md5WithRSAEncryption = { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" }, require$$6 = { sha224WithRSAEncryption, "RSA-SHA224": { sign: "ecdsa/rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, sha256WithRSAEncryption, "RSA-SHA256": { sign: "ecdsa/rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, sha384WithRSAEncryption, "RSA-SHA384": { sign: "ecdsa/rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, sha512WithRSAEncryption, "RSA-SHA512": { sign: "ecdsa/rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA1": { sign: "rsa", hash: "sha1", id: "3021300906052b0e03021a05000414" }, "ecdsa-with-SHA1": { sign: "ecdsa", hash: "sha1", id: "" }, sha256: sha256$2, sha224, sha384, sha512, "DSA-SHA": { sign: "dsa", hash: "sha1", id: "" }, "DSA-SHA1": { sign: "dsa", hash: "sha1", id: "" }, DSA, "DSA-WITH-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-WITH-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-WITH-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-WITH-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-RIPEMD160": { sign: "dsa", hash: "rmd160", id: "" }, ripemd160WithRSA, "RSA-RIPEMD160": { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, md5WithRSAEncryption, "RSA-MD5": { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" } };
var algos = require$$6, browser$7 = {}, MAX_ALLOC = Math.pow(2, 30) - 1, precondition = function(B, L) {
  if (typeof B != "number") throw new TypeError("Iterations not a number");
  if (B < 0) throw new TypeError("Bad iterations");
  if (typeof L != "number") throw new TypeError("Key length not a number");
  if (L < 0 || L > MAX_ALLOC || L != L) throw new TypeError("Bad key length");
}, defaultEncoding$2;
if (commonjsGlobal.process && commonjsGlobal.process.browser) defaultEncoding$2 = "utf-8";
else if (commonjsGlobal.process && commonjsGlobal.process.version) {
  var pVersionMajor = parseInt(process$1.version.split(".")[0].slice(1), 10);
  defaultEncoding$2 = pVersionMajor >= 6 ? "utf-8" : "binary";
} else defaultEncoding$2 = "utf-8";
var defaultEncoding_1 = defaultEncoding$2, Buffer$l = safeBufferExports$1.Buffer, toBuffer$2 = function(B, L, V) {
  if (Buffer$l.isBuffer(B)) return B;
  if (typeof B == "string") return Buffer$l.from(B, L);
  if (ArrayBuffer.isView(B)) return Buffer$l.from(B.buffer);
  throw new TypeError(V + " must be a string, a Buffer, a typed array or a DataView");
}, md5 = md5$2, RIPEMD160$1 = ripemd160, sha$1 = sha_jsExports, Buffer$k = safeBufferExports$1.Buffer, checkParameters$1 = precondition, defaultEncoding$1 = defaultEncoding_1, toBuffer$1 = toBuffer$2, ZEROS = Buffer$k.alloc(128), sizes = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
function Hmac$1(B, L, V) {
  var J = getDigest(B), re = B === "sha512" || B === "sha384" ? 128 : 64;
  L.length > re ? L = J(L) : L.length < re && (L = Buffer$k.concat([L, ZEROS], re));
  for (var ne = Buffer$k.allocUnsafe(re + sizes[B]), ie = Buffer$k.allocUnsafe(re + sizes[B]), oe = 0; oe < re; oe++) ne[oe] = 54 ^ L[oe], ie[oe] = 92 ^ L[oe];
  var pe = Buffer$k.allocUnsafe(re + V + 4);
  ne.copy(pe, 0, 0, re), this.ipad1 = pe, this.ipad2 = ne, this.opad = ie, this.alg = B, this.blocksize = re, this.hash = J, this.size = sizes[B];
}
function getDigest(B) {
  return B === "rmd160" || B === "ripemd160" ? function(L) {
    return new RIPEMD160$1().update(L).digest();
  } : B === "md5" ? md5 : function(L) {
    return sha$1(B).update(L).digest();
  };
}
function pbkdf2(B, L, V, J, re) {
  checkParameters$1(V, J);
  var ne = new Hmac$1(re = re || "sha1", B = toBuffer$1(B, defaultEncoding$1, "Password"), (L = toBuffer$1(L, defaultEncoding$1, "Salt")).length), ie = Buffer$k.allocUnsafe(J), oe = Buffer$k.allocUnsafe(L.length + 4);
  L.copy(oe, 0, 0, L.length);
  for (var pe = 0, ce = sizes[re], Oe = Math.ceil(J / ce), rt = 1; rt <= Oe; rt++) {
    oe.writeUInt32BE(rt, L.length);
    for (var ut = ne.run(oe, ne.ipad1), dt = ut, ht = 1; ht < V; ht++) {
      dt = ne.run(dt, ne.ipad2);
      for (var bt = 0; bt < ce; bt++) ut[bt] ^= dt[bt];
    }
    ut.copy(ie, pe), pe += ce;
  }
  return ie;
}
Hmac$1.prototype.run = function(B, L) {
  return B.copy(L, this.blocksize), this.hash(L).copy(this.opad, this.blocksize), this.hash(this.opad);
};
var syncBrowser = pbkdf2, Buffer$j = safeBufferExports$1.Buffer, checkParameters = precondition, defaultEncoding = defaultEncoding_1, sync = syncBrowser, toBuffer = toBuffer$2, ZERO_BUF, subtle = commonjsGlobal.crypto && commonjsGlobal.crypto.subtle, toBrowser = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, checks = [], nextTick$1;
function checkNative(B) {
  if (commonjsGlobal.process && !commonjsGlobal.process.browser || !subtle || !subtle.importKey || !subtle.deriveBits) return Promise.resolve(!1);
  if (checks[B] !== void 0) return checks[B];
  var L = browserPbkdf2(ZERO_BUF = ZERO_BUF || Buffer$j.alloc(8), ZERO_BUF, 10, 128, B).then(function() {
    return !0;
  }).catch(function() {
    return !1;
  });
  return checks[B] = L, L;
}
function getNextTick() {
  return nextTick$1 || (nextTick$1 = commonjsGlobal.process && commonjsGlobal.process.nextTick ? commonjsGlobal.process.nextTick : commonjsGlobal.queueMicrotask ? commonjsGlobal.queueMicrotask : commonjsGlobal.setImmediate ? commonjsGlobal.setImmediate : commonjsGlobal.setTimeout);
}
function browserPbkdf2(B, L, V, J, re) {
  return subtle.importKey("raw", B, { name: "PBKDF2" }, !1, ["deriveBits"]).then(function(ne) {
    return subtle.deriveBits({ name: "PBKDF2", salt: L, iterations: V, hash: { name: re } }, ne, J << 3);
  }).then(function(ne) {
    return Buffer$j.from(ne);
  });
}
function resolvePromise(B, L) {
  B.then(function(V) {
    getNextTick()(function() {
      L(null, V);
    });
  }, function(V) {
    getNextTick()(function() {
      L(V);
    });
  });
}
var async = function(B, L, V, J, re, ne) {
  typeof re == "function" && (ne = re, re = void 0);
  var ie = toBrowser[(re = re || "sha1").toLowerCase()];
  if (ie && typeof commonjsGlobal.Promise == "function") {
    if (checkParameters(V, J), B = toBuffer(B, defaultEncoding, "Password"), L = toBuffer(L, defaultEncoding, "Salt"), typeof ne != "function") throw new Error("No callback provided to pbkdf2");
    resolvePromise(checkNative(ie).then(function(oe) {
      return oe ? browserPbkdf2(B, L, V, J, ie) : sync(B, L, V, J, re);
    }), ne);
  } else getNextTick()(function() {
    var oe;
    try {
      oe = sync(B, L, V, J, re);
    } catch (pe) {
      return ne(pe);
    }
    ne(null, oe);
  });
};
browser$7.pbkdf2 = async, browser$7.pbkdf2Sync = syncBrowser;
var browser$6 = {}, des$2 = {}, utils$n = { readUInt32BE: function(B, L) {
  return (B[0 + L] << 24 | B[1 + L] << 16 | B[2 + L] << 8 | B[3 + L]) >>> 0;
}, writeUInt32BE: function(B, L, V) {
  B[0 + V] = L >>> 24, B[1 + V] = L >>> 16 & 255, B[2 + V] = L >>> 8 & 255, B[3 + V] = 255 & L;
}, ip: function(B, L, V, J) {
  for (var re = 0, ne = 0, ie = 6; ie >= 0; ie -= 2) {
    for (var oe = 0; oe <= 24; oe += 8) re <<= 1, re |= L >>> oe + ie & 1;
    for (oe = 0; oe <= 24; oe += 8) re <<= 1, re |= B >>> oe + ie & 1;
  }
  for (ie = 6; ie >= 0; ie -= 2) {
    for (oe = 1; oe <= 25; oe += 8) ne <<= 1, ne |= L >>> oe + ie & 1;
    for (oe = 1; oe <= 25; oe += 8) ne <<= 1, ne |= B >>> oe + ie & 1;
  }
  V[J + 0] = re >>> 0, V[J + 1] = ne >>> 0;
}, rip: function(B, L, V, J) {
  for (var re = 0, ne = 0, ie = 0; ie < 4; ie++) for (var oe = 24; oe >= 0; oe -= 8) re <<= 1, re |= L >>> oe + ie & 1, re <<= 1, re |= B >>> oe + ie & 1;
  for (ie = 4; ie < 8; ie++) for (oe = 24; oe >= 0; oe -= 8) ne <<= 1, ne |= L >>> oe + ie & 1, ne <<= 1, ne |= B >>> oe + ie & 1;
  V[J + 0] = re >>> 0, V[J + 1] = ne >>> 0;
}, pc1: function(B, L, V, J) {
  for (var re = 0, ne = 0, ie = 7; ie >= 5; ie--) {
    for (var oe = 0; oe <= 24; oe += 8) re <<= 1, re |= L >> oe + ie & 1;
    for (oe = 0; oe <= 24; oe += 8) re <<= 1, re |= B >> oe + ie & 1;
  }
  for (oe = 0; oe <= 24; oe += 8) re <<= 1, re |= L >> oe + ie & 1;
  for (ie = 1; ie <= 3; ie++) {
    for (oe = 0; oe <= 24; oe += 8) ne <<= 1, ne |= L >> oe + ie & 1;
    for (oe = 0; oe <= 24; oe += 8) ne <<= 1, ne |= B >> oe + ie & 1;
  }
  for (oe = 0; oe <= 24; oe += 8) ne <<= 1, ne |= B >> oe + ie & 1;
  V[J + 0] = re >>> 0, V[J + 1] = ne >>> 0;
}, r28shl: function(B, L) {
  return B << L & 268435455 | B >>> 28 - L;
} }, pc2table = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
utils$n.pc2 = function(B, L, V, J) {
  for (var re = 0, ne = 0, ie = pc2table.length >>> 1, oe = 0; oe < ie; oe++) re <<= 1, re |= B >>> pc2table[oe] & 1;
  for (oe = ie; oe < pc2table.length; oe++) ne <<= 1, ne |= L >>> pc2table[oe] & 1;
  V[J + 0] = re >>> 0, V[J + 1] = ne >>> 0;
}, utils$n.expand = function(B, L, V) {
  var J = 0, re = 0;
  J = (1 & B) << 5 | B >>> 27;
  for (var ne = 23; ne >= 15; ne -= 4) J <<= 6, J |= B >>> ne & 63;
  for (ne = 11; ne >= 3; ne -= 4) re |= B >>> ne & 63, re <<= 6;
  re |= (31 & B) << 1 | B >>> 31, L[V + 0] = J >>> 0, L[V + 1] = re >>> 0;
};
var sTable = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
utils$n.substitute = function(B, L) {
  for (var V = 0, J = 0; J < 4; J++)
    V <<= 4, V |= sTable[64 * J + (B >>> 18 - 6 * J & 63)];
  for (J = 0; J < 4; J++)
    V <<= 4, V |= sTable[256 + 64 * J + (L >>> 18 - 6 * J & 63)];
  return V >>> 0;
};
var permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
utils$n.permute = function(B) {
  for (var L = 0, V = 0; V < permuteTable.length; V++) L <<= 1, L |= B >>> permuteTable[V] & 1;
  return L >>> 0;
}, utils$n.padSplit = function(B, L, V) {
  for (var J = B.toString(2); J.length < L; ) J = "0" + J;
  for (var re = [], ne = 0; ne < L; ne += V) re.push(J.slice(ne, ne + V));
  return re.join(" ");
};
var minimalisticAssert = assert$j;
function assert$j(B, L) {
  if (!B) throw new Error(L || "Assertion failed");
}
assert$j.equal = function(B, L, V) {
  if (B != L) throw new Error(V || "Assertion failed: " + B + " != " + L);
};
var assert$i = minimalisticAssert;
function Cipher$3(B) {
  this.options = B, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0, this.padding = B.padding !== !1;
}
var cipher = Cipher$3;
Cipher$3.prototype._init = function() {
}, Cipher$3.prototype.update = function(B) {
  return B.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(B) : this._updateEncrypt(B);
}, Cipher$3.prototype._buffer = function(B, L) {
  for (var V = Math.min(this.buffer.length - this.bufferOff, B.length - L), J = 0; J < V; J++) this.buffer[this.bufferOff + J] = B[L + J];
  return this.bufferOff += V, V;
}, Cipher$3.prototype._flushBuffer = function(B, L) {
  return this._update(this.buffer, 0, B, L), this.bufferOff = 0, this.blockSize;
}, Cipher$3.prototype._updateEncrypt = function(B) {
  var L = 0, V = 0, J = (this.bufferOff + B.length) / this.blockSize | 0, re = new Array(J * this.blockSize);
  this.bufferOff !== 0 && (L += this._buffer(B, L), this.bufferOff === this.buffer.length && (V += this._flushBuffer(re, V)));
  for (var ne = B.length - (B.length - L) % this.blockSize; L < ne; L += this.blockSize) this._update(B, L, re, V), V += this.blockSize;
  for (; L < B.length; L++, this.bufferOff++) this.buffer[this.bufferOff] = B[L];
  return re;
}, Cipher$3.prototype._updateDecrypt = function(B) {
  for (var L = 0, V = 0, J = Math.ceil((this.bufferOff + B.length) / this.blockSize) - 1, re = new Array(J * this.blockSize); J > 0; J--) L += this._buffer(B, L), V += this._flushBuffer(re, V);
  return L += this._buffer(B, L), re;
}, Cipher$3.prototype.final = function(B) {
  var L, V;
  return B && (L = this.update(B)), V = this.type === "encrypt" ? this._finalEncrypt() : this._finalDecrypt(), L ? L.concat(V) : V;
}, Cipher$3.prototype._pad = function(B, L) {
  if (L === 0) return !1;
  for (; L < B.length; ) B[L++] = 0;
  return !0;
}, Cipher$3.prototype._finalEncrypt = function() {
  if (!this._pad(this.buffer, this.bufferOff)) return [];
  var B = new Array(this.blockSize);
  return this._update(this.buffer, 0, B, 0), B;
}, Cipher$3.prototype._unpad = function(B) {
  return B;
}, Cipher$3.prototype._finalDecrypt = function() {
  assert$i.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
  var B = new Array(this.blockSize);
  return this._flushBuffer(B, 0), this._unpad(B);
};
var assert$h = minimalisticAssert, inherits$c = inherits_browserExports, utils$m = utils$n, Cipher$2 = cipher;
function DESState() {
  this.tmp = new Array(2), this.keys = null;
}
function DES$3(B) {
  Cipher$2.call(this, B);
  var L = new DESState();
  this._desState = L, this.deriveKeys(L, B.key);
}
inherits$c(DES$3, Cipher$2);
var des$1 = DES$3;
DES$3.create = function(B) {
  return new DES$3(B);
};
var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
DES$3.prototype.deriveKeys = function(B, L) {
  B.keys = new Array(32), assert$h.equal(L.length, this.blockSize, "Invalid key length");
  var V = utils$m.readUInt32BE(L, 0), J = utils$m.readUInt32BE(L, 4);
  utils$m.pc1(V, J, B.tmp, 0), V = B.tmp[0], J = B.tmp[1];
  for (var re = 0; re < B.keys.length; re += 2) {
    var ne = shiftTable[re >>> 1];
    V = utils$m.r28shl(V, ne), J = utils$m.r28shl(J, ne), utils$m.pc2(V, J, B.keys, re);
  }
}, DES$3.prototype._update = function(B, L, V, J) {
  var re = this._desState, ne = utils$m.readUInt32BE(B, L), ie = utils$m.readUInt32BE(B, L + 4);
  utils$m.ip(ne, ie, re.tmp, 0), ne = re.tmp[0], ie = re.tmp[1], this.type === "encrypt" ? this._encrypt(re, ne, ie, re.tmp, 0) : this._decrypt(re, ne, ie, re.tmp, 0), ne = re.tmp[0], ie = re.tmp[1], utils$m.writeUInt32BE(V, ne, J), utils$m.writeUInt32BE(V, ie, J + 4);
}, DES$3.prototype._pad = function(B, L) {
  if (this.padding === !1) return !1;
  for (var V = B.length - L, J = L; J < B.length; J++) B[J] = V;
  return !0;
}, DES$3.prototype._unpad = function(B) {
  if (this.padding === !1) return B;
  for (var L = B[B.length - 1], V = B.length - L; V < B.length; V++) assert$h.equal(B[V], L);
  return B.slice(0, B.length - L);
}, DES$3.prototype._encrypt = function(B, L, V, J, re) {
  for (var ne = L, ie = V, oe = 0; oe < B.keys.length; oe += 2) {
    var pe = B.keys[oe], ce = B.keys[oe + 1];
    utils$m.expand(ie, B.tmp, 0), pe ^= B.tmp[0], ce ^= B.tmp[1];
    var Oe = utils$m.substitute(pe, ce), rt = ie;
    ie = (ne ^ utils$m.permute(Oe)) >>> 0, ne = rt;
  }
  utils$m.rip(ie, ne, J, re);
}, DES$3.prototype._decrypt = function(B, L, V, J, re) {
  for (var ne = V, ie = L, oe = B.keys.length - 2; oe >= 0; oe -= 2) {
    var pe = B.keys[oe], ce = B.keys[oe + 1];
    utils$m.expand(ne, B.tmp, 0), pe ^= B.tmp[0], ce ^= B.tmp[1];
    var Oe = utils$m.substitute(pe, ce), rt = ne;
    ne = (ie ^ utils$m.permute(Oe)) >>> 0, ie = rt;
  }
  utils$m.rip(ne, ie, J, re);
};
var cbc$1 = {}, assert$g = minimalisticAssert, inherits$b = inherits_browserExports, proto = {};
function CBCState(B) {
  assert$g.equal(B.length, 8, "Invalid IV length"), this.iv = new Array(8);
  for (var L = 0; L < this.iv.length; L++) this.iv[L] = B[L];
}
function instantiate(B) {
  function L(ne) {
    B.call(this, ne), this._cbcInit();
  }
  inherits$b(L, B);
  for (var V = Object.keys(proto), J = 0; J < V.length; J++) {
    var re = V[J];
    L.prototype[re] = proto[re];
  }
  return L.create = function(ne) {
    return new L(ne);
  }, L;
}
cbc$1.instantiate = instantiate, proto._cbcInit = function() {
  var B = new CBCState(this.options.iv);
  this._cbcState = B;
}, proto._update = function(B, L, V, J) {
  var re = this._cbcState, ne = this.constructor.super_.prototype, ie = re.iv;
  if (this.type === "encrypt") {
    for (var oe = 0; oe < this.blockSize; oe++) ie[oe] ^= B[L + oe];
    for (ne._update.call(this, ie, 0, V, J), oe = 0; oe < this.blockSize; oe++) ie[oe] = V[J + oe];
  } else {
    for (ne._update.call(this, B, L, V, J), oe = 0; oe < this.blockSize; oe++) V[J + oe] ^= ie[oe];
    for (oe = 0; oe < this.blockSize; oe++) ie[oe] = B[L + oe];
  }
};
var assert$f = minimalisticAssert, inherits$a = inherits_browserExports, Cipher$1 = cipher, DES$2 = des$1;
function EDEState(B, L) {
  assert$f.equal(L.length, 24, "Invalid key length");
  var V = L.slice(0, 8), J = L.slice(8, 16), re = L.slice(16, 24);
  this.ciphers = B === "encrypt" ? [DES$2.create({ type: "encrypt", key: V }), DES$2.create({ type: "decrypt", key: J }), DES$2.create({ type: "encrypt", key: re })] : [DES$2.create({ type: "decrypt", key: re }), DES$2.create({ type: "encrypt", key: J }), DES$2.create({ type: "decrypt", key: V })];
}
function EDE(B) {
  Cipher$1.call(this, B);
  var L = new EDEState(this.type, this.options.key);
  this._edeState = L;
}
inherits$a(EDE, Cipher$1);
var ede = EDE;
EDE.create = function(B) {
  return new EDE(B);
}, EDE.prototype._update = function(B, L, V, J) {
  var re = this._edeState;
  re.ciphers[0]._update(B, L, V, J), re.ciphers[1]._update(V, J, V, J), re.ciphers[2]._update(V, J, V, J);
}, EDE.prototype._pad = DES$2.prototype._pad, EDE.prototype._unpad = DES$2.prototype._unpad, des$2.utils = utils$n, des$2.Cipher = cipher, des$2.DES = des$1, des$2.CBC = cbc$1, des$2.EDE = ede;
var CipherBase = cipherBase, des = des$2, inherits$9 = inherits_browserExports, Buffer$i = safeBufferExports$1.Buffer, modes$3 = { "des-ede3-cbc": des.CBC.instantiate(des.EDE), "des-ede3": des.EDE, "des-ede-cbc": des.CBC.instantiate(des.EDE), "des-ede": des.EDE, "des-cbc": des.CBC.instantiate(des.DES), "des-ecb": des.DES };
modes$3.des = modes$3["des-cbc"], modes$3.des3 = modes$3["des-ede3-cbc"];
var browserifyDes = DES$1;
function DES$1(B) {
  CipherBase.call(this);
  var L, V = B.mode.toLowerCase(), J = modes$3[V];
  L = B.decrypt ? "decrypt" : "encrypt";
  var re = B.key;
  Buffer$i.isBuffer(re) || (re = Buffer$i.from(re)), V !== "des-ede" && V !== "des-ede-cbc" || (re = Buffer$i.concat([re, re.slice(0, 8)]));
  var ne = B.iv;
  Buffer$i.isBuffer(ne) || (ne = Buffer$i.from(ne)), this._des = J.create({ key: re, iv: ne, type: L });
}
inherits$9(DES$1, CipherBase), DES$1.prototype._update = function(B) {
  return Buffer$i.from(this._des.update(B));
}, DES$1.prototype._final = function() {
  return Buffer$i.from(this._des.final());
};
var browser$5 = {}, encrypter = {}, ecb = { encrypt: function(B, L) {
  return B._cipher.encryptBlock(L);
}, decrypt: function(B, L) {
  return B._cipher.decryptBlock(L);
} }, cbc = {}, bufferXor = function(B, L) {
  for (var V = Math.min(B.length, L.length), J = new Buffer$D(V), re = 0; re < V; ++re) J[re] = B[re] ^ L[re];
  return J;
}, xor$7 = bufferXor;
cbc.encrypt = function(B, L) {
  var V = xor$7(L, B._prev);
  return B._prev = B._cipher.encryptBlock(V), B._prev;
}, cbc.decrypt = function(B, L) {
  var V = B._prev;
  B._prev = L;
  var J = B._cipher.decryptBlock(L);
  return xor$7(J, V);
};
var cfb = {}, Buffer$h = safeBufferExports$1.Buffer, xor$6 = bufferXor;
function encryptStart(B, L, V) {
  var J = L.length, re = xor$6(L, B._cache);
  return B._cache = B._cache.slice(J), B._prev = Buffer$h.concat([B._prev, V ? L : re]), re;
}
cfb.encrypt = function(B, L, V) {
  for (var J, re = Buffer$h.allocUnsafe(0); L.length; ) {
    if (B._cache.length === 0 && (B._cache = B._cipher.encryptBlock(B._prev), B._prev = Buffer$h.allocUnsafe(0)), !(B._cache.length <= L.length)) {
      re = Buffer$h.concat([re, encryptStart(B, L, V)]);
      break;
    }
    J = B._cache.length, re = Buffer$h.concat([re, encryptStart(B, L.slice(0, J), V)]), L = L.slice(J);
  }
  return re;
};
var cfb8 = {}, Buffer$g = safeBufferExports$1.Buffer;
function encryptByte$1(B, L, V) {
  var J = B._cipher.encryptBlock(B._prev)[0] ^ L;
  return B._prev = Buffer$g.concat([B._prev.slice(1), Buffer$g.from([V ? L : J])]), J;
}
cfb8.encrypt = function(B, L, V) {
  for (var J = L.length, re = Buffer$g.allocUnsafe(J), ne = -1; ++ne < J; ) re[ne] = encryptByte$1(B, L[ne], V);
  return re;
};
var cfb1 = {}, Buffer$f = safeBufferExports$1.Buffer;
function encryptByte(B, L, V) {
  for (var J, re, ne = -1, ie = 0; ++ne < 8; ) J = L & 1 << 7 - ne ? 128 : 0, ie += (128 & (re = B._cipher.encryptBlock(B._prev)[0] ^ J)) >> ne % 8, B._prev = shiftIn(B._prev, V ? J : re);
  return ie;
}
function shiftIn(B, L) {
  var V = B.length, J = -1, re = Buffer$f.allocUnsafe(B.length);
  for (B = Buffer$f.concat([B, Buffer$f.from([L])]); ++J < V; ) re[J] = B[J] << 1 | B[J + 1] >> 7;
  return re;
}
cfb1.encrypt = function(B, L, V) {
  for (var J = L.length, re = Buffer$f.allocUnsafe(J), ne = -1; ++ne < J; ) re[ne] = encryptByte(B, L[ne], V);
  return re;
};
var ofb = {}, xor$5 = bufferXor;
function getBlock$1(B) {
  return B._prev = B._cipher.encryptBlock(B._prev), B._prev;
}
ofb.encrypt = function(B, L) {
  for (; B._cache.length < L.length; ) B._cache = Buffer$D.concat([B._cache, getBlock$1(B)]);
  var V = B._cache.slice(0, L.length);
  return B._cache = B._cache.slice(L.length), xor$5(L, V);
};
var ctr = {};
function incr32$2(B) {
  for (var L, V = B.length; V--; ) {
    if ((L = B.readUInt8(V)) !== 255) {
      L++, B.writeUInt8(L, V);
      break;
    }
    B.writeUInt8(0, V);
  }
}
var incr32_1 = incr32$2, xor$4 = bufferXor, Buffer$e = safeBufferExports$1.Buffer, incr32$1 = incr32_1;
function getBlock(B) {
  var L = B._cipher.encryptBlockRaw(B._prev);
  return incr32$1(B._prev), L;
}
var blockSize = 16;
ctr.encrypt = function(B, L) {
  var V = Math.ceil(L.length / blockSize), J = B._cache.length;
  B._cache = Buffer$e.concat([B._cache, Buffer$e.allocUnsafe(V * blockSize)]);
  for (var re = 0; re < V; re++) {
    var ne = getBlock(B), ie = J + re * blockSize;
    B._cache.writeUInt32BE(ne[0], ie + 0), B._cache.writeUInt32BE(ne[1], ie + 4), B._cache.writeUInt32BE(ne[2], ie + 8), B._cache.writeUInt32BE(ne[3], ie + 12);
  }
  var oe = B._cache.slice(0, L.length);
  return B._cache = B._cache.slice(L.length), xor$4(L, oe);
};
const aes128 = { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, aes192 = { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, aes256 = { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, require$$2 = { "aes-128-ecb": { cipher: "AES", key: 128, iv: 0, mode: "ECB", type: "block" }, "aes-192-ecb": { cipher: "AES", key: 192, iv: 0, mode: "ECB", type: "block" }, "aes-256-ecb": { cipher: "AES", key: 256, iv: 0, mode: "ECB", type: "block" }, "aes-128-cbc": { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, "aes-192-cbc": { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, "aes-256-cbc": { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, aes128, aes192, aes256, "aes-128-cfb": { cipher: "AES", key: 128, iv: 16, mode: "CFB", type: "stream" }, "aes-192-cfb": { cipher: "AES", key: 192, iv: 16, mode: "CFB", type: "stream" }, "aes-256-cfb": { cipher: "AES", key: 256, iv: 16, mode: "CFB", type: "stream" }, "aes-128-cfb8": { cipher: "AES", key: 128, iv: 16, mode: "CFB8", type: "stream" }, "aes-192-cfb8": { cipher: "AES", key: 192, iv: 16, mode: "CFB8", type: "stream" }, "aes-256-cfb8": { cipher: "AES", key: 256, iv: 16, mode: "CFB8", type: "stream" }, "aes-128-cfb1": { cipher: "AES", key: 128, iv: 16, mode: "CFB1", type: "stream" }, "aes-192-cfb1": { cipher: "AES", key: 192, iv: 16, mode: "CFB1", type: "stream" }, "aes-256-cfb1": { cipher: "AES", key: 256, iv: 16, mode: "CFB1", type: "stream" }, "aes-128-ofb": { cipher: "AES", key: 128, iv: 16, mode: "OFB", type: "stream" }, "aes-192-ofb": { cipher: "AES", key: 192, iv: 16, mode: "OFB", type: "stream" }, "aes-256-ofb": { cipher: "AES", key: 256, iv: 16, mode: "OFB", type: "stream" }, "aes-128-ctr": { cipher: "AES", key: 128, iv: 16, mode: "CTR", type: "stream" }, "aes-192-ctr": { cipher: "AES", key: 192, iv: 16, mode: "CTR", type: "stream" }, "aes-256-ctr": { cipher: "AES", key: 256, iv: 16, mode: "CTR", type: "stream" }, "aes-128-gcm": { cipher: "AES", key: 128, iv: 12, mode: "GCM", type: "auth" }, "aes-192-gcm": { cipher: "AES", key: 192, iv: 12, mode: "GCM", type: "auth" }, "aes-256-gcm": { cipher: "AES", key: 256, iv: 12, mode: "GCM", type: "auth" } };
var modeModules = { ECB: ecb, CBC: cbc, CFB: cfb, CFB8: cfb8, CFB1: cfb1, OFB: ofb, CTR: ctr, GCM: ctr }, modes$2 = require$$2;
for (var key$2 in modes$2) modes$2[key$2].module = modeModules[modes$2[key$2].mode];
var modes_1 = modes$2, aes$5 = {}, Buffer$d = safeBufferExports$1.Buffer;
function asUInt32Array(B) {
  Buffer$d.isBuffer(B) || (B = Buffer$d.from(B));
  for (var L = B.length / 4 | 0, V = new Array(L), J = 0; J < L; J++) V[J] = B.readUInt32BE(4 * J);
  return V;
}
function scrubVec(B) {
  for (; 0 < B.length; B++) B[0] = 0;
}
function cryptBlock(B, L, V, J, re) {
  for (var ne, ie, oe, pe, ce = V[0], Oe = V[1], rt = V[2], ut = V[3], dt = B[0] ^ L[0], ht = B[1] ^ L[1], bt = B[2] ^ L[2], Tt = B[3] ^ L[3], wt = 4, Et = 1; Et < re; Et++) ne = ce[dt >>> 24] ^ Oe[ht >>> 16 & 255] ^ rt[bt >>> 8 & 255] ^ ut[255 & Tt] ^ L[wt++], ie = ce[ht >>> 24] ^ Oe[bt >>> 16 & 255] ^ rt[Tt >>> 8 & 255] ^ ut[255 & dt] ^ L[wt++], oe = ce[bt >>> 24] ^ Oe[Tt >>> 16 & 255] ^ rt[dt >>> 8 & 255] ^ ut[255 & ht] ^ L[wt++], pe = ce[Tt >>> 24] ^ Oe[dt >>> 16 & 255] ^ rt[ht >>> 8 & 255] ^ ut[255 & bt] ^ L[wt++], dt = ne, ht = ie, bt = oe, Tt = pe;
  return ne = (J[dt >>> 24] << 24 | J[ht >>> 16 & 255] << 16 | J[bt >>> 8 & 255] << 8 | J[255 & Tt]) ^ L[wt++], ie = (J[ht >>> 24] << 24 | J[bt >>> 16 & 255] << 16 | J[Tt >>> 8 & 255] << 8 | J[255 & dt]) ^ L[wt++], oe = (J[bt >>> 24] << 24 | J[Tt >>> 16 & 255] << 16 | J[dt >>> 8 & 255] << 8 | J[255 & ht]) ^ L[wt++], pe = (J[Tt >>> 24] << 24 | J[dt >>> 16 & 255] << 16 | J[ht >>> 8 & 255] << 8 | J[255 & bt]) ^ L[wt++], [ne >>>= 0, ie >>>= 0, oe >>>= 0, pe >>>= 0];
}
var RCON = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], G = function() {
  for (var B = new Array(256), L = 0; L < 256; L++) B[L] = L < 128 ? L << 1 : L << 1 ^ 283;
  for (var V = [], J = [], re = [[], [], [], []], ne = [[], [], [], []], ie = 0, oe = 0, pe = 0; pe < 256; ++pe) {
    var ce = oe ^ oe << 1 ^ oe << 2 ^ oe << 3 ^ oe << 4;
    ce = ce >>> 8 ^ 255 & ce ^ 99, V[ie] = ce, J[ce] = ie;
    var Oe = B[ie], rt = B[Oe], ut = B[rt], dt = 257 * B[ce] ^ 16843008 * ce;
    re[0][ie] = dt << 24 | dt >>> 8, re[1][ie] = dt << 16 | dt >>> 16, re[2][ie] = dt << 8 | dt >>> 24, re[3][ie] = dt, dt = 16843009 * ut ^ 65537 * rt ^ 257 * Oe ^ 16843008 * ie, ne[0][ce] = dt << 24 | dt >>> 8, ne[1][ce] = dt << 16 | dt >>> 16, ne[2][ce] = dt << 8 | dt >>> 24, ne[3][ce] = dt, ie === 0 ? ie = oe = 1 : (ie = Oe ^ B[B[B[ut ^ Oe]]], oe ^= B[B[oe]]);
  }
  return { SBOX: V, INV_SBOX: J, SUB_MIX: re, INV_SUB_MIX: ne };
}();
function AES(B) {
  this._key = asUInt32Array(B), this._reset();
}
AES.blockSize = 16, AES.keySize = 32, AES.prototype.blockSize = AES.blockSize, AES.prototype.keySize = AES.keySize, AES.prototype._reset = function() {
  for (var B = this._key, L = B.length, V = L + 6, J = 4 * (V + 1), re = [], ne = 0; ne < L; ne++) re[ne] = B[ne];
  for (ne = L; ne < J; ne++) {
    var ie = re[ne - 1];
    ne % L == 0 ? (ie = ie << 8 | ie >>> 24, ie = G.SBOX[ie >>> 24] << 24 | G.SBOX[ie >>> 16 & 255] << 16 | G.SBOX[ie >>> 8 & 255] << 8 | G.SBOX[255 & ie], ie ^= RCON[ne / L | 0] << 24) : L > 6 && ne % L == 4 && (ie = G.SBOX[ie >>> 24] << 24 | G.SBOX[ie >>> 16 & 255] << 16 | G.SBOX[ie >>> 8 & 255] << 8 | G.SBOX[255 & ie]), re[ne] = re[ne - L] ^ ie;
  }
  for (var oe = [], pe = 0; pe < J; pe++) {
    var ce = J - pe, Oe = re[ce - (pe % 4 ? 0 : 4)];
    oe[pe] = pe < 4 || ce <= 4 ? Oe : G.INV_SUB_MIX[0][G.SBOX[Oe >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[Oe >>> 16 & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[Oe >>> 8 & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[255 & Oe]];
  }
  this._nRounds = V, this._keySchedule = re, this._invKeySchedule = oe;
}, AES.prototype.encryptBlockRaw = function(B) {
  return cryptBlock(B = asUInt32Array(B), this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);
}, AES.prototype.encryptBlock = function(B) {
  var L = this.encryptBlockRaw(B), V = Buffer$d.allocUnsafe(16);
  return V.writeUInt32BE(L[0], 0), V.writeUInt32BE(L[1], 4), V.writeUInt32BE(L[2], 8), V.writeUInt32BE(L[3], 12), V;
}, AES.prototype.decryptBlock = function(B) {
  var L = (B = asUInt32Array(B))[1];
  B[1] = B[3], B[3] = L;
  var V = cryptBlock(B, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds), J = Buffer$d.allocUnsafe(16);
  return J.writeUInt32BE(V[0], 0), J.writeUInt32BE(V[3], 4), J.writeUInt32BE(V[2], 8), J.writeUInt32BE(V[1], 12), J;
}, AES.prototype.scrub = function() {
  scrubVec(this._keySchedule), scrubVec(this._invKeySchedule), scrubVec(this._key);
}, aes$5.AES = AES;
var Buffer$c = safeBufferExports$1.Buffer, ZEROES = Buffer$c.alloc(16, 0);
function toArray$1(B) {
  return [B.readUInt32BE(0), B.readUInt32BE(4), B.readUInt32BE(8), B.readUInt32BE(12)];
}
function fromArray(B) {
  var L = Buffer$c.allocUnsafe(16);
  return L.writeUInt32BE(B[0] >>> 0, 0), L.writeUInt32BE(B[1] >>> 0, 4), L.writeUInt32BE(B[2] >>> 0, 8), L.writeUInt32BE(B[3] >>> 0, 12), L;
}
function GHASH$1(B) {
  this.h = B, this.state = Buffer$c.alloc(16, 0), this.cache = Buffer$c.allocUnsafe(0);
}
GHASH$1.prototype.ghash = function(B) {
  for (var L = -1; ++L < B.length; ) this.state[L] ^= B[L];
  this._multiply();
}, GHASH$1.prototype._multiply = function() {
  for (var B, L, V = toArray$1(this.h), J = [0, 0, 0, 0], re = -1; ++re < 128; ) {
    for (this.state[~~(re / 8)] & 1 << 7 - re % 8 && (J[0] ^= V[0], J[1] ^= V[1], J[2] ^= V[2], J[3] ^= V[3]), L = !!(1 & V[3]), B = 3; B > 0; B--) V[B] = V[B] >>> 1 | (1 & V[B - 1]) << 31;
    V[0] = V[0] >>> 1, L && (V[0] = V[0] ^ 225 << 24);
  }
  this.state = fromArray(J);
}, GHASH$1.prototype.update = function(B) {
  var L;
  for (this.cache = Buffer$c.concat([this.cache, B]); this.cache.length >= 16; ) L = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(L);
}, GHASH$1.prototype.final = function(B, L) {
  return this.cache.length && this.ghash(Buffer$c.concat([this.cache, ZEROES], 16)), this.ghash(fromArray([0, B, 0, L])), this.state;
};
var ghash = GHASH$1, aes$4 = aes$5, Buffer$b = safeBufferExports$1.Buffer, Transform$5 = cipherBase, inherits$8 = inherits_browserExports, GHASH = ghash, xor$3 = bufferXor, incr32 = incr32_1;
function xorTest(B, L) {
  var V = 0;
  B.length !== L.length && V++;
  for (var J = Math.min(B.length, L.length), re = 0; re < J; ++re) V += B[re] ^ L[re];
  return V;
}
function calcIv(B, L, V) {
  if (L.length === 12) return B._finID = Buffer$b.concat([L, Buffer$b.from([0, 0, 0, 1])]), Buffer$b.concat([L, Buffer$b.from([0, 0, 0, 2])]);
  var J = new GHASH(V), re = L.length, ne = re % 16;
  J.update(L), ne && (ne = 16 - ne, J.update(Buffer$b.alloc(ne, 0))), J.update(Buffer$b.alloc(8, 0));
  var ie = 8 * re, oe = Buffer$b.alloc(8);
  oe.writeUIntBE(ie, 0, 8), J.update(oe), B._finID = J.state;
  var pe = Buffer$b.from(B._finID);
  return incr32(pe), pe;
}
function StreamCipher$3(B, L, V, J) {
  Transform$5.call(this);
  var re = Buffer$b.alloc(4, 0);
  this._cipher = new aes$4.AES(L);
  var ne = this._cipher.encryptBlock(re);
  this._ghash = new GHASH(ne), V = calcIv(this, V, ne), this._prev = Buffer$b.from(V), this._cache = Buffer$b.allocUnsafe(0), this._secCache = Buffer$b.allocUnsafe(0), this._decrypt = J, this._alen = 0, this._len = 0, this._mode = B, this._authTag = null, this._called = !1;
}
inherits$8(StreamCipher$3, Transform$5), StreamCipher$3.prototype._update = function(B) {
  if (!this._called && this._alen) {
    var L = 16 - this._alen % 16;
    L < 16 && (L = Buffer$b.alloc(L, 0), this._ghash.update(L));
  }
  this._called = !0;
  var V = this._mode.encrypt(this, B);
  return this._decrypt ? this._ghash.update(B) : this._ghash.update(V), this._len += B.length, V;
}, StreamCipher$3.prototype._final = function() {
  if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
  var B = xor$3(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
  if (this._decrypt && xorTest(B, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
  this._authTag = B, this._cipher.scrub();
}, StreamCipher$3.prototype.getAuthTag = function() {
  if (this._decrypt || !Buffer$b.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
  return this._authTag;
}, StreamCipher$3.prototype.setAuthTag = function(B) {
  if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
  this._authTag = B;
}, StreamCipher$3.prototype.setAAD = function(B) {
  if (this._called) throw new Error("Attempting to set AAD in unsupported state");
  this._ghash.update(B), this._alen += B.length;
};
var authCipher = StreamCipher$3, aes$3 = aes$5, Buffer$a = safeBufferExports$1.Buffer, Transform$4 = cipherBase, inherits$7 = inherits_browserExports;
function StreamCipher$2(B, L, V, J) {
  Transform$4.call(this), this._cipher = new aes$3.AES(L), this._prev = Buffer$a.from(V), this._cache = Buffer$a.allocUnsafe(0), this._secCache = Buffer$a.allocUnsafe(0), this._decrypt = J, this._mode = B;
}
inherits$7(StreamCipher$2, Transform$4), StreamCipher$2.prototype._update = function(B) {
  return this._mode.encrypt(this, B, this._decrypt);
}, StreamCipher$2.prototype._final = function() {
  this._cipher.scrub();
};
var streamCipher = StreamCipher$2, Buffer$9 = safeBufferExports$1.Buffer, MD5 = md5_js;
function EVP_BytesToKey(B, L, V, J) {
  if (Buffer$9.isBuffer(B) || (B = Buffer$9.from(B, "binary")), L && (Buffer$9.isBuffer(L) || (L = Buffer$9.from(L, "binary")), L.length !== 8)) throw new RangeError("salt should be Buffer with 8 byte length");
  for (var re = V / 8, ne = Buffer$9.alloc(re), ie = Buffer$9.alloc(J || 0), oe = Buffer$9.alloc(0); re > 0 || J > 0; ) {
    var pe = new MD5();
    pe.update(oe), pe.update(B), L && pe.update(L), oe = pe.digest();
    var ce = 0;
    if (re > 0) {
      var Oe = ne.length - re;
      ce = Math.min(re, oe.length), oe.copy(ne, Oe, 0, ce), re -= ce;
    }
    if (ce < oe.length && J > 0) {
      var rt = ie.length - J, ut = Math.min(J, oe.length - ce);
      oe.copy(ie, rt, ce, ce + ut), J -= ut;
    }
  }
  return oe.fill(0), { key: ne, iv: ie };
}
var evp_bytestokey = EVP_BytesToKey, MODES$1 = modes_1, AuthCipher$1 = authCipher, Buffer$8 = safeBufferExports$1.Buffer, StreamCipher$1 = streamCipher, Transform$3 = cipherBase, aes$2 = aes$5, ebtk$2 = evp_bytestokey, inherits$6 = inherits_browserExports;
function Cipher(B, L, V) {
  Transform$3.call(this), this._cache = new Splitter$1(), this._cipher = new aes$2.AES(L), this._prev = Buffer$8.from(V), this._mode = B, this._autopadding = !0;
}
inherits$6(Cipher, Transform$3), Cipher.prototype._update = function(B) {
  var L, V;
  this._cache.add(B);
  for (var J = []; L = this._cache.get(); ) V = this._mode.encrypt(this, L), J.push(V);
  return Buffer$8.concat(J);
};
var PADDING = Buffer$8.alloc(16, 16);
function Splitter$1() {
  this.cache = Buffer$8.allocUnsafe(0);
}
function createCipheriv$1(B, L, V) {
  var J = MODES$1[B.toLowerCase()];
  if (!J) throw new TypeError("invalid suite type");
  if (typeof L == "string" && (L = Buffer$8.from(L)), L.length !== J.key / 8) throw new TypeError("invalid key length " + L.length);
  if (typeof V == "string" && (V = Buffer$8.from(V)), J.mode !== "GCM" && V.length !== J.iv) throw new TypeError("invalid iv length " + V.length);
  return J.type === "stream" ? new StreamCipher$1(J.module, L, V) : J.type === "auth" ? new AuthCipher$1(J.module, L, V) : new Cipher(J.module, L, V);
}
function createCipher$1(B, L) {
  var V = MODES$1[B.toLowerCase()];
  if (!V) throw new TypeError("invalid suite type");
  var J = ebtk$2(L, !1, V.key, V.iv);
  return createCipheriv$1(B, J.key, J.iv);
}
Cipher.prototype._final = function() {
  var B = this._cache.flush();
  if (this._autopadding) return B = this._mode.encrypt(this, B), this._cipher.scrub(), B;
  if (!B.equals(PADDING)) throw this._cipher.scrub(), new Error("data not multiple of block length");
}, Cipher.prototype.setAutoPadding = function(B) {
  return this._autopadding = !!B, this;
}, Splitter$1.prototype.add = function(B) {
  this.cache = Buffer$8.concat([this.cache, B]);
}, Splitter$1.prototype.get = function() {
  if (this.cache.length > 15) {
    var B = this.cache.slice(0, 16);
    return this.cache = this.cache.slice(16), B;
  }
  return null;
}, Splitter$1.prototype.flush = function() {
  for (var B = 16 - this.cache.length, L = Buffer$8.allocUnsafe(B), V = -1; ++V < B; ) L.writeUInt8(B, V);
  return Buffer$8.concat([this.cache, L]);
}, encrypter.createCipheriv = createCipheriv$1, encrypter.createCipher = createCipher$1;
var decrypter = {}, AuthCipher = authCipher, Buffer$7 = safeBufferExports$1.Buffer, MODES = modes_1, StreamCipher = streamCipher, Transform$2 = cipherBase, aes$1 = aes$5, ebtk$1 = evp_bytestokey, inherits$5 = inherits_browserExports;
function Decipher(B, L, V) {
  Transform$2.call(this), this._cache = new Splitter(), this._last = void 0, this._cipher = new aes$1.AES(L), this._prev = Buffer$7.from(V), this._mode = B, this._autopadding = !0;
}
function Splitter() {
  this.cache = Buffer$7.allocUnsafe(0);
}
function unpad(B) {
  var L = B[15];
  if (L < 1 || L > 16) throw new Error("unable to decrypt data");
  for (var V = -1; ++V < L; ) if (B[V + (16 - L)] !== L) throw new Error("unable to decrypt data");
  if (L !== 16) return B.slice(0, 16 - L);
}
function createDecipheriv$1(B, L, V) {
  var J = MODES[B.toLowerCase()];
  if (!J) throw new TypeError("invalid suite type");
  if (typeof V == "string" && (V = Buffer$7.from(V)), J.mode !== "GCM" && V.length !== J.iv) throw new TypeError("invalid iv length " + V.length);
  if (typeof L == "string" && (L = Buffer$7.from(L)), L.length !== J.key / 8) throw new TypeError("invalid key length " + L.length);
  return J.type === "stream" ? new StreamCipher(J.module, L, V, !0) : J.type === "auth" ? new AuthCipher(J.module, L, V, !0) : new Decipher(J.module, L, V);
}
function createDecipher$1(B, L) {
  var V = MODES[B.toLowerCase()];
  if (!V) throw new TypeError("invalid suite type");
  var J = ebtk$1(L, !1, V.key, V.iv);
  return createDecipheriv$1(B, J.key, J.iv);
}
inherits$5(Decipher, Transform$2), Decipher.prototype._update = function(B) {
  var L, V;
  this._cache.add(B);
  for (var J = []; L = this._cache.get(this._autopadding); ) V = this._mode.decrypt(this, L), J.push(V);
  return Buffer$7.concat(J);
}, Decipher.prototype._final = function() {
  var B = this._cache.flush();
  if (this._autopadding) return unpad(this._mode.decrypt(this, B));
  if (B) throw new Error("data not multiple of block length");
}, Decipher.prototype.setAutoPadding = function(B) {
  return this._autopadding = !!B, this;
}, Splitter.prototype.add = function(B) {
  this.cache = Buffer$7.concat([this.cache, B]);
}, Splitter.prototype.get = function(B) {
  var L;
  if (B) {
    if (this.cache.length > 16) return L = this.cache.slice(0, 16), this.cache = this.cache.slice(16), L;
  } else if (this.cache.length >= 16) return L = this.cache.slice(0, 16), this.cache = this.cache.slice(16), L;
  return null;
}, Splitter.prototype.flush = function() {
  if (this.cache.length) return this.cache;
}, decrypter.createDecipher = createDecipher$1, decrypter.createDecipheriv = createDecipheriv$1;
var ciphers$2 = encrypter, deciphers = decrypter, modes$1 = require$$2;
function getCiphers$1() {
  return Object.keys(modes$1);
}
browser$5.createCipher = browser$5.Cipher = ciphers$2.createCipher, browser$5.createCipheriv = browser$5.Cipheriv = ciphers$2.createCipheriv, browser$5.createDecipher = browser$5.Decipher = deciphers.createDecipher, browser$5.createDecipheriv = browser$5.Decipheriv = deciphers.createDecipheriv, browser$5.listCiphers = browser$5.getCiphers = getCiphers$1;
var modes = {};
(function(B) {
  B["des-ecb"] = { key: 8, iv: 0 }, B["des-cbc"] = B.des = { key: 8, iv: 8 }, B["des-ede3-cbc"] = B.des3 = { key: 24, iv: 8 }, B["des-ede3"] = { key: 24, iv: 0 }, B["des-ede-cbc"] = { key: 16, iv: 8 }, B["des-ede"] = { key: 16, iv: 0 };
})(modes);
var DES = browserifyDes, aes = browser$5, aesModes = modes_1, desModes = modes, ebtk = evp_bytestokey;
function createCipher(B, L) {
  var V, J;
  if (B = B.toLowerCase(), aesModes[B]) V = aesModes[B].key, J = aesModes[B].iv;
  else {
    if (!desModes[B]) throw new TypeError("invalid suite type");
    V = 8 * desModes[B].key, J = desModes[B].iv;
  }
  var re = ebtk(L, !1, V, J);
  return createCipheriv(B, re.key, re.iv);
}
function createDecipher(B, L) {
  var V, J;
  if (B = B.toLowerCase(), aesModes[B]) V = aesModes[B].key, J = aesModes[B].iv;
  else {
    if (!desModes[B]) throw new TypeError("invalid suite type");
    V = 8 * desModes[B].key, J = desModes[B].iv;
  }
  var re = ebtk(L, !1, V, J);
  return createDecipheriv(B, re.key, re.iv);
}
function createCipheriv(B, L, V) {
  if (B = B.toLowerCase(), aesModes[B]) return aes.createCipheriv(B, L, V);
  if (desModes[B]) return new DES({ key: L, iv: V, mode: B });
  throw new TypeError("invalid suite type");
}
function createDecipheriv(B, L, V) {
  if (B = B.toLowerCase(), aesModes[B]) return aes.createDecipheriv(B, L, V);
  if (desModes[B]) return new DES({ key: L, iv: V, mode: B, decrypt: !0 });
  throw new TypeError("invalid suite type");
}
function getCiphers() {
  return Object.keys(desModes).concat(aes.getCiphers());
}
browser$6.createCipher = browser$6.Cipher = createCipher, browser$6.createCipheriv = browser$6.Cipheriv = createCipheriv, browser$6.createDecipher = browser$6.Decipher = createDecipher, browser$6.createDecipheriv = browser$6.Decipheriv = createDecipheriv, browser$6.listCiphers = browser$6.getCiphers = getCiphers;
var browser$4 = {}, bn$1 = { exports: {} };
bn$1.exports, function(B, L) {
  function V(at, lt) {
    if (!at) throw new Error(lt || "Assertion failed");
  }
  function J(at, lt) {
    at.super_ = lt;
    var Ce = function() {
    };
    Ce.prototype = lt.prototype, at.prototype = new Ce(), at.prototype.constructor = at;
  }
  function re(at, lt, Ce) {
    if (re.isBN(at)) return at;
    this.negative = 0, this.words = null, this.length = 0, this.red = null, at !== null && (lt !== "le" && lt !== "be" || (Ce = lt, lt = 10), this._init(at || 0, lt || 10, Ce || "be"));
  }
  var ne;
  typeof B == "object" ? B.exports = re : L.BN = re, re.BN = re, re.wordSize = 26;
  try {
    ne = typeof window < "u" && window.Buffer !== void 0 ? window.Buffer : require$$1$2.Buffer;
  } catch {
  }
  function ie(at, lt) {
    var Ce = at.charCodeAt(lt);
    return Ce >= 65 && Ce <= 70 ? Ce - 55 : Ce >= 97 && Ce <= 102 ? Ce - 87 : Ce - 48 & 15;
  }
  function oe(at, lt, Ce) {
    var st = ie(at, Ce);
    return Ce - 1 >= lt && (st |= ie(at, Ce - 1) << 4), st;
  }
  function pe(at, lt, Ce, st) {
    for (var it = 0, nt = Math.min(at.length, Ce), ot = lt; ot < nt; ot++) {
      var ke = at.charCodeAt(ot) - 48;
      it *= st, it += ke >= 49 ? ke - 49 + 10 : ke >= 17 ? ke - 17 + 10 : ke;
    }
    return it;
  }
  re.isBN = function(at) {
    return at instanceof re || at !== null && typeof at == "object" && at.constructor.wordSize === re.wordSize && Array.isArray(at.words);
  }, re.max = function(at, lt) {
    return at.cmp(lt) > 0 ? at : lt;
  }, re.min = function(at, lt) {
    return at.cmp(lt) < 0 ? at : lt;
  }, re.prototype._init = function(at, lt, Ce) {
    if (typeof at == "number") return this._initNumber(at, lt, Ce);
    if (typeof at == "object") return this._initArray(at, lt, Ce);
    lt === "hex" && (lt = 16), V(lt === (0 | lt) && lt >= 2 && lt <= 36);
    var st = 0;
    (at = at.toString().replace(/\s+/g, ""))[0] === "-" && (st++, this.negative = 1), st < at.length && (lt === 16 ? this._parseHex(at, st, Ce) : (this._parseBase(at, lt, st), Ce === "le" && this._initArray(this.toArray(), lt, Ce)));
  }, re.prototype._initNumber = function(at, lt, Ce) {
    at < 0 && (this.negative = 1, at = -at), at < 67108864 ? (this.words = [67108863 & at], this.length = 1) : at < 4503599627370496 ? (this.words = [67108863 & at, at / 67108864 & 67108863], this.length = 2) : (V(at < 9007199254740992), this.words = [67108863 & at, at / 67108864 & 67108863, 1], this.length = 3), Ce === "le" && this._initArray(this.toArray(), lt, Ce);
  }, re.prototype._initArray = function(at, lt, Ce) {
    if (V(typeof at.length == "number"), at.length <= 0) return this.words = [0], this.length = 1, this;
    this.length = Math.ceil(at.length / 3), this.words = new Array(this.length);
    for (var st = 0; st < this.length; st++) this.words[st] = 0;
    var it, nt, ot = 0;
    if (Ce === "be") for (st = at.length - 1, it = 0; st >= 0; st -= 3) nt = at[st] | at[st - 1] << 8 | at[st - 2] << 16, this.words[it] |= nt << ot & 67108863, this.words[it + 1] = nt >>> 26 - ot & 67108863, (ot += 24) >= 26 && (ot -= 26, it++);
    else if (Ce === "le") for (st = 0, it = 0; st < at.length; st += 3) nt = at[st] | at[st + 1] << 8 | at[st + 2] << 16, this.words[it] |= nt << ot & 67108863, this.words[it + 1] = nt >>> 26 - ot & 67108863, (ot += 24) >= 26 && (ot -= 26, it++);
    return this.strip();
  }, re.prototype._parseHex = function(at, lt, Ce) {
    this.length = Math.ceil((at.length - lt) / 6), this.words = new Array(this.length);
    for (var st = 0; st < this.length; st++) this.words[st] = 0;
    var it, nt = 0, ot = 0;
    if (Ce === "be") for (st = at.length - 1; st >= lt; st -= 2) it = oe(at, lt, st) << nt, this.words[ot] |= 67108863 & it, nt >= 18 ? (nt -= 18, ot += 1, this.words[ot] |= it >>> 26) : nt += 8;
    else for (st = (at.length - lt) % 2 == 0 ? lt + 1 : lt; st < at.length; st += 2) it = oe(at, lt, st) << nt, this.words[ot] |= 67108863 & it, nt >= 18 ? (nt -= 18, ot += 1, this.words[ot] |= it >>> 26) : nt += 8;
    this.strip();
  }, re.prototype._parseBase = function(at, lt, Ce) {
    this.words = [0], this.length = 1;
    for (var st = 0, it = 1; it <= 67108863; it *= lt) st++;
    st--, it = it / lt | 0;
    for (var nt = at.length - Ce, ot = nt % st, ke = Math.min(nt, nt - ot) + Ce, ct = 0, yt = Ce; yt < ke; yt += st) ct = pe(at, yt, yt + st, lt), this.imuln(it), this.words[0] + ct < 67108864 ? this.words[0] += ct : this._iaddn(ct);
    if (ot !== 0) {
      var $t = 1;
      for (ct = pe(at, yt, at.length, lt), yt = 0; yt < ot; yt++) $t *= lt;
      this.imuln($t), this.words[0] + ct < 67108864 ? this.words[0] += ct : this._iaddn(ct);
    }
    this.strip();
  }, re.prototype.copy = function(at) {
    at.words = new Array(this.length);
    for (var lt = 0; lt < this.length; lt++) at.words[lt] = this.words[lt];
    at.length = this.length, at.negative = this.negative, at.red = this.red;
  }, re.prototype.clone = function() {
    var at = new re(null);
    return this.copy(at), at;
  }, re.prototype._expand = function(at) {
    for (; this.length < at; ) this.words[this.length++] = 0;
    return this;
  }, re.prototype.strip = function() {
    for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
    return this._normSign();
  }, re.prototype._normSign = function() {
    return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
  }, re.prototype.inspect = function() {
    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
  };
  var ce = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], Oe = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], rt = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
  function ut(at, lt, Ce) {
    Ce.negative = lt.negative ^ at.negative;
    var st = at.length + lt.length | 0;
    Ce.length = st, st = st - 1 | 0;
    var it = 0 | at.words[0], nt = 0 | lt.words[0], ot = it * nt, ke = 67108863 & ot, ct = ot / 67108864 | 0;
    Ce.words[0] = ke;
    for (var yt = 1; yt < st; yt++) {
      for (var $t = ct >>> 26, gt = 67108863 & ct, xt = Math.min(yt, lt.length - 1), At = Math.max(0, yt - at.length + 1); At <= xt; At++) {
        var mt = yt - At | 0;
        $t += (ot = (it = 0 | at.words[mt]) * (nt = 0 | lt.words[At]) + gt) / 67108864 | 0, gt = 67108863 & ot;
      }
      Ce.words[yt] = 0 | gt, ct = 0 | $t;
    }
    return ct !== 0 ? Ce.words[yt] = 0 | ct : Ce.length--, Ce.strip();
  }
  re.prototype.toString = function(at, lt) {
    var Ce;
    if (lt = 0 | lt || 1, (at = at || 10) === 16 || at === "hex") {
      Ce = "";
      for (var st = 0, it = 0, nt = 0; nt < this.length; nt++) {
        var ot = this.words[nt], ke = (16777215 & (ot << st | it)).toString(16);
        Ce = (it = ot >>> 24 - st & 16777215) != 0 || nt !== this.length - 1 ? ce[6 - ke.length] + ke + Ce : ke + Ce, (st += 2) >= 26 && (st -= 26, nt--);
      }
      for (it !== 0 && (Ce = it.toString(16) + Ce); Ce.length % lt != 0; ) Ce = "0" + Ce;
      return this.negative !== 0 && (Ce = "-" + Ce), Ce;
    }
    if (at === (0 | at) && at >= 2 && at <= 36) {
      var ct = Oe[at], yt = rt[at];
      Ce = "";
      var $t = this.clone();
      for ($t.negative = 0; !$t.isZero(); ) {
        var gt = $t.modn(yt).toString(at);
        Ce = ($t = $t.idivn(yt)).isZero() ? gt + Ce : ce[ct - gt.length] + gt + Ce;
      }
      for (this.isZero() && (Ce = "0" + Ce); Ce.length % lt != 0; ) Ce = "0" + Ce;
      return this.negative !== 0 && (Ce = "-" + Ce), Ce;
    }
    V(!1, "Base should be between 2 and 36");
  }, re.prototype.toNumber = function() {
    var at = this.words[0];
    return this.length === 2 ? at += 67108864 * this.words[1] : this.length === 3 && this.words[2] === 1 ? at += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && V(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -at : at;
  }, re.prototype.toJSON = function() {
    return this.toString(16);
  }, re.prototype.toBuffer = function(at, lt) {
    return V(ne !== void 0), this.toArrayLike(ne, at, lt);
  }, re.prototype.toArray = function(at, lt) {
    return this.toArrayLike(Array, at, lt);
  }, re.prototype.toArrayLike = function(at, lt, Ce) {
    var st = this.byteLength(), it = Ce || Math.max(1, st);
    V(st <= it, "byte array longer than desired length"), V(it > 0, "Requested array length <= 0"), this.strip();
    var nt, ot, ke = lt === "le", ct = new at(it), yt = this.clone();
    if (ke) {
      for (ot = 0; !yt.isZero(); ot++) nt = yt.andln(255), yt.iushrn(8), ct[ot] = nt;
      for (; ot < it; ot++) ct[ot] = 0;
    } else {
      for (ot = 0; ot < it - st; ot++) ct[ot] = 0;
      for (ot = 0; !yt.isZero(); ot++) nt = yt.andln(255), yt.iushrn(8), ct[it - ot - 1] = nt;
    }
    return ct;
  }, Math.clz32 ? re.prototype._countBits = function(at) {
    return 32 - Math.clz32(at);
  } : re.prototype._countBits = function(at) {
    var lt = at, Ce = 0;
    return lt >= 4096 && (Ce += 13, lt >>>= 13), lt >= 64 && (Ce += 7, lt >>>= 7), lt >= 8 && (Ce += 4, lt >>>= 4), lt >= 2 && (Ce += 2, lt >>>= 2), Ce + lt;
  }, re.prototype._zeroBits = function(at) {
    if (at === 0) return 26;
    var lt = at, Ce = 0;
    return 8191 & lt || (Ce += 13, lt >>>= 13), 127 & lt || (Ce += 7, lt >>>= 7), 15 & lt || (Ce += 4, lt >>>= 4), 3 & lt || (Ce += 2, lt >>>= 2), 1 & lt || Ce++, Ce;
  }, re.prototype.bitLength = function() {
    var at = this.words[this.length - 1], lt = this._countBits(at);
    return 26 * (this.length - 1) + lt;
  }, re.prototype.zeroBits = function() {
    if (this.isZero()) return 0;
    for (var at = 0, lt = 0; lt < this.length; lt++) {
      var Ce = this._zeroBits(this.words[lt]);
      if (at += Ce, Ce !== 26) break;
    }
    return at;
  }, re.prototype.byteLength = function() {
    return Math.ceil(this.bitLength() / 8);
  }, re.prototype.toTwos = function(at) {
    return this.negative !== 0 ? this.abs().inotn(at).iaddn(1) : this.clone();
  }, re.prototype.fromTwos = function(at) {
    return this.testn(at - 1) ? this.notn(at).iaddn(1).ineg() : this.clone();
  }, re.prototype.isNeg = function() {
    return this.negative !== 0;
  }, re.prototype.neg = function() {
    return this.clone().ineg();
  }, re.prototype.ineg = function() {
    return this.isZero() || (this.negative ^= 1), this;
  }, re.prototype.iuor = function(at) {
    for (; this.length < at.length; ) this.words[this.length++] = 0;
    for (var lt = 0; lt < at.length; lt++) this.words[lt] = this.words[lt] | at.words[lt];
    return this.strip();
  }, re.prototype.ior = function(at) {
    return V(!(this.negative | at.negative)), this.iuor(at);
  }, re.prototype.or = function(at) {
    return this.length > at.length ? this.clone().ior(at) : at.clone().ior(this);
  }, re.prototype.uor = function(at) {
    return this.length > at.length ? this.clone().iuor(at) : at.clone().iuor(this);
  }, re.prototype.iuand = function(at) {
    var lt;
    lt = this.length > at.length ? at : this;
    for (var Ce = 0; Ce < lt.length; Ce++) this.words[Ce] = this.words[Ce] & at.words[Ce];
    return this.length = lt.length, this.strip();
  }, re.prototype.iand = function(at) {
    return V(!(this.negative | at.negative)), this.iuand(at);
  }, re.prototype.and = function(at) {
    return this.length > at.length ? this.clone().iand(at) : at.clone().iand(this);
  }, re.prototype.uand = function(at) {
    return this.length > at.length ? this.clone().iuand(at) : at.clone().iuand(this);
  }, re.prototype.iuxor = function(at) {
    var lt, Ce;
    this.length > at.length ? (lt = this, Ce = at) : (lt = at, Ce = this);
    for (var st = 0; st < Ce.length; st++) this.words[st] = lt.words[st] ^ Ce.words[st];
    if (this !== lt) for (; st < lt.length; st++) this.words[st] = lt.words[st];
    return this.length = lt.length, this.strip();
  }, re.prototype.ixor = function(at) {
    return V(!(this.negative | at.negative)), this.iuxor(at);
  }, re.prototype.xor = function(at) {
    return this.length > at.length ? this.clone().ixor(at) : at.clone().ixor(this);
  }, re.prototype.uxor = function(at) {
    return this.length > at.length ? this.clone().iuxor(at) : at.clone().iuxor(this);
  }, re.prototype.inotn = function(at) {
    V(typeof at == "number" && at >= 0);
    var lt = 0 | Math.ceil(at / 26), Ce = at % 26;
    this._expand(lt), Ce > 0 && lt--;
    for (var st = 0; st < lt; st++) this.words[st] = 67108863 & ~this.words[st];
    return Ce > 0 && (this.words[st] = ~this.words[st] & 67108863 >> 26 - Ce), this.strip();
  }, re.prototype.notn = function(at) {
    return this.clone().inotn(at);
  }, re.prototype.setn = function(at, lt) {
    V(typeof at == "number" && at >= 0);
    var Ce = at / 26 | 0, st = at % 26;
    return this._expand(Ce + 1), this.words[Ce] = lt ? this.words[Ce] | 1 << st : this.words[Ce] & ~(1 << st), this.strip();
  }, re.prototype.iadd = function(at) {
    var lt, Ce, st;
    if (this.negative !== 0 && at.negative === 0) return this.negative = 0, lt = this.isub(at), this.negative ^= 1, this._normSign();
    if (this.negative === 0 && at.negative !== 0) return at.negative = 0, lt = this.isub(at), at.negative = 1, lt._normSign();
    this.length > at.length ? (Ce = this, st = at) : (Ce = at, st = this);
    for (var it = 0, nt = 0; nt < st.length; nt++) lt = (0 | Ce.words[nt]) + (0 | st.words[nt]) + it, this.words[nt] = 67108863 & lt, it = lt >>> 26;
    for (; it !== 0 && nt < Ce.length; nt++) lt = (0 | Ce.words[nt]) + it, this.words[nt] = 67108863 & lt, it = lt >>> 26;
    if (this.length = Ce.length, it !== 0) this.words[this.length] = it, this.length++;
    else if (Ce !== this) for (; nt < Ce.length; nt++) this.words[nt] = Ce.words[nt];
    return this;
  }, re.prototype.add = function(at) {
    var lt;
    return at.negative !== 0 && this.negative === 0 ? (at.negative = 0, lt = this.sub(at), at.negative ^= 1, lt) : at.negative === 0 && this.negative !== 0 ? (this.negative = 0, lt = at.sub(this), this.negative = 1, lt) : this.length > at.length ? this.clone().iadd(at) : at.clone().iadd(this);
  }, re.prototype.isub = function(at) {
    if (at.negative !== 0) {
      at.negative = 0;
      var lt = this.iadd(at);
      return at.negative = 1, lt._normSign();
    }
    if (this.negative !== 0) return this.negative = 0, this.iadd(at), this.negative = 1, this._normSign();
    var Ce, st, it = this.cmp(at);
    if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
    it > 0 ? (Ce = this, st = at) : (Ce = at, st = this);
    for (var nt = 0, ot = 0; ot < st.length; ot++) nt = (lt = (0 | Ce.words[ot]) - (0 | st.words[ot]) + nt) >> 26, this.words[ot] = 67108863 & lt;
    for (; nt !== 0 && ot < Ce.length; ot++) nt = (lt = (0 | Ce.words[ot]) + nt) >> 26, this.words[ot] = 67108863 & lt;
    if (nt === 0 && ot < Ce.length && Ce !== this) for (; ot < Ce.length; ot++) this.words[ot] = Ce.words[ot];
    return this.length = Math.max(this.length, ot), Ce !== this && (this.negative = 1), this.strip();
  }, re.prototype.sub = function(at) {
    return this.clone().isub(at);
  };
  var dt = function(at, lt, Ce) {
    var st, it, nt, ot = at.words, ke = lt.words, ct = Ce.words, yt = 0, $t = 0 | ot[0], gt = 8191 & $t, xt = $t >>> 13, At = 0 | ot[1], mt = 8191 & At, St = At >>> 13, Mt = 0 | ot[2], It = 8191 & Mt, Ft = Mt >>> 13, Vt = 0 | ot[3], qt = 8191 & Vt, er = Vt >>> 13, tr = 0 | ot[4], Jt = 8191 & tr, ur = tr >>> 13, pr = 0 | ot[5], dr = 8191 & pr, Pr = pr >>> 13, Sr = 0 | ot[6], lr = 8191 & Sr, kr = Sr >>> 13, pt = 0 | ot[7], vt = 8191 & pt, kt = pt >>> 13, Ct = 0 | ot[8], Ht = 8191 & Ct, Kt = Ct >>> 13, Yt = 0 | ot[9], ir = 8191 & Yt, wr = Yt >>> 13, _r = 0 | ke[0], cr = 8191 & _r, Tr = _r >>> 13, Lt = 0 | ke[1], Ot = 8191 & Lt, Nt = Lt >>> 13, Ut = 0 | ke[2], Wt = 8191 & Ut, Zt = Ut >>> 13, jt = 0 | ke[3], zt = 8191 & jt, Xt = jt >>> 13, rr = 0 | ke[4], Qt = 8191 & rr, ar = rr >>> 13, or = 0 | ke[5], nr = 8191 & or, yr = or >>> 13, vr = 0 | ke[6], fr = 8191 & vr, gr = vr >>> 13, Er = 0 | ke[7], br = 8191 & Er, $r = Er >>> 13, Ar = 0 | ke[8], Br = 8191 & Ar, Mr = Ar >>> 13, Or = 0 | ke[9], xr = 8191 & Or, Nr = Or >>> 13;
    Ce.negative = at.negative ^ lt.negative, Ce.length = 19;
    var Cr = (yt + (st = Math.imul(gt, cr)) | 0) + ((8191 & (it = (it = Math.imul(gt, Tr)) + Math.imul(xt, cr) | 0)) << 13) | 0;
    yt = ((nt = Math.imul(xt, Tr)) + (it >>> 13) | 0) + (Cr >>> 26) | 0, Cr &= 67108863, st = Math.imul(mt, cr), it = (it = Math.imul(mt, Tr)) + Math.imul(St, cr) | 0, nt = Math.imul(St, Tr);
    var Rr = (yt + (st = st + Math.imul(gt, Ot) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, Nt) | 0) + Math.imul(xt, Ot) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, Nt) | 0) + (it >>> 13) | 0) + (Rr >>> 26) | 0, Rr &= 67108863, st = Math.imul(It, cr), it = (it = Math.imul(It, Tr)) + Math.imul(Ft, cr) | 0, nt = Math.imul(Ft, Tr), st = st + Math.imul(mt, Ot) | 0, it = (it = it + Math.imul(mt, Nt) | 0) + Math.imul(St, Ot) | 0, nt = nt + Math.imul(St, Nt) | 0;
    var Dr = (yt + (st = st + Math.imul(gt, Wt) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, Zt) | 0) + Math.imul(xt, Wt) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, Zt) | 0) + (it >>> 13) | 0) + (Dr >>> 26) | 0, Dr &= 67108863, st = Math.imul(qt, cr), it = (it = Math.imul(qt, Tr)) + Math.imul(er, cr) | 0, nt = Math.imul(er, Tr), st = st + Math.imul(It, Ot) | 0, it = (it = it + Math.imul(It, Nt) | 0) + Math.imul(Ft, Ot) | 0, nt = nt + Math.imul(Ft, Nt) | 0, st = st + Math.imul(mt, Wt) | 0, it = (it = it + Math.imul(mt, Zt) | 0) + Math.imul(St, Wt) | 0, nt = nt + Math.imul(St, Zt) | 0;
    var jr = (yt + (st = st + Math.imul(gt, zt) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, Xt) | 0) + Math.imul(xt, zt) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, Xt) | 0) + (it >>> 13) | 0) + (jr >>> 26) | 0, jr &= 67108863, st = Math.imul(Jt, cr), it = (it = Math.imul(Jt, Tr)) + Math.imul(ur, cr) | 0, nt = Math.imul(ur, Tr), st = st + Math.imul(qt, Ot) | 0, it = (it = it + Math.imul(qt, Nt) | 0) + Math.imul(er, Ot) | 0, nt = nt + Math.imul(er, Nt) | 0, st = st + Math.imul(It, Wt) | 0, it = (it = it + Math.imul(It, Zt) | 0) + Math.imul(Ft, Wt) | 0, nt = nt + Math.imul(Ft, Zt) | 0, st = st + Math.imul(mt, zt) | 0, it = (it = it + Math.imul(mt, Xt) | 0) + Math.imul(St, zt) | 0, nt = nt + Math.imul(St, Xt) | 0;
    var Lr = (yt + (st = st + Math.imul(gt, Qt) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, ar) | 0) + Math.imul(xt, Qt) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, ar) | 0) + (it >>> 13) | 0) + (Lr >>> 26) | 0, Lr &= 67108863, st = Math.imul(dr, cr), it = (it = Math.imul(dr, Tr)) + Math.imul(Pr, cr) | 0, nt = Math.imul(Pr, Tr), st = st + Math.imul(Jt, Ot) | 0, it = (it = it + Math.imul(Jt, Nt) | 0) + Math.imul(ur, Ot) | 0, nt = nt + Math.imul(ur, Nt) | 0, st = st + Math.imul(qt, Wt) | 0, it = (it = it + Math.imul(qt, Zt) | 0) + Math.imul(er, Wt) | 0, nt = nt + Math.imul(er, Zt) | 0, st = st + Math.imul(It, zt) | 0, it = (it = it + Math.imul(It, Xt) | 0) + Math.imul(Ft, zt) | 0, nt = nt + Math.imul(Ft, Xt) | 0, st = st + Math.imul(mt, Qt) | 0, it = (it = it + Math.imul(mt, ar) | 0) + Math.imul(St, Qt) | 0, nt = nt + Math.imul(St, ar) | 0;
    var Hr = (yt + (st = st + Math.imul(gt, nr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, yr) | 0) + Math.imul(xt, nr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, yr) | 0) + (it >>> 13) | 0) + (Hr >>> 26) | 0, Hr &= 67108863, st = Math.imul(lr, cr), it = (it = Math.imul(lr, Tr)) + Math.imul(kr, cr) | 0, nt = Math.imul(kr, Tr), st = st + Math.imul(dr, Ot) | 0, it = (it = it + Math.imul(dr, Nt) | 0) + Math.imul(Pr, Ot) | 0, nt = nt + Math.imul(Pr, Nt) | 0, st = st + Math.imul(Jt, Wt) | 0, it = (it = it + Math.imul(Jt, Zt) | 0) + Math.imul(ur, Wt) | 0, nt = nt + Math.imul(ur, Zt) | 0, st = st + Math.imul(qt, zt) | 0, it = (it = it + Math.imul(qt, Xt) | 0) + Math.imul(er, zt) | 0, nt = nt + Math.imul(er, Xt) | 0, st = st + Math.imul(It, Qt) | 0, it = (it = it + Math.imul(It, ar) | 0) + Math.imul(Ft, Qt) | 0, nt = nt + Math.imul(Ft, ar) | 0, st = st + Math.imul(mt, nr) | 0, it = (it = it + Math.imul(mt, yr) | 0) + Math.imul(St, nr) | 0, nt = nt + Math.imul(St, yr) | 0;
    var Ur = (yt + (st = st + Math.imul(gt, fr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, gr) | 0) + Math.imul(xt, fr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, gr) | 0) + (it >>> 13) | 0) + (Ur >>> 26) | 0, Ur &= 67108863, st = Math.imul(vt, cr), it = (it = Math.imul(vt, Tr)) + Math.imul(kt, cr) | 0, nt = Math.imul(kt, Tr), st = st + Math.imul(lr, Ot) | 0, it = (it = it + Math.imul(lr, Nt) | 0) + Math.imul(kr, Ot) | 0, nt = nt + Math.imul(kr, Nt) | 0, st = st + Math.imul(dr, Wt) | 0, it = (it = it + Math.imul(dr, Zt) | 0) + Math.imul(Pr, Wt) | 0, nt = nt + Math.imul(Pr, Zt) | 0, st = st + Math.imul(Jt, zt) | 0, it = (it = it + Math.imul(Jt, Xt) | 0) + Math.imul(ur, zt) | 0, nt = nt + Math.imul(ur, Xt) | 0, st = st + Math.imul(qt, Qt) | 0, it = (it = it + Math.imul(qt, ar) | 0) + Math.imul(er, Qt) | 0, nt = nt + Math.imul(er, ar) | 0, st = st + Math.imul(It, nr) | 0, it = (it = it + Math.imul(It, yr) | 0) + Math.imul(Ft, nr) | 0, nt = nt + Math.imul(Ft, yr) | 0, st = st + Math.imul(mt, fr) | 0, it = (it = it + Math.imul(mt, gr) | 0) + Math.imul(St, fr) | 0, nt = nt + Math.imul(St, gr) | 0;
    var Fr = (yt + (st = st + Math.imul(gt, br) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, $r) | 0) + Math.imul(xt, br) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, $r) | 0) + (it >>> 13) | 0) + (Fr >>> 26) | 0, Fr &= 67108863, st = Math.imul(Ht, cr), it = (it = Math.imul(Ht, Tr)) + Math.imul(Kt, cr) | 0, nt = Math.imul(Kt, Tr), st = st + Math.imul(vt, Ot) | 0, it = (it = it + Math.imul(vt, Nt) | 0) + Math.imul(kt, Ot) | 0, nt = nt + Math.imul(kt, Nt) | 0, st = st + Math.imul(lr, Wt) | 0, it = (it = it + Math.imul(lr, Zt) | 0) + Math.imul(kr, Wt) | 0, nt = nt + Math.imul(kr, Zt) | 0, st = st + Math.imul(dr, zt) | 0, it = (it = it + Math.imul(dr, Xt) | 0) + Math.imul(Pr, zt) | 0, nt = nt + Math.imul(Pr, Xt) | 0, st = st + Math.imul(Jt, Qt) | 0, it = (it = it + Math.imul(Jt, ar) | 0) + Math.imul(ur, Qt) | 0, nt = nt + Math.imul(ur, ar) | 0, st = st + Math.imul(qt, nr) | 0, it = (it = it + Math.imul(qt, yr) | 0) + Math.imul(er, nr) | 0, nt = nt + Math.imul(er, yr) | 0, st = st + Math.imul(It, fr) | 0, it = (it = it + Math.imul(It, gr) | 0) + Math.imul(Ft, fr) | 0, nt = nt + Math.imul(Ft, gr) | 0, st = st + Math.imul(mt, br) | 0, it = (it = it + Math.imul(mt, $r) | 0) + Math.imul(St, br) | 0, nt = nt + Math.imul(St, $r) | 0;
    var qr = (yt + (st = st + Math.imul(gt, Br) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, Mr) | 0) + Math.imul(xt, Br) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, Mr) | 0) + (it >>> 13) | 0) + (qr >>> 26) | 0, qr &= 67108863, st = Math.imul(ir, cr), it = (it = Math.imul(ir, Tr)) + Math.imul(wr, cr) | 0, nt = Math.imul(wr, Tr), st = st + Math.imul(Ht, Ot) | 0, it = (it = it + Math.imul(Ht, Nt) | 0) + Math.imul(Kt, Ot) | 0, nt = nt + Math.imul(Kt, Nt) | 0, st = st + Math.imul(vt, Wt) | 0, it = (it = it + Math.imul(vt, Zt) | 0) + Math.imul(kt, Wt) | 0, nt = nt + Math.imul(kt, Zt) | 0, st = st + Math.imul(lr, zt) | 0, it = (it = it + Math.imul(lr, Xt) | 0) + Math.imul(kr, zt) | 0, nt = nt + Math.imul(kr, Xt) | 0, st = st + Math.imul(dr, Qt) | 0, it = (it = it + Math.imul(dr, ar) | 0) + Math.imul(Pr, Qt) | 0, nt = nt + Math.imul(Pr, ar) | 0, st = st + Math.imul(Jt, nr) | 0, it = (it = it + Math.imul(Jt, yr) | 0) + Math.imul(ur, nr) | 0, nt = nt + Math.imul(ur, yr) | 0, st = st + Math.imul(qt, fr) | 0, it = (it = it + Math.imul(qt, gr) | 0) + Math.imul(er, fr) | 0, nt = nt + Math.imul(er, gr) | 0, st = st + Math.imul(It, br) | 0, it = (it = it + Math.imul(It, $r) | 0) + Math.imul(Ft, br) | 0, nt = nt + Math.imul(Ft, $r) | 0, st = st + Math.imul(mt, Br) | 0, it = (it = it + Math.imul(mt, Mr) | 0) + Math.imul(St, Br) | 0, nt = nt + Math.imul(St, Mr) | 0;
    var Wr = (yt + (st = st + Math.imul(gt, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(gt, Nr) | 0) + Math.imul(xt, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(xt, Nr) | 0) + (it >>> 13) | 0) + (Wr >>> 26) | 0, Wr &= 67108863, st = Math.imul(ir, Ot), it = (it = Math.imul(ir, Nt)) + Math.imul(wr, Ot) | 0, nt = Math.imul(wr, Nt), st = st + Math.imul(Ht, Wt) | 0, it = (it = it + Math.imul(Ht, Zt) | 0) + Math.imul(Kt, Wt) | 0, nt = nt + Math.imul(Kt, Zt) | 0, st = st + Math.imul(vt, zt) | 0, it = (it = it + Math.imul(vt, Xt) | 0) + Math.imul(kt, zt) | 0, nt = nt + Math.imul(kt, Xt) | 0, st = st + Math.imul(lr, Qt) | 0, it = (it = it + Math.imul(lr, ar) | 0) + Math.imul(kr, Qt) | 0, nt = nt + Math.imul(kr, ar) | 0, st = st + Math.imul(dr, nr) | 0, it = (it = it + Math.imul(dr, yr) | 0) + Math.imul(Pr, nr) | 0, nt = nt + Math.imul(Pr, yr) | 0, st = st + Math.imul(Jt, fr) | 0, it = (it = it + Math.imul(Jt, gr) | 0) + Math.imul(ur, fr) | 0, nt = nt + Math.imul(ur, gr) | 0, st = st + Math.imul(qt, br) | 0, it = (it = it + Math.imul(qt, $r) | 0) + Math.imul(er, br) | 0, nt = nt + Math.imul(er, $r) | 0, st = st + Math.imul(It, Br) | 0, it = (it = it + Math.imul(It, Mr) | 0) + Math.imul(Ft, Br) | 0, nt = nt + Math.imul(Ft, Mr) | 0;
    var Gr = (yt + (st = st + Math.imul(mt, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(mt, Nr) | 0) + Math.imul(St, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(St, Nr) | 0) + (it >>> 13) | 0) + (Gr >>> 26) | 0, Gr &= 67108863, st = Math.imul(ir, Wt), it = (it = Math.imul(ir, Zt)) + Math.imul(wr, Wt) | 0, nt = Math.imul(wr, Zt), st = st + Math.imul(Ht, zt) | 0, it = (it = it + Math.imul(Ht, Xt) | 0) + Math.imul(Kt, zt) | 0, nt = nt + Math.imul(Kt, Xt) | 0, st = st + Math.imul(vt, Qt) | 0, it = (it = it + Math.imul(vt, ar) | 0) + Math.imul(kt, Qt) | 0, nt = nt + Math.imul(kt, ar) | 0, st = st + Math.imul(lr, nr) | 0, it = (it = it + Math.imul(lr, yr) | 0) + Math.imul(kr, nr) | 0, nt = nt + Math.imul(kr, yr) | 0, st = st + Math.imul(dr, fr) | 0, it = (it = it + Math.imul(dr, gr) | 0) + Math.imul(Pr, fr) | 0, nt = nt + Math.imul(Pr, gr) | 0, st = st + Math.imul(Jt, br) | 0, it = (it = it + Math.imul(Jt, $r) | 0) + Math.imul(ur, br) | 0, nt = nt + Math.imul(ur, $r) | 0, st = st + Math.imul(qt, Br) | 0, it = (it = it + Math.imul(qt, Mr) | 0) + Math.imul(er, Br) | 0, nt = nt + Math.imul(er, Mr) | 0;
    var Vr = (yt + (st = st + Math.imul(It, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(It, Nr) | 0) + Math.imul(Ft, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(Ft, Nr) | 0) + (it >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, st = Math.imul(ir, zt), it = (it = Math.imul(ir, Xt)) + Math.imul(wr, zt) | 0, nt = Math.imul(wr, Xt), st = st + Math.imul(Ht, Qt) | 0, it = (it = it + Math.imul(Ht, ar) | 0) + Math.imul(Kt, Qt) | 0, nt = nt + Math.imul(Kt, ar) | 0, st = st + Math.imul(vt, nr) | 0, it = (it = it + Math.imul(vt, yr) | 0) + Math.imul(kt, nr) | 0, nt = nt + Math.imul(kt, yr) | 0, st = st + Math.imul(lr, fr) | 0, it = (it = it + Math.imul(lr, gr) | 0) + Math.imul(kr, fr) | 0, nt = nt + Math.imul(kr, gr) | 0, st = st + Math.imul(dr, br) | 0, it = (it = it + Math.imul(dr, $r) | 0) + Math.imul(Pr, br) | 0, nt = nt + Math.imul(Pr, $r) | 0, st = st + Math.imul(Jt, Br) | 0, it = (it = it + Math.imul(Jt, Mr) | 0) + Math.imul(ur, Br) | 0, nt = nt + Math.imul(ur, Mr) | 0;
    var Xr = (yt + (st = st + Math.imul(qt, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(qt, Nr) | 0) + Math.imul(er, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(er, Nr) | 0) + (it >>> 13) | 0) + (Xr >>> 26) | 0, Xr &= 67108863, st = Math.imul(ir, Qt), it = (it = Math.imul(ir, ar)) + Math.imul(wr, Qt) | 0, nt = Math.imul(wr, ar), st = st + Math.imul(Ht, nr) | 0, it = (it = it + Math.imul(Ht, yr) | 0) + Math.imul(Kt, nr) | 0, nt = nt + Math.imul(Kt, yr) | 0, st = st + Math.imul(vt, fr) | 0, it = (it = it + Math.imul(vt, gr) | 0) + Math.imul(kt, fr) | 0, nt = nt + Math.imul(kt, gr) | 0, st = st + Math.imul(lr, br) | 0, it = (it = it + Math.imul(lr, $r) | 0) + Math.imul(kr, br) | 0, nt = nt + Math.imul(kr, $r) | 0, st = st + Math.imul(dr, Br) | 0, it = (it = it + Math.imul(dr, Mr) | 0) + Math.imul(Pr, Br) | 0, nt = nt + Math.imul(Pr, Mr) | 0;
    var Yr = (yt + (st = st + Math.imul(Jt, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(Jt, Nr) | 0) + Math.imul(ur, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(ur, Nr) | 0) + (it >>> 13) | 0) + (Yr >>> 26) | 0, Yr &= 67108863, st = Math.imul(ir, nr), it = (it = Math.imul(ir, yr)) + Math.imul(wr, nr) | 0, nt = Math.imul(wr, yr), st = st + Math.imul(Ht, fr) | 0, it = (it = it + Math.imul(Ht, gr) | 0) + Math.imul(Kt, fr) | 0, nt = nt + Math.imul(Kt, gr) | 0, st = st + Math.imul(vt, br) | 0, it = (it = it + Math.imul(vt, $r) | 0) + Math.imul(kt, br) | 0, nt = nt + Math.imul(kt, $r) | 0, st = st + Math.imul(lr, Br) | 0, it = (it = it + Math.imul(lr, Mr) | 0) + Math.imul(kr, Br) | 0, nt = nt + Math.imul(kr, Mr) | 0;
    var Jr = (yt + (st = st + Math.imul(dr, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(dr, Nr) | 0) + Math.imul(Pr, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(Pr, Nr) | 0) + (it >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, st = Math.imul(ir, fr), it = (it = Math.imul(ir, gr)) + Math.imul(wr, fr) | 0, nt = Math.imul(wr, gr), st = st + Math.imul(Ht, br) | 0, it = (it = it + Math.imul(Ht, $r) | 0) + Math.imul(Kt, br) | 0, nt = nt + Math.imul(Kt, $r) | 0, st = st + Math.imul(vt, Br) | 0, it = (it = it + Math.imul(vt, Mr) | 0) + Math.imul(kt, Br) | 0, nt = nt + Math.imul(kt, Mr) | 0;
    var Zr = (yt + (st = st + Math.imul(lr, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(lr, Nr) | 0) + Math.imul(kr, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(kr, Nr) | 0) + (it >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, st = Math.imul(ir, br), it = (it = Math.imul(ir, $r)) + Math.imul(wr, br) | 0, nt = Math.imul(wr, $r), st = st + Math.imul(Ht, Br) | 0, it = (it = it + Math.imul(Ht, Mr) | 0) + Math.imul(Kt, Br) | 0, nt = nt + Math.imul(Kt, Mr) | 0;
    var Qr = (yt + (st = st + Math.imul(vt, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(vt, Nr) | 0) + Math.imul(kt, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(kt, Nr) | 0) + (it >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, st = Math.imul(ir, Br), it = (it = Math.imul(ir, Mr)) + Math.imul(wr, Br) | 0, nt = Math.imul(wr, Mr);
    var en = (yt + (st = st + Math.imul(Ht, xr) | 0) | 0) + ((8191 & (it = (it = it + Math.imul(Ht, Nr) | 0) + Math.imul(Kt, xr) | 0)) << 13) | 0;
    yt = ((nt = nt + Math.imul(Kt, Nr) | 0) + (it >>> 13) | 0) + (en >>> 26) | 0, en &= 67108863;
    var tn = (yt + (st = Math.imul(ir, xr)) | 0) + ((8191 & (it = (it = Math.imul(ir, Nr)) + Math.imul(wr, xr) | 0)) << 13) | 0;
    return yt = ((nt = Math.imul(wr, Nr)) + (it >>> 13) | 0) + (tn >>> 26) | 0, tn &= 67108863, ct[0] = Cr, ct[1] = Rr, ct[2] = Dr, ct[3] = jr, ct[4] = Lr, ct[5] = Hr, ct[6] = Ur, ct[7] = Fr, ct[8] = qr, ct[9] = Wr, ct[10] = Gr, ct[11] = Vr, ct[12] = Xr, ct[13] = Yr, ct[14] = Jr, ct[15] = Zr, ct[16] = Qr, ct[17] = en, ct[18] = tn, yt !== 0 && (ct[19] = yt, Ce.length++), Ce;
  };
  function ht(at, lt, Ce) {
    return new bt().mulp(at, lt, Ce);
  }
  function bt(at, lt) {
    this.x = at, this.y = lt;
  }
  Math.imul || (dt = ut), re.prototype.mulTo = function(at, lt) {
    var Ce, st = this.length + at.length;
    return Ce = this.length === 10 && at.length === 10 ? dt(this, at, lt) : st < 63 ? ut(this, at, lt) : st < 1024 ? function(it, nt, ot) {
      ot.negative = nt.negative ^ it.negative, ot.length = it.length + nt.length;
      for (var ke = 0, ct = 0, yt = 0; yt < ot.length - 1; yt++) {
        var $t = ct;
        ct = 0;
        for (var gt = 67108863 & ke, xt = Math.min(yt, nt.length - 1), At = Math.max(0, yt - it.length + 1); At <= xt; At++) {
          var mt = yt - At, St = (0 | it.words[mt]) * (0 | nt.words[At]), Mt = 67108863 & St;
          gt = 67108863 & (Mt = Mt + gt | 0), ct += ($t = ($t = $t + (St / 67108864 | 0) | 0) + (Mt >>> 26) | 0) >>> 26, $t &= 67108863;
        }
        ot.words[yt] = gt, ke = $t, $t = ct;
      }
      return ke !== 0 ? ot.words[yt] = ke : ot.length--, ot.strip();
    }(this, at, lt) : ht(this, at, lt), Ce;
  }, bt.prototype.makeRBT = function(at) {
    for (var lt = new Array(at), Ce = re.prototype._countBits(at) - 1, st = 0; st < at; st++) lt[st] = this.revBin(st, Ce, at);
    return lt;
  }, bt.prototype.revBin = function(at, lt, Ce) {
    if (at === 0 || at === Ce - 1) return at;
    for (var st = 0, it = 0; it < lt; it++) st |= (1 & at) << lt - it - 1, at >>= 1;
    return st;
  }, bt.prototype.permute = function(at, lt, Ce, st, it, nt) {
    for (var ot = 0; ot < nt; ot++) st[ot] = lt[at[ot]], it[ot] = Ce[at[ot]];
  }, bt.prototype.transform = function(at, lt, Ce, st, it, nt) {
    this.permute(nt, at, lt, Ce, st, it);
    for (var ot = 1; ot < it; ot <<= 1) for (var ke = ot << 1, ct = Math.cos(2 * Math.PI / ke), yt = Math.sin(2 * Math.PI / ke), $t = 0; $t < it; $t += ke) for (var gt = ct, xt = yt, At = 0; At < ot; At++) {
      var mt = Ce[$t + At], St = st[$t + At], Mt = Ce[$t + At + ot], It = st[$t + At + ot], Ft = gt * Mt - xt * It;
      It = gt * It + xt * Mt, Mt = Ft, Ce[$t + At] = mt + Mt, st[$t + At] = St + It, Ce[$t + At + ot] = mt - Mt, st[$t + At + ot] = St - It, At !== ke && (Ft = ct * gt - yt * xt, xt = ct * xt + yt * gt, gt = Ft);
    }
  }, bt.prototype.guessLen13b = function(at, lt) {
    var Ce = 1 | Math.max(lt, at), st = 1 & Ce, it = 0;
    for (Ce = Ce / 2 | 0; Ce; Ce >>>= 1) it++;
    return 1 << it + 1 + st;
  }, bt.prototype.conjugate = function(at, lt, Ce) {
    if (!(Ce <= 1)) for (var st = 0; st < Ce / 2; st++) {
      var it = at[st];
      at[st] = at[Ce - st - 1], at[Ce - st - 1] = it, it = lt[st], lt[st] = -lt[Ce - st - 1], lt[Ce - st - 1] = -it;
    }
  }, bt.prototype.normalize13b = function(at, lt) {
    for (var Ce = 0, st = 0; st < lt / 2; st++) {
      var it = 8192 * Math.round(at[2 * st + 1] / lt) + Math.round(at[2 * st] / lt) + Ce;
      at[st] = 67108863 & it, Ce = it < 67108864 ? 0 : it / 67108864 | 0;
    }
    return at;
  }, bt.prototype.convert13b = function(at, lt, Ce, st) {
    for (var it = 0, nt = 0; nt < lt; nt++) it += 0 | at[nt], Ce[2 * nt] = 8191 & it, it >>>= 13, Ce[2 * nt + 1] = 8191 & it, it >>>= 13;
    for (nt = 2 * lt; nt < st; ++nt) Ce[nt] = 0;
    V(it === 0), V(!(-8192 & it));
  }, bt.prototype.stub = function(at) {
    for (var lt = new Array(at), Ce = 0; Ce < at; Ce++) lt[Ce] = 0;
    return lt;
  }, bt.prototype.mulp = function(at, lt, Ce) {
    var st = 2 * this.guessLen13b(at.length, lt.length), it = this.makeRBT(st), nt = this.stub(st), ot = new Array(st), ke = new Array(st), ct = new Array(st), yt = new Array(st), $t = new Array(st), gt = new Array(st), xt = Ce.words;
    xt.length = st, this.convert13b(at.words, at.length, ot, st), this.convert13b(lt.words, lt.length, yt, st), this.transform(ot, nt, ke, ct, st, it), this.transform(yt, nt, $t, gt, st, it);
    for (var At = 0; At < st; At++) {
      var mt = ke[At] * $t[At] - ct[At] * gt[At];
      ct[At] = ke[At] * gt[At] + ct[At] * $t[At], ke[At] = mt;
    }
    return this.conjugate(ke, ct, st), this.transform(ke, ct, xt, nt, st, it), this.conjugate(xt, nt, st), this.normalize13b(xt, st), Ce.negative = at.negative ^ lt.negative, Ce.length = at.length + lt.length, Ce.strip();
  }, re.prototype.mul = function(at) {
    var lt = new re(null);
    return lt.words = new Array(this.length + at.length), this.mulTo(at, lt);
  }, re.prototype.mulf = function(at) {
    var lt = new re(null);
    return lt.words = new Array(this.length + at.length), ht(this, at, lt);
  }, re.prototype.imul = function(at) {
    return this.clone().mulTo(at, this);
  }, re.prototype.imuln = function(at) {
    V(typeof at == "number"), V(at < 67108864);
    for (var lt = 0, Ce = 0; Ce < this.length; Ce++) {
      var st = (0 | this.words[Ce]) * at, it = (67108863 & st) + (67108863 & lt);
      lt >>= 26, lt += st / 67108864 | 0, lt += it >>> 26, this.words[Ce] = 67108863 & it;
    }
    return lt !== 0 && (this.words[Ce] = lt, this.length++), this;
  }, re.prototype.muln = function(at) {
    return this.clone().imuln(at);
  }, re.prototype.sqr = function() {
    return this.mul(this);
  }, re.prototype.isqr = function() {
    return this.imul(this.clone());
  }, re.prototype.pow = function(at) {
    var lt = function(nt) {
      for (var ot = new Array(nt.bitLength()), ke = 0; ke < ot.length; ke++) {
        var ct = ke / 26 | 0, yt = ke % 26;
        ot[ke] = (nt.words[ct] & 1 << yt) >>> yt;
      }
      return ot;
    }(at);
    if (lt.length === 0) return new re(1);
    for (var Ce = this, st = 0; st < lt.length && lt[st] === 0; st++, Ce = Ce.sqr()) ;
    if (++st < lt.length) for (var it = Ce.sqr(); st < lt.length; st++, it = it.sqr()) lt[st] !== 0 && (Ce = Ce.mul(it));
    return Ce;
  }, re.prototype.iushln = function(at) {
    V(typeof at == "number" && at >= 0);
    var lt, Ce = at % 26, st = (at - Ce) / 26, it = 67108863 >>> 26 - Ce << 26 - Ce;
    if (Ce !== 0) {
      var nt = 0;
      for (lt = 0; lt < this.length; lt++) {
        var ot = this.words[lt] & it, ke = (0 | this.words[lt]) - ot << Ce;
        this.words[lt] = ke | nt, nt = ot >>> 26 - Ce;
      }
      nt && (this.words[lt] = nt, this.length++);
    }
    if (st !== 0) {
      for (lt = this.length - 1; lt >= 0; lt--) this.words[lt + st] = this.words[lt];
      for (lt = 0; lt < st; lt++) this.words[lt] = 0;
      this.length += st;
    }
    return this.strip();
  }, re.prototype.ishln = function(at) {
    return V(this.negative === 0), this.iushln(at);
  }, re.prototype.iushrn = function(at, lt, Ce) {
    var st;
    V(typeof at == "number" && at >= 0), st = lt ? (lt - lt % 26) / 26 : 0;
    var it = at % 26, nt = Math.min((at - it) / 26, this.length), ot = 67108863 ^ 67108863 >>> it << it, ke = Ce;
    if (st -= nt, st = Math.max(0, st), ke) {
      for (var ct = 0; ct < nt; ct++) ke.words[ct] = this.words[ct];
      ke.length = nt;
    }
    if (nt !== 0) if (this.length > nt) for (this.length -= nt, ct = 0; ct < this.length; ct++) this.words[ct] = this.words[ct + nt];
    else this.words[0] = 0, this.length = 1;
    var yt = 0;
    for (ct = this.length - 1; ct >= 0 && (yt !== 0 || ct >= st); ct--) {
      var $t = 0 | this.words[ct];
      this.words[ct] = yt << 26 - it | $t >>> it, yt = $t & ot;
    }
    return ke && yt !== 0 && (ke.words[ke.length++] = yt), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
  }, re.prototype.ishrn = function(at, lt, Ce) {
    return V(this.negative === 0), this.iushrn(at, lt, Ce);
  }, re.prototype.shln = function(at) {
    return this.clone().ishln(at);
  }, re.prototype.ushln = function(at) {
    return this.clone().iushln(at);
  }, re.prototype.shrn = function(at) {
    return this.clone().ishrn(at);
  }, re.prototype.ushrn = function(at) {
    return this.clone().iushrn(at);
  }, re.prototype.testn = function(at) {
    V(typeof at == "number" && at >= 0);
    var lt = at % 26, Ce = (at - lt) / 26, st = 1 << lt;
    return !(this.length <= Ce || !(this.words[Ce] & st));
  }, re.prototype.imaskn = function(at) {
    V(typeof at == "number" && at >= 0);
    var lt = at % 26, Ce = (at - lt) / 26;
    if (V(this.negative === 0, "imaskn works only with positive numbers"), this.length <= Ce) return this;
    if (lt !== 0 && Ce++, this.length = Math.min(Ce, this.length), lt !== 0) {
      var st = 67108863 ^ 67108863 >>> lt << lt;
      this.words[this.length - 1] &= st;
    }
    return this.strip();
  }, re.prototype.maskn = function(at) {
    return this.clone().imaskn(at);
  }, re.prototype.iaddn = function(at) {
    return V(typeof at == "number"), V(at < 67108864), at < 0 ? this.isubn(-at) : this.negative !== 0 ? this.length === 1 && (0 | this.words[0]) < at ? (this.words[0] = at - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(at), this.negative = 1, this) : this._iaddn(at);
  }, re.prototype._iaddn = function(at) {
    this.words[0] += at;
    for (var lt = 0; lt < this.length && this.words[lt] >= 67108864; lt++) this.words[lt] -= 67108864, lt === this.length - 1 ? this.words[lt + 1] = 1 : this.words[lt + 1]++;
    return this.length = Math.max(this.length, lt + 1), this;
  }, re.prototype.isubn = function(at) {
    if (V(typeof at == "number"), V(at < 67108864), at < 0) return this.iaddn(-at);
    if (this.negative !== 0) return this.negative = 0, this.iaddn(at), this.negative = 1, this;
    if (this.words[0] -= at, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
    else for (var lt = 0; lt < this.length && this.words[lt] < 0; lt++) this.words[lt] += 67108864, this.words[lt + 1] -= 1;
    return this.strip();
  }, re.prototype.addn = function(at) {
    return this.clone().iaddn(at);
  }, re.prototype.subn = function(at) {
    return this.clone().isubn(at);
  }, re.prototype.iabs = function() {
    return this.negative = 0, this;
  }, re.prototype.abs = function() {
    return this.clone().iabs();
  }, re.prototype._ishlnsubmul = function(at, lt, Ce) {
    var st, it, nt = at.length + Ce;
    this._expand(nt);
    var ot = 0;
    for (st = 0; st < at.length; st++) {
      it = (0 | this.words[st + Ce]) + ot;
      var ke = (0 | at.words[st]) * lt;
      ot = ((it -= 67108863 & ke) >> 26) - (ke / 67108864 | 0), this.words[st + Ce] = 67108863 & it;
    }
    for (; st < this.length - Ce; st++) ot = (it = (0 | this.words[st + Ce]) + ot) >> 26, this.words[st + Ce] = 67108863 & it;
    if (ot === 0) return this.strip();
    for (V(ot === -1), ot = 0, st = 0; st < this.length; st++) ot = (it = -(0 | this.words[st]) + ot) >> 26, this.words[st] = 67108863 & it;
    return this.negative = 1, this.strip();
  }, re.prototype._wordDiv = function(at, lt) {
    var Ce = (this.length, at.length), st = this.clone(), it = at, nt = 0 | it.words[it.length - 1];
    (Ce = 26 - this._countBits(nt)) != 0 && (it = it.ushln(Ce), st.iushln(Ce), nt = 0 | it.words[it.length - 1]);
    var ot, ke = st.length - it.length;
    if (lt !== "mod") {
      (ot = new re(null)).length = ke + 1, ot.words = new Array(ot.length);
      for (var ct = 0; ct < ot.length; ct++) ot.words[ct] = 0;
    }
    var yt = st.clone()._ishlnsubmul(it, 1, ke);
    yt.negative === 0 && (st = yt, ot && (ot.words[ke] = 1));
    for (var $t = ke - 1; $t >= 0; $t--) {
      var gt = 67108864 * (0 | st.words[it.length + $t]) + (0 | st.words[it.length + $t - 1]);
      for (gt = Math.min(gt / nt | 0, 67108863), st._ishlnsubmul(it, gt, $t); st.negative !== 0; ) gt--, st.negative = 0, st._ishlnsubmul(it, 1, $t), st.isZero() || (st.negative ^= 1);
      ot && (ot.words[$t] = gt);
    }
    return ot && ot.strip(), st.strip(), lt !== "div" && Ce !== 0 && st.iushrn(Ce), { div: ot || null, mod: st };
  }, re.prototype.divmod = function(at, lt, Ce) {
    return V(!at.isZero()), this.isZero() ? { div: new re(0), mod: new re(0) } : this.negative !== 0 && at.negative === 0 ? (nt = this.neg().divmod(at, lt), lt !== "mod" && (st = nt.div.neg()), lt !== "div" && (it = nt.mod.neg(), Ce && it.negative !== 0 && it.iadd(at)), { div: st, mod: it }) : this.negative === 0 && at.negative !== 0 ? (nt = this.divmod(at.neg(), lt), lt !== "mod" && (st = nt.div.neg()), { div: st, mod: nt.mod }) : this.negative & at.negative ? (nt = this.neg().divmod(at.neg(), lt), lt !== "div" && (it = nt.mod.neg(), Ce && it.negative !== 0 && it.isub(at)), { div: nt.div, mod: it }) : at.length > this.length || this.cmp(at) < 0 ? { div: new re(0), mod: this } : at.length === 1 ? lt === "div" ? { div: this.divn(at.words[0]), mod: null } : lt === "mod" ? { div: null, mod: new re(this.modn(at.words[0])) } : { div: this.divn(at.words[0]), mod: new re(this.modn(at.words[0])) } : this._wordDiv(at, lt);
    var st, it, nt;
  }, re.prototype.div = function(at) {
    return this.divmod(at, "div", !1).div;
  }, re.prototype.mod = function(at) {
    return this.divmod(at, "mod", !1).mod;
  }, re.prototype.umod = function(at) {
    return this.divmod(at, "mod", !0).mod;
  }, re.prototype.divRound = function(at) {
    var lt = this.divmod(at);
    if (lt.mod.isZero()) return lt.div;
    var Ce = lt.div.negative !== 0 ? lt.mod.isub(at) : lt.mod, st = at.ushrn(1), it = at.andln(1), nt = Ce.cmp(st);
    return nt < 0 || it === 1 && nt === 0 ? lt.div : lt.div.negative !== 0 ? lt.div.isubn(1) : lt.div.iaddn(1);
  }, re.prototype.modn = function(at) {
    V(at <= 67108863);
    for (var lt = (1 << 26) % at, Ce = 0, st = this.length - 1; st >= 0; st--) Ce = (lt * Ce + (0 | this.words[st])) % at;
    return Ce;
  }, re.prototype.idivn = function(at) {
    V(at <= 67108863);
    for (var lt = 0, Ce = this.length - 1; Ce >= 0; Ce--) {
      var st = (0 | this.words[Ce]) + 67108864 * lt;
      this.words[Ce] = st / at | 0, lt = st % at;
    }
    return this.strip();
  }, re.prototype.divn = function(at) {
    return this.clone().idivn(at);
  }, re.prototype.egcd = function(at) {
    V(at.negative === 0), V(!at.isZero());
    var lt = this, Ce = at.clone();
    lt = lt.negative !== 0 ? lt.umod(at) : lt.clone();
    for (var st = new re(1), it = new re(0), nt = new re(0), ot = new re(1), ke = 0; lt.isEven() && Ce.isEven(); ) lt.iushrn(1), Ce.iushrn(1), ++ke;
    for (var ct = Ce.clone(), yt = lt.clone(); !lt.isZero(); ) {
      for (var $t = 0, gt = 1; !(lt.words[0] & gt) && $t < 26; ++$t, gt <<= 1) ;
      if ($t > 0) for (lt.iushrn($t); $t-- > 0; ) (st.isOdd() || it.isOdd()) && (st.iadd(ct), it.isub(yt)), st.iushrn(1), it.iushrn(1);
      for (var xt = 0, At = 1; !(Ce.words[0] & At) && xt < 26; ++xt, At <<= 1) ;
      if (xt > 0) for (Ce.iushrn(xt); xt-- > 0; ) (nt.isOdd() || ot.isOdd()) && (nt.iadd(ct), ot.isub(yt)), nt.iushrn(1), ot.iushrn(1);
      lt.cmp(Ce) >= 0 ? (lt.isub(Ce), st.isub(nt), it.isub(ot)) : (Ce.isub(lt), nt.isub(st), ot.isub(it));
    }
    return { a: nt, b: ot, gcd: Ce.iushln(ke) };
  }, re.prototype._invmp = function(at) {
    V(at.negative === 0), V(!at.isZero());
    var lt = this, Ce = at.clone();
    lt = lt.negative !== 0 ? lt.umod(at) : lt.clone();
    for (var st, it = new re(1), nt = new re(0), ot = Ce.clone(); lt.cmpn(1) > 0 && Ce.cmpn(1) > 0; ) {
      for (var ke = 0, ct = 1; !(lt.words[0] & ct) && ke < 26; ++ke, ct <<= 1) ;
      if (ke > 0) for (lt.iushrn(ke); ke-- > 0; ) it.isOdd() && it.iadd(ot), it.iushrn(1);
      for (var yt = 0, $t = 1; !(Ce.words[0] & $t) && yt < 26; ++yt, $t <<= 1) ;
      if (yt > 0) for (Ce.iushrn(yt); yt-- > 0; ) nt.isOdd() && nt.iadd(ot), nt.iushrn(1);
      lt.cmp(Ce) >= 0 ? (lt.isub(Ce), it.isub(nt)) : (Ce.isub(lt), nt.isub(it));
    }
    return (st = lt.cmpn(1) === 0 ? it : nt).cmpn(0) < 0 && st.iadd(at), st;
  }, re.prototype.gcd = function(at) {
    if (this.isZero()) return at.abs();
    if (at.isZero()) return this.abs();
    var lt = this.clone(), Ce = at.clone();
    lt.negative = 0, Ce.negative = 0;
    for (var st = 0; lt.isEven() && Ce.isEven(); st++) lt.iushrn(1), Ce.iushrn(1);
    for (; ; ) {
      for (; lt.isEven(); ) lt.iushrn(1);
      for (; Ce.isEven(); ) Ce.iushrn(1);
      var it = lt.cmp(Ce);
      if (it < 0) {
        var nt = lt;
        lt = Ce, Ce = nt;
      } else if (it === 0 || Ce.cmpn(1) === 0) break;
      lt.isub(Ce);
    }
    return Ce.iushln(st);
  }, re.prototype.invm = function(at) {
    return this.egcd(at).a.umod(at);
  }, re.prototype.isEven = function() {
    return !(1 & this.words[0]);
  }, re.prototype.isOdd = function() {
    return !(1 & ~this.words[0]);
  }, re.prototype.andln = function(at) {
    return this.words[0] & at;
  }, re.prototype.bincn = function(at) {
    V(typeof at == "number");
    var lt = at % 26, Ce = (at - lt) / 26, st = 1 << lt;
    if (this.length <= Ce) return this._expand(Ce + 1), this.words[Ce] |= st, this;
    for (var it = st, nt = Ce; it !== 0 && nt < this.length; nt++) {
      var ot = 0 | this.words[nt];
      it = (ot += it) >>> 26, ot &= 67108863, this.words[nt] = ot;
    }
    return it !== 0 && (this.words[nt] = it, this.length++), this;
  }, re.prototype.isZero = function() {
    return this.length === 1 && this.words[0] === 0;
  }, re.prototype.cmpn = function(at) {
    var lt, Ce = at < 0;
    if (this.negative !== 0 && !Ce) return -1;
    if (this.negative === 0 && Ce) return 1;
    if (this.strip(), this.length > 1) lt = 1;
    else {
      Ce && (at = -at), V(at <= 67108863, "Number is too big");
      var st = 0 | this.words[0];
      lt = st === at ? 0 : st < at ? -1 : 1;
    }
    return this.negative !== 0 ? 0 | -lt : lt;
  }, re.prototype.cmp = function(at) {
    if (this.negative !== 0 && at.negative === 0) return -1;
    if (this.negative === 0 && at.negative !== 0) return 1;
    var lt = this.ucmp(at);
    return this.negative !== 0 ? 0 | -lt : lt;
  }, re.prototype.ucmp = function(at) {
    if (this.length > at.length) return 1;
    if (this.length < at.length) return -1;
    for (var lt = 0, Ce = this.length - 1; Ce >= 0; Ce--) {
      var st = 0 | this.words[Ce], it = 0 | at.words[Ce];
      if (st !== it) {
        st < it ? lt = -1 : st > it && (lt = 1);
        break;
      }
    }
    return lt;
  }, re.prototype.gtn = function(at) {
    return this.cmpn(at) === 1;
  }, re.prototype.gt = function(at) {
    return this.cmp(at) === 1;
  }, re.prototype.gten = function(at) {
    return this.cmpn(at) >= 0;
  }, re.prototype.gte = function(at) {
    return this.cmp(at) >= 0;
  }, re.prototype.ltn = function(at) {
    return this.cmpn(at) === -1;
  }, re.prototype.lt = function(at) {
    return this.cmp(at) === -1;
  }, re.prototype.lten = function(at) {
    return this.cmpn(at) <= 0;
  }, re.prototype.lte = function(at) {
    return this.cmp(at) <= 0;
  }, re.prototype.eqn = function(at) {
    return this.cmpn(at) === 0;
  }, re.prototype.eq = function(at) {
    return this.cmp(at) === 0;
  }, re.red = function(at) {
    return new Dt(at);
  }, re.prototype.toRed = function(at) {
    return V(!this.red, "Already a number in reduction context"), V(this.negative === 0, "red works only with positives"), at.convertTo(this)._forceRed(at);
  }, re.prototype.fromRed = function() {
    return V(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
  }, re.prototype._forceRed = function(at) {
    return this.red = at, this;
  }, re.prototype.forceRed = function(at) {
    return V(!this.red, "Already a number in reduction context"), this._forceRed(at);
  }, re.prototype.redAdd = function(at) {
    return V(this.red, "redAdd works only with red numbers"), this.red.add(this, at);
  }, re.prototype.redIAdd = function(at) {
    return V(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, at);
  }, re.prototype.redSub = function(at) {
    return V(this.red, "redSub works only with red numbers"), this.red.sub(this, at);
  }, re.prototype.redISub = function(at) {
    return V(this.red, "redISub works only with red numbers"), this.red.isub(this, at);
  }, re.prototype.redShl = function(at) {
    return V(this.red, "redShl works only with red numbers"), this.red.shl(this, at);
  }, re.prototype.redMul = function(at) {
    return V(this.red, "redMul works only with red numbers"), this.red._verify2(this, at), this.red.mul(this, at);
  }, re.prototype.redIMul = function(at) {
    return V(this.red, "redMul works only with red numbers"), this.red._verify2(this, at), this.red.imul(this, at);
  }, re.prototype.redSqr = function() {
    return V(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
  }, re.prototype.redISqr = function() {
    return V(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
  }, re.prototype.redSqrt = function() {
    return V(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
  }, re.prototype.redInvm = function() {
    return V(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
  }, re.prototype.redNeg = function() {
    return V(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
  }, re.prototype.redPow = function(at) {
    return V(this.red && !at.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, at);
  };
  var Tt = { k256: null, p224: null, p192: null, p25519: null };
  function wt(at, lt) {
    this.name = at, this.p = new re(lt, 16), this.n = this.p.bitLength(), this.k = new re(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
  }
  function Et() {
    wt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
  }
  function Rt() {
    wt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
  }
  function Bt() {
    wt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
  }
  function Pt() {
    wt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
  }
  function Dt(at) {
    if (typeof at == "string") {
      var lt = re._prime(at);
      this.m = lt.p, this.prime = lt;
    } else V(at.gtn(1), "modulus must be greater than 1"), this.m = at, this.prime = null;
  }
  function Gt(at) {
    Dt.call(this, at), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new re(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
  }
  wt.prototype._tmp = function() {
    var at = new re(null);
    return at.words = new Array(Math.ceil(this.n / 13)), at;
  }, wt.prototype.ireduce = function(at) {
    var lt, Ce = at;
    do
      this.split(Ce, this.tmp), lt = (Ce = (Ce = this.imulK(Ce)).iadd(this.tmp)).bitLength();
    while (lt > this.n);
    var st = lt < this.n ? -1 : Ce.ucmp(this.p);
    return st === 0 ? (Ce.words[0] = 0, Ce.length = 1) : st > 0 ? Ce.isub(this.p) : Ce.strip !== void 0 ? Ce.strip() : Ce._strip(), Ce;
  }, wt.prototype.split = function(at, lt) {
    at.iushrn(this.n, 0, lt);
  }, wt.prototype.imulK = function(at) {
    return at.imul(this.k);
  }, J(Et, wt), Et.prototype.split = function(at, lt) {
    for (var Ce = 4194303, st = Math.min(at.length, 9), it = 0; it < st; it++) lt.words[it] = at.words[it];
    if (lt.length = st, at.length <= 9) return at.words[0] = 0, void (at.length = 1);
    var nt = at.words[9];
    for (lt.words[lt.length++] = nt & Ce, it = 10; it < at.length; it++) {
      var ot = 0 | at.words[it];
      at.words[it - 10] = (ot & Ce) << 4 | nt >>> 22, nt = ot;
    }
    nt >>>= 22, at.words[it - 10] = nt, nt === 0 && at.length > 10 ? at.length -= 10 : at.length -= 9;
  }, Et.prototype.imulK = function(at) {
    at.words[at.length] = 0, at.words[at.length + 1] = 0, at.length += 2;
    for (var lt = 0, Ce = 0; Ce < at.length; Ce++) {
      var st = 0 | at.words[Ce];
      lt += 977 * st, at.words[Ce] = 67108863 & lt, lt = 64 * st + (lt / 67108864 | 0);
    }
    return at.words[at.length - 1] === 0 && (at.length--, at.words[at.length - 1] === 0 && at.length--), at;
  }, J(Rt, wt), J(Bt, wt), J(Pt, wt), Pt.prototype.imulK = function(at) {
    for (var lt = 0, Ce = 0; Ce < at.length; Ce++) {
      var st = 19 * (0 | at.words[Ce]) + lt, it = 67108863 & st;
      st >>>= 26, at.words[Ce] = it, lt = st;
    }
    return lt !== 0 && (at.words[at.length++] = lt), at;
  }, re._prime = function(at) {
    if (Tt[at]) return Tt[at];
    var lt;
    if (at === "k256") lt = new Et();
    else if (at === "p224") lt = new Rt();
    else if (at === "p192") lt = new Bt();
    else {
      if (at !== "p25519") throw new Error("Unknown prime " + at);
      lt = new Pt();
    }
    return Tt[at] = lt, lt;
  }, Dt.prototype._verify1 = function(at) {
    V(at.negative === 0, "red works only with positives"), V(at.red, "red works only with red numbers");
  }, Dt.prototype._verify2 = function(at, lt) {
    V(!(at.negative | lt.negative), "red works only with positives"), V(at.red && at.red === lt.red, "red works only with red numbers");
  }, Dt.prototype.imod = function(at) {
    return this.prime ? this.prime.ireduce(at)._forceRed(this) : at.umod(this.m)._forceRed(this);
  }, Dt.prototype.neg = function(at) {
    return at.isZero() ? at.clone() : this.m.sub(at)._forceRed(this);
  }, Dt.prototype.add = function(at, lt) {
    this._verify2(at, lt);
    var Ce = at.add(lt);
    return Ce.cmp(this.m) >= 0 && Ce.isub(this.m), Ce._forceRed(this);
  }, Dt.prototype.iadd = function(at, lt) {
    this._verify2(at, lt);
    var Ce = at.iadd(lt);
    return Ce.cmp(this.m) >= 0 && Ce.isub(this.m), Ce;
  }, Dt.prototype.sub = function(at, lt) {
    this._verify2(at, lt);
    var Ce = at.sub(lt);
    return Ce.cmpn(0) < 0 && Ce.iadd(this.m), Ce._forceRed(this);
  }, Dt.prototype.isub = function(at, lt) {
    this._verify2(at, lt);
    var Ce = at.isub(lt);
    return Ce.cmpn(0) < 0 && Ce.iadd(this.m), Ce;
  }, Dt.prototype.shl = function(at, lt) {
    return this._verify1(at), this.imod(at.ushln(lt));
  }, Dt.prototype.imul = function(at, lt) {
    return this._verify2(at, lt), this.imod(at.imul(lt));
  }, Dt.prototype.mul = function(at, lt) {
    return this._verify2(at, lt), this.imod(at.mul(lt));
  }, Dt.prototype.isqr = function(at) {
    return this.imul(at, at.clone());
  }, Dt.prototype.sqr = function(at) {
    return this.mul(at, at);
  }, Dt.prototype.sqrt = function(at) {
    if (at.isZero()) return at.clone();
    var lt = this.m.andln(3);
    if (V(lt % 2 == 1), lt === 3) {
      var Ce = this.m.add(new re(1)).iushrn(2);
      return this.pow(at, Ce);
    }
    for (var st = this.m.subn(1), it = 0; !st.isZero() && st.andln(1) === 0; ) it++, st.iushrn(1);
    V(!st.isZero());
    var nt = new re(1).toRed(this), ot = nt.redNeg(), ke = this.m.subn(1).iushrn(1), ct = this.m.bitLength();
    for (ct = new re(2 * ct * ct).toRed(this); this.pow(ct, ke).cmp(ot) !== 0; ) ct.redIAdd(ot);
    for (var yt = this.pow(ct, st), $t = this.pow(at, st.addn(1).iushrn(1)), gt = this.pow(at, st), xt = it; gt.cmp(nt) !== 0; ) {
      for (var At = gt, mt = 0; At.cmp(nt) !== 0; mt++) At = At.redSqr();
      V(mt < xt);
      var St = this.pow(yt, new re(1).iushln(xt - mt - 1));
      $t = $t.redMul(St), yt = St.redSqr(), gt = gt.redMul(yt), xt = mt;
    }
    return $t;
  }, Dt.prototype.invm = function(at) {
    var lt = at._invmp(this.m);
    return lt.negative !== 0 ? (lt.negative = 0, this.imod(lt).redNeg()) : this.imod(lt);
  }, Dt.prototype.pow = function(at, lt) {
    if (lt.isZero()) return new re(1).toRed(this);
    if (lt.cmpn(1) === 0) return at.clone();
    var Ce = new Array(16);
    Ce[0] = new re(1).toRed(this), Ce[1] = at;
    for (var st = 2; st < Ce.length; st++) Ce[st] = this.mul(Ce[st - 1], at);
    var it = Ce[0], nt = 0, ot = 0, ke = lt.bitLength() % 26;
    for (ke === 0 && (ke = 26), st = lt.length - 1; st >= 0; st--) {
      for (var ct = lt.words[st], yt = ke - 1; yt >= 0; yt--) {
        var $t = ct >> yt & 1;
        it !== Ce[0] && (it = this.sqr(it)), $t !== 0 || nt !== 0 ? (nt <<= 1, nt |= $t, (++ot == 4 || st === 0 && yt === 0) && (it = this.mul(it, Ce[nt]), ot = 0, nt = 0)) : ot = 0;
      }
      ke = 26;
    }
    return it;
  }, Dt.prototype.convertTo = function(at) {
    var lt = at.umod(this.m);
    return lt === at ? lt.clone() : lt;
  }, Dt.prototype.convertFrom = function(at) {
    var lt = at.clone();
    return lt.red = null, lt;
  }, re.mont = function(at) {
    return new Gt(at);
  }, J(Gt, Dt), Gt.prototype.convertTo = function(at) {
    return this.imod(at.ushln(this.shift));
  }, Gt.prototype.convertFrom = function(at) {
    var lt = this.imod(at.mul(this.rinv));
    return lt.red = null, lt;
  }, Gt.prototype.imul = function(at, lt) {
    if (at.isZero() || lt.isZero()) return at.words[0] = 0, at.length = 1, at;
    var Ce = at.imul(lt), st = Ce.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), it = Ce.isub(st).iushrn(this.shift), nt = it;
    return it.cmp(this.m) >= 0 ? nt = it.isub(this.m) : it.cmpn(0) < 0 && (nt = it.iadd(this.m)), nt._forceRed(this);
  }, Gt.prototype.mul = function(at, lt) {
    if (at.isZero() || lt.isZero()) return new re(0)._forceRed(this);
    var Ce = at.mul(lt), st = Ce.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), it = Ce.isub(st).iushrn(this.shift), nt = it;
    return it.cmp(this.m) >= 0 ? nt = it.isub(this.m) : it.cmpn(0) < 0 && (nt = it.iadd(this.m)), nt._forceRed(this);
  }, Gt.prototype.invm = function(at) {
    return this.imod(at._invmp(this.m).mul(this.r2))._forceRed(this);
  };
}(bn$1, commonjsGlobal);
var bnExports$1 = bn$1.exports, brorand = { exports: {} }, hasRequiredBrorand, mr, hasRequiredMr, generatePrime, hasRequiredGeneratePrime;
function requireBrorand() {
  if (hasRequiredBrorand) return brorand.exports;
  var B;
  function L(J) {
    this.rand = J;
  }
  if (hasRequiredBrorand = 1, brorand.exports = function(J) {
    return B || (B = new L(null)), B.generate(J);
  }, brorand.exports.Rand = L, L.prototype.generate = function(J) {
    return this._rand(J);
  }, L.prototype._rand = function(J) {
    if (this.rand.getBytes) return this.rand.getBytes(J);
    for (var re = new Uint8Array(J), ne = 0; ne < re.length; ne++) re[ne] = this.rand.getByte();
    return re;
  }, typeof self == "object") self.crypto && self.crypto.getRandomValues ? L.prototype._rand = function(J) {
    var re = new Uint8Array(J);
    return self.crypto.getRandomValues(re), re;
  } : self.msCrypto && self.msCrypto.getRandomValues ? L.prototype._rand = function(J) {
    var re = new Uint8Array(J);
    return self.msCrypto.getRandomValues(re), re;
  } : typeof window == "object" && (L.prototype._rand = function() {
    throw new Error("Not implemented yet");
  });
  else try {
    var V = requireCryptoBrowserify();
    if (typeof V.randomBytes != "function") throw new Error("Not supported");
    L.prototype._rand = function(J) {
      return V.randomBytes(J);
    };
  } catch {
  }
  return brorand.exports;
}
function requireMr() {
  if (hasRequiredMr) return mr;
  hasRequiredMr = 1;
  var B = bnExports$1, L = requireBrorand();
  function V(J) {
    this.rand = J || new L.Rand();
  }
  return mr = V, V.create = function(J) {
    return new V(J);
  }, V.prototype._randbelow = function(J) {
    var re = J.bitLength(), ne = Math.ceil(re / 8);
    do
      var ie = new B(this.rand.generate(ne));
    while (ie.cmp(J) >= 0);
    return ie;
  }, V.prototype._randrange = function(J, re) {
    var ne = re.sub(J);
    return J.add(this._randbelow(ne));
  }, V.prototype.test = function(J, re, ne) {
    var ie = J.bitLength(), oe = B.mont(J), pe = new B(1).toRed(oe);
    re || (re = Math.max(1, ie / 48 | 0));
    for (var ce = J.subn(1), Oe = 0; !ce.testn(Oe); Oe++) ;
    for (var rt = J.shrn(Oe), ut = ce.toRed(oe); re > 0; re--) {
      var dt = this._randrange(new B(2), ce);
      ne && ne(dt);
      var ht = dt.toRed(oe).redPow(rt);
      if (ht.cmp(pe) !== 0 && ht.cmp(ut) !== 0) {
        for (var bt = 1; bt < Oe; bt++) {
          if ((ht = ht.redSqr()).cmp(pe) === 0) return !1;
          if (ht.cmp(ut) === 0) break;
        }
        if (bt === Oe) return !1;
      }
    }
    return !0;
  }, V.prototype.getDivisor = function(J, re) {
    var ne = J.bitLength(), ie = B.mont(J), oe = new B(1).toRed(ie);
    re || (re = Math.max(1, ne / 48 | 0));
    for (var pe = J.subn(1), ce = 0; !pe.testn(ce); ce++) ;
    for (var Oe = J.shrn(ce), rt = pe.toRed(ie); re > 0; re--) {
      var ut = this._randrange(new B(2), pe), dt = J.gcd(ut);
      if (dt.cmpn(1) !== 0) return dt;
      var ht = ut.toRed(ie).redPow(Oe);
      if (ht.cmp(oe) !== 0 && ht.cmp(rt) !== 0) {
        for (var bt = 1; bt < ce; bt++) {
          if ((ht = ht.redSqr()).cmp(oe) === 0) return ht.fromRed().subn(1).gcd(J);
          if (ht.cmp(rt) === 0) break;
        }
        if (bt === ce) return (ht = ht.redSqr()).fromRed().subn(1).gcd(J);
      }
    }
    return !1;
  }, mr;
}
function requireGeneratePrime() {
  if (hasRequiredGeneratePrime) return generatePrime;
  hasRequiredGeneratePrime = 1;
  var B = browserExports;
  generatePrime = bt, bt.simpleSieve = dt, bt.fermatTest = ht;
  var L = bnExports$1, V = new L(24), J = new (requireMr())(), re = new L(1), ne = new L(2), ie = new L(5);
  new L(16), new L(8);
  var oe = new L(10), pe = new L(3);
  new L(7);
  var ce = new L(11), Oe = new L(4);
  new L(12);
  var rt = null;
  function ut() {
    if (rt !== null) return rt;
    var Tt = [];
    Tt[0] = 2;
    for (var wt = 1, Et = 3; Et < 1048576; Et += 2) {
      for (var Rt = Math.ceil(Math.sqrt(Et)), Bt = 0; Bt < wt && Tt[Bt] <= Rt && Et % Tt[Bt] != 0; Bt++) ;
      wt !== Bt && Tt[Bt] <= Rt || (Tt[wt++] = Et);
    }
    return rt = Tt, Tt;
  }
  function dt(Tt) {
    for (var wt = ut(), Et = 0; Et < wt.length; Et++) if (Tt.modn(wt[Et]) === 0) return Tt.cmpn(wt[Et]) === 0;
    return !0;
  }
  function ht(Tt) {
    var wt = L.mont(Tt);
    return ne.toRed(wt).redPow(Tt.subn(1)).fromRed().cmpn(1) === 0;
  }
  function bt(Tt, wt) {
    if (Tt < 16) return new L(wt === 2 || wt === 5 ? [140, 123] : [140, 39]);
    var Et, Rt;
    for (wt = new L(wt); ; ) {
      for (Et = new L(B(Math.ceil(Tt / 8))); Et.bitLength() > Tt; ) Et.ishrn(1);
      if (Et.isEven() && Et.iadd(re), Et.testn(1) || Et.iadd(ne), wt.cmp(ne)) {
        if (!wt.cmp(ie)) for (; Et.mod(oe).cmp(pe); ) Et.iadd(Oe);
      } else for (; Et.mod(V).cmp(ce); ) Et.iadd(Oe);
      if (dt(Rt = Et.shrn(1)) && dt(Et) && ht(Rt) && ht(Et) && J.test(Rt) && J.test(Et)) return Et;
    }
  }
  return generatePrime;
}
const modp1 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff" }, modp2 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff" }, modp5 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff" }, modp14 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff" }, modp15 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff" }, modp16 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff" }, modp17 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff" }, modp18 = { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff" }, require$$1$1 = { modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18 };
var dh, hasRequiredDh, hasRequiredBrowser$2;
function requireDh() {
  if (hasRequiredDh) return dh;
  hasRequiredDh = 1;
  var B = bnExports$1, L = new (requireMr())(), V = new B(24), J = new B(11), re = new B(10), ne = new B(3), ie = new B(7), oe = requireGeneratePrime(), pe = browserExports;
  function ce(ht, bt) {
    return bt = bt || "utf8", Buffer$D.isBuffer(ht) || (ht = new Buffer$D(ht, bt)), this._pub = new B(ht), this;
  }
  function Oe(ht, bt) {
    return bt = bt || "utf8", Buffer$D.isBuffer(ht) || (ht = new Buffer$D(ht, bt)), this._priv = new B(ht), this;
  }
  dh = ut;
  var rt = {};
  function ut(ht, bt, Tt) {
    this.setGenerator(bt), this.__prime = new B(ht), this._prime = B.mont(this.__prime), this._primeLen = ht.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, Tt ? (this.setPublicKey = ce, this.setPrivateKey = Oe) : this._primeCode = 8;
  }
  function dt(ht, bt) {
    var Tt = new Buffer$D(ht.toArray());
    return bt ? Tt.toString(bt) : Tt;
  }
  return Object.defineProperty(ut.prototype, "verifyError", { enumerable: !0, get: function() {
    return typeof this._primeCode != "number" && (this._primeCode = function(ht, bt) {
      var Tt = bt.toString("hex"), wt = [Tt, ht.toString(16)].join("_");
      if (wt in rt) return rt[wt];
      var Et, Rt = 0;
      if (ht.isEven() || !oe.simpleSieve || !oe.fermatTest(ht) || !L.test(ht)) return Rt += 1, Rt += Tt === "02" || Tt === "05" ? 8 : 4, rt[wt] = Rt, Rt;
      switch (L.test(ht.shrn(1)) || (Rt += 2), Tt) {
        case "02":
          ht.mod(V).cmp(J) && (Rt += 8);
          break;
        case "05":
          (Et = ht.mod(re)).cmp(ne) && Et.cmp(ie) && (Rt += 8);
          break;
        default:
          Rt += 4;
      }
      return rt[wt] = Rt, Rt;
    }(this.__prime, this.__gen)), this._primeCode;
  } }), ut.prototype.generateKeys = function() {
    return this._priv || (this._priv = new B(pe(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
  }, ut.prototype.computeSecret = function(ht) {
    var bt = (ht = (ht = new B(ht)).toRed(this._prime)).redPow(this._priv).fromRed(), Tt = new Buffer$D(bt.toArray()), wt = this.getPrime();
    if (Tt.length < wt.length) {
      var Et = new Buffer$D(wt.length - Tt.length);
      Et.fill(0), Tt = Buffer$D.concat([Et, Tt]);
    }
    return Tt;
  }, ut.prototype.getPublicKey = function(ht) {
    return dt(this._pub, ht);
  }, ut.prototype.getPrivateKey = function(ht) {
    return dt(this._priv, ht);
  }, ut.prototype.getPrime = function(ht) {
    return dt(this.__prime, ht);
  }, ut.prototype.getGenerator = function(ht) {
    return dt(this._gen, ht);
  }, ut.prototype.setGenerator = function(ht, bt) {
    return bt = bt || "utf8", Buffer$D.isBuffer(ht) || (ht = new Buffer$D(ht, bt)), this.__gen = ht, this._gen = new B(ht), this;
  }, dh;
}
function requireBrowser$2() {
  if (hasRequiredBrowser$2) return browser$4;
  hasRequiredBrowser$2 = 1;
  var B = requireGeneratePrime(), L = require$$1$1, V = requireDh(), J = { binary: !0, hex: !0, base64: !0 };
  return browser$4.DiffieHellmanGroup = browser$4.createDiffieHellmanGroup = browser$4.getDiffieHellman = function(re) {
    var ne = new Buffer$D(L[re].prime, "hex"), ie = new Buffer$D(L[re].gen, "hex");
    return new V(ne, ie);
  }, browser$4.createDiffieHellman = browser$4.DiffieHellman = function re(ne, ie, oe, pe) {
    return Buffer$D.isBuffer(ie) || J[ie] === void 0 ? re(ne, "binary", ie, oe) : (ie = ie || "binary", pe = pe || "binary", oe = oe || new Buffer$D([2]), Buffer$D.isBuffer(oe) || (oe = new Buffer$D(oe, pe)), typeof ne == "number" ? new V(B(ne, oe), oe, !0) : (Buffer$D.isBuffer(ne) || (ne = new Buffer$D(ne, ie)), new V(ne, oe, !0)));
  }, browser$4;
}
var readableBrowser = { exports: {} }, processNextickArgs = { exports: {} };
function nextTick(B, L, V, J) {
  if (typeof B != "function") throw new TypeError('"callback" argument must be a function');
  var re, ne, ie = arguments.length;
  switch (ie) {
    case 0:
    case 1:
      return process$1.nextTick(B);
    case 2:
      return process$1.nextTick(function() {
        B.call(null, L);
      });
    case 3:
      return process$1.nextTick(function() {
        B.call(null, L, V);
      });
    case 4:
      return process$1.nextTick(function() {
        B.call(null, L, V, J);
      });
    default:
      for (re = new Array(ie - 1), ne = 0; ne < re.length; ) re[ne++] = arguments[ne];
      return process$1.nextTick(function() {
        B.apply(null, re);
      });
  }
}
process$1 === void 0 || !process$1.version || process$1.version.indexOf("v0.") === 0 || process$1.version.indexOf("v1.") === 0 && process$1.version.indexOf("v1.8.") !== 0 ? processNextickArgs.exports = { nextTick } : processNextickArgs.exports = process$1;
var processNextickArgsExports = processNextickArgs.exports, toString = {}.toString, isarray = Array.isArray || function(B) {
  return toString.call(B) == "[object Array]";
}, streamBrowser = eventsExports.EventEmitter, safeBuffer$1 = { exports: {} };
(function(B, L) {
  var V = require$$1$2, J = V.Buffer;
  function re(ie, oe) {
    for (var pe in ie) oe[pe] = ie[pe];
  }
  function ne(ie, oe, pe) {
    return J(ie, oe, pe);
  }
  J.from && J.alloc && J.allocUnsafe && J.allocUnsafeSlow ? B.exports = V : (re(V, L), L.Buffer = ne), re(J, ne), ne.from = function(ie, oe, pe) {
    if (typeof ie == "number") throw new TypeError("Argument must not be a number");
    return J(ie, oe, pe);
  }, ne.alloc = function(ie, oe, pe) {
    if (typeof ie != "number") throw new TypeError("Argument must be a number");
    var ce = J(ie);
    return oe !== void 0 ? typeof pe == "string" ? ce.fill(oe, pe) : ce.fill(oe) : ce.fill(0), ce;
  }, ne.allocUnsafe = function(ie) {
    if (typeof ie != "number") throw new TypeError("Argument must be a number");
    return J(ie);
  }, ne.allocUnsafeSlow = function(ie) {
    if (typeof ie != "number") throw new TypeError("Argument must be a number");
    return V.SlowBuffer(ie);
  };
})(safeBuffer$1, safeBuffer$1.exports);
var safeBufferExports = safeBuffer$1.exports, util$2 = {};
function isArray(B) {
  return Array.isArray ? Array.isArray(B) : objectToString$1(B) === "[object Array]";
}
function isBoolean(B) {
  return typeof B == "boolean";
}
function isNull(B) {
  return B === null;
}
function isNullOrUndefined(B) {
  return B == null;
}
function isNumber$1(B) {
  return typeof B == "number";
}
function isString$2(B) {
  return typeof B == "string";
}
function isSymbol(B) {
  return typeof B == "symbol";
}
function isUndefined(B) {
  return B === void 0;
}
function isRegExp(B) {
  return objectToString$1(B) === "[object RegExp]";
}
function isObject$2(B) {
  return typeof B == "object" && B !== null;
}
function isDate(B) {
  return objectToString$1(B) === "[object Date]";
}
function isError(B) {
  return objectToString$1(B) === "[object Error]" || B instanceof Error;
}
function isFunction$1(B) {
  return typeof B == "function";
}
function isPrimitive(B) {
  return B === null || typeof B == "boolean" || typeof B == "number" || typeof B == "string" || typeof B == "symbol" || B === void 0;
}
function objectToString$1(B) {
  return Object.prototype.toString.call(B);
}
util$2.isArray = isArray, util$2.isBoolean = isBoolean, util$2.isNull = isNull, util$2.isNullOrUndefined = isNullOrUndefined, util$2.isNumber = isNumber$1, util$2.isString = isString$2, util$2.isSymbol = isSymbol, util$2.isUndefined = isUndefined, util$2.isRegExp = isRegExp, util$2.isObject = isObject$2, util$2.isDate = isDate, util$2.isError = isError, util$2.isFunction = isFunction$1, util$2.isPrimitive = isPrimitive, util$2.isBuffer = require$$1$2.Buffer.isBuffer;
var BufferList = { exports: {} }, hasRequiredBufferList;
function requireBufferList() {
  return hasRequiredBufferList || (hasRequiredBufferList = 1, function(B) {
    var L = safeBufferExports.Buffer, V = util$3;
    function J(re, ne, ie) {
      re.copy(ne, ie);
    }
    B.exports = function() {
      function re() {
        (function(ne, ie) {
          if (!(ne instanceof ie)) throw new TypeError("Cannot call a class as a function");
        })(this, re), this.head = null, this.tail = null, this.length = 0;
      }
      return re.prototype.push = function(ne) {
        var ie = { data: ne, next: null };
        this.length > 0 ? this.tail.next = ie : this.head = ie, this.tail = ie, ++this.length;
      }, re.prototype.unshift = function(ne) {
        var ie = { data: ne, next: this.head };
        this.length === 0 && (this.tail = ie), this.head = ie, ++this.length;
      }, re.prototype.shift = function() {
        if (this.length !== 0) {
          var ne = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, ne;
        }
      }, re.prototype.clear = function() {
        this.head = this.tail = null, this.length = 0;
      }, re.prototype.join = function(ne) {
        if (this.length === 0) return "";
        for (var ie = this.head, oe = "" + ie.data; ie = ie.next; ) oe += ne + ie.data;
        return oe;
      }, re.prototype.concat = function(ne) {
        if (this.length === 0) return L.alloc(0);
        for (var ie = L.allocUnsafe(ne >>> 0), oe = this.head, pe = 0; oe; ) J(oe.data, ie, pe), pe += oe.data.length, oe = oe.next;
        return ie;
      }, re;
    }(), V && V.inspect && V.inspect.custom && (B.exports.prototype[V.inspect.custom] = function() {
      var re = V.inspect({ length: this.length });
      return this.constructor.name + " " + re;
    });
  }(BufferList)), BufferList.exports;
}
var pna = processNextickArgsExports;
function destroy(B, L) {
  var V = this, J = this._readableState && this._readableState.destroyed, re = this._writableState && this._writableState.destroyed;
  return J || re ? (L ? L(B) : B && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, pna.nextTick(emitErrorNT, this, B)) : pna.nextTick(emitErrorNT, this, B)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(B || null, function(ne) {
    !L && ne ? V._writableState ? V._writableState.errorEmitted || (V._writableState.errorEmitted = !0, pna.nextTick(emitErrorNT, V, ne)) : pna.nextTick(emitErrorNT, V, ne) : L && L(ne);
  }), this);
}
function undestroy() {
  this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
}
function emitErrorNT(B, L) {
  B.emit("error", L);
}
var destroy_1 = { destroy, undestroy }, _stream_writable, hasRequired_stream_writable, _stream_duplex, hasRequired_stream_duplex, _stream_readable, hasRequired_stream_readable;
function require_stream_writable() {
  if (hasRequired_stream_writable) return _stream_writable;
  hasRequired_stream_writable = 1;
  var B = processNextickArgsExports;
  function L(Bt) {
    var Pt = this;
    this.next = null, this.entry = null, this.finish = function() {
      (function(Dt, Gt, at) {
        var lt = Dt.entry;
        for (Dt.entry = null; lt; ) {
          var Ce = lt.callback;
          Gt.pendingcb--, Ce(at), lt = lt.next;
        }
        Gt.corkedRequestsFree.next = Dt;
      })(Pt, Bt);
    };
  }
  _stream_writable = dt;
  var V, J = !process$1.browser && ["v0.10", "v0.9."].indexOf(process$1.version.slice(0, 5)) > -1 ? setImmediate : B.nextTick;
  dt.WritableState = ut;
  var re = Object.create(util$2);
  re.inherits = inherits_browserExports;
  var ne = { deprecate: browser$b }, ie = streamBrowser, oe = safeBufferExports.Buffer, pe = (commonjsGlobal !== void 0 ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
  }, ce, Oe = destroy_1;
  function rt() {
  }
  function ut(Bt, Pt) {
    V = V || require_stream_duplex(), Bt = Bt || {};
    var Dt = Pt instanceof V;
    this.objectMode = !!Bt.objectMode, Dt && (this.objectMode = this.objectMode || !!Bt.writableObjectMode);
    var Gt = Bt.highWaterMark, at = Bt.writableHighWaterMark, lt = this.objectMode ? 16 : 16384;
    this.highWaterMark = Gt || Gt === 0 ? Gt : Dt && (at || at === 0) ? at : lt, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
    var Ce = Bt.decodeStrings === !1;
    this.decodeStrings = !Ce, this.defaultEncoding = Bt.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(st) {
      (function(it, nt) {
        var ot = it._writableState, ke = ot.sync, ct = ot.writecb;
        if (function($t) {
          $t.writing = !1, $t.writecb = null, $t.length -= $t.writelen, $t.writelen = 0;
        }(ot), nt) (function($t, gt, xt, At, mt) {
          --gt.pendingcb, xt ? (B.nextTick(mt, At), B.nextTick(Rt, $t, gt), $t._writableState.errorEmitted = !0, $t.emit("error", At)) : (mt(At), $t._writableState.errorEmitted = !0, $t.emit("error", At), Rt($t, gt));
        })(it, ot, ke, nt, ct);
        else {
          var yt = wt(ot);
          yt || ot.corked || ot.bufferProcessing || !ot.bufferedRequest || Tt(it, ot), ke ? J(bt, it, ot, yt, ct) : bt(it, ot, yt, ct);
        }
      })(Pt, st);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new L(this);
  }
  function dt(Bt) {
    if (V = V || require_stream_duplex(), !(ce.call(dt, this) || this instanceof V)) return new dt(Bt);
    this._writableState = new ut(Bt, this), this.writable = !0, Bt && (typeof Bt.write == "function" && (this._write = Bt.write), typeof Bt.writev == "function" && (this._writev = Bt.writev), typeof Bt.destroy == "function" && (this._destroy = Bt.destroy), typeof Bt.final == "function" && (this._final = Bt.final)), ie.call(this);
  }
  function ht(Bt, Pt, Dt, Gt, at, lt, Ce) {
    Pt.writelen = Gt, Pt.writecb = Ce, Pt.writing = !0, Pt.sync = !0, Dt ? Bt._writev(at, Pt.onwrite) : Bt._write(at, lt, Pt.onwrite), Pt.sync = !1;
  }
  function bt(Bt, Pt, Dt, Gt) {
    Dt || function(at, lt) {
      lt.length === 0 && lt.needDrain && (lt.needDrain = !1, at.emit("drain"));
    }(Bt, Pt), Pt.pendingcb--, Gt(), Rt(Bt, Pt);
  }
  function Tt(Bt, Pt) {
    Pt.bufferProcessing = !0;
    var Dt = Pt.bufferedRequest;
    if (Bt._writev && Dt && Dt.next) {
      var Gt = Pt.bufferedRequestCount, at = new Array(Gt), lt = Pt.corkedRequestsFree;
      lt.entry = Dt;
      for (var Ce = 0, st = !0; Dt; ) at[Ce] = Dt, Dt.isBuf || (st = !1), Dt = Dt.next, Ce += 1;
      at.allBuffers = st, ht(Bt, Pt, !0, Pt.length, at, "", lt.finish), Pt.pendingcb++, Pt.lastBufferedRequest = null, lt.next ? (Pt.corkedRequestsFree = lt.next, lt.next = null) : Pt.corkedRequestsFree = new L(Pt), Pt.bufferedRequestCount = 0;
    } else {
      for (; Dt; ) {
        var it = Dt.chunk, nt = Dt.encoding, ot = Dt.callback;
        if (ht(Bt, Pt, !1, Pt.objectMode ? 1 : it.length, it, nt, ot), Dt = Dt.next, Pt.bufferedRequestCount--, Pt.writing) break;
      }
      Dt === null && (Pt.lastBufferedRequest = null);
    }
    Pt.bufferedRequest = Dt, Pt.bufferProcessing = !1;
  }
  function wt(Bt) {
    return Bt.ending && Bt.length === 0 && Bt.bufferedRequest === null && !Bt.finished && !Bt.writing;
  }
  function Et(Bt, Pt) {
    Bt._final(function(Dt) {
      Pt.pendingcb--, Dt && Bt.emit("error", Dt), Pt.prefinished = !0, Bt.emit("prefinish"), Rt(Bt, Pt);
    });
  }
  function Rt(Bt, Pt) {
    var Dt = wt(Pt);
    return Dt && (function(Gt, at) {
      at.prefinished || at.finalCalled || (typeof Gt._final == "function" ? (at.pendingcb++, at.finalCalled = !0, B.nextTick(Et, Gt, at)) : (at.prefinished = !0, Gt.emit("prefinish")));
    }(Bt, Pt), Pt.pendingcb === 0 && (Pt.finished = !0, Bt.emit("finish"))), Dt;
  }
  return re.inherits(dt, ie), ut.prototype.getBuffer = function() {
    for (var Bt = this.bufferedRequest, Pt = []; Bt; ) Pt.push(Bt), Bt = Bt.next;
    return Pt;
  }, function() {
    try {
      Object.defineProperty(ut.prototype, "buffer", { get: ne.deprecate(function() {
        return this.getBuffer();
      }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
    } catch {
    }
  }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (ce = Function.prototype[Symbol.hasInstance], Object.defineProperty(dt, Symbol.hasInstance, { value: function(Bt) {
    return !!ce.call(this, Bt) || this === dt && Bt && Bt._writableState instanceof ut;
  } })) : ce = function(Bt) {
    return Bt instanceof this;
  }, dt.prototype.pipe = function() {
    this.emit("error", new Error("Cannot pipe, not readable"));
  }, dt.prototype.write = function(Bt, Pt, Dt) {
    var Gt, at = this._writableState, lt = !1, Ce = !at.objectMode && (Gt = Bt, oe.isBuffer(Gt) || Gt instanceof pe);
    return Ce && !oe.isBuffer(Bt) && (Bt = function(st) {
      return oe.from(st);
    }(Bt)), typeof Pt == "function" && (Dt = Pt, Pt = null), Ce ? Pt = "buffer" : Pt || (Pt = at.defaultEncoding), typeof Dt != "function" && (Dt = rt), at.ended ? function(st, it) {
      var nt = new Error("write after end");
      st.emit("error", nt), B.nextTick(it, nt);
    }(this, Dt) : (Ce || function(st, it, nt, ot) {
      var ke = !0, ct = !1;
      return nt === null ? ct = new TypeError("May not write null values to stream") : typeof nt == "string" || nt === void 0 || it.objectMode || (ct = new TypeError("Invalid non-string/buffer chunk")), ct && (st.emit("error", ct), B.nextTick(ot, ct), ke = !1), ke;
    }(this, at, Bt, Dt)) && (at.pendingcb++, lt = function(st, it, nt, ot, ke, ct) {
      if (!nt) {
        var yt = function(At, mt, St) {
          return At.objectMode || At.decodeStrings === !1 || typeof mt != "string" || (mt = oe.from(mt, St)), mt;
        }(it, ot, ke);
        ot !== yt && (nt = !0, ke = "buffer", ot = yt);
      }
      var $t = it.objectMode ? 1 : ot.length;
      it.length += $t;
      var gt = it.length < it.highWaterMark;
      if (gt || (it.needDrain = !0), it.writing || it.corked) {
        var xt = it.lastBufferedRequest;
        it.lastBufferedRequest = { chunk: ot, encoding: ke, isBuf: nt, callback: ct, next: null }, xt ? xt.next = it.lastBufferedRequest : it.bufferedRequest = it.lastBufferedRequest, it.bufferedRequestCount += 1;
      } else ht(st, it, !1, $t, ot, ke, ct);
      return gt;
    }(this, at, Ce, Bt, Pt, Dt)), lt;
  }, dt.prototype.cork = function() {
    this._writableState.corked++;
  }, dt.prototype.uncork = function() {
    var Bt = this._writableState;
    Bt.corked && (Bt.corked--, Bt.writing || Bt.corked || Bt.bufferProcessing || !Bt.bufferedRequest || Tt(this, Bt));
  }, dt.prototype.setDefaultEncoding = function(Bt) {
    if (typeof Bt == "string" && (Bt = Bt.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((Bt + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + Bt);
    return this._writableState.defaultEncoding = Bt, this;
  }, Object.defineProperty(dt.prototype, "writableHighWaterMark", { enumerable: !1, get: function() {
    return this._writableState.highWaterMark;
  } }), dt.prototype._write = function(Bt, Pt, Dt) {
    Dt(new Error("_write() is not implemented"));
  }, dt.prototype._writev = null, dt.prototype.end = function(Bt, Pt, Dt) {
    var Gt = this._writableState;
    typeof Bt == "function" ? (Dt = Bt, Bt = null, Pt = null) : typeof Pt == "function" && (Dt = Pt, Pt = null), Bt != null && this.write(Bt, Pt), Gt.corked && (Gt.corked = 1, this.uncork()), Gt.ending || function(at, lt, Ce) {
      lt.ending = !0, Rt(at, lt), Ce && (lt.finished ? B.nextTick(Ce) : at.once("finish", Ce)), lt.ended = !0, at.writable = !1;
    }(this, Gt, Dt);
  }, Object.defineProperty(dt.prototype, "destroyed", { get: function() {
    return this._writableState !== void 0 && this._writableState.destroyed;
  }, set: function(Bt) {
    this._writableState && (this._writableState.destroyed = Bt);
  } }), dt.prototype.destroy = Oe.destroy, dt.prototype._undestroy = Oe.undestroy, dt.prototype._destroy = function(Bt, Pt) {
    this.end(), Pt(Bt);
  }, _stream_writable;
}
function require_stream_duplex() {
  if (hasRequired_stream_duplex) return _stream_duplex;
  hasRequired_stream_duplex = 1;
  var B = processNextickArgsExports, L = Object.keys || function(rt) {
    var ut = [];
    for (var dt in rt) ut.push(dt);
    return ut;
  };
  _stream_duplex = pe;
  var V = Object.create(util$2);
  V.inherits = inherits_browserExports;
  var J = require_stream_readable(), re = require_stream_writable();
  V.inherits(pe, J);
  for (var ne = L(re.prototype), ie = 0; ie < ne.length; ie++) {
    var oe = ne[ie];
    pe.prototype[oe] || (pe.prototype[oe] = re.prototype[oe]);
  }
  function pe(rt) {
    if (!(this instanceof pe)) return new pe(rt);
    J.call(this, rt), re.call(this, rt), rt && rt.readable === !1 && (this.readable = !1), rt && rt.writable === !1 && (this.writable = !1), this.allowHalfOpen = !0, rt && rt.allowHalfOpen === !1 && (this.allowHalfOpen = !1), this.once("end", ce);
  }
  function ce() {
    this.allowHalfOpen || this._writableState.ended || B.nextTick(Oe, this);
  }
  function Oe(rt) {
    rt.end();
  }
  return Object.defineProperty(pe.prototype, "writableHighWaterMark", { enumerable: !1, get: function() {
    return this._writableState.highWaterMark;
  } }), Object.defineProperty(pe.prototype, "destroyed", { get: function() {
    return this._readableState !== void 0 && this._writableState !== void 0 && this._readableState.destroyed && this._writableState.destroyed;
  }, set: function(rt) {
    this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed = rt, this._writableState.destroyed = rt);
  } }), pe.prototype._destroy = function(rt, ut) {
    this.push(null), this.end(), B.nextTick(ut, rt);
  }, _stream_duplex;
}
function require_stream_readable() {
  if (hasRequired_stream_readable) return _stream_readable;
  hasRequired_stream_readable = 1;
  var B = processNextickArgsExports;
  _stream_readable = bt;
  var L, V = isarray;
  bt.ReadableState = ht, eventsExports.EventEmitter;
  var J = function(ke, ct) {
    return ke.listeners(ct).length;
  }, re = streamBrowser, ne = safeBufferExports.Buffer, ie = (commonjsGlobal !== void 0 ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
  }, oe = Object.create(util$2);
  oe.inherits = inherits_browserExports;
  var pe = util$3, ce = void 0;
  ce = pe && pe.debuglog ? pe.debuglog("stream") : function() {
  };
  var Oe, rt = requireBufferList(), ut = destroy_1;
  oe.inherits(bt, re);
  var dt = ["error", "close", "destroy", "pause", "resume"];
  function ht(ke, ct) {
    ke = ke || {};
    var yt = ct instanceof (L = L || require_stream_duplex());
    this.objectMode = !!ke.objectMode, yt && (this.objectMode = this.objectMode || !!ke.readableObjectMode);
    var $t = ke.highWaterMark, gt = ke.readableHighWaterMark, xt = this.objectMode ? 16 : 16384;
    this.highWaterMark = $t || $t === 0 ? $t : yt && (gt || gt === 0) ? gt : xt, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new rt(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = ke.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, ke.encoding && (Oe || (Oe = string_decoder.StringDecoder), this.decoder = new Oe(ke.encoding), this.encoding = ke.encoding);
  }
  function bt(ke) {
    if (L = L || require_stream_duplex(), !(this instanceof bt)) return new bt(ke);
    this._readableState = new ht(ke, this), this.readable = !0, ke && (typeof ke.read == "function" && (this._read = ke.read), typeof ke.destroy == "function" && (this._destroy = ke.destroy)), re.call(this);
  }
  function Tt(ke, ct, yt, $t, gt) {
    var xt, At = ke._readableState;
    return ct === null ? (At.reading = !1, function(mt, St) {
      if (!St.ended) {
        if (St.decoder) {
          var Mt = St.decoder.end();
          Mt && Mt.length && (St.buffer.push(Mt), St.length += St.objectMode ? 1 : Mt.length);
        }
        St.ended = !0, Bt(mt);
      }
    }(ke, At)) : (gt || (xt = function(mt, St) {
      var Mt;
      It = St, ne.isBuffer(It) || It instanceof ie || typeof St == "string" || St === void 0 || mt.objectMode || (Mt = new TypeError("Invalid non-string/buffer chunk"));
      var It;
      return Mt;
    }(At, ct)), xt ? ke.emit("error", xt) : At.objectMode || ct && ct.length > 0 ? (typeof ct == "string" || At.objectMode || Object.getPrototypeOf(ct) === ne.prototype || (ct = function(mt) {
      return ne.from(mt);
    }(ct)), $t ? At.endEmitted ? ke.emit("error", new Error("stream.unshift() after end event")) : wt(ke, At, ct, !0) : At.ended ? ke.emit("error", new Error("stream.push() after EOF")) : (At.reading = !1, At.decoder && !yt ? (ct = At.decoder.write(ct), At.objectMode || ct.length !== 0 ? wt(ke, At, ct, !1) : Dt(ke, At)) : wt(ke, At, ct, !1))) : $t || (At.reading = !1)), function(mt) {
      return !mt.ended && (mt.needReadable || mt.length < mt.highWaterMark || mt.length === 0);
    }(At);
  }
  function wt(ke, ct, yt, $t) {
    ct.flowing && ct.length === 0 && !ct.sync ? (ke.emit("data", yt), ke.read(0)) : (ct.length += ct.objectMode ? 1 : yt.length, $t ? ct.buffer.unshift(yt) : ct.buffer.push(yt), ct.needReadable && Bt(ke)), Dt(ke, ct);
  }
  Object.defineProperty(bt.prototype, "destroyed", { get: function() {
    return this._readableState !== void 0 && this._readableState.destroyed;
  }, set: function(ke) {
    this._readableState && (this._readableState.destroyed = ke);
  } }), bt.prototype.destroy = ut.destroy, bt.prototype._undestroy = ut.undestroy, bt.prototype._destroy = function(ke, ct) {
    this.push(null), ct(ke);
  }, bt.prototype.push = function(ke, ct) {
    var yt, $t = this._readableState;
    return $t.objectMode ? yt = !0 : typeof ke == "string" && ((ct = ct || $t.defaultEncoding) !== $t.encoding && (ke = ne.from(ke, ct), ct = ""), yt = !0), Tt(this, ke, ct, !1, yt);
  }, bt.prototype.unshift = function(ke) {
    return Tt(this, ke, null, !0, !1);
  }, bt.prototype.isPaused = function() {
    return this._readableState.flowing === !1;
  }, bt.prototype.setEncoding = function(ke) {
    return Oe || (Oe = string_decoder.StringDecoder), this._readableState.decoder = new Oe(ke), this._readableState.encoding = ke, this;
  };
  var Et = 8388608;
  function Rt(ke, ct) {
    return ke <= 0 || ct.length === 0 && ct.ended ? 0 : ct.objectMode ? 1 : ke != ke ? ct.flowing && ct.length ? ct.buffer.head.data.length : ct.length : (ke > ct.highWaterMark && (ct.highWaterMark = function(yt) {
      return yt >= Et ? yt = Et : (yt--, yt |= yt >>> 1, yt |= yt >>> 2, yt |= yt >>> 4, yt |= yt >>> 8, yt |= yt >>> 16, yt++), yt;
    }(ke)), ke <= ct.length ? ke : ct.ended ? ct.length : (ct.needReadable = !0, 0));
  }
  function Bt(ke) {
    var ct = ke._readableState;
    ct.needReadable = !1, ct.emittedReadable || (ce("emitReadable", ct.flowing), ct.emittedReadable = !0, ct.sync ? B.nextTick(Pt, ke) : Pt(ke));
  }
  function Pt(ke) {
    ce("emit readable"), ke.emit("readable"), Ce(ke);
  }
  function Dt(ke, ct) {
    ct.readingMore || (ct.readingMore = !0, B.nextTick(Gt, ke, ct));
  }
  function Gt(ke, ct) {
    for (var yt = ct.length; !ct.reading && !ct.flowing && !ct.ended && ct.length < ct.highWaterMark && (ce("maybeReadMore read 0"), ke.read(0), yt !== ct.length); ) yt = ct.length;
    ct.readingMore = !1;
  }
  function at(ke) {
    ce("readable nexttick read 0"), ke.read(0);
  }
  function lt(ke, ct) {
    ct.reading || (ce("resume read 0"), ke.read(0)), ct.resumeScheduled = !1, ct.awaitDrain = 0, ke.emit("resume"), Ce(ke), ct.flowing && !ct.reading && ke.read(0);
  }
  function Ce(ke) {
    var ct = ke._readableState;
    for (ce("flow", ct.flowing); ct.flowing && ke.read() !== null; ) ;
  }
  function st(ke, ct) {
    return ct.length === 0 ? null : (ct.objectMode ? yt = ct.buffer.shift() : !ke || ke >= ct.length ? (yt = ct.decoder ? ct.buffer.join("") : ct.buffer.length === 1 ? ct.buffer.head.data : ct.buffer.concat(ct.length), ct.buffer.clear()) : yt = function($t, gt, xt) {
      var At;
      return $t < gt.head.data.length ? (At = gt.head.data.slice(0, $t), gt.head.data = gt.head.data.slice($t)) : At = $t === gt.head.data.length ? gt.shift() : xt ? function(mt, St) {
        var Mt = St.head, It = 1, Ft = Mt.data;
        for (mt -= Ft.length; Mt = Mt.next; ) {
          var Vt = Mt.data, qt = mt > Vt.length ? Vt.length : mt;
          if (qt === Vt.length ? Ft += Vt : Ft += Vt.slice(0, mt), (mt -= qt) === 0) {
            qt === Vt.length ? (++It, Mt.next ? St.head = Mt.next : St.head = St.tail = null) : (St.head = Mt, Mt.data = Vt.slice(qt));
            break;
          }
          ++It;
        }
        return St.length -= It, Ft;
      }($t, gt) : function(mt, St) {
        var Mt = ne.allocUnsafe(mt), It = St.head, Ft = 1;
        for (It.data.copy(Mt), mt -= It.data.length; It = It.next; ) {
          var Vt = It.data, qt = mt > Vt.length ? Vt.length : mt;
          if (Vt.copy(Mt, Mt.length - mt, 0, qt), (mt -= qt) === 0) {
            qt === Vt.length ? (++Ft, It.next ? St.head = It.next : St.head = St.tail = null) : (St.head = It, It.data = Vt.slice(qt));
            break;
          }
          ++Ft;
        }
        return St.length -= Ft, Mt;
      }($t, gt), At;
    }(ke, ct.buffer, ct.decoder), yt);
    var yt;
  }
  function it(ke) {
    var ct = ke._readableState;
    if (ct.length > 0) throw new Error('"endReadable()" called on non-empty stream');
    ct.endEmitted || (ct.ended = !0, B.nextTick(nt, ct, ke));
  }
  function nt(ke, ct) {
    ke.endEmitted || ke.length !== 0 || (ke.endEmitted = !0, ct.readable = !1, ct.emit("end"));
  }
  function ot(ke, ct) {
    for (var yt = 0, $t = ke.length; yt < $t; yt++) if (ke[yt] === ct) return yt;
    return -1;
  }
  return bt.prototype.read = function(ke) {
    ce("read", ke), ke = parseInt(ke, 10);
    var ct = this._readableState, yt = ke;
    if (ke !== 0 && (ct.emittedReadable = !1), ke === 0 && ct.needReadable && (ct.length >= ct.highWaterMark || ct.ended)) return ce("read: emitReadable", ct.length, ct.ended), ct.length === 0 && ct.ended ? it(this) : Bt(this), null;
    if ((ke = Rt(ke, ct)) === 0 && ct.ended) return ct.length === 0 && it(this), null;
    var $t, gt = ct.needReadable;
    return ce("need readable", gt), (ct.length === 0 || ct.length - ke < ct.highWaterMark) && ce("length less than watermark", gt = !0), ct.ended || ct.reading ? ce("reading or ended", gt = !1) : gt && (ce("do read"), ct.reading = !0, ct.sync = !0, ct.length === 0 && (ct.needReadable = !0), this._read(ct.highWaterMark), ct.sync = !1, ct.reading || (ke = Rt(yt, ct))), ($t = ke > 0 ? st(ke, ct) : null) === null ? (ct.needReadable = !0, ke = 0) : ct.length -= ke, ct.length === 0 && (ct.ended || (ct.needReadable = !0), yt !== ke && ct.ended && it(this)), $t !== null && this.emit("data", $t), $t;
  }, bt.prototype._read = function(ke) {
    this.emit("error", new Error("_read() is not implemented"));
  }, bt.prototype.pipe = function(ke, ct) {
    var yt = this, $t = this._readableState;
    switch ($t.pipesCount) {
      case 0:
        $t.pipes = ke;
        break;
      case 1:
        $t.pipes = [$t.pipes, ke];
        break;
      default:
        $t.pipes.push(ke);
    }
    $t.pipesCount += 1, ce("pipe count=%d opts=%j", $t.pipesCount, ct);
    var gt = (!ct || ct.end !== !1) && ke !== process$1.stdout && ke !== process$1.stderr ? At : er;
    function xt(tr, Jt) {
      ce("onunpipe"), tr === yt && Jt && Jt.hasUnpiped === !1 && (Jt.hasUnpiped = !0, ce("cleanup"), ke.removeListener("close", Vt), ke.removeListener("finish", qt), ke.removeListener("drain", mt), ke.removeListener("error", Ft), ke.removeListener("unpipe", xt), yt.removeListener("end", At), yt.removeListener("end", er), yt.removeListener("data", It), St = !0, !$t.awaitDrain || ke._writableState && !ke._writableState.needDrain || mt());
    }
    function At() {
      ce("onend"), ke.end();
    }
    $t.endEmitted ? B.nextTick(gt) : yt.once("end", gt), ke.on("unpipe", xt);
    var mt = /* @__PURE__ */ function(tr) {
      return function() {
        var Jt = tr._readableState;
        ce("pipeOnDrain", Jt.awaitDrain), Jt.awaitDrain && Jt.awaitDrain--, Jt.awaitDrain === 0 && J(tr, "data") && (Jt.flowing = !0, Ce(tr));
      };
    }(yt);
    ke.on("drain", mt);
    var St = !1, Mt = !1;
    function It(tr) {
      ce("ondata"), Mt = !1, ke.write(tr) !== !1 || Mt || (($t.pipesCount === 1 && $t.pipes === ke || $t.pipesCount > 1 && ot($t.pipes, ke) !== -1) && !St && (ce("false write response, pause", $t.awaitDrain), $t.awaitDrain++, Mt = !0), yt.pause());
    }
    function Ft(tr) {
      ce("onerror", tr), er(), ke.removeListener("error", Ft), J(ke, "error") === 0 && ke.emit("error", tr);
    }
    function Vt() {
      ke.removeListener("finish", qt), er();
    }
    function qt() {
      ce("onfinish"), ke.removeListener("close", Vt), er();
    }
    function er() {
      ce("unpipe"), yt.unpipe(ke);
    }
    return yt.on("data", It), function(tr, Jt, ur) {
      if (typeof tr.prependListener == "function") return tr.prependListener(Jt, ur);
      tr._events && tr._events[Jt] ? V(tr._events[Jt]) ? tr._events[Jt].unshift(ur) : tr._events[Jt] = [ur, tr._events[Jt]] : tr.on(Jt, ur);
    }(ke, "error", Ft), ke.once("close", Vt), ke.once("finish", qt), ke.emit("pipe", yt), $t.flowing || (ce("pipe resume"), yt.resume()), ke;
  }, bt.prototype.unpipe = function(ke) {
    var ct = this._readableState, yt = { hasUnpiped: !1 };
    if (ct.pipesCount === 0) return this;
    if (ct.pipesCount === 1) return ke && ke !== ct.pipes || (ke || (ke = ct.pipes), ct.pipes = null, ct.pipesCount = 0, ct.flowing = !1, ke && ke.emit("unpipe", this, yt)), this;
    if (!ke) {
      var $t = ct.pipes, gt = ct.pipesCount;
      ct.pipes = null, ct.pipesCount = 0, ct.flowing = !1;
      for (var xt = 0; xt < gt; xt++) $t[xt].emit("unpipe", this, { hasUnpiped: !1 });
      return this;
    }
    var At = ot(ct.pipes, ke);
    return At === -1 || (ct.pipes.splice(At, 1), ct.pipesCount -= 1, ct.pipesCount === 1 && (ct.pipes = ct.pipes[0]), ke.emit("unpipe", this, yt)), this;
  }, bt.prototype.on = function(ke, ct) {
    var yt = re.prototype.on.call(this, ke, ct);
    if (ke === "data") this._readableState.flowing !== !1 && this.resume();
    else if (ke === "readable") {
      var $t = this._readableState;
      $t.endEmitted || $t.readableListening || ($t.readableListening = $t.needReadable = !0, $t.emittedReadable = !1, $t.reading ? $t.length && Bt(this) : B.nextTick(at, this));
    }
    return yt;
  }, bt.prototype.addListener = bt.prototype.on, bt.prototype.resume = function() {
    var ke = this._readableState;
    return ke.flowing || (ce("resume"), ke.flowing = !0, function(ct, yt) {
      yt.resumeScheduled || (yt.resumeScheduled = !0, B.nextTick(lt, ct, yt));
    }(this, ke)), this;
  }, bt.prototype.pause = function() {
    return ce("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (ce("pause"), this._readableState.flowing = !1, this.emit("pause")), this;
  }, bt.prototype.wrap = function(ke) {
    var ct = this, yt = this._readableState, $t = !1;
    for (var gt in ke.on("end", function() {
      if (ce("wrapped end"), yt.decoder && !yt.ended) {
        var At = yt.decoder.end();
        At && At.length && ct.push(At);
      }
      ct.push(null);
    }), ke.on("data", function(At) {
      ce("wrapped data"), yt.decoder && (At = yt.decoder.write(At)), yt.objectMode && At == null || (yt.objectMode || At && At.length) && (ct.push(At) || ($t = !0, ke.pause()));
    }), ke) this[gt] === void 0 && typeof ke[gt] == "function" && (this[gt] = /* @__PURE__ */ function(At) {
      return function() {
        return ke[At].apply(ke, arguments);
      };
    }(gt));
    for (var xt = 0; xt < dt.length; xt++) ke.on(dt[xt], this.emit.bind(this, dt[xt]));
    return this._read = function(At) {
      ce("wrapped _read", At), $t && ($t = !1, ke.resume());
    }, this;
  }, Object.defineProperty(bt.prototype, "readableHighWaterMark", { enumerable: !1, get: function() {
    return this._readableState.highWaterMark;
  } }), bt._fromList = st, _stream_readable;
}
var _stream_transform = Transform$1, Duplex = require_stream_duplex(), util$1 = Object.create(util$2);
function afterTransform(B, L) {
  var V = this._transformState;
  V.transforming = !1;
  var J = V.writecb;
  if (!J) return this.emit("error", new Error("write callback called multiple times"));
  V.writechunk = null, V.writecb = null, L != null && this.push(L), J(B);
  var re = this._readableState;
  re.reading = !1, (re.needReadable || re.length < re.highWaterMark) && this._read(re.highWaterMark);
}
function Transform$1(B) {
  if (!(this instanceof Transform$1)) return new Transform$1(B);
  Duplex.call(this, B), this._transformState = { afterTransform: afterTransform.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = !0, this._readableState.sync = !1, B && (typeof B.transform == "function" && (this._transform = B.transform), typeof B.flush == "function" && (this._flush = B.flush)), this.on("prefinish", prefinish);
}
function prefinish() {
  var B = this;
  typeof this._flush == "function" ? this._flush(function(L, V) {
    done(B, L, V);
  }) : done(this, null, null);
}
function done(B, L, V) {
  if (L) return B.emit("error", L);
  if (V != null && B.push(V), B._writableState.length) throw new Error("Calling transform done when ws.length != 0");
  if (B._transformState.transforming) throw new Error("Calling transform done when still transforming");
  return B.push(null);
}
util$1.inherits = inherits_browserExports, util$1.inherits(Transform$1, Duplex), Transform$1.prototype.push = function(B, L) {
  return this._transformState.needTransform = !1, Duplex.prototype.push.call(this, B, L);
}, Transform$1.prototype._transform = function(B, L, V) {
  throw new Error("_transform() is not implemented");
}, Transform$1.prototype._write = function(B, L, V) {
  var J = this._transformState;
  if (J.writecb = V, J.writechunk = B, J.writeencoding = L, !J.transforming) {
    var re = this._readableState;
    (J.needTransform || re.needReadable || re.length < re.highWaterMark) && this._read(re.highWaterMark);
  }
}, Transform$1.prototype._read = function(B) {
  var L = this._transformState;
  L.writechunk !== null && L.writecb && !L.transforming ? (L.transforming = !0, this._transform(L.writechunk, L.writeencoding, L.afterTransform)) : L.needTransform = !0;
}, Transform$1.prototype._destroy = function(B, L) {
  var V = this;
  Duplex.prototype._destroy.call(this, B, function(J) {
    L(J), V.emit("close");
  });
};
var _stream_passthrough = PassThrough, Transform = _stream_transform, util = Object.create(util$2);
function PassThrough(B) {
  if (!(this instanceof PassThrough)) return new PassThrough(B);
  Transform.call(this, B);
}
util.inherits = inherits_browserExports, util.inherits(PassThrough, Transform), PassThrough.prototype._transform = function(B, L, V) {
  V(null, B);
}, function(B, L) {
  (L = B.exports = require_stream_readable()).Stream = L, L.Readable = L, L.Writable = require_stream_writable(), L.Duplex = require_stream_duplex(), L.Transform = _stream_transform, L.PassThrough = _stream_passthrough;
}(readableBrowser, readableBrowser.exports);
var readableBrowserExports = readableBrowser.exports, sign$1 = { exports: {} }, bn = { exports: {} };
bn.exports, function(B, L) {
  function V(Ce, st) {
    if (!Ce) throw new Error(st || "Assertion failed");
  }
  function J(Ce, st) {
    Ce.super_ = st;
    var it = function() {
    };
    it.prototype = st.prototype, Ce.prototype = new it(), Ce.prototype.constructor = Ce;
  }
  function re(Ce, st, it) {
    if (re.isBN(Ce)) return Ce;
    this.negative = 0, this.words = null, this.length = 0, this.red = null, Ce !== null && (st !== "le" && st !== "be" || (it = st, st = 10), this._init(Ce || 0, st || 10, it || "be"));
  }
  var ne;
  typeof B == "object" ? B.exports = re : L.BN = re, re.BN = re, re.wordSize = 26;
  try {
    ne = typeof window < "u" && window.Buffer !== void 0 ? window.Buffer : require$$1$2.Buffer;
  } catch {
  }
  function ie(Ce, st) {
    var it = Ce.charCodeAt(st);
    return it >= 48 && it <= 57 ? it - 48 : it >= 65 && it <= 70 ? it - 55 : it >= 97 && it <= 102 ? it - 87 : void V(!1, "Invalid character in " + Ce);
  }
  function oe(Ce, st, it) {
    var nt = ie(Ce, it);
    return it - 1 >= st && (nt |= ie(Ce, it - 1) << 4), nt;
  }
  function pe(Ce, st, it, nt) {
    for (var ot = 0, ke = 0, ct = Math.min(Ce.length, it), yt = st; yt < ct; yt++) {
      var $t = Ce.charCodeAt(yt) - 48;
      ot *= nt, ke = $t >= 49 ? $t - 49 + 10 : $t >= 17 ? $t - 17 + 10 : $t, V($t >= 0 && ke < nt, "Invalid character"), ot += ke;
    }
    return ot;
  }
  function ce(Ce, st) {
    Ce.words = st.words, Ce.length = st.length, Ce.negative = st.negative, Ce.red = st.red;
  }
  if (re.isBN = function(Ce) {
    return Ce instanceof re || Ce !== null && typeof Ce == "object" && Ce.constructor.wordSize === re.wordSize && Array.isArray(Ce.words);
  }, re.max = function(Ce, st) {
    return Ce.cmp(st) > 0 ? Ce : st;
  }, re.min = function(Ce, st) {
    return Ce.cmp(st) < 0 ? Ce : st;
  }, re.prototype._init = function(Ce, st, it) {
    if (typeof Ce == "number") return this._initNumber(Ce, st, it);
    if (typeof Ce == "object") return this._initArray(Ce, st, it);
    st === "hex" && (st = 16), V(st === (0 | st) && st >= 2 && st <= 36);
    var nt = 0;
    (Ce = Ce.toString().replace(/\s+/g, ""))[0] === "-" && (nt++, this.negative = 1), nt < Ce.length && (st === 16 ? this._parseHex(Ce, nt, it) : (this._parseBase(Ce, st, nt), it === "le" && this._initArray(this.toArray(), st, it)));
  }, re.prototype._initNumber = function(Ce, st, it) {
    Ce < 0 && (this.negative = 1, Ce = -Ce), Ce < 67108864 ? (this.words = [67108863 & Ce], this.length = 1) : Ce < 4503599627370496 ? (this.words = [67108863 & Ce, Ce / 67108864 & 67108863], this.length = 2) : (V(Ce < 9007199254740992), this.words = [67108863 & Ce, Ce / 67108864 & 67108863, 1], this.length = 3), it === "le" && this._initArray(this.toArray(), st, it);
  }, re.prototype._initArray = function(Ce, st, it) {
    if (V(typeof Ce.length == "number"), Ce.length <= 0) return this.words = [0], this.length = 1, this;
    this.length = Math.ceil(Ce.length / 3), this.words = new Array(this.length);
    for (var nt = 0; nt < this.length; nt++) this.words[nt] = 0;
    var ot, ke, ct = 0;
    if (it === "be") for (nt = Ce.length - 1, ot = 0; nt >= 0; nt -= 3) ke = Ce[nt] | Ce[nt - 1] << 8 | Ce[nt - 2] << 16, this.words[ot] |= ke << ct & 67108863, this.words[ot + 1] = ke >>> 26 - ct & 67108863, (ct += 24) >= 26 && (ct -= 26, ot++);
    else if (it === "le") for (nt = 0, ot = 0; nt < Ce.length; nt += 3) ke = Ce[nt] | Ce[nt + 1] << 8 | Ce[nt + 2] << 16, this.words[ot] |= ke << ct & 67108863, this.words[ot + 1] = ke >>> 26 - ct & 67108863, (ct += 24) >= 26 && (ct -= 26, ot++);
    return this._strip();
  }, re.prototype._parseHex = function(Ce, st, it) {
    this.length = Math.ceil((Ce.length - st) / 6), this.words = new Array(this.length);
    for (var nt = 0; nt < this.length; nt++) this.words[nt] = 0;
    var ot, ke = 0, ct = 0;
    if (it === "be") for (nt = Ce.length - 1; nt >= st; nt -= 2) ot = oe(Ce, st, nt) << ke, this.words[ct] |= 67108863 & ot, ke >= 18 ? (ke -= 18, ct += 1, this.words[ct] |= ot >>> 26) : ke += 8;
    else for (nt = (Ce.length - st) % 2 == 0 ? st + 1 : st; nt < Ce.length; nt += 2) ot = oe(Ce, st, nt) << ke, this.words[ct] |= 67108863 & ot, ke >= 18 ? (ke -= 18, ct += 1, this.words[ct] |= ot >>> 26) : ke += 8;
    this._strip();
  }, re.prototype._parseBase = function(Ce, st, it) {
    this.words = [0], this.length = 1;
    for (var nt = 0, ot = 1; ot <= 67108863; ot *= st) nt++;
    nt--, ot = ot / st | 0;
    for (var ke = Ce.length - it, ct = ke % nt, yt = Math.min(ke, ke - ct) + it, $t = 0, gt = it; gt < yt; gt += nt) $t = pe(Ce, gt, gt + nt, st), this.imuln(ot), this.words[0] + $t < 67108864 ? this.words[0] += $t : this._iaddn($t);
    if (ct !== 0) {
      var xt = 1;
      for ($t = pe(Ce, gt, Ce.length, st), gt = 0; gt < ct; gt++) xt *= st;
      this.imuln(xt), this.words[0] + $t < 67108864 ? this.words[0] += $t : this._iaddn($t);
    }
    this._strip();
  }, re.prototype.copy = function(Ce) {
    Ce.words = new Array(this.length);
    for (var st = 0; st < this.length; st++) Ce.words[st] = this.words[st];
    Ce.length = this.length, Ce.negative = this.negative, Ce.red = this.red;
  }, re.prototype._move = function(Ce) {
    ce(Ce, this);
  }, re.prototype.clone = function() {
    var Ce = new re(null);
    return this.copy(Ce), Ce;
  }, re.prototype._expand = function(Ce) {
    for (; this.length < Ce; ) this.words[this.length++] = 0;
    return this;
  }, re.prototype._strip = function() {
    for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
    return this._normSign();
  }, re.prototype._normSign = function() {
    return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
  }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
    re.prototype[Symbol.for("nodejs.util.inspect.custom")] = Oe;
  } catch {
    re.prototype.inspect = Oe;
  }
  else re.prototype.inspect = Oe;
  function Oe() {
    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
  }
  var rt = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], ut = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], dt = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
  function ht(Ce, st, it) {
    it.negative = st.negative ^ Ce.negative;
    var nt = Ce.length + st.length | 0;
    it.length = nt, nt = nt - 1 | 0;
    var ot = 0 | Ce.words[0], ke = 0 | st.words[0], ct = ot * ke, yt = 67108863 & ct, $t = ct / 67108864 | 0;
    it.words[0] = yt;
    for (var gt = 1; gt < nt; gt++) {
      for (var xt = $t >>> 26, At = 67108863 & $t, mt = Math.min(gt, st.length - 1), St = Math.max(0, gt - Ce.length + 1); St <= mt; St++) {
        var Mt = gt - St | 0;
        xt += (ct = (ot = 0 | Ce.words[Mt]) * (ke = 0 | st.words[St]) + At) / 67108864 | 0, At = 67108863 & ct;
      }
      it.words[gt] = 0 | At, $t = 0 | xt;
    }
    return $t !== 0 ? it.words[gt] = 0 | $t : it.length--, it._strip();
  }
  re.prototype.toString = function(Ce, st) {
    var it;
    if (st = 0 | st || 1, (Ce = Ce || 10) === 16 || Ce === "hex") {
      it = "";
      for (var nt = 0, ot = 0, ke = 0; ke < this.length; ke++) {
        var ct = this.words[ke], yt = (16777215 & (ct << nt | ot)).toString(16);
        ot = ct >>> 24 - nt & 16777215, (nt += 2) >= 26 && (nt -= 26, ke--), it = ot !== 0 || ke !== this.length - 1 ? rt[6 - yt.length] + yt + it : yt + it;
      }
      for (ot !== 0 && (it = ot.toString(16) + it); it.length % st != 0; ) it = "0" + it;
      return this.negative !== 0 && (it = "-" + it), it;
    }
    if (Ce === (0 | Ce) && Ce >= 2 && Ce <= 36) {
      var $t = ut[Ce], gt = dt[Ce];
      it = "";
      var xt = this.clone();
      for (xt.negative = 0; !xt.isZero(); ) {
        var At = xt.modrn(gt).toString(Ce);
        it = (xt = xt.idivn(gt)).isZero() ? At + it : rt[$t - At.length] + At + it;
      }
      for (this.isZero() && (it = "0" + it); it.length % st != 0; ) it = "0" + it;
      return this.negative !== 0 && (it = "-" + it), it;
    }
    V(!1, "Base should be between 2 and 36");
  }, re.prototype.toNumber = function() {
    var Ce = this.words[0];
    return this.length === 2 ? Ce += 67108864 * this.words[1] : this.length === 3 && this.words[2] === 1 ? Ce += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && V(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -Ce : Ce;
  }, re.prototype.toJSON = function() {
    return this.toString(16, 2);
  }, ne && (re.prototype.toBuffer = function(Ce, st) {
    return this.toArrayLike(ne, Ce, st);
  }), re.prototype.toArray = function(Ce, st) {
    return this.toArrayLike(Array, Ce, st);
  }, re.prototype.toArrayLike = function(Ce, st, it) {
    this._strip();
    var nt = this.byteLength(), ot = it || Math.max(1, nt);
    V(nt <= ot, "byte array longer than desired length"), V(ot > 0, "Requested array length <= 0");
    var ke = function(ct, yt) {
      return ct.allocUnsafe ? ct.allocUnsafe(yt) : new ct(yt);
    }(Ce, ot);
    return this["_toArrayLike" + (st === "le" ? "LE" : "BE")](ke, nt), ke;
  }, re.prototype._toArrayLikeLE = function(Ce, st) {
    for (var it = 0, nt = 0, ot = 0, ke = 0; ot < this.length; ot++) {
      var ct = this.words[ot] << ke | nt;
      Ce[it++] = 255 & ct, it < Ce.length && (Ce[it++] = ct >> 8 & 255), it < Ce.length && (Ce[it++] = ct >> 16 & 255), ke === 6 ? (it < Ce.length && (Ce[it++] = ct >> 24 & 255), nt = 0, ke = 0) : (nt = ct >>> 24, ke += 2);
    }
    if (it < Ce.length) for (Ce[it++] = nt; it < Ce.length; ) Ce[it++] = 0;
  }, re.prototype._toArrayLikeBE = function(Ce, st) {
    for (var it = Ce.length - 1, nt = 0, ot = 0, ke = 0; ot < this.length; ot++) {
      var ct = this.words[ot] << ke | nt;
      Ce[it--] = 255 & ct, it >= 0 && (Ce[it--] = ct >> 8 & 255), it >= 0 && (Ce[it--] = ct >> 16 & 255), ke === 6 ? (it >= 0 && (Ce[it--] = ct >> 24 & 255), nt = 0, ke = 0) : (nt = ct >>> 24, ke += 2);
    }
    if (it >= 0) for (Ce[it--] = nt; it >= 0; ) Ce[it--] = 0;
  }, Math.clz32 ? re.prototype._countBits = function(Ce) {
    return 32 - Math.clz32(Ce);
  } : re.prototype._countBits = function(Ce) {
    var st = Ce, it = 0;
    return st >= 4096 && (it += 13, st >>>= 13), st >= 64 && (it += 7, st >>>= 7), st >= 8 && (it += 4, st >>>= 4), st >= 2 && (it += 2, st >>>= 2), it + st;
  }, re.prototype._zeroBits = function(Ce) {
    if (Ce === 0) return 26;
    var st = Ce, it = 0;
    return 8191 & st || (it += 13, st >>>= 13), 127 & st || (it += 7, st >>>= 7), 15 & st || (it += 4, st >>>= 4), 3 & st || (it += 2, st >>>= 2), 1 & st || it++, it;
  }, re.prototype.bitLength = function() {
    var Ce = this.words[this.length - 1], st = this._countBits(Ce);
    return 26 * (this.length - 1) + st;
  }, re.prototype.zeroBits = function() {
    if (this.isZero()) return 0;
    for (var Ce = 0, st = 0; st < this.length; st++) {
      var it = this._zeroBits(this.words[st]);
      if (Ce += it, it !== 26) break;
    }
    return Ce;
  }, re.prototype.byteLength = function() {
    return Math.ceil(this.bitLength() / 8);
  }, re.prototype.toTwos = function(Ce) {
    return this.negative !== 0 ? this.abs().inotn(Ce).iaddn(1) : this.clone();
  }, re.prototype.fromTwos = function(Ce) {
    return this.testn(Ce - 1) ? this.notn(Ce).iaddn(1).ineg() : this.clone();
  }, re.prototype.isNeg = function() {
    return this.negative !== 0;
  }, re.prototype.neg = function() {
    return this.clone().ineg();
  }, re.prototype.ineg = function() {
    return this.isZero() || (this.negative ^= 1), this;
  }, re.prototype.iuor = function(Ce) {
    for (; this.length < Ce.length; ) this.words[this.length++] = 0;
    for (var st = 0; st < Ce.length; st++) this.words[st] = this.words[st] | Ce.words[st];
    return this._strip();
  }, re.prototype.ior = function(Ce) {
    return V(!(this.negative | Ce.negative)), this.iuor(Ce);
  }, re.prototype.or = function(Ce) {
    return this.length > Ce.length ? this.clone().ior(Ce) : Ce.clone().ior(this);
  }, re.prototype.uor = function(Ce) {
    return this.length > Ce.length ? this.clone().iuor(Ce) : Ce.clone().iuor(this);
  }, re.prototype.iuand = function(Ce) {
    var st;
    st = this.length > Ce.length ? Ce : this;
    for (var it = 0; it < st.length; it++) this.words[it] = this.words[it] & Ce.words[it];
    return this.length = st.length, this._strip();
  }, re.prototype.iand = function(Ce) {
    return V(!(this.negative | Ce.negative)), this.iuand(Ce);
  }, re.prototype.and = function(Ce) {
    return this.length > Ce.length ? this.clone().iand(Ce) : Ce.clone().iand(this);
  }, re.prototype.uand = function(Ce) {
    return this.length > Ce.length ? this.clone().iuand(Ce) : Ce.clone().iuand(this);
  }, re.prototype.iuxor = function(Ce) {
    var st, it;
    this.length > Ce.length ? (st = this, it = Ce) : (st = Ce, it = this);
    for (var nt = 0; nt < it.length; nt++) this.words[nt] = st.words[nt] ^ it.words[nt];
    if (this !== st) for (; nt < st.length; nt++) this.words[nt] = st.words[nt];
    return this.length = st.length, this._strip();
  }, re.prototype.ixor = function(Ce) {
    return V(!(this.negative | Ce.negative)), this.iuxor(Ce);
  }, re.prototype.xor = function(Ce) {
    return this.length > Ce.length ? this.clone().ixor(Ce) : Ce.clone().ixor(this);
  }, re.prototype.uxor = function(Ce) {
    return this.length > Ce.length ? this.clone().iuxor(Ce) : Ce.clone().iuxor(this);
  }, re.prototype.inotn = function(Ce) {
    V(typeof Ce == "number" && Ce >= 0);
    var st = 0 | Math.ceil(Ce / 26), it = Ce % 26;
    this._expand(st), it > 0 && st--;
    for (var nt = 0; nt < st; nt++) this.words[nt] = 67108863 & ~this.words[nt];
    return it > 0 && (this.words[nt] = ~this.words[nt] & 67108863 >> 26 - it), this._strip();
  }, re.prototype.notn = function(Ce) {
    return this.clone().inotn(Ce);
  }, re.prototype.setn = function(Ce, st) {
    V(typeof Ce == "number" && Ce >= 0);
    var it = Ce / 26 | 0, nt = Ce % 26;
    return this._expand(it + 1), this.words[it] = st ? this.words[it] | 1 << nt : this.words[it] & ~(1 << nt), this._strip();
  }, re.prototype.iadd = function(Ce) {
    var st, it, nt;
    if (this.negative !== 0 && Ce.negative === 0) return this.negative = 0, st = this.isub(Ce), this.negative ^= 1, this._normSign();
    if (this.negative === 0 && Ce.negative !== 0) return Ce.negative = 0, st = this.isub(Ce), Ce.negative = 1, st._normSign();
    this.length > Ce.length ? (it = this, nt = Ce) : (it = Ce, nt = this);
    for (var ot = 0, ke = 0; ke < nt.length; ke++) st = (0 | it.words[ke]) + (0 | nt.words[ke]) + ot, this.words[ke] = 67108863 & st, ot = st >>> 26;
    for (; ot !== 0 && ke < it.length; ke++) st = (0 | it.words[ke]) + ot, this.words[ke] = 67108863 & st, ot = st >>> 26;
    if (this.length = it.length, ot !== 0) this.words[this.length] = ot, this.length++;
    else if (it !== this) for (; ke < it.length; ke++) this.words[ke] = it.words[ke];
    return this;
  }, re.prototype.add = function(Ce) {
    var st;
    return Ce.negative !== 0 && this.negative === 0 ? (Ce.negative = 0, st = this.sub(Ce), Ce.negative ^= 1, st) : Ce.negative === 0 && this.negative !== 0 ? (this.negative = 0, st = Ce.sub(this), this.negative = 1, st) : this.length > Ce.length ? this.clone().iadd(Ce) : Ce.clone().iadd(this);
  }, re.prototype.isub = function(Ce) {
    if (Ce.negative !== 0) {
      Ce.negative = 0;
      var st = this.iadd(Ce);
      return Ce.negative = 1, st._normSign();
    }
    if (this.negative !== 0) return this.negative = 0, this.iadd(Ce), this.negative = 1, this._normSign();
    var it, nt, ot = this.cmp(Ce);
    if (ot === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
    ot > 0 ? (it = this, nt = Ce) : (it = Ce, nt = this);
    for (var ke = 0, ct = 0; ct < nt.length; ct++) ke = (st = (0 | it.words[ct]) - (0 | nt.words[ct]) + ke) >> 26, this.words[ct] = 67108863 & st;
    for (; ke !== 0 && ct < it.length; ct++) ke = (st = (0 | it.words[ct]) + ke) >> 26, this.words[ct] = 67108863 & st;
    if (ke === 0 && ct < it.length && it !== this) for (; ct < it.length; ct++) this.words[ct] = it.words[ct];
    return this.length = Math.max(this.length, ct), it !== this && (this.negative = 1), this._strip();
  }, re.prototype.sub = function(Ce) {
    return this.clone().isub(Ce);
  };
  var bt = function(Ce, st, it) {
    var nt, ot, ke, ct = Ce.words, yt = st.words, $t = it.words, gt = 0, xt = 0 | ct[0], At = 8191 & xt, mt = xt >>> 13, St = 0 | ct[1], Mt = 8191 & St, It = St >>> 13, Ft = 0 | ct[2], Vt = 8191 & Ft, qt = Ft >>> 13, er = 0 | ct[3], tr = 8191 & er, Jt = er >>> 13, ur = 0 | ct[4], pr = 8191 & ur, dr = ur >>> 13, Pr = 0 | ct[5], Sr = 8191 & Pr, lr = Pr >>> 13, kr = 0 | ct[6], pt = 8191 & kr, vt = kr >>> 13, kt = 0 | ct[7], Ct = 8191 & kt, Ht = kt >>> 13, Kt = 0 | ct[8], Yt = 8191 & Kt, ir = Kt >>> 13, wr = 0 | ct[9], _r = 8191 & wr, cr = wr >>> 13, Tr = 0 | yt[0], Lt = 8191 & Tr, Ot = Tr >>> 13, Nt = 0 | yt[1], Ut = 8191 & Nt, Wt = Nt >>> 13, Zt = 0 | yt[2], jt = 8191 & Zt, zt = Zt >>> 13, Xt = 0 | yt[3], rr = 8191 & Xt, Qt = Xt >>> 13, ar = 0 | yt[4], or = 8191 & ar, nr = ar >>> 13, yr = 0 | yt[5], vr = 8191 & yr, fr = yr >>> 13, gr = 0 | yt[6], Er = 8191 & gr, br = gr >>> 13, $r = 0 | yt[7], Ar = 8191 & $r, Br = $r >>> 13, Mr = 0 | yt[8], Or = 8191 & Mr, xr = Mr >>> 13, Nr = 0 | yt[9], Cr = 8191 & Nr, Rr = Nr >>> 13;
    it.negative = Ce.negative ^ st.negative, it.length = 19;
    var Dr = (gt + (nt = Math.imul(At, Lt)) | 0) + ((8191 & (ot = (ot = Math.imul(At, Ot)) + Math.imul(mt, Lt) | 0)) << 13) | 0;
    gt = ((ke = Math.imul(mt, Ot)) + (ot >>> 13) | 0) + (Dr >>> 26) | 0, Dr &= 67108863, nt = Math.imul(Mt, Lt), ot = (ot = Math.imul(Mt, Ot)) + Math.imul(It, Lt) | 0, ke = Math.imul(It, Ot);
    var jr = (gt + (nt = nt + Math.imul(At, Ut) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, Wt) | 0) + Math.imul(mt, Ut) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, Wt) | 0) + (ot >>> 13) | 0) + (jr >>> 26) | 0, jr &= 67108863, nt = Math.imul(Vt, Lt), ot = (ot = Math.imul(Vt, Ot)) + Math.imul(qt, Lt) | 0, ke = Math.imul(qt, Ot), nt = nt + Math.imul(Mt, Ut) | 0, ot = (ot = ot + Math.imul(Mt, Wt) | 0) + Math.imul(It, Ut) | 0, ke = ke + Math.imul(It, Wt) | 0;
    var Lr = (gt + (nt = nt + Math.imul(At, jt) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, zt) | 0) + Math.imul(mt, jt) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, zt) | 0) + (ot >>> 13) | 0) + (Lr >>> 26) | 0, Lr &= 67108863, nt = Math.imul(tr, Lt), ot = (ot = Math.imul(tr, Ot)) + Math.imul(Jt, Lt) | 0, ke = Math.imul(Jt, Ot), nt = nt + Math.imul(Vt, Ut) | 0, ot = (ot = ot + Math.imul(Vt, Wt) | 0) + Math.imul(qt, Ut) | 0, ke = ke + Math.imul(qt, Wt) | 0, nt = nt + Math.imul(Mt, jt) | 0, ot = (ot = ot + Math.imul(Mt, zt) | 0) + Math.imul(It, jt) | 0, ke = ke + Math.imul(It, zt) | 0;
    var Hr = (gt + (nt = nt + Math.imul(At, rr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, Qt) | 0) + Math.imul(mt, rr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, Qt) | 0) + (ot >>> 13) | 0) + (Hr >>> 26) | 0, Hr &= 67108863, nt = Math.imul(pr, Lt), ot = (ot = Math.imul(pr, Ot)) + Math.imul(dr, Lt) | 0, ke = Math.imul(dr, Ot), nt = nt + Math.imul(tr, Ut) | 0, ot = (ot = ot + Math.imul(tr, Wt) | 0) + Math.imul(Jt, Ut) | 0, ke = ke + Math.imul(Jt, Wt) | 0, nt = nt + Math.imul(Vt, jt) | 0, ot = (ot = ot + Math.imul(Vt, zt) | 0) + Math.imul(qt, jt) | 0, ke = ke + Math.imul(qt, zt) | 0, nt = nt + Math.imul(Mt, rr) | 0, ot = (ot = ot + Math.imul(Mt, Qt) | 0) + Math.imul(It, rr) | 0, ke = ke + Math.imul(It, Qt) | 0;
    var Ur = (gt + (nt = nt + Math.imul(At, or) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, nr) | 0) + Math.imul(mt, or) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, nr) | 0) + (ot >>> 13) | 0) + (Ur >>> 26) | 0, Ur &= 67108863, nt = Math.imul(Sr, Lt), ot = (ot = Math.imul(Sr, Ot)) + Math.imul(lr, Lt) | 0, ke = Math.imul(lr, Ot), nt = nt + Math.imul(pr, Ut) | 0, ot = (ot = ot + Math.imul(pr, Wt) | 0) + Math.imul(dr, Ut) | 0, ke = ke + Math.imul(dr, Wt) | 0, nt = nt + Math.imul(tr, jt) | 0, ot = (ot = ot + Math.imul(tr, zt) | 0) + Math.imul(Jt, jt) | 0, ke = ke + Math.imul(Jt, zt) | 0, nt = nt + Math.imul(Vt, rr) | 0, ot = (ot = ot + Math.imul(Vt, Qt) | 0) + Math.imul(qt, rr) | 0, ke = ke + Math.imul(qt, Qt) | 0, nt = nt + Math.imul(Mt, or) | 0, ot = (ot = ot + Math.imul(Mt, nr) | 0) + Math.imul(It, or) | 0, ke = ke + Math.imul(It, nr) | 0;
    var Fr = (gt + (nt = nt + Math.imul(At, vr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, fr) | 0) + Math.imul(mt, vr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, fr) | 0) + (ot >>> 13) | 0) + (Fr >>> 26) | 0, Fr &= 67108863, nt = Math.imul(pt, Lt), ot = (ot = Math.imul(pt, Ot)) + Math.imul(vt, Lt) | 0, ke = Math.imul(vt, Ot), nt = nt + Math.imul(Sr, Ut) | 0, ot = (ot = ot + Math.imul(Sr, Wt) | 0) + Math.imul(lr, Ut) | 0, ke = ke + Math.imul(lr, Wt) | 0, nt = nt + Math.imul(pr, jt) | 0, ot = (ot = ot + Math.imul(pr, zt) | 0) + Math.imul(dr, jt) | 0, ke = ke + Math.imul(dr, zt) | 0, nt = nt + Math.imul(tr, rr) | 0, ot = (ot = ot + Math.imul(tr, Qt) | 0) + Math.imul(Jt, rr) | 0, ke = ke + Math.imul(Jt, Qt) | 0, nt = nt + Math.imul(Vt, or) | 0, ot = (ot = ot + Math.imul(Vt, nr) | 0) + Math.imul(qt, or) | 0, ke = ke + Math.imul(qt, nr) | 0, nt = nt + Math.imul(Mt, vr) | 0, ot = (ot = ot + Math.imul(Mt, fr) | 0) + Math.imul(It, vr) | 0, ke = ke + Math.imul(It, fr) | 0;
    var qr = (gt + (nt = nt + Math.imul(At, Er) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, br) | 0) + Math.imul(mt, Er) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, br) | 0) + (ot >>> 13) | 0) + (qr >>> 26) | 0, qr &= 67108863, nt = Math.imul(Ct, Lt), ot = (ot = Math.imul(Ct, Ot)) + Math.imul(Ht, Lt) | 0, ke = Math.imul(Ht, Ot), nt = nt + Math.imul(pt, Ut) | 0, ot = (ot = ot + Math.imul(pt, Wt) | 0) + Math.imul(vt, Ut) | 0, ke = ke + Math.imul(vt, Wt) | 0, nt = nt + Math.imul(Sr, jt) | 0, ot = (ot = ot + Math.imul(Sr, zt) | 0) + Math.imul(lr, jt) | 0, ke = ke + Math.imul(lr, zt) | 0, nt = nt + Math.imul(pr, rr) | 0, ot = (ot = ot + Math.imul(pr, Qt) | 0) + Math.imul(dr, rr) | 0, ke = ke + Math.imul(dr, Qt) | 0, nt = nt + Math.imul(tr, or) | 0, ot = (ot = ot + Math.imul(tr, nr) | 0) + Math.imul(Jt, or) | 0, ke = ke + Math.imul(Jt, nr) | 0, nt = nt + Math.imul(Vt, vr) | 0, ot = (ot = ot + Math.imul(Vt, fr) | 0) + Math.imul(qt, vr) | 0, ke = ke + Math.imul(qt, fr) | 0, nt = nt + Math.imul(Mt, Er) | 0, ot = (ot = ot + Math.imul(Mt, br) | 0) + Math.imul(It, Er) | 0, ke = ke + Math.imul(It, br) | 0;
    var Wr = (gt + (nt = nt + Math.imul(At, Ar) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, Br) | 0) + Math.imul(mt, Ar) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, Br) | 0) + (ot >>> 13) | 0) + (Wr >>> 26) | 0, Wr &= 67108863, nt = Math.imul(Yt, Lt), ot = (ot = Math.imul(Yt, Ot)) + Math.imul(ir, Lt) | 0, ke = Math.imul(ir, Ot), nt = nt + Math.imul(Ct, Ut) | 0, ot = (ot = ot + Math.imul(Ct, Wt) | 0) + Math.imul(Ht, Ut) | 0, ke = ke + Math.imul(Ht, Wt) | 0, nt = nt + Math.imul(pt, jt) | 0, ot = (ot = ot + Math.imul(pt, zt) | 0) + Math.imul(vt, jt) | 0, ke = ke + Math.imul(vt, zt) | 0, nt = nt + Math.imul(Sr, rr) | 0, ot = (ot = ot + Math.imul(Sr, Qt) | 0) + Math.imul(lr, rr) | 0, ke = ke + Math.imul(lr, Qt) | 0, nt = nt + Math.imul(pr, or) | 0, ot = (ot = ot + Math.imul(pr, nr) | 0) + Math.imul(dr, or) | 0, ke = ke + Math.imul(dr, nr) | 0, nt = nt + Math.imul(tr, vr) | 0, ot = (ot = ot + Math.imul(tr, fr) | 0) + Math.imul(Jt, vr) | 0, ke = ke + Math.imul(Jt, fr) | 0, nt = nt + Math.imul(Vt, Er) | 0, ot = (ot = ot + Math.imul(Vt, br) | 0) + Math.imul(qt, Er) | 0, ke = ke + Math.imul(qt, br) | 0, nt = nt + Math.imul(Mt, Ar) | 0, ot = (ot = ot + Math.imul(Mt, Br) | 0) + Math.imul(It, Ar) | 0, ke = ke + Math.imul(It, Br) | 0;
    var Gr = (gt + (nt = nt + Math.imul(At, Or) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, xr) | 0) + Math.imul(mt, Or) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, xr) | 0) + (ot >>> 13) | 0) + (Gr >>> 26) | 0, Gr &= 67108863, nt = Math.imul(_r, Lt), ot = (ot = Math.imul(_r, Ot)) + Math.imul(cr, Lt) | 0, ke = Math.imul(cr, Ot), nt = nt + Math.imul(Yt, Ut) | 0, ot = (ot = ot + Math.imul(Yt, Wt) | 0) + Math.imul(ir, Ut) | 0, ke = ke + Math.imul(ir, Wt) | 0, nt = nt + Math.imul(Ct, jt) | 0, ot = (ot = ot + Math.imul(Ct, zt) | 0) + Math.imul(Ht, jt) | 0, ke = ke + Math.imul(Ht, zt) | 0, nt = nt + Math.imul(pt, rr) | 0, ot = (ot = ot + Math.imul(pt, Qt) | 0) + Math.imul(vt, rr) | 0, ke = ke + Math.imul(vt, Qt) | 0, nt = nt + Math.imul(Sr, or) | 0, ot = (ot = ot + Math.imul(Sr, nr) | 0) + Math.imul(lr, or) | 0, ke = ke + Math.imul(lr, nr) | 0, nt = nt + Math.imul(pr, vr) | 0, ot = (ot = ot + Math.imul(pr, fr) | 0) + Math.imul(dr, vr) | 0, ke = ke + Math.imul(dr, fr) | 0, nt = nt + Math.imul(tr, Er) | 0, ot = (ot = ot + Math.imul(tr, br) | 0) + Math.imul(Jt, Er) | 0, ke = ke + Math.imul(Jt, br) | 0, nt = nt + Math.imul(Vt, Ar) | 0, ot = (ot = ot + Math.imul(Vt, Br) | 0) + Math.imul(qt, Ar) | 0, ke = ke + Math.imul(qt, Br) | 0, nt = nt + Math.imul(Mt, Or) | 0, ot = (ot = ot + Math.imul(Mt, xr) | 0) + Math.imul(It, Or) | 0, ke = ke + Math.imul(It, xr) | 0;
    var Vr = (gt + (nt = nt + Math.imul(At, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(At, Rr) | 0) + Math.imul(mt, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(mt, Rr) | 0) + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, nt = Math.imul(_r, Ut), ot = (ot = Math.imul(_r, Wt)) + Math.imul(cr, Ut) | 0, ke = Math.imul(cr, Wt), nt = nt + Math.imul(Yt, jt) | 0, ot = (ot = ot + Math.imul(Yt, zt) | 0) + Math.imul(ir, jt) | 0, ke = ke + Math.imul(ir, zt) | 0, nt = nt + Math.imul(Ct, rr) | 0, ot = (ot = ot + Math.imul(Ct, Qt) | 0) + Math.imul(Ht, rr) | 0, ke = ke + Math.imul(Ht, Qt) | 0, nt = nt + Math.imul(pt, or) | 0, ot = (ot = ot + Math.imul(pt, nr) | 0) + Math.imul(vt, or) | 0, ke = ke + Math.imul(vt, nr) | 0, nt = nt + Math.imul(Sr, vr) | 0, ot = (ot = ot + Math.imul(Sr, fr) | 0) + Math.imul(lr, vr) | 0, ke = ke + Math.imul(lr, fr) | 0, nt = nt + Math.imul(pr, Er) | 0, ot = (ot = ot + Math.imul(pr, br) | 0) + Math.imul(dr, Er) | 0, ke = ke + Math.imul(dr, br) | 0, nt = nt + Math.imul(tr, Ar) | 0, ot = (ot = ot + Math.imul(tr, Br) | 0) + Math.imul(Jt, Ar) | 0, ke = ke + Math.imul(Jt, Br) | 0, nt = nt + Math.imul(Vt, Or) | 0, ot = (ot = ot + Math.imul(Vt, xr) | 0) + Math.imul(qt, Or) | 0, ke = ke + Math.imul(qt, xr) | 0;
    var Xr = (gt + (nt = nt + Math.imul(Mt, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(Mt, Rr) | 0) + Math.imul(It, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(It, Rr) | 0) + (ot >>> 13) | 0) + (Xr >>> 26) | 0, Xr &= 67108863, nt = Math.imul(_r, jt), ot = (ot = Math.imul(_r, zt)) + Math.imul(cr, jt) | 0, ke = Math.imul(cr, zt), nt = nt + Math.imul(Yt, rr) | 0, ot = (ot = ot + Math.imul(Yt, Qt) | 0) + Math.imul(ir, rr) | 0, ke = ke + Math.imul(ir, Qt) | 0, nt = nt + Math.imul(Ct, or) | 0, ot = (ot = ot + Math.imul(Ct, nr) | 0) + Math.imul(Ht, or) | 0, ke = ke + Math.imul(Ht, nr) | 0, nt = nt + Math.imul(pt, vr) | 0, ot = (ot = ot + Math.imul(pt, fr) | 0) + Math.imul(vt, vr) | 0, ke = ke + Math.imul(vt, fr) | 0, nt = nt + Math.imul(Sr, Er) | 0, ot = (ot = ot + Math.imul(Sr, br) | 0) + Math.imul(lr, Er) | 0, ke = ke + Math.imul(lr, br) | 0, nt = nt + Math.imul(pr, Ar) | 0, ot = (ot = ot + Math.imul(pr, Br) | 0) + Math.imul(dr, Ar) | 0, ke = ke + Math.imul(dr, Br) | 0, nt = nt + Math.imul(tr, Or) | 0, ot = (ot = ot + Math.imul(tr, xr) | 0) + Math.imul(Jt, Or) | 0, ke = ke + Math.imul(Jt, xr) | 0;
    var Yr = (gt + (nt = nt + Math.imul(Vt, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(Vt, Rr) | 0) + Math.imul(qt, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(qt, Rr) | 0) + (ot >>> 13) | 0) + (Yr >>> 26) | 0, Yr &= 67108863, nt = Math.imul(_r, rr), ot = (ot = Math.imul(_r, Qt)) + Math.imul(cr, rr) | 0, ke = Math.imul(cr, Qt), nt = nt + Math.imul(Yt, or) | 0, ot = (ot = ot + Math.imul(Yt, nr) | 0) + Math.imul(ir, or) | 0, ke = ke + Math.imul(ir, nr) | 0, nt = nt + Math.imul(Ct, vr) | 0, ot = (ot = ot + Math.imul(Ct, fr) | 0) + Math.imul(Ht, vr) | 0, ke = ke + Math.imul(Ht, fr) | 0, nt = nt + Math.imul(pt, Er) | 0, ot = (ot = ot + Math.imul(pt, br) | 0) + Math.imul(vt, Er) | 0, ke = ke + Math.imul(vt, br) | 0, nt = nt + Math.imul(Sr, Ar) | 0, ot = (ot = ot + Math.imul(Sr, Br) | 0) + Math.imul(lr, Ar) | 0, ke = ke + Math.imul(lr, Br) | 0, nt = nt + Math.imul(pr, Or) | 0, ot = (ot = ot + Math.imul(pr, xr) | 0) + Math.imul(dr, Or) | 0, ke = ke + Math.imul(dr, xr) | 0;
    var Jr = (gt + (nt = nt + Math.imul(tr, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(tr, Rr) | 0) + Math.imul(Jt, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(Jt, Rr) | 0) + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, nt = Math.imul(_r, or), ot = (ot = Math.imul(_r, nr)) + Math.imul(cr, or) | 0, ke = Math.imul(cr, nr), nt = nt + Math.imul(Yt, vr) | 0, ot = (ot = ot + Math.imul(Yt, fr) | 0) + Math.imul(ir, vr) | 0, ke = ke + Math.imul(ir, fr) | 0, nt = nt + Math.imul(Ct, Er) | 0, ot = (ot = ot + Math.imul(Ct, br) | 0) + Math.imul(Ht, Er) | 0, ke = ke + Math.imul(Ht, br) | 0, nt = nt + Math.imul(pt, Ar) | 0, ot = (ot = ot + Math.imul(pt, Br) | 0) + Math.imul(vt, Ar) | 0, ke = ke + Math.imul(vt, Br) | 0, nt = nt + Math.imul(Sr, Or) | 0, ot = (ot = ot + Math.imul(Sr, xr) | 0) + Math.imul(lr, Or) | 0, ke = ke + Math.imul(lr, xr) | 0;
    var Zr = (gt + (nt = nt + Math.imul(pr, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(pr, Rr) | 0) + Math.imul(dr, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(dr, Rr) | 0) + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, nt = Math.imul(_r, vr), ot = (ot = Math.imul(_r, fr)) + Math.imul(cr, vr) | 0, ke = Math.imul(cr, fr), nt = nt + Math.imul(Yt, Er) | 0, ot = (ot = ot + Math.imul(Yt, br) | 0) + Math.imul(ir, Er) | 0, ke = ke + Math.imul(ir, br) | 0, nt = nt + Math.imul(Ct, Ar) | 0, ot = (ot = ot + Math.imul(Ct, Br) | 0) + Math.imul(Ht, Ar) | 0, ke = ke + Math.imul(Ht, Br) | 0, nt = nt + Math.imul(pt, Or) | 0, ot = (ot = ot + Math.imul(pt, xr) | 0) + Math.imul(vt, Or) | 0, ke = ke + Math.imul(vt, xr) | 0;
    var Qr = (gt + (nt = nt + Math.imul(Sr, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(Sr, Rr) | 0) + Math.imul(lr, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(lr, Rr) | 0) + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, nt = Math.imul(_r, Er), ot = (ot = Math.imul(_r, br)) + Math.imul(cr, Er) | 0, ke = Math.imul(cr, br), nt = nt + Math.imul(Yt, Ar) | 0, ot = (ot = ot + Math.imul(Yt, Br) | 0) + Math.imul(ir, Ar) | 0, ke = ke + Math.imul(ir, Br) | 0, nt = nt + Math.imul(Ct, Or) | 0, ot = (ot = ot + Math.imul(Ct, xr) | 0) + Math.imul(Ht, Or) | 0, ke = ke + Math.imul(Ht, xr) | 0;
    var en = (gt + (nt = nt + Math.imul(pt, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(pt, Rr) | 0) + Math.imul(vt, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(vt, Rr) | 0) + (ot >>> 13) | 0) + (en >>> 26) | 0, en &= 67108863, nt = Math.imul(_r, Ar), ot = (ot = Math.imul(_r, Br)) + Math.imul(cr, Ar) | 0, ke = Math.imul(cr, Br), nt = nt + Math.imul(Yt, Or) | 0, ot = (ot = ot + Math.imul(Yt, xr) | 0) + Math.imul(ir, Or) | 0, ke = ke + Math.imul(ir, xr) | 0;
    var tn = (gt + (nt = nt + Math.imul(Ct, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(Ct, Rr) | 0) + Math.imul(Ht, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(Ht, Rr) | 0) + (ot >>> 13) | 0) + (tn >>> 26) | 0, tn &= 67108863, nt = Math.imul(_r, Or), ot = (ot = Math.imul(_r, xr)) + Math.imul(cr, Or) | 0, ke = Math.imul(cr, xr);
    var rn = (gt + (nt = nt + Math.imul(Yt, Cr) | 0) | 0) + ((8191 & (ot = (ot = ot + Math.imul(Yt, Rr) | 0) + Math.imul(ir, Cr) | 0)) << 13) | 0;
    gt = ((ke = ke + Math.imul(ir, Rr) | 0) + (ot >>> 13) | 0) + (rn >>> 26) | 0, rn &= 67108863;
    var nn = (gt + (nt = Math.imul(_r, Cr)) | 0) + ((8191 & (ot = (ot = Math.imul(_r, Rr)) + Math.imul(cr, Cr) | 0)) << 13) | 0;
    return gt = ((ke = Math.imul(cr, Rr)) + (ot >>> 13) | 0) + (nn >>> 26) | 0, nn &= 67108863, $t[0] = Dr, $t[1] = jr, $t[2] = Lr, $t[3] = Hr, $t[4] = Ur, $t[5] = Fr, $t[6] = qr, $t[7] = Wr, $t[8] = Gr, $t[9] = Vr, $t[10] = Xr, $t[11] = Yr, $t[12] = Jr, $t[13] = Zr, $t[14] = Qr, $t[15] = en, $t[16] = tn, $t[17] = rn, $t[18] = nn, gt !== 0 && ($t[19] = gt, it.length++), it;
  };
  function Tt(Ce, st, it) {
    it.negative = st.negative ^ Ce.negative, it.length = Ce.length + st.length;
    for (var nt = 0, ot = 0, ke = 0; ke < it.length - 1; ke++) {
      var ct = ot;
      ot = 0;
      for (var yt = 67108863 & nt, $t = Math.min(ke, st.length - 1), gt = Math.max(0, ke - Ce.length + 1); gt <= $t; gt++) {
        var xt = ke - gt, At = (0 | Ce.words[xt]) * (0 | st.words[gt]), mt = 67108863 & At;
        yt = 67108863 & (mt = mt + yt | 0), ot += (ct = (ct = ct + (At / 67108864 | 0) | 0) + (mt >>> 26) | 0) >>> 26, ct &= 67108863;
      }
      it.words[ke] = yt, nt = ct, ct = ot;
    }
    return nt !== 0 ? it.words[ke] = nt : it.length--, it._strip();
  }
  function wt(Ce, st, it) {
    return Tt(Ce, st, it);
  }
  Math.imul || (bt = ht), re.prototype.mulTo = function(Ce, st) {
    var it = this.length + Ce.length;
    return this.length === 10 && Ce.length === 10 ? bt(this, Ce, st) : it < 63 ? ht(this, Ce, st) : it < 1024 ? Tt(this, Ce, st) : wt(this, Ce, st);
  }, re.prototype.mul = function(Ce) {
    var st = new re(null);
    return st.words = new Array(this.length + Ce.length), this.mulTo(Ce, st);
  }, re.prototype.mulf = function(Ce) {
    var st = new re(null);
    return st.words = new Array(this.length + Ce.length), wt(this, Ce, st);
  }, re.prototype.imul = function(Ce) {
    return this.clone().mulTo(Ce, this);
  }, re.prototype.imuln = function(Ce) {
    var st = Ce < 0;
    st && (Ce = -Ce), V(typeof Ce == "number"), V(Ce < 67108864);
    for (var it = 0, nt = 0; nt < this.length; nt++) {
      var ot = (0 | this.words[nt]) * Ce, ke = (67108863 & ot) + (67108863 & it);
      it >>= 26, it += ot / 67108864 | 0, it += ke >>> 26, this.words[nt] = 67108863 & ke;
    }
    return it !== 0 && (this.words[nt] = it, this.length++), st ? this.ineg() : this;
  }, re.prototype.muln = function(Ce) {
    return this.clone().imuln(Ce);
  }, re.prototype.sqr = function() {
    return this.mul(this);
  }, re.prototype.isqr = function() {
    return this.imul(this.clone());
  }, re.prototype.pow = function(Ce) {
    var st = function(ke) {
      for (var ct = new Array(ke.bitLength()), yt = 0; yt < ct.length; yt++) {
        var $t = yt / 26 | 0, gt = yt % 26;
        ct[yt] = ke.words[$t] >>> gt & 1;
      }
      return ct;
    }(Ce);
    if (st.length === 0) return new re(1);
    for (var it = this, nt = 0; nt < st.length && st[nt] === 0; nt++, it = it.sqr()) ;
    if (++nt < st.length) for (var ot = it.sqr(); nt < st.length; nt++, ot = ot.sqr()) st[nt] !== 0 && (it = it.mul(ot));
    return it;
  }, re.prototype.iushln = function(Ce) {
    V(typeof Ce == "number" && Ce >= 0);
    var st, it = Ce % 26, nt = (Ce - it) / 26, ot = 67108863 >>> 26 - it << 26 - it;
    if (it !== 0) {
      var ke = 0;
      for (st = 0; st < this.length; st++) {
        var ct = this.words[st] & ot, yt = (0 | this.words[st]) - ct << it;
        this.words[st] = yt | ke, ke = ct >>> 26 - it;
      }
      ke && (this.words[st] = ke, this.length++);
    }
    if (nt !== 0) {
      for (st = this.length - 1; st >= 0; st--) this.words[st + nt] = this.words[st];
      for (st = 0; st < nt; st++) this.words[st] = 0;
      this.length += nt;
    }
    return this._strip();
  }, re.prototype.ishln = function(Ce) {
    return V(this.negative === 0), this.iushln(Ce);
  }, re.prototype.iushrn = function(Ce, st, it) {
    var nt;
    V(typeof Ce == "number" && Ce >= 0), nt = st ? (st - st % 26) / 26 : 0;
    var ot = Ce % 26, ke = Math.min((Ce - ot) / 26, this.length), ct = 67108863 ^ 67108863 >>> ot << ot, yt = it;
    if (nt -= ke, nt = Math.max(0, nt), yt) {
      for (var $t = 0; $t < ke; $t++) yt.words[$t] = this.words[$t];
      yt.length = ke;
    }
    if (ke !== 0) if (this.length > ke) for (this.length -= ke, $t = 0; $t < this.length; $t++) this.words[$t] = this.words[$t + ke];
    else this.words[0] = 0, this.length = 1;
    var gt = 0;
    for ($t = this.length - 1; $t >= 0 && (gt !== 0 || $t >= nt); $t--) {
      var xt = 0 | this.words[$t];
      this.words[$t] = gt << 26 - ot | xt >>> ot, gt = xt & ct;
    }
    return yt && gt !== 0 && (yt.words[yt.length++] = gt), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
  }, re.prototype.ishrn = function(Ce, st, it) {
    return V(this.negative === 0), this.iushrn(Ce, st, it);
  }, re.prototype.shln = function(Ce) {
    return this.clone().ishln(Ce);
  }, re.prototype.ushln = function(Ce) {
    return this.clone().iushln(Ce);
  }, re.prototype.shrn = function(Ce) {
    return this.clone().ishrn(Ce);
  }, re.prototype.ushrn = function(Ce) {
    return this.clone().iushrn(Ce);
  }, re.prototype.testn = function(Ce) {
    V(typeof Ce == "number" && Ce >= 0);
    var st = Ce % 26, it = (Ce - st) / 26, nt = 1 << st;
    return !(this.length <= it || !(this.words[it] & nt));
  }, re.prototype.imaskn = function(Ce) {
    V(typeof Ce == "number" && Ce >= 0);
    var st = Ce % 26, it = (Ce - st) / 26;
    if (V(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
    if (st !== 0 && it++, this.length = Math.min(it, this.length), st !== 0) {
      var nt = 67108863 ^ 67108863 >>> st << st;
      this.words[this.length - 1] &= nt;
    }
    return this._strip();
  }, re.prototype.maskn = function(Ce) {
    return this.clone().imaskn(Ce);
  }, re.prototype.iaddn = function(Ce) {
    return V(typeof Ce == "number"), V(Ce < 67108864), Ce < 0 ? this.isubn(-Ce) : this.negative !== 0 ? this.length === 1 && (0 | this.words[0]) <= Ce ? (this.words[0] = Ce - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(Ce), this.negative = 1, this) : this._iaddn(Ce);
  }, re.prototype._iaddn = function(Ce) {
    this.words[0] += Ce;
    for (var st = 0; st < this.length && this.words[st] >= 67108864; st++) this.words[st] -= 67108864, st === this.length - 1 ? this.words[st + 1] = 1 : this.words[st + 1]++;
    return this.length = Math.max(this.length, st + 1), this;
  }, re.prototype.isubn = function(Ce) {
    if (V(typeof Ce == "number"), V(Ce < 67108864), Ce < 0) return this.iaddn(-Ce);
    if (this.negative !== 0) return this.negative = 0, this.iaddn(Ce), this.negative = 1, this;
    if (this.words[0] -= Ce, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
    else for (var st = 0; st < this.length && this.words[st] < 0; st++) this.words[st] += 67108864, this.words[st + 1] -= 1;
    return this._strip();
  }, re.prototype.addn = function(Ce) {
    return this.clone().iaddn(Ce);
  }, re.prototype.subn = function(Ce) {
    return this.clone().isubn(Ce);
  }, re.prototype.iabs = function() {
    return this.negative = 0, this;
  }, re.prototype.abs = function() {
    return this.clone().iabs();
  }, re.prototype._ishlnsubmul = function(Ce, st, it) {
    var nt, ot, ke = Ce.length + it;
    this._expand(ke);
    var ct = 0;
    for (nt = 0; nt < Ce.length; nt++) {
      ot = (0 | this.words[nt + it]) + ct;
      var yt = (0 | Ce.words[nt]) * st;
      ct = ((ot -= 67108863 & yt) >> 26) - (yt / 67108864 | 0), this.words[nt + it] = 67108863 & ot;
    }
    for (; nt < this.length - it; nt++) ct = (ot = (0 | this.words[nt + it]) + ct) >> 26, this.words[nt + it] = 67108863 & ot;
    if (ct === 0) return this._strip();
    for (V(ct === -1), ct = 0, nt = 0; nt < this.length; nt++) ct = (ot = -(0 | this.words[nt]) + ct) >> 26, this.words[nt] = 67108863 & ot;
    return this.negative = 1, this._strip();
  }, re.prototype._wordDiv = function(Ce, st) {
    var it = (this.length, Ce.length), nt = this.clone(), ot = Ce, ke = 0 | ot.words[ot.length - 1];
    (it = 26 - this._countBits(ke)) != 0 && (ot = ot.ushln(it), nt.iushln(it), ke = 0 | ot.words[ot.length - 1]);
    var ct, yt = nt.length - ot.length;
    if (st !== "mod") {
      (ct = new re(null)).length = yt + 1, ct.words = new Array(ct.length);
      for (var $t = 0; $t < ct.length; $t++) ct.words[$t] = 0;
    }
    var gt = nt.clone()._ishlnsubmul(ot, 1, yt);
    gt.negative === 0 && (nt = gt, ct && (ct.words[yt] = 1));
    for (var xt = yt - 1; xt >= 0; xt--) {
      var At = 67108864 * (0 | nt.words[ot.length + xt]) + (0 | nt.words[ot.length + xt - 1]);
      for (At = Math.min(At / ke | 0, 67108863), nt._ishlnsubmul(ot, At, xt); nt.negative !== 0; ) At--, nt.negative = 0, nt._ishlnsubmul(ot, 1, xt), nt.isZero() || (nt.negative ^= 1);
      ct && (ct.words[xt] = At);
    }
    return ct && ct._strip(), nt._strip(), st !== "div" && it !== 0 && nt.iushrn(it), { div: ct || null, mod: nt };
  }, re.prototype.divmod = function(Ce, st, it) {
    return V(!Ce.isZero()), this.isZero() ? { div: new re(0), mod: new re(0) } : this.negative !== 0 && Ce.negative === 0 ? (ke = this.neg().divmod(Ce, st), st !== "mod" && (nt = ke.div.neg()), st !== "div" && (ot = ke.mod.neg(), it && ot.negative !== 0 && ot.iadd(Ce)), { div: nt, mod: ot }) : this.negative === 0 && Ce.negative !== 0 ? (ke = this.divmod(Ce.neg(), st), st !== "mod" && (nt = ke.div.neg()), { div: nt, mod: ke.mod }) : this.negative & Ce.negative ? (ke = this.neg().divmod(Ce.neg(), st), st !== "div" && (ot = ke.mod.neg(), it && ot.negative !== 0 && ot.isub(Ce)), { div: ke.div, mod: ot }) : Ce.length > this.length || this.cmp(Ce) < 0 ? { div: new re(0), mod: this } : Ce.length === 1 ? st === "div" ? { div: this.divn(Ce.words[0]), mod: null } : st === "mod" ? { div: null, mod: new re(this.modrn(Ce.words[0])) } : { div: this.divn(Ce.words[0]), mod: new re(this.modrn(Ce.words[0])) } : this._wordDiv(Ce, st);
    var nt, ot, ke;
  }, re.prototype.div = function(Ce) {
    return this.divmod(Ce, "div", !1).div;
  }, re.prototype.mod = function(Ce) {
    return this.divmod(Ce, "mod", !1).mod;
  }, re.prototype.umod = function(Ce) {
    return this.divmod(Ce, "mod", !0).mod;
  }, re.prototype.divRound = function(Ce) {
    var st = this.divmod(Ce);
    if (st.mod.isZero()) return st.div;
    var it = st.div.negative !== 0 ? st.mod.isub(Ce) : st.mod, nt = Ce.ushrn(1), ot = Ce.andln(1), ke = it.cmp(nt);
    return ke < 0 || ot === 1 && ke === 0 ? st.div : st.div.negative !== 0 ? st.div.isubn(1) : st.div.iaddn(1);
  }, re.prototype.modrn = function(Ce) {
    var st = Ce < 0;
    st && (Ce = -Ce), V(Ce <= 67108863);
    for (var it = (1 << 26) % Ce, nt = 0, ot = this.length - 1; ot >= 0; ot--) nt = (it * nt + (0 | this.words[ot])) % Ce;
    return st ? -nt : nt;
  }, re.prototype.modn = function(Ce) {
    return this.modrn(Ce);
  }, re.prototype.idivn = function(Ce) {
    var st = Ce < 0;
    st && (Ce = -Ce), V(Ce <= 67108863);
    for (var it = 0, nt = this.length - 1; nt >= 0; nt--) {
      var ot = (0 | this.words[nt]) + 67108864 * it;
      this.words[nt] = ot / Ce | 0, it = ot % Ce;
    }
    return this._strip(), st ? this.ineg() : this;
  }, re.prototype.divn = function(Ce) {
    return this.clone().idivn(Ce);
  }, re.prototype.egcd = function(Ce) {
    V(Ce.negative === 0), V(!Ce.isZero());
    var st = this, it = Ce.clone();
    st = st.negative !== 0 ? st.umod(Ce) : st.clone();
    for (var nt = new re(1), ot = new re(0), ke = new re(0), ct = new re(1), yt = 0; st.isEven() && it.isEven(); ) st.iushrn(1), it.iushrn(1), ++yt;
    for (var $t = it.clone(), gt = st.clone(); !st.isZero(); ) {
      for (var xt = 0, At = 1; !(st.words[0] & At) && xt < 26; ++xt, At <<= 1) ;
      if (xt > 0) for (st.iushrn(xt); xt-- > 0; ) (nt.isOdd() || ot.isOdd()) && (nt.iadd($t), ot.isub(gt)), nt.iushrn(1), ot.iushrn(1);
      for (var mt = 0, St = 1; !(it.words[0] & St) && mt < 26; ++mt, St <<= 1) ;
      if (mt > 0) for (it.iushrn(mt); mt-- > 0; ) (ke.isOdd() || ct.isOdd()) && (ke.iadd($t), ct.isub(gt)), ke.iushrn(1), ct.iushrn(1);
      st.cmp(it) >= 0 ? (st.isub(it), nt.isub(ke), ot.isub(ct)) : (it.isub(st), ke.isub(nt), ct.isub(ot));
    }
    return { a: ke, b: ct, gcd: it.iushln(yt) };
  }, re.prototype._invmp = function(Ce) {
    V(Ce.negative === 0), V(!Ce.isZero());
    var st = this, it = Ce.clone();
    st = st.negative !== 0 ? st.umod(Ce) : st.clone();
    for (var nt, ot = new re(1), ke = new re(0), ct = it.clone(); st.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
      for (var yt = 0, $t = 1; !(st.words[0] & $t) && yt < 26; ++yt, $t <<= 1) ;
      if (yt > 0) for (st.iushrn(yt); yt-- > 0; ) ot.isOdd() && ot.iadd(ct), ot.iushrn(1);
      for (var gt = 0, xt = 1; !(it.words[0] & xt) && gt < 26; ++gt, xt <<= 1) ;
      if (gt > 0) for (it.iushrn(gt); gt-- > 0; ) ke.isOdd() && ke.iadd(ct), ke.iushrn(1);
      st.cmp(it) >= 0 ? (st.isub(it), ot.isub(ke)) : (it.isub(st), ke.isub(ot));
    }
    return (nt = st.cmpn(1) === 0 ? ot : ke).cmpn(0) < 0 && nt.iadd(Ce), nt;
  }, re.prototype.gcd = function(Ce) {
    if (this.isZero()) return Ce.abs();
    if (Ce.isZero()) return this.abs();
    var st = this.clone(), it = Ce.clone();
    st.negative = 0, it.negative = 0;
    for (var nt = 0; st.isEven() && it.isEven(); nt++) st.iushrn(1), it.iushrn(1);
    for (; ; ) {
      for (; st.isEven(); ) st.iushrn(1);
      for (; it.isEven(); ) it.iushrn(1);
      var ot = st.cmp(it);
      if (ot < 0) {
        var ke = st;
        st = it, it = ke;
      } else if (ot === 0 || it.cmpn(1) === 0) break;
      st.isub(it);
    }
    return it.iushln(nt);
  }, re.prototype.invm = function(Ce) {
    return this.egcd(Ce).a.umod(Ce);
  }, re.prototype.isEven = function() {
    return !(1 & this.words[0]);
  }, re.prototype.isOdd = function() {
    return !(1 & ~this.words[0]);
  }, re.prototype.andln = function(Ce) {
    return this.words[0] & Ce;
  }, re.prototype.bincn = function(Ce) {
    V(typeof Ce == "number");
    var st = Ce % 26, it = (Ce - st) / 26, nt = 1 << st;
    if (this.length <= it) return this._expand(it + 1), this.words[it] |= nt, this;
    for (var ot = nt, ke = it; ot !== 0 && ke < this.length; ke++) {
      var ct = 0 | this.words[ke];
      ot = (ct += ot) >>> 26, ct &= 67108863, this.words[ke] = ct;
    }
    return ot !== 0 && (this.words[ke] = ot, this.length++), this;
  }, re.prototype.isZero = function() {
    return this.length === 1 && this.words[0] === 0;
  }, re.prototype.cmpn = function(Ce) {
    var st, it = Ce < 0;
    if (this.negative !== 0 && !it) return -1;
    if (this.negative === 0 && it) return 1;
    if (this._strip(), this.length > 1) st = 1;
    else {
      it && (Ce = -Ce), V(Ce <= 67108863, "Number is too big");
      var nt = 0 | this.words[0];
      st = nt === Ce ? 0 : nt < Ce ? -1 : 1;
    }
    return this.negative !== 0 ? 0 | -st : st;
  }, re.prototype.cmp = function(Ce) {
    if (this.negative !== 0 && Ce.negative === 0) return -1;
    if (this.negative === 0 && Ce.negative !== 0) return 1;
    var st = this.ucmp(Ce);
    return this.negative !== 0 ? 0 | -st : st;
  }, re.prototype.ucmp = function(Ce) {
    if (this.length > Ce.length) return 1;
    if (this.length < Ce.length) return -1;
    for (var st = 0, it = this.length - 1; it >= 0; it--) {
      var nt = 0 | this.words[it], ot = 0 | Ce.words[it];
      if (nt !== ot) {
        nt < ot ? st = -1 : nt > ot && (st = 1);
        break;
      }
    }
    return st;
  }, re.prototype.gtn = function(Ce) {
    return this.cmpn(Ce) === 1;
  }, re.prototype.gt = function(Ce) {
    return this.cmp(Ce) === 1;
  }, re.prototype.gten = function(Ce) {
    return this.cmpn(Ce) >= 0;
  }, re.prototype.gte = function(Ce) {
    return this.cmp(Ce) >= 0;
  }, re.prototype.ltn = function(Ce) {
    return this.cmpn(Ce) === -1;
  }, re.prototype.lt = function(Ce) {
    return this.cmp(Ce) === -1;
  }, re.prototype.lten = function(Ce) {
    return this.cmpn(Ce) <= 0;
  }, re.prototype.lte = function(Ce) {
    return this.cmp(Ce) <= 0;
  }, re.prototype.eqn = function(Ce) {
    return this.cmpn(Ce) === 0;
  }, re.prototype.eq = function(Ce) {
    return this.cmp(Ce) === 0;
  }, re.red = function(Ce) {
    return new at(Ce);
  }, re.prototype.toRed = function(Ce) {
    return V(!this.red, "Already a number in reduction context"), V(this.negative === 0, "red works only with positives"), Ce.convertTo(this)._forceRed(Ce);
  }, re.prototype.fromRed = function() {
    return V(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
  }, re.prototype._forceRed = function(Ce) {
    return this.red = Ce, this;
  }, re.prototype.forceRed = function(Ce) {
    return V(!this.red, "Already a number in reduction context"), this._forceRed(Ce);
  }, re.prototype.redAdd = function(Ce) {
    return V(this.red, "redAdd works only with red numbers"), this.red.add(this, Ce);
  }, re.prototype.redIAdd = function(Ce) {
    return V(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, Ce);
  }, re.prototype.redSub = function(Ce) {
    return V(this.red, "redSub works only with red numbers"), this.red.sub(this, Ce);
  }, re.prototype.redISub = function(Ce) {
    return V(this.red, "redISub works only with red numbers"), this.red.isub(this, Ce);
  }, re.prototype.redShl = function(Ce) {
    return V(this.red, "redShl works only with red numbers"), this.red.shl(this, Ce);
  }, re.prototype.redMul = function(Ce) {
    return V(this.red, "redMul works only with red numbers"), this.red._verify2(this, Ce), this.red.mul(this, Ce);
  }, re.prototype.redIMul = function(Ce) {
    return V(this.red, "redMul works only with red numbers"), this.red._verify2(this, Ce), this.red.imul(this, Ce);
  }, re.prototype.redSqr = function() {
    return V(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
  }, re.prototype.redISqr = function() {
    return V(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
  }, re.prototype.redSqrt = function() {
    return V(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
  }, re.prototype.redInvm = function() {
    return V(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
  }, re.prototype.redNeg = function() {
    return V(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
  }, re.prototype.redPow = function(Ce) {
    return V(this.red && !Ce.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, Ce);
  };
  var Et = { k256: null, p224: null, p192: null, p25519: null };
  function Rt(Ce, st) {
    this.name = Ce, this.p = new re(st, 16), this.n = this.p.bitLength(), this.k = new re(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
  }
  function Bt() {
    Rt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
  }
  function Pt() {
    Rt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
  }
  function Dt() {
    Rt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
  }
  function Gt() {
    Rt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
  }
  function at(Ce) {
    if (typeof Ce == "string") {
      var st = re._prime(Ce);
      this.m = st.p, this.prime = st;
    } else V(Ce.gtn(1), "modulus must be greater than 1"), this.m = Ce, this.prime = null;
  }
  function lt(Ce) {
    at.call(this, Ce), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new re(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
  }
  Rt.prototype._tmp = function() {
    var Ce = new re(null);
    return Ce.words = new Array(Math.ceil(this.n / 13)), Ce;
  }, Rt.prototype.ireduce = function(Ce) {
    var st, it = Ce;
    do
      this.split(it, this.tmp), st = (it = (it = this.imulK(it)).iadd(this.tmp)).bitLength();
    while (st > this.n);
    var nt = st < this.n ? -1 : it.ucmp(this.p);
    return nt === 0 ? (it.words[0] = 0, it.length = 1) : nt > 0 ? it.isub(this.p) : it.strip !== void 0 ? it.strip() : it._strip(), it;
  }, Rt.prototype.split = function(Ce, st) {
    Ce.iushrn(this.n, 0, st);
  }, Rt.prototype.imulK = function(Ce) {
    return Ce.imul(this.k);
  }, J(Bt, Rt), Bt.prototype.split = function(Ce, st) {
    for (var it = 4194303, nt = Math.min(Ce.length, 9), ot = 0; ot < nt; ot++) st.words[ot] = Ce.words[ot];
    if (st.length = nt, Ce.length <= 9) return Ce.words[0] = 0, void (Ce.length = 1);
    var ke = Ce.words[9];
    for (st.words[st.length++] = ke & it, ot = 10; ot < Ce.length; ot++) {
      var ct = 0 | Ce.words[ot];
      Ce.words[ot - 10] = (ct & it) << 4 | ke >>> 22, ke = ct;
    }
    ke >>>= 22, Ce.words[ot - 10] = ke, ke === 0 && Ce.length > 10 ? Ce.length -= 10 : Ce.length -= 9;
  }, Bt.prototype.imulK = function(Ce) {
    Ce.words[Ce.length] = 0, Ce.words[Ce.length + 1] = 0, Ce.length += 2;
    for (var st = 0, it = 0; it < Ce.length; it++) {
      var nt = 0 | Ce.words[it];
      st += 977 * nt, Ce.words[it] = 67108863 & st, st = 64 * nt + (st / 67108864 | 0);
    }
    return Ce.words[Ce.length - 1] === 0 && (Ce.length--, Ce.words[Ce.length - 1] === 0 && Ce.length--), Ce;
  }, J(Pt, Rt), J(Dt, Rt), J(Gt, Rt), Gt.prototype.imulK = function(Ce) {
    for (var st = 0, it = 0; it < Ce.length; it++) {
      var nt = 19 * (0 | Ce.words[it]) + st, ot = 67108863 & nt;
      nt >>>= 26, Ce.words[it] = ot, st = nt;
    }
    return st !== 0 && (Ce.words[Ce.length++] = st), Ce;
  }, re._prime = function(Ce) {
    if (Et[Ce]) return Et[Ce];
    var st;
    if (Ce === "k256") st = new Bt();
    else if (Ce === "p224") st = new Pt();
    else if (Ce === "p192") st = new Dt();
    else {
      if (Ce !== "p25519") throw new Error("Unknown prime " + Ce);
      st = new Gt();
    }
    return Et[Ce] = st, st;
  }, at.prototype._verify1 = function(Ce) {
    V(Ce.negative === 0, "red works only with positives"), V(Ce.red, "red works only with red numbers");
  }, at.prototype._verify2 = function(Ce, st) {
    V(!(Ce.negative | st.negative), "red works only with positives"), V(Ce.red && Ce.red === st.red, "red works only with red numbers");
  }, at.prototype.imod = function(Ce) {
    return this.prime ? this.prime.ireduce(Ce)._forceRed(this) : (ce(Ce, Ce.umod(this.m)._forceRed(this)), Ce);
  }, at.prototype.neg = function(Ce) {
    return Ce.isZero() ? Ce.clone() : this.m.sub(Ce)._forceRed(this);
  }, at.prototype.add = function(Ce, st) {
    this._verify2(Ce, st);
    var it = Ce.add(st);
    return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
  }, at.prototype.iadd = function(Ce, st) {
    this._verify2(Ce, st);
    var it = Ce.iadd(st);
    return it.cmp(this.m) >= 0 && it.isub(this.m), it;
  }, at.prototype.sub = function(Ce, st) {
    this._verify2(Ce, st);
    var it = Ce.sub(st);
    return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
  }, at.prototype.isub = function(Ce, st) {
    this._verify2(Ce, st);
    var it = Ce.isub(st);
    return it.cmpn(0) < 0 && it.iadd(this.m), it;
  }, at.prototype.shl = function(Ce, st) {
    return this._verify1(Ce), this.imod(Ce.ushln(st));
  }, at.prototype.imul = function(Ce, st) {
    return this._verify2(Ce, st), this.imod(Ce.imul(st));
  }, at.prototype.mul = function(Ce, st) {
    return this._verify2(Ce, st), this.imod(Ce.mul(st));
  }, at.prototype.isqr = function(Ce) {
    return this.imul(Ce, Ce.clone());
  }, at.prototype.sqr = function(Ce) {
    return this.mul(Ce, Ce);
  }, at.prototype.sqrt = function(Ce) {
    if (Ce.isZero()) return Ce.clone();
    var st = this.m.andln(3);
    if (V(st % 2 == 1), st === 3) {
      var it = this.m.add(new re(1)).iushrn(2);
      return this.pow(Ce, it);
    }
    for (var nt = this.m.subn(1), ot = 0; !nt.isZero() && nt.andln(1) === 0; ) ot++, nt.iushrn(1);
    V(!nt.isZero());
    var ke = new re(1).toRed(this), ct = ke.redNeg(), yt = this.m.subn(1).iushrn(1), $t = this.m.bitLength();
    for ($t = new re(2 * $t * $t).toRed(this); this.pow($t, yt).cmp(ct) !== 0; ) $t.redIAdd(ct);
    for (var gt = this.pow($t, nt), xt = this.pow(Ce, nt.addn(1).iushrn(1)), At = this.pow(Ce, nt), mt = ot; At.cmp(ke) !== 0; ) {
      for (var St = At, Mt = 0; St.cmp(ke) !== 0; Mt++) St = St.redSqr();
      V(Mt < mt);
      var It = this.pow(gt, new re(1).iushln(mt - Mt - 1));
      xt = xt.redMul(It), gt = It.redSqr(), At = At.redMul(gt), mt = Mt;
    }
    return xt;
  }, at.prototype.invm = function(Ce) {
    var st = Ce._invmp(this.m);
    return st.negative !== 0 ? (st.negative = 0, this.imod(st).redNeg()) : this.imod(st);
  }, at.prototype.pow = function(Ce, st) {
    if (st.isZero()) return new re(1).toRed(this);
    if (st.cmpn(1) === 0) return Ce.clone();
    var it = new Array(16);
    it[0] = new re(1).toRed(this), it[1] = Ce;
    for (var nt = 2; nt < it.length; nt++) it[nt] = this.mul(it[nt - 1], Ce);
    var ot = it[0], ke = 0, ct = 0, yt = st.bitLength() % 26;
    for (yt === 0 && (yt = 26), nt = st.length - 1; nt >= 0; nt--) {
      for (var $t = st.words[nt], gt = yt - 1; gt >= 0; gt--) {
        var xt = $t >> gt & 1;
        ot !== it[0] && (ot = this.sqr(ot)), xt !== 0 || ke !== 0 ? (ke <<= 1, ke |= xt, (++ct == 4 || nt === 0 && gt === 0) && (ot = this.mul(ot, it[ke]), ct = 0, ke = 0)) : ct = 0;
      }
      yt = 26;
    }
    return ot;
  }, at.prototype.convertTo = function(Ce) {
    var st = Ce.umod(this.m);
    return st === Ce ? st.clone() : st;
  }, at.prototype.convertFrom = function(Ce) {
    var st = Ce.clone();
    return st.red = null, st;
  }, re.mont = function(Ce) {
    return new lt(Ce);
  }, J(lt, at), lt.prototype.convertTo = function(Ce) {
    return this.imod(Ce.ushln(this.shift));
  }, lt.prototype.convertFrom = function(Ce) {
    var st = this.imod(Ce.mul(this.rinv));
    return st.red = null, st;
  }, lt.prototype.imul = function(Ce, st) {
    if (Ce.isZero() || st.isZero()) return Ce.words[0] = 0, Ce.length = 1, Ce;
    var it = Ce.imul(st), nt = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ot = it.isub(nt).iushrn(this.shift), ke = ot;
    return ot.cmp(this.m) >= 0 ? ke = ot.isub(this.m) : ot.cmpn(0) < 0 && (ke = ot.iadd(this.m)), ke._forceRed(this);
  }, lt.prototype.mul = function(Ce, st) {
    if (Ce.isZero() || st.isZero()) return new re(0)._forceRed(this);
    var it = Ce.mul(st), nt = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ot = it.isub(nt).iushrn(this.shift), ke = ot;
    return ot.cmp(this.m) >= 0 ? ke = ot.isub(this.m) : ot.cmpn(0) < 0 && (ke = ot.iadd(this.m)), ke._forceRed(this);
  }, lt.prototype.invm = function(Ce) {
    return this.imod(Ce._invmp(this.m).mul(this.r2))._forceRed(this);
  };
}(bn, commonjsGlobal);
var bnExports = bn.exports, BN$a = bnExports, randomBytes$2 = browserExports;
function blind(B) {
  var L = getr(B);
  return { blinder: L.toRed(BN$a.mont(B.modulus)).redPow(new BN$a(B.publicExponent)).fromRed(), unblinder: L.invm(B.modulus) };
}
function getr(B) {
  var L, V = B.modulus.byteLength();
  do
    L = new BN$a(randomBytes$2(V));
  while (L.cmp(B.modulus) >= 0 || !L.umod(B.prime1) || !L.umod(B.prime2));
  return L;
}
function crt$2(B, L) {
  var V = blind(L), J = L.modulus.byteLength(), re = new BN$a(B).mul(V.blinder).umod(L.modulus), ne = re.toRed(BN$a.mont(L.prime1)), ie = re.toRed(BN$a.mont(L.prime2)), oe = L.coefficient, pe = L.prime1, ce = L.prime2, Oe = ne.redPow(L.exponent1).fromRed(), rt = ie.redPow(L.exponent2).fromRed(), ut = Oe.isub(rt).imul(oe).umod(pe).imul(ce);
  return rt.iadd(ut).imul(V.unblinder).umod(L.modulus).toArrayLike(Buffer$D, "be", J);
}
crt$2.getr = getr;
var browserifyRsa = crt$2, elliptic = {};
const name = "elliptic", version = "6.5.7", description = "EC cryptography", main = "lib/elliptic.js", files = ["lib"], scripts = { lint: "eslint lib test", "lint:fix": "npm run lint -- --fix", unit: "istanbul test _mocha --reporter=spec test/index.js", test: "npm run lint && npm run unit", version: "grunt dist && git add dist/" }, repository = { type: "git", url: "git@github.com:indutny/elliptic" }, keywords = ["EC", "Elliptic", "curve", "Cryptography"], author = "Fedor Indutny <fedor@indutny.com>", license = "MIT", bugs = { url: "https://github.com/indutny/elliptic/issues" }, homepage = "https://github.com/indutny/elliptic", devDependencies = { brfs: "^2.0.2", coveralls: "^3.1.0", eslint: "^7.6.0", grunt: "^1.2.1", "grunt-browserify": "^5.3.0", "grunt-cli": "^1.3.2", "grunt-contrib-connect": "^3.0.0", "grunt-contrib-copy": "^1.0.0", "grunt-contrib-uglify": "^5.0.0", "grunt-mocha-istanbul": "^5.0.2", "grunt-saucelabs": "^9.0.1", istanbul: "^0.4.5", mocha: "^8.0.1" }, dependencies = { "bn.js": "^4.11.9", brorand: "^1.1.0", "hash.js": "^1.0.0", "hmac-drbg": "^1.0.1", inherits: "^2.0.4", "minimalistic-assert": "^1.0.1", "minimalistic-crypto-utils": "^1.0.1" }, require$$0 = { name, version, description, main, files, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, dependencies };
var utils$l = {}, utils$k = {};
(function(B) {
  var L = utils$k;
  function V(re) {
    return re.length === 1 ? "0" + re : re;
  }
  function J(re) {
    for (var ne = "", ie = 0; ie < re.length; ie++) ne += V(re[ie].toString(16));
    return ne;
  }
  L.toArray = function(re, ne) {
    if (Array.isArray(re)) return re.slice();
    if (!re) return [];
    var ie = [];
    if (typeof re != "string") {
      for (var oe = 0; oe < re.length; oe++) ie[oe] = 0 | re[oe];
      return ie;
    }
    if (ne === "hex")
      for ((re = re.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (re = "0" + re), oe = 0; oe < re.length; oe += 2) ie.push(parseInt(re[oe] + re[oe + 1], 16));
    else for (oe = 0; oe < re.length; oe++) {
      var pe = re.charCodeAt(oe), ce = pe >> 8, Oe = 255 & pe;
      ce ? ie.push(ce, Oe) : ie.push(Oe);
    }
    return ie;
  }, L.zero2 = V, L.toHex = J, L.encode = function(re, ne) {
    return ne === "hex" ? J(re) : re;
  };
})(), function(B) {
  var L = utils$l, V = bnExports$1, J = minimalisticAssert, re = utils$k;
  L.assert = J, L.toArray = re.toArray, L.zero2 = re.zero2, L.toHex = re.toHex, L.encode = re.encode, L.getNAF = function(ne, ie, oe) {
    var pe, ce = new Array(Math.max(ne.bitLength(), oe) + 1);
    for (pe = 0; pe < ce.length; pe += 1) ce[pe] = 0;
    var Oe = 1 << ie + 1, rt = ne.clone();
    for (pe = 0; pe < ce.length; pe++) {
      var ut, dt = rt.andln(Oe - 1);
      rt.isOdd() ? (ut = dt > (Oe >> 1) - 1 ? (Oe >> 1) - dt : dt, rt.isubn(ut)) : ut = 0, ce[pe] = ut, rt.iushrn(1);
    }
    return ce;
  }, L.getJSF = function(ne, ie) {
    var oe = [[], []];
    ne = ne.clone(), ie = ie.clone();
    for (var pe, ce = 0, Oe = 0; ne.cmpn(-ce) > 0 || ie.cmpn(-Oe) > 0; ) {
      var rt, ut, dt = ne.andln(3) + ce & 3, ht = ie.andln(3) + Oe & 3;
      dt === 3 && (dt = -1), ht === 3 && (ht = -1), rt = 1 & dt ? (pe = ne.andln(7) + ce & 7) !== 3 && pe !== 5 || ht !== 2 ? dt : -dt : 0, oe[0].push(rt), ut = 1 & ht ? (pe = ie.andln(7) + Oe & 7) !== 3 && pe !== 5 || dt !== 2 ? ht : -ht : 0, oe[1].push(ut), 2 * ce === rt + 1 && (ce = 1 - ce), 2 * Oe === ut + 1 && (Oe = 1 - Oe), ne.iushrn(1), ie.iushrn(1);
    }
    return oe;
  }, L.cachedProperty = function(ne, ie, oe) {
    var pe = "_" + ie;
    ne.prototype[ie] = function() {
      return this[pe] !== void 0 ? this[pe] : this[pe] = oe.call(this);
    };
  }, L.parseBytes = function(ne) {
    return typeof ne == "string" ? L.toArray(ne, "hex") : ne;
  }, L.intFromLE = function(ne) {
    return new V(ne, "hex", "le");
  };
}();
var curve = {}, BN$9 = bnExports$1, utils$j = utils$l, getNAF = utils$j.getNAF, getJSF = utils$j.getJSF, assert$e = utils$j.assert;
function BaseCurve(B, L) {
  this.type = B, this.p = new BN$9(L.p, 16), this.red = L.prime ? BN$9.red(L.prime) : BN$9.mont(this.p), this.zero = new BN$9(0).toRed(this.red), this.one = new BN$9(1).toRed(this.red), this.two = new BN$9(2).toRed(this.red), this.n = L.n && new BN$9(L.n, 16), this.g = L.g && this.pointFromJSON(L.g, L.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var V = this.n && this.p.div(this.n);
  !V || V.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
}
var base$1 = BaseCurve;
function BasePoint(B, L) {
  this.curve = B, this.type = L, this.precomputed = null;
}
BaseCurve.prototype.point = function() {
  throw new Error("Not implemented");
}, BaseCurve.prototype.validate = function() {
  throw new Error("Not implemented");
}, BaseCurve.prototype._fixedNafMul = function(B, L) {
  assert$e(B.precomputed);
  var V = B._getDoubles(), J = getNAF(L, 1, this._bitLength), re = (1 << V.step + 1) - (V.step % 2 == 0 ? 2 : 1);
  re /= 3;
  var ne, ie, oe = [];
  for (ne = 0; ne < J.length; ne += V.step) {
    ie = 0;
    for (var pe = ne + V.step - 1; pe >= ne; pe--) ie = (ie << 1) + J[pe];
    oe.push(ie);
  }
  for (var ce = this.jpoint(null, null, null), Oe = this.jpoint(null, null, null), rt = re; rt > 0; rt--) {
    for (ne = 0; ne < oe.length; ne++) (ie = oe[ne]) === rt ? Oe = Oe.mixedAdd(V.points[ne]) : ie === -rt && (Oe = Oe.mixedAdd(V.points[ne].neg()));
    ce = ce.add(Oe);
  }
  return ce.toP();
}, BaseCurve.prototype._wnafMul = function(B, L) {
  var V = 4, J = B._getNAFPoints(V);
  V = J.wnd;
  for (var re = J.points, ne = getNAF(L, V, this._bitLength), ie = this.jpoint(null, null, null), oe = ne.length - 1; oe >= 0; oe--) {
    for (var pe = 0; oe >= 0 && ne[oe] === 0; oe--) pe++;
    if (oe >= 0 && pe++, ie = ie.dblp(pe), oe < 0) break;
    var ce = ne[oe];
    assert$e(ce !== 0), ie = B.type === "affine" ? ce > 0 ? ie.mixedAdd(re[ce - 1 >> 1]) : ie.mixedAdd(re[-ce - 1 >> 1].neg()) : ce > 0 ? ie.add(re[ce - 1 >> 1]) : ie.add(re[-ce - 1 >> 1].neg());
  }
  return B.type === "affine" ? ie.toP() : ie;
}, BaseCurve.prototype._wnafMulAdd = function(B, L, V, J, re) {
  var ne, ie, oe, pe = this._wnafT1, ce = this._wnafT2, Oe = this._wnafT3, rt = 0;
  for (ne = 0; ne < J; ne++) {
    var ut = (oe = L[ne])._getNAFPoints(B);
    pe[ne] = ut.wnd, ce[ne] = ut.points;
  }
  for (ne = J - 1; ne >= 1; ne -= 2) {
    var dt = ne - 1, ht = ne;
    if (pe[dt] === 1 && pe[ht] === 1) {
      var bt = [L[dt], null, null, L[ht]];
      L[dt].y.cmp(L[ht].y) === 0 ? (bt[1] = L[dt].add(L[ht]), bt[2] = L[dt].toJ().mixedAdd(L[ht].neg())) : L[dt].y.cmp(L[ht].y.redNeg()) === 0 ? (bt[1] = L[dt].toJ().mixedAdd(L[ht]), bt[2] = L[dt].add(L[ht].neg())) : (bt[1] = L[dt].toJ().mixedAdd(L[ht]), bt[2] = L[dt].toJ().mixedAdd(L[ht].neg()));
      var Tt = [-3, -1, -5, -7, 0, 7, 5, 1, 3], wt = getJSF(V[dt], V[ht]);
      for (rt = Math.max(wt[0].length, rt), Oe[dt] = new Array(rt), Oe[ht] = new Array(rt), ie = 0; ie < rt; ie++) {
        var Et = 0 | wt[0][ie], Rt = 0 | wt[1][ie];
        Oe[dt][ie] = Tt[3 * (Et + 1) + (Rt + 1)], Oe[ht][ie] = 0, ce[dt] = bt;
      }
    } else Oe[dt] = getNAF(V[dt], pe[dt], this._bitLength), Oe[ht] = getNAF(V[ht], pe[ht], this._bitLength), rt = Math.max(Oe[dt].length, rt), rt = Math.max(Oe[ht].length, rt);
  }
  var Bt = this.jpoint(null, null, null), Pt = this._wnafT4;
  for (ne = rt; ne >= 0; ne--) {
    for (var Dt = 0; ne >= 0; ) {
      var Gt = !0;
      for (ie = 0; ie < J; ie++) Pt[ie] = 0 | Oe[ie][ne], Pt[ie] !== 0 && (Gt = !1);
      if (!Gt) break;
      Dt++, ne--;
    }
    if (ne >= 0 && Dt++, Bt = Bt.dblp(Dt), ne < 0) break;
    for (ie = 0; ie < J; ie++) {
      var at = Pt[ie];
      at !== 0 && (at > 0 ? oe = ce[ie][at - 1 >> 1] : at < 0 && (oe = ce[ie][-at - 1 >> 1].neg()), Bt = oe.type === "affine" ? Bt.mixedAdd(oe) : Bt.add(oe));
    }
  }
  for (ne = 0; ne < J; ne++) ce[ne] = null;
  return re ? Bt : Bt.toP();
}, BaseCurve.BasePoint = BasePoint, BasePoint.prototype.eq = function() {
  throw new Error("Not implemented");
}, BasePoint.prototype.validate = function() {
  return this.curve.validate(this);
}, BaseCurve.prototype.decodePoint = function(B, L) {
  B = utils$j.toArray(B, L);
  var V = this.p.byteLength();
  if ((B[0] === 4 || B[0] === 6 || B[0] === 7) && B.length - 1 == 2 * V) return B[0] === 6 ? assert$e(B[B.length - 1] % 2 == 0) : B[0] === 7 && assert$e(B[B.length - 1] % 2 == 1), this.point(B.slice(1, 1 + V), B.slice(1 + V, 1 + 2 * V));
  if ((B[0] === 2 || B[0] === 3) && B.length - 1 === V) return this.pointFromX(B.slice(1, 1 + V), B[0] === 3);
  throw new Error("Unknown point format");
}, BasePoint.prototype.encodeCompressed = function(B) {
  return this.encode(B, !0);
}, BasePoint.prototype._encode = function(B) {
  var L = this.curve.p.byteLength(), V = this.getX().toArray("be", L);
  return B ? [this.getY().isEven() ? 2 : 3].concat(V) : [4].concat(V, this.getY().toArray("be", L));
}, BasePoint.prototype.encode = function(B, L) {
  return utils$j.encode(this._encode(L), B);
}, BasePoint.prototype.precompute = function(B) {
  if (this.precomputed) return this;
  var L = { doubles: null, naf: null, beta: null };
  return L.naf = this._getNAFPoints(8), L.doubles = this._getDoubles(4, B), L.beta = this._getBeta(), this.precomputed = L, this;
}, BasePoint.prototype._hasDoubles = function(B) {
  if (!this.precomputed) return !1;
  var L = this.precomputed.doubles;
  return !!L && L.points.length >= Math.ceil((B.bitLength() + 1) / L.step);
}, BasePoint.prototype._getDoubles = function(B, L) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  for (var V = [this], J = this, re = 0; re < L; re += B) {
    for (var ne = 0; ne < B; ne++) J = J.dbl();
    V.push(J);
  }
  return { step: B, points: V };
}, BasePoint.prototype._getNAFPoints = function(B) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  for (var L = [this], V = (1 << B) - 1, J = V === 1 ? null : this.dbl(), re = 1; re < V; re++) L[re] = L[re - 1].add(J);
  return { wnd: B, points: L };
}, BasePoint.prototype._getBeta = function() {
  return null;
}, BasePoint.prototype.dblp = function(B) {
  for (var L = this, V = 0; V < B; V++) L = L.dbl();
  return L;
};
var utils$i = utils$l, BN$8 = bnExports$1, inherits$4 = inherits_browserExports, Base$2 = base$1, assert$d = utils$i.assert;
function ShortCurve(B) {
  Base$2.call(this, "short", B), this.a = new BN$8(B.a, 16).toRed(this.red), this.b = new BN$8(B.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(B), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
inherits$4(ShortCurve, Base$2);
var short = ShortCurve;
function Point$2(B, L, V, J) {
  Base$2.BasePoint.call(this, B, "affine"), L === null && V === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new BN$8(L, 16), this.y = new BN$8(V, 16), J && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
}
function JPoint(B, L, V, J) {
  Base$2.BasePoint.call(this, B, "jacobian"), L === null && V === null && J === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new BN$8(0)) : (this.x = new BN$8(L, 16), this.y = new BN$8(V, 16), this.z = new BN$8(J, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
ShortCurve.prototype._getEndomorphism = function(B) {
  if (this.zeroA && this.g && this.n && this.p.modn(3) === 1) {
    var L, V;
    if (B.beta) L = new BN$8(B.beta, 16).toRed(this.red);
    else {
      var J = this._getEndoRoots(this.p);
      L = (L = J[0].cmp(J[1]) < 0 ? J[0] : J[1]).toRed(this.red);
    }
    if (B.lambda) V = new BN$8(B.lambda, 16);
    else {
      var re = this._getEndoRoots(this.n);
      this.g.mul(re[0]).x.cmp(this.g.x.redMul(L)) === 0 ? V = re[0] : (V = re[1], assert$d(this.g.mul(V).x.cmp(this.g.x.redMul(L)) === 0));
    }
    return { beta: L, lambda: V, basis: B.basis ? B.basis.map(function(ne) {
      return { a: new BN$8(ne.a, 16), b: new BN$8(ne.b, 16) };
    }) : this._getEndoBasis(V) };
  }
}, ShortCurve.prototype._getEndoRoots = function(B) {
  var L = B === this.p ? this.red : BN$8.mont(B), V = new BN$8(2).toRed(L).redInvm(), J = V.redNeg(), re = new BN$8(3).toRed(L).redNeg().redSqrt().redMul(V);
  return [J.redAdd(re).fromRed(), J.redSub(re).fromRed()];
}, ShortCurve.prototype._getEndoBasis = function(B) {
  for (var L, V, J, re, ne, ie, oe, pe, ce, Oe = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), rt = B, ut = this.n.clone(), dt = new BN$8(1), ht = new BN$8(0), bt = new BN$8(0), Tt = new BN$8(1), wt = 0; rt.cmpn(0) !== 0; ) {
    var Et = ut.div(rt);
    pe = ut.sub(Et.mul(rt)), ce = bt.sub(Et.mul(dt));
    var Rt = Tt.sub(Et.mul(ht));
    if (!J && pe.cmp(Oe) < 0) L = oe.neg(), V = dt, J = pe.neg(), re = ce;
    else if (J && ++wt == 2) break;
    oe = pe, ut = rt, rt = pe, bt = dt, dt = ce, Tt = ht, ht = Rt;
  }
  ne = pe.neg(), ie = ce;
  var Bt = J.sqr().add(re.sqr());
  return ne.sqr().add(ie.sqr()).cmp(Bt) >= 0 && (ne = L, ie = V), J.negative && (J = J.neg(), re = re.neg()), ne.negative && (ne = ne.neg(), ie = ie.neg()), [{ a: J, b: re }, { a: ne, b: ie }];
}, ShortCurve.prototype._endoSplit = function(B) {
  var L = this.endo.basis, V = L[0], J = L[1], re = J.b.mul(B).divRound(this.n), ne = V.b.neg().mul(B).divRound(this.n), ie = re.mul(V.a), oe = ne.mul(J.a), pe = re.mul(V.b), ce = ne.mul(J.b);
  return { k1: B.sub(ie).sub(oe), k2: pe.add(ce).neg() };
}, ShortCurve.prototype.pointFromX = function(B, L) {
  (B = new BN$8(B, 16)).red || (B = B.toRed(this.red));
  var V = B.redSqr().redMul(B).redIAdd(B.redMul(this.a)).redIAdd(this.b), J = V.redSqrt();
  if (J.redSqr().redSub(V).cmp(this.zero) !== 0) throw new Error("invalid point");
  var re = J.fromRed().isOdd();
  return (L && !re || !L && re) && (J = J.redNeg()), this.point(B, J);
}, ShortCurve.prototype.validate = function(B) {
  if (B.inf) return !0;
  var L = B.x, V = B.y, J = this.a.redMul(L), re = L.redSqr().redMul(L).redIAdd(J).redIAdd(this.b);
  return V.redSqr().redISub(re).cmpn(0) === 0;
}, ShortCurve.prototype._endoWnafMulAdd = function(B, L, V) {
  for (var J = this._endoWnafT1, re = this._endoWnafT2, ne = 0; ne < B.length; ne++) {
    var ie = this._endoSplit(L[ne]), oe = B[ne], pe = oe._getBeta();
    ie.k1.negative && (ie.k1.ineg(), oe = oe.neg(!0)), ie.k2.negative && (ie.k2.ineg(), pe = pe.neg(!0)), J[2 * ne] = oe, J[2 * ne + 1] = pe, re[2 * ne] = ie.k1, re[2 * ne + 1] = ie.k2;
  }
  for (var ce = this._wnafMulAdd(1, J, re, 2 * ne, V), Oe = 0; Oe < 2 * ne; Oe++) J[Oe] = null, re[Oe] = null;
  return ce;
}, inherits$4(Point$2, Base$2.BasePoint), ShortCurve.prototype.point = function(B, L, V) {
  return new Point$2(this, B, L, V);
}, ShortCurve.prototype.pointFromJSON = function(B, L) {
  return Point$2.fromJSON(this, B, L);
}, Point$2.prototype._getBeta = function() {
  if (this.curve.endo) {
    var B = this.precomputed;
    if (B && B.beta) return B.beta;
    var L = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (B) {
      var V = this.curve, J = function(re) {
        return V.point(re.x.redMul(V.endo.beta), re.y);
      };
      B.beta = L, L.precomputed = { beta: null, naf: B.naf && { wnd: B.naf.wnd, points: B.naf.points.map(J) }, doubles: B.doubles && { step: B.doubles.step, points: B.doubles.points.map(J) } };
    }
    return L;
  }
}, Point$2.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
}, Point$2.fromJSON = function(B, L, V) {
  typeof L == "string" && (L = JSON.parse(L));
  var J = B.point(L[0], L[1], V);
  if (!L[2]) return J;
  function re(ie) {
    return B.point(ie[0], ie[1], V);
  }
  var ne = L[2];
  return J.precomputed = { beta: null, doubles: ne.doubles && { step: ne.doubles.step, points: [J].concat(ne.doubles.points.map(re)) }, naf: ne.naf && { wnd: ne.naf.wnd, points: [J].concat(ne.naf.points.map(re)) } }, J;
}, Point$2.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
}, Point$2.prototype.isInfinity = function() {
  return this.inf;
}, Point$2.prototype.add = function(B) {
  if (this.inf) return B;
  if (B.inf) return this;
  if (this.eq(B)) return this.dbl();
  if (this.neg().eq(B)) return this.curve.point(null, null);
  if (this.x.cmp(B.x) === 0) return this.curve.point(null, null);
  var L = this.y.redSub(B.y);
  L.cmpn(0) !== 0 && (L = L.redMul(this.x.redSub(B.x).redInvm()));
  var V = L.redSqr().redISub(this.x).redISub(B.x), J = L.redMul(this.x.redSub(V)).redISub(this.y);
  return this.curve.point(V, J);
}, Point$2.prototype.dbl = function() {
  if (this.inf) return this;
  var B = this.y.redAdd(this.y);
  if (B.cmpn(0) === 0) return this.curve.point(null, null);
  var L = this.curve.a, V = this.x.redSqr(), J = B.redInvm(), re = V.redAdd(V).redIAdd(V).redIAdd(L).redMul(J), ne = re.redSqr().redISub(this.x.redAdd(this.x)), ie = re.redMul(this.x.redSub(ne)).redISub(this.y);
  return this.curve.point(ne, ie);
}, Point$2.prototype.getX = function() {
  return this.x.fromRed();
}, Point$2.prototype.getY = function() {
  return this.y.fromRed();
}, Point$2.prototype.mul = function(B) {
  return B = new BN$8(B, 16), this.isInfinity() ? this : this._hasDoubles(B) ? this.curve._fixedNafMul(this, B) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [B]) : this.curve._wnafMul(this, B);
}, Point$2.prototype.mulAdd = function(B, L, V) {
  var J = [this, L], re = [B, V];
  return this.curve.endo ? this.curve._endoWnafMulAdd(J, re) : this.curve._wnafMulAdd(1, J, re, 2);
}, Point$2.prototype.jmulAdd = function(B, L, V) {
  var J = [this, L], re = [B, V];
  return this.curve.endo ? this.curve._endoWnafMulAdd(J, re, !0) : this.curve._wnafMulAdd(1, J, re, 2, !0);
}, Point$2.prototype.eq = function(B) {
  return this === B || this.inf === B.inf && (this.inf || this.x.cmp(B.x) === 0 && this.y.cmp(B.y) === 0);
}, Point$2.prototype.neg = function(B) {
  if (this.inf) return this;
  var L = this.curve.point(this.x, this.y.redNeg());
  if (B && this.precomputed) {
    var V = this.precomputed, J = function(re) {
      return re.neg();
    };
    L.precomputed = { naf: V.naf && { wnd: V.naf.wnd, points: V.naf.points.map(J) }, doubles: V.doubles && { step: V.doubles.step, points: V.doubles.points.map(J) } };
  }
  return L;
}, Point$2.prototype.toJ = function() {
  return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
}, inherits$4(JPoint, Base$2.BasePoint), ShortCurve.prototype.jpoint = function(B, L, V) {
  return new JPoint(this, B, L, V);
}, JPoint.prototype.toP = function() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var B = this.z.redInvm(), L = B.redSqr(), V = this.x.redMul(L), J = this.y.redMul(L).redMul(B);
  return this.curve.point(V, J);
}, JPoint.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
}, JPoint.prototype.add = function(B) {
  if (this.isInfinity()) return B;
  if (B.isInfinity()) return this;
  var L = B.z.redSqr(), V = this.z.redSqr(), J = this.x.redMul(L), re = B.x.redMul(V), ne = this.y.redMul(L.redMul(B.z)), ie = B.y.redMul(V.redMul(this.z)), oe = J.redSub(re), pe = ne.redSub(ie);
  if (oe.cmpn(0) === 0) return pe.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var ce = oe.redSqr(), Oe = ce.redMul(oe), rt = J.redMul(ce), ut = pe.redSqr().redIAdd(Oe).redISub(rt).redISub(rt), dt = pe.redMul(rt.redISub(ut)).redISub(ne.redMul(Oe)), ht = this.z.redMul(B.z).redMul(oe);
  return this.curve.jpoint(ut, dt, ht);
}, JPoint.prototype.mixedAdd = function(B) {
  if (this.isInfinity()) return B.toJ();
  if (B.isInfinity()) return this;
  var L = this.z.redSqr(), V = this.x, J = B.x.redMul(L), re = this.y, ne = B.y.redMul(L).redMul(this.z), ie = V.redSub(J), oe = re.redSub(ne);
  if (ie.cmpn(0) === 0) return oe.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var pe = ie.redSqr(), ce = pe.redMul(ie), Oe = V.redMul(pe), rt = oe.redSqr().redIAdd(ce).redISub(Oe).redISub(Oe), ut = oe.redMul(Oe.redISub(rt)).redISub(re.redMul(ce)), dt = this.z.redMul(ie);
  return this.curve.jpoint(rt, ut, dt);
}, JPoint.prototype.dblp = function(B) {
  if (B === 0) return this;
  if (this.isInfinity()) return this;
  if (!B) return this.dbl();
  var L;
  if (this.curve.zeroA || this.curve.threeA) {
    var V = this;
    for (L = 0; L < B; L++) V = V.dbl();
    return V;
  }
  var J = this.curve.a, re = this.curve.tinv, ne = this.x, ie = this.y, oe = this.z, pe = oe.redSqr().redSqr(), ce = ie.redAdd(ie);
  for (L = 0; L < B; L++) {
    var Oe = ne.redSqr(), rt = ce.redSqr(), ut = rt.redSqr(), dt = Oe.redAdd(Oe).redIAdd(Oe).redIAdd(J.redMul(pe)), ht = ne.redMul(rt), bt = dt.redSqr().redISub(ht.redAdd(ht)), Tt = ht.redISub(bt), wt = dt.redMul(Tt);
    wt = wt.redIAdd(wt).redISub(ut);
    var Et = ce.redMul(oe);
    L + 1 < B && (pe = pe.redMul(ut)), ne = bt, oe = Et, ce = wt;
  }
  return this.curve.jpoint(ne, ce.redMul(re), oe);
}, JPoint.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
}, JPoint.prototype._zeroDbl = function() {
  var B, L, V;
  if (this.zOne) {
    var J = this.x.redSqr(), re = this.y.redSqr(), ne = re.redSqr(), ie = this.x.redAdd(re).redSqr().redISub(J).redISub(ne);
    ie = ie.redIAdd(ie);
    var oe = J.redAdd(J).redIAdd(J), pe = oe.redSqr().redISub(ie).redISub(ie), ce = ne.redIAdd(ne);
    ce = (ce = ce.redIAdd(ce)).redIAdd(ce), B = pe, L = oe.redMul(ie.redISub(pe)).redISub(ce), V = this.y.redAdd(this.y);
  } else {
    var Oe = this.x.redSqr(), rt = this.y.redSqr(), ut = rt.redSqr(), dt = this.x.redAdd(rt).redSqr().redISub(Oe).redISub(ut);
    dt = dt.redIAdd(dt);
    var ht = Oe.redAdd(Oe).redIAdd(Oe), bt = ht.redSqr(), Tt = ut.redIAdd(ut);
    Tt = (Tt = Tt.redIAdd(Tt)).redIAdd(Tt), B = bt.redISub(dt).redISub(dt), L = ht.redMul(dt.redISub(B)).redISub(Tt), V = (V = this.y.redMul(this.z)).redIAdd(V);
  }
  return this.curve.jpoint(B, L, V);
}, JPoint.prototype._threeDbl = function() {
  var B, L, V;
  if (this.zOne) {
    var J = this.x.redSqr(), re = this.y.redSqr(), ne = re.redSqr(), ie = this.x.redAdd(re).redSqr().redISub(J).redISub(ne);
    ie = ie.redIAdd(ie);
    var oe = J.redAdd(J).redIAdd(J).redIAdd(this.curve.a), pe = oe.redSqr().redISub(ie).redISub(ie);
    B = pe;
    var ce = ne.redIAdd(ne);
    ce = (ce = ce.redIAdd(ce)).redIAdd(ce), L = oe.redMul(ie.redISub(pe)).redISub(ce), V = this.y.redAdd(this.y);
  } else {
    var Oe = this.z.redSqr(), rt = this.y.redSqr(), ut = this.x.redMul(rt), dt = this.x.redSub(Oe).redMul(this.x.redAdd(Oe));
    dt = dt.redAdd(dt).redIAdd(dt);
    var ht = ut.redIAdd(ut), bt = (ht = ht.redIAdd(ht)).redAdd(ht);
    B = dt.redSqr().redISub(bt), V = this.y.redAdd(this.z).redSqr().redISub(rt).redISub(Oe);
    var Tt = rt.redSqr();
    Tt = (Tt = (Tt = Tt.redIAdd(Tt)).redIAdd(Tt)).redIAdd(Tt), L = dt.redMul(ht.redISub(B)).redISub(Tt);
  }
  return this.curve.jpoint(B, L, V);
}, JPoint.prototype._dbl = function() {
  var B = this.curve.a, L = this.x, V = this.y, J = this.z, re = J.redSqr().redSqr(), ne = L.redSqr(), ie = V.redSqr(), oe = ne.redAdd(ne).redIAdd(ne).redIAdd(B.redMul(re)), pe = L.redAdd(L), ce = (pe = pe.redIAdd(pe)).redMul(ie), Oe = oe.redSqr().redISub(ce.redAdd(ce)), rt = ce.redISub(Oe), ut = ie.redSqr();
  ut = (ut = (ut = ut.redIAdd(ut)).redIAdd(ut)).redIAdd(ut);
  var dt = oe.redMul(rt).redISub(ut), ht = V.redAdd(V).redMul(J);
  return this.curve.jpoint(Oe, dt, ht);
}, JPoint.prototype.trpl = function() {
  if (!this.curve.zeroA) return this.dbl().add(this);
  var B = this.x.redSqr(), L = this.y.redSqr(), V = this.z.redSqr(), J = L.redSqr(), re = B.redAdd(B).redIAdd(B), ne = re.redSqr(), ie = this.x.redAdd(L).redSqr().redISub(B).redISub(J), oe = (ie = (ie = (ie = ie.redIAdd(ie)).redAdd(ie).redIAdd(ie)).redISub(ne)).redSqr(), pe = J.redIAdd(J);
  pe = (pe = (pe = pe.redIAdd(pe)).redIAdd(pe)).redIAdd(pe);
  var ce = re.redIAdd(ie).redSqr().redISub(ne).redISub(oe).redISub(pe), Oe = L.redMul(ce);
  Oe = (Oe = Oe.redIAdd(Oe)).redIAdd(Oe);
  var rt = this.x.redMul(oe).redISub(Oe);
  rt = (rt = rt.redIAdd(rt)).redIAdd(rt);
  var ut = this.y.redMul(ce.redMul(pe.redISub(ce)).redISub(ie.redMul(oe)));
  ut = (ut = (ut = ut.redIAdd(ut)).redIAdd(ut)).redIAdd(ut);
  var dt = this.z.redAdd(ie).redSqr().redISub(V).redISub(oe);
  return this.curve.jpoint(rt, ut, dt);
}, JPoint.prototype.mul = function(B, L) {
  return B = new BN$8(B, L), this.curve._wnafMul(this, B);
}, JPoint.prototype.eq = function(B) {
  if (B.type === "affine") return this.eq(B.toJ());
  if (this === B) return !0;
  var L = this.z.redSqr(), V = B.z.redSqr();
  if (this.x.redMul(V).redISub(B.x.redMul(L)).cmpn(0) !== 0) return !1;
  var J = L.redMul(this.z), re = V.redMul(B.z);
  return this.y.redMul(re).redISub(B.y.redMul(J)).cmpn(0) === 0;
}, JPoint.prototype.eqXToP = function(B) {
  var L = this.z.redSqr(), V = B.toRed(this.curve.red).redMul(L);
  if (this.x.cmp(V) === 0) return !0;
  for (var J = B.clone(), re = this.curve.redN.redMul(L); ; ) {
    if (J.iadd(this.curve.n), J.cmp(this.curve.p) >= 0) return !1;
    if (V.redIAdd(re), this.x.cmp(V) === 0) return !0;
  }
}, JPoint.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
}, JPoint.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var BN$7 = bnExports$1, inherits$3 = inherits_browserExports, Base$1 = base$1, utils$h = utils$l;
function MontCurve(B) {
  Base$1.call(this, "mont", B), this.a = new BN$7(B.a, 16).toRed(this.red), this.b = new BN$7(B.b, 16).toRed(this.red), this.i4 = new BN$7(4).toRed(this.red).redInvm(), this.two = new BN$7(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits$3(MontCurve, Base$1);
var mont = MontCurve;
function Point$1(B, L, V) {
  Base$1.BasePoint.call(this, B, "projective"), L === null && V === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new BN$7(L, 16), this.z = new BN$7(V, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
}
MontCurve.prototype.validate = function(B) {
  var L = B.normalize().x, V = L.redSqr(), J = V.redMul(L).redAdd(V.redMul(this.a)).redAdd(L);
  return J.redSqrt().redSqr().cmp(J) === 0;
}, inherits$3(Point$1, Base$1.BasePoint), MontCurve.prototype.decodePoint = function(B, L) {
  return this.point(utils$h.toArray(B, L), 1);
}, MontCurve.prototype.point = function(B, L) {
  return new Point$1(this, B, L);
}, MontCurve.prototype.pointFromJSON = function(B) {
  return Point$1.fromJSON(this, B);
}, Point$1.prototype.precompute = function() {
}, Point$1.prototype._encode = function() {
  return this.getX().toArray("be", this.curve.p.byteLength());
}, Point$1.fromJSON = function(B, L) {
  return new Point$1(B, L[0], L[1] || B.one);
}, Point$1.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
}, Point$1.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
}, Point$1.prototype.dbl = function() {
  var B = this.x.redAdd(this.z).redSqr(), L = this.x.redSub(this.z).redSqr(), V = B.redSub(L), J = B.redMul(L), re = V.redMul(L.redAdd(this.curve.a24.redMul(V)));
  return this.curve.point(J, re);
}, Point$1.prototype.add = function() {
  throw new Error("Not supported on Montgomery curve");
}, Point$1.prototype.diffAdd = function(B, L) {
  var V = this.x.redAdd(this.z), J = this.x.redSub(this.z), re = B.x.redAdd(B.z), ne = B.x.redSub(B.z).redMul(V), ie = re.redMul(J), oe = L.z.redMul(ne.redAdd(ie).redSqr()), pe = L.x.redMul(ne.redISub(ie).redSqr());
  return this.curve.point(oe, pe);
}, Point$1.prototype.mul = function(B) {
  for (var L = B.clone(), V = this, J = this.curve.point(null, null), re = []; L.cmpn(0) !== 0; L.iushrn(1)) re.push(L.andln(1));
  for (var ne = re.length - 1; ne >= 0; ne--) re[ne] === 0 ? (V = V.diffAdd(J, this), J = J.dbl()) : (J = V.diffAdd(J, this), V = V.dbl());
  return J;
}, Point$1.prototype.mulAdd = function() {
  throw new Error("Not supported on Montgomery curve");
}, Point$1.prototype.jumlAdd = function() {
  throw new Error("Not supported on Montgomery curve");
}, Point$1.prototype.eq = function(B) {
  return this.getX().cmp(B.getX()) === 0;
}, Point$1.prototype.normalize = function() {
  return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
}, Point$1.prototype.getX = function() {
  return this.normalize(), this.x.fromRed();
};
var utils$g = utils$l, BN$6 = bnExports$1, inherits$2 = inherits_browserExports, Base = base$1, assert$c = utils$g.assert;
function EdwardsCurve(B) {
  this.twisted = (0 | B.a) != 1, this.mOneA = this.twisted && (0 | B.a) == -1, this.extended = this.mOneA, Base.call(this, "edwards", B), this.a = new BN$6(B.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new BN$6(B.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new BN$6(B.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), assert$c(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (0 | B.c) == 1;
}
inherits$2(EdwardsCurve, Base);
var edwards = EdwardsCurve;
function Point(B, L, V, J, re) {
  Base.BasePoint.call(this, B, "projective"), L === null && V === null && J === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new BN$6(L, 16), this.y = new BN$6(V, 16), this.z = J ? new BN$6(J, 16) : this.curve.one, this.t = re && new BN$6(re, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
}
EdwardsCurve.prototype._mulA = function(B) {
  return this.mOneA ? B.redNeg() : this.a.redMul(B);
}, EdwardsCurve.prototype._mulC = function(B) {
  return this.oneC ? B : this.c.redMul(B);
}, EdwardsCurve.prototype.jpoint = function(B, L, V, J) {
  return this.point(B, L, V, J);
}, EdwardsCurve.prototype.pointFromX = function(B, L) {
  (B = new BN$6(B, 16)).red || (B = B.toRed(this.red));
  var V = B.redSqr(), J = this.c2.redSub(this.a.redMul(V)), re = this.one.redSub(this.c2.redMul(this.d).redMul(V)), ne = J.redMul(re.redInvm()), ie = ne.redSqrt();
  if (ie.redSqr().redSub(ne).cmp(this.zero) !== 0) throw new Error("invalid point");
  var oe = ie.fromRed().isOdd();
  return (L && !oe || !L && oe) && (ie = ie.redNeg()), this.point(B, ie);
}, EdwardsCurve.prototype.pointFromY = function(B, L) {
  (B = new BN$6(B, 16)).red || (B = B.toRed(this.red));
  var V = B.redSqr(), J = V.redSub(this.c2), re = V.redMul(this.d).redMul(this.c2).redSub(this.a), ne = J.redMul(re.redInvm());
  if (ne.cmp(this.zero) === 0) {
    if (L) throw new Error("invalid point");
    return this.point(this.zero, B);
  }
  var ie = ne.redSqrt();
  if (ie.redSqr().redSub(ne).cmp(this.zero) !== 0) throw new Error("invalid point");
  return ie.fromRed().isOdd() !== L && (ie = ie.redNeg()), this.point(ie, B);
}, EdwardsCurve.prototype.validate = function(B) {
  if (B.isInfinity()) return !0;
  B.normalize();
  var L = B.x.redSqr(), V = B.y.redSqr(), J = L.redMul(this.a).redAdd(V), re = this.c2.redMul(this.one.redAdd(this.d.redMul(L).redMul(V)));
  return J.cmp(re) === 0;
}, inherits$2(Point, Base.BasePoint), EdwardsCurve.prototype.pointFromJSON = function(B) {
  return Point.fromJSON(this, B);
}, EdwardsCurve.prototype.point = function(B, L, V, J) {
  return new Point(this, B, L, V, J);
}, Point.fromJSON = function(B, L) {
  return new Point(B, L[0], L[1], L[2]);
}, Point.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
}, Point.prototype.isInfinity = function() {
  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
}, Point.prototype._extDbl = function() {
  var B = this.x.redSqr(), L = this.y.redSqr(), V = this.z.redSqr();
  V = V.redIAdd(V);
  var J = this.curve._mulA(B), re = this.x.redAdd(this.y).redSqr().redISub(B).redISub(L), ne = J.redAdd(L), ie = ne.redSub(V), oe = J.redSub(L), pe = re.redMul(ie), ce = ne.redMul(oe), Oe = re.redMul(oe), rt = ie.redMul(ne);
  return this.curve.point(pe, ce, rt, Oe);
}, Point.prototype._projDbl = function() {
  var B, L, V, J, re, ne, ie = this.x.redAdd(this.y).redSqr(), oe = this.x.redSqr(), pe = this.y.redSqr();
  if (this.curve.twisted) {
    var ce = (J = this.curve._mulA(oe)).redAdd(pe);
    this.zOne ? (B = ie.redSub(oe).redSub(pe).redMul(ce.redSub(this.curve.two)), L = ce.redMul(J.redSub(pe)), V = ce.redSqr().redSub(ce).redSub(ce)) : (re = this.z.redSqr(), ne = ce.redSub(re).redISub(re), B = ie.redSub(oe).redISub(pe).redMul(ne), L = ce.redMul(J.redSub(pe)), V = ce.redMul(ne));
  } else J = oe.redAdd(pe), re = this.curve._mulC(this.z).redSqr(), ne = J.redSub(re).redSub(re), B = this.curve._mulC(ie.redISub(J)).redMul(ne), L = this.curve._mulC(J).redMul(oe.redISub(pe)), V = J.redMul(ne);
  return this.curve.point(B, L, V);
}, Point.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
}, Point.prototype._extAdd = function(B) {
  var L = this.y.redSub(this.x).redMul(B.y.redSub(B.x)), V = this.y.redAdd(this.x).redMul(B.y.redAdd(B.x)), J = this.t.redMul(this.curve.dd).redMul(B.t), re = this.z.redMul(B.z.redAdd(B.z)), ne = V.redSub(L), ie = re.redSub(J), oe = re.redAdd(J), pe = V.redAdd(L), ce = ne.redMul(ie), Oe = oe.redMul(pe), rt = ne.redMul(pe), ut = ie.redMul(oe);
  return this.curve.point(ce, Oe, ut, rt);
}, Point.prototype._projAdd = function(B) {
  var L, V, J = this.z.redMul(B.z), re = J.redSqr(), ne = this.x.redMul(B.x), ie = this.y.redMul(B.y), oe = this.curve.d.redMul(ne).redMul(ie), pe = re.redSub(oe), ce = re.redAdd(oe), Oe = this.x.redAdd(this.y).redMul(B.x.redAdd(B.y)).redISub(ne).redISub(ie), rt = J.redMul(pe).redMul(Oe);
  return this.curve.twisted ? (L = J.redMul(ce).redMul(ie.redSub(this.curve._mulA(ne))), V = pe.redMul(ce)) : (L = J.redMul(ce).redMul(ie.redSub(ne)), V = this.curve._mulC(pe).redMul(ce)), this.curve.point(rt, L, V);
}, Point.prototype.add = function(B) {
  return this.isInfinity() ? B : B.isInfinity() ? this : this.curve.extended ? this._extAdd(B) : this._projAdd(B);
}, Point.prototype.mul = function(B) {
  return this._hasDoubles(B) ? this.curve._fixedNafMul(this, B) : this.curve._wnafMul(this, B);
}, Point.prototype.mulAdd = function(B, L, V) {
  return this.curve._wnafMulAdd(1, [this, L], [B, V], 2, !1);
}, Point.prototype.jmulAdd = function(B, L, V) {
  return this.curve._wnafMulAdd(1, [this, L], [B, V], 2, !0);
}, Point.prototype.normalize = function() {
  if (this.zOne) return this;
  var B = this.z.redInvm();
  return this.x = this.x.redMul(B), this.y = this.y.redMul(B), this.t && (this.t = this.t.redMul(B)), this.z = this.curve.one, this.zOne = !0, this;
}, Point.prototype.neg = function() {
  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
}, Point.prototype.getX = function() {
  return this.normalize(), this.x.fromRed();
}, Point.prototype.getY = function() {
  return this.normalize(), this.y.fromRed();
}, Point.prototype.eq = function(B) {
  return this === B || this.getX().cmp(B.getX()) === 0 && this.getY().cmp(B.getY()) === 0;
}, Point.prototype.eqXToP = function(B) {
  var L = B.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(L) === 0) return !0;
  for (var V = B.clone(), J = this.curve.redN.redMul(this.z); ; ) {
    if (V.iadd(this.curve.n), V.cmp(this.curve.p) >= 0) return !1;
    if (L.redIAdd(J), this.x.cmp(L) === 0) return !0;
  }
}, Point.prototype.toP = Point.prototype.normalize, Point.prototype.mixedAdd = Point.prototype.add, function(B) {
  var L = B;
  L.base = base$1, L.short = short, L.mont = mont, L.edwards = edwards;
}(curve);
var curves$1 = {}, hash$2 = {}, utils$f = {}, assert$b = minimalisticAssert, inherits$1 = inherits_browserExports;
function isSurrogatePair(B, L) {
  return (64512 & B.charCodeAt(L)) == 55296 && !(L < 0 || L + 1 >= B.length) && (64512 & B.charCodeAt(L + 1)) == 56320;
}
function toArray(B, L) {
  if (Array.isArray(B)) return B.slice();
  if (!B) return [];
  var V = [];
  if (typeof B == "string") if (L) {
    if (L === "hex") for ((B = B.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (B = "0" + B), re = 0; re < B.length; re += 2) V.push(parseInt(B[re] + B[re + 1], 16));
  } else for (var J = 0, re = 0; re < B.length; re++) {
    var ne = B.charCodeAt(re);
    ne < 128 ? V[J++] = ne : ne < 2048 ? (V[J++] = ne >> 6 | 192, V[J++] = 63 & ne | 128) : isSurrogatePair(B, re) ? (ne = 65536 + ((1023 & ne) << 10) + (1023 & B.charCodeAt(++re)), V[J++] = ne >> 18 | 240, V[J++] = ne >> 12 & 63 | 128, V[J++] = ne >> 6 & 63 | 128, V[J++] = 63 & ne | 128) : (V[J++] = ne >> 12 | 224, V[J++] = ne >> 6 & 63 | 128, V[J++] = 63 & ne | 128);
  }
  else for (re = 0; re < B.length; re++) V[re] = 0 | B[re];
  return V;
}
function toHex(B) {
  for (var L = "", V = 0; V < B.length; V++) L += zero2(B[V].toString(16));
  return L;
}
function htonl(B) {
  return (B >>> 24 | B >>> 8 & 65280 | B << 8 & 16711680 | (255 & B) << 24) >>> 0;
}
function toHex32(B, L) {
  for (var V = "", J = 0; J < B.length; J++) {
    var re = B[J];
    L === "little" && (re = htonl(re)), V += zero8(re.toString(16));
  }
  return V;
}
function zero2(B) {
  return B.length === 1 ? "0" + B : B;
}
function zero8(B) {
  return B.length === 7 ? "0" + B : B.length === 6 ? "00" + B : B.length === 5 ? "000" + B : B.length === 4 ? "0000" + B : B.length === 3 ? "00000" + B : B.length === 2 ? "000000" + B : B.length === 1 ? "0000000" + B : B;
}
function join32(B, L, V, J) {
  var re = V - L;
  assert$b(re % 4 == 0);
  for (var ne = new Array(re / 4), ie = 0, oe = L; ie < ne.length; ie++, oe += 4) {
    var pe;
    pe = J === "big" ? B[oe] << 24 | B[oe + 1] << 16 | B[oe + 2] << 8 | B[oe + 3] : B[oe + 3] << 24 | B[oe + 2] << 16 | B[oe + 1] << 8 | B[oe], ne[ie] = pe >>> 0;
  }
  return ne;
}
function split32(B, L) {
  for (var V = new Array(4 * B.length), J = 0, re = 0; J < B.length; J++, re += 4) {
    var ne = B[J];
    L === "big" ? (V[re] = ne >>> 24, V[re + 1] = ne >>> 16 & 255, V[re + 2] = ne >>> 8 & 255, V[re + 3] = 255 & ne) : (V[re + 3] = ne >>> 24, V[re + 2] = ne >>> 16 & 255, V[re + 1] = ne >>> 8 & 255, V[re] = 255 & ne);
  }
  return V;
}
function rotr32$1(B, L) {
  return B >>> L | B << 32 - L;
}
function rotl32$2(B, L) {
  return B << L | B >>> 32 - L;
}
function sum32$3(B, L) {
  return B + L >>> 0;
}
function sum32_3$1(B, L, V) {
  return B + L + V >>> 0;
}
function sum32_4$2(B, L, V, J) {
  return B + L + V + J >>> 0;
}
function sum32_5$2(B, L, V, J, re) {
  return B + L + V + J + re >>> 0;
}
function sum64$1(B, L, V, J) {
  var re = B[L], ne = J + B[L + 1] >>> 0, ie = (ne < J ? 1 : 0) + V + re;
  B[L] = ie >>> 0, B[L + 1] = ne;
}
function sum64_hi$1(B, L, V, J) {
  return (L + J >>> 0 < L ? 1 : 0) + B + V >>> 0;
}
function sum64_lo$1(B, L, V, J) {
  return L + J >>> 0;
}
function sum64_4_hi$1(B, L, V, J, re, ne, ie, oe) {
  var pe = 0, ce = L;
  return pe += (ce = ce + J >>> 0) < L ? 1 : 0, pe += (ce = ce + ne >>> 0) < ne ? 1 : 0, B + V + re + ie + (pe += (ce = ce + oe >>> 0) < oe ? 1 : 0) >>> 0;
}
function sum64_4_lo$1(B, L, V, J, re, ne, ie, oe) {
  return L + J + ne + oe >>> 0;
}
function sum64_5_hi$1(B, L, V, J, re, ne, ie, oe, pe, ce) {
  var Oe = 0, rt = L;
  return Oe += (rt = rt + J >>> 0) < L ? 1 : 0, Oe += (rt = rt + ne >>> 0) < ne ? 1 : 0, Oe += (rt = rt + oe >>> 0) < oe ? 1 : 0, B + V + re + ie + pe + (Oe += (rt = rt + ce >>> 0) < ce ? 1 : 0) >>> 0;
}
function sum64_5_lo$1(B, L, V, J, re, ne, ie, oe, pe, ce) {
  return L + J + ne + oe + ce >>> 0;
}
function rotr64_hi$1(B, L, V) {
  return (L << 32 - V | B >>> V) >>> 0;
}
function rotr64_lo$1(B, L, V) {
  return (B << 32 - V | L >>> V) >>> 0;
}
function shr64_hi$1(B, L, V) {
  return B >>> V;
}
function shr64_lo$1(B, L, V) {
  return (B << 32 - V | L >>> V) >>> 0;
}
utils$f.inherits = inherits$1, utils$f.toArray = toArray, utils$f.toHex = toHex, utils$f.htonl = htonl, utils$f.toHex32 = toHex32, utils$f.zero2 = zero2, utils$f.zero8 = zero8, utils$f.join32 = join32, utils$f.split32 = split32, utils$f.rotr32 = rotr32$1, utils$f.rotl32 = rotl32$2, utils$f.sum32 = sum32$3, utils$f.sum32_3 = sum32_3$1, utils$f.sum32_4 = sum32_4$2, utils$f.sum32_5 = sum32_5$2, utils$f.sum64 = sum64$1, utils$f.sum64_hi = sum64_hi$1, utils$f.sum64_lo = sum64_lo$1, utils$f.sum64_4_hi = sum64_4_hi$1, utils$f.sum64_4_lo = sum64_4_lo$1, utils$f.sum64_5_hi = sum64_5_hi$1, utils$f.sum64_5_lo = sum64_5_lo$1, utils$f.rotr64_hi = rotr64_hi$1, utils$f.rotr64_lo = rotr64_lo$1, utils$f.shr64_hi = shr64_hi$1, utils$f.shr64_lo = shr64_lo$1;
var common$5 = {}, utils$e = utils$f, assert$a = minimalisticAssert;
function BlockHash$4() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
common$5.BlockHash = BlockHash$4, BlockHash$4.prototype.update = function(B, L) {
  if (B = utils$e.toArray(B, L), this.pending ? this.pending = this.pending.concat(B) : this.pending = B, this.pendingTotal += B.length, this.pending.length >= this._delta8) {
    var V = (B = this.pending).length % this._delta8;
    this.pending = B.slice(B.length - V, B.length), this.pending.length === 0 && (this.pending = null), B = utils$e.join32(B, 0, B.length - V, this.endian);
    for (var J = 0; J < B.length; J += this._delta32) this._update(B, J, J + this._delta32);
  }
  return this;
}, BlockHash$4.prototype.digest = function(B) {
  return this.update(this._pad()), assert$a(this.pending === null), this._digest(B);
}, BlockHash$4.prototype._pad = function() {
  var B = this.pendingTotal, L = this._delta8, V = L - (B + this.padLength) % L, J = new Array(V + this.padLength);
  J[0] = 128;
  for (var re = 1; re < V; re++) J[re] = 0;
  if (B <<= 3, this.endian === "big") {
    for (var ne = 8; ne < this.padLength; ne++) J[re++] = 0;
    J[re++] = 0, J[re++] = 0, J[re++] = 0, J[re++] = 0, J[re++] = B >>> 24 & 255, J[re++] = B >>> 16 & 255, J[re++] = B >>> 8 & 255, J[re++] = 255 & B;
  } else for (J[re++] = 255 & B, J[re++] = B >>> 8 & 255, J[re++] = B >>> 16 & 255, J[re++] = B >>> 24 & 255, J[re++] = 0, J[re++] = 0, J[re++] = 0, J[re++] = 0, ne = 8; ne < this.padLength; ne++) J[re++] = 0;
  return J;
};
var sha = {}, common$4 = {}, utils$d = utils$f, rotr32 = utils$d.rotr32;
function ft_1$1(B, L, V, J) {
  return B === 0 ? ch32$1(L, V, J) : B === 1 || B === 3 ? p32(L, V, J) : B === 2 ? maj32$1(L, V, J) : void 0;
}
function ch32$1(B, L, V) {
  return B & L ^ ~B & V;
}
function maj32$1(B, L, V) {
  return B & L ^ B & V ^ L & V;
}
function p32(B, L, V) {
  return B ^ L ^ V;
}
function s0_256$1(B) {
  return rotr32(B, 2) ^ rotr32(B, 13) ^ rotr32(B, 22);
}
function s1_256$1(B) {
  return rotr32(B, 6) ^ rotr32(B, 11) ^ rotr32(B, 25);
}
function g0_256$1(B) {
  return rotr32(B, 7) ^ rotr32(B, 18) ^ B >>> 3;
}
function g1_256$1(B) {
  return rotr32(B, 17) ^ rotr32(B, 19) ^ B >>> 10;
}
common$4.ft_1 = ft_1$1, common$4.ch32 = ch32$1, common$4.maj32 = maj32$1, common$4.p32 = p32, common$4.s0_256 = s0_256$1, common$4.s1_256 = s1_256$1, common$4.g0_256 = g0_256$1, common$4.g1_256 = g1_256$1;
var utils$c = utils$f, common$3 = common$5, shaCommon$1 = common$4, rotl32$1 = utils$c.rotl32, sum32$2 = utils$c.sum32, sum32_5$1 = utils$c.sum32_5, ft_1 = shaCommon$1.ft_1, BlockHash$3 = common$3.BlockHash, sha1_K = [1518500249, 1859775393, 2400959708, 3395469782];
function SHA1() {
  if (!(this instanceof SHA1)) return new SHA1();
  BlockHash$3.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
}
utils$c.inherits(SHA1, BlockHash$3);
var _1 = SHA1;
SHA1.blockSize = 512, SHA1.outSize = 160, SHA1.hmacStrength = 80, SHA1.padLength = 64, SHA1.prototype._update = function(B, L) {
  for (var V = this.W, J = 0; J < 16; J++) V[J] = B[L + J];
  for (; J < V.length; J++) V[J] = rotl32$1(V[J - 3] ^ V[J - 8] ^ V[J - 14] ^ V[J - 16], 1);
  var re = this.h[0], ne = this.h[1], ie = this.h[2], oe = this.h[3], pe = this.h[4];
  for (J = 0; J < V.length; J++) {
    var ce = ~~(J / 20), Oe = sum32_5$1(rotl32$1(re, 5), ft_1(ce, ne, ie, oe), pe, V[J], sha1_K[ce]);
    pe = oe, oe = ie, ie = rotl32$1(ne, 30), ne = re, re = Oe;
  }
  this.h[0] = sum32$2(this.h[0], re), this.h[1] = sum32$2(this.h[1], ne), this.h[2] = sum32$2(this.h[2], ie), this.h[3] = sum32$2(this.h[3], oe), this.h[4] = sum32$2(this.h[4], pe);
}, SHA1.prototype._digest = function(B) {
  return B === "hex" ? utils$c.toHex32(this.h, "big") : utils$c.split32(this.h, "big");
};
var utils$b = utils$f, common$2 = common$5, shaCommon = common$4, assert$9 = minimalisticAssert, sum32$1 = utils$b.sum32, sum32_4$1 = utils$b.sum32_4, sum32_5 = utils$b.sum32_5, ch32 = shaCommon.ch32, maj32 = shaCommon.maj32, s0_256 = shaCommon.s0_256, s1_256 = shaCommon.s1_256, g0_256 = shaCommon.g0_256, g1_256 = shaCommon.g1_256, BlockHash$2 = common$2.BlockHash, sha256_K = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
function SHA256$1() {
  if (!(this instanceof SHA256$1)) return new SHA256$1();
  BlockHash$2.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = sha256_K, this.W = new Array(64);
}
utils$b.inherits(SHA256$1, BlockHash$2);
var _256 = SHA256$1;
SHA256$1.blockSize = 512, SHA256$1.outSize = 256, SHA256$1.hmacStrength = 192, SHA256$1.padLength = 64, SHA256$1.prototype._update = function(B, L) {
  for (var V = this.W, J = 0; J < 16; J++) V[J] = B[L + J];
  for (; J < V.length; J++) V[J] = sum32_4$1(g1_256(V[J - 2]), V[J - 7], g0_256(V[J - 15]), V[J - 16]);
  var re = this.h[0], ne = this.h[1], ie = this.h[2], oe = this.h[3], pe = this.h[4], ce = this.h[5], Oe = this.h[6], rt = this.h[7];
  for (assert$9(this.k.length === V.length), J = 0; J < V.length; J++) {
    var ut = sum32_5(rt, s1_256(pe), ch32(pe, ce, Oe), this.k[J], V[J]), dt = sum32$1(s0_256(re), maj32(re, ne, ie));
    rt = Oe, Oe = ce, ce = pe, pe = sum32$1(oe, ut), oe = ie, ie = ne, ne = re, re = sum32$1(ut, dt);
  }
  this.h[0] = sum32$1(this.h[0], re), this.h[1] = sum32$1(this.h[1], ne), this.h[2] = sum32$1(this.h[2], ie), this.h[3] = sum32$1(this.h[3], oe), this.h[4] = sum32$1(this.h[4], pe), this.h[5] = sum32$1(this.h[5], ce), this.h[6] = sum32$1(this.h[6], Oe), this.h[7] = sum32$1(this.h[7], rt);
}, SHA256$1.prototype._digest = function(B) {
  return B === "hex" ? utils$b.toHex32(this.h, "big") : utils$b.split32(this.h, "big");
};
var utils$a = utils$f, SHA256 = _256;
function SHA224() {
  if (!(this instanceof SHA224)) return new SHA224();
  SHA256.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
}
utils$a.inherits(SHA224, SHA256);
var _224 = SHA224;
SHA224.blockSize = 512, SHA224.outSize = 224, SHA224.hmacStrength = 192, SHA224.padLength = 64, SHA224.prototype._digest = function(B) {
  return B === "hex" ? utils$a.toHex32(this.h.slice(0, 7), "big") : utils$a.split32(this.h.slice(0, 7), "big");
};
var utils$9 = utils$f, common$1 = common$5, assert$8 = minimalisticAssert, rotr64_hi = utils$9.rotr64_hi, rotr64_lo = utils$9.rotr64_lo, shr64_hi = utils$9.shr64_hi, shr64_lo = utils$9.shr64_lo, sum64 = utils$9.sum64, sum64_hi = utils$9.sum64_hi, sum64_lo = utils$9.sum64_lo, sum64_4_hi = utils$9.sum64_4_hi, sum64_4_lo = utils$9.sum64_4_lo, sum64_5_hi = utils$9.sum64_5_hi, sum64_5_lo = utils$9.sum64_5_lo, BlockHash$1 = common$1.BlockHash, sha512_K = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
function SHA512$1() {
  if (!(this instanceof SHA512$1)) return new SHA512$1();
  BlockHash$1.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = sha512_K, this.W = new Array(160);
}
utils$9.inherits(SHA512$1, BlockHash$1);
var _512 = SHA512$1;
function ch64_hi(B, L, V, J, re) {
  var ne = B & V ^ ~B & re;
  return ne < 0 && (ne += 4294967296), ne;
}
function ch64_lo(B, L, V, J, re, ne) {
  var ie = L & J ^ ~L & ne;
  return ie < 0 && (ie += 4294967296), ie;
}
function maj64_hi(B, L, V, J, re) {
  var ne = B & V ^ B & re ^ V & re;
  return ne < 0 && (ne += 4294967296), ne;
}
function maj64_lo(B, L, V, J, re, ne) {
  var ie = L & J ^ L & ne ^ J & ne;
  return ie < 0 && (ie += 4294967296), ie;
}
function s0_512_hi(B, L) {
  var V = rotr64_hi(B, L, 28) ^ rotr64_hi(L, B, 2) ^ rotr64_hi(L, B, 7);
  return V < 0 && (V += 4294967296), V;
}
function s0_512_lo(B, L) {
  var V = rotr64_lo(B, L, 28) ^ rotr64_lo(L, B, 2) ^ rotr64_lo(L, B, 7);
  return V < 0 && (V += 4294967296), V;
}
function s1_512_hi(B, L) {
  var V = rotr64_hi(B, L, 14) ^ rotr64_hi(B, L, 18) ^ rotr64_hi(L, B, 9);
  return V < 0 && (V += 4294967296), V;
}
function s1_512_lo(B, L) {
  var V = rotr64_lo(B, L, 14) ^ rotr64_lo(B, L, 18) ^ rotr64_lo(L, B, 9);
  return V < 0 && (V += 4294967296), V;
}
function g0_512_hi(B, L) {
  var V = rotr64_hi(B, L, 1) ^ rotr64_hi(B, L, 8) ^ shr64_hi(B, L, 7);
  return V < 0 && (V += 4294967296), V;
}
function g0_512_lo(B, L) {
  var V = rotr64_lo(B, L, 1) ^ rotr64_lo(B, L, 8) ^ shr64_lo(B, L, 7);
  return V < 0 && (V += 4294967296), V;
}
function g1_512_hi(B, L) {
  var V = rotr64_hi(B, L, 19) ^ rotr64_hi(L, B, 29) ^ shr64_hi(B, L, 6);
  return V < 0 && (V += 4294967296), V;
}
function g1_512_lo(B, L) {
  var V = rotr64_lo(B, L, 19) ^ rotr64_lo(L, B, 29) ^ shr64_lo(B, L, 6);
  return V < 0 && (V += 4294967296), V;
}
SHA512$1.blockSize = 1024, SHA512$1.outSize = 512, SHA512$1.hmacStrength = 192, SHA512$1.padLength = 128, SHA512$1.prototype._prepareBlock = function(B, L) {
  for (var V = this.W, J = 0; J < 32; J++) V[J] = B[L + J];
  for (; J < V.length; J += 2) {
    var re = g1_512_hi(V[J - 4], V[J - 3]), ne = g1_512_lo(V[J - 4], V[J - 3]), ie = V[J - 14], oe = V[J - 13], pe = g0_512_hi(V[J - 30], V[J - 29]), ce = g0_512_lo(V[J - 30], V[J - 29]), Oe = V[J - 32], rt = V[J - 31];
    V[J] = sum64_4_hi(re, ne, ie, oe, pe, ce, Oe, rt), V[J + 1] = sum64_4_lo(re, ne, ie, oe, pe, ce, Oe, rt);
  }
}, SHA512$1.prototype._update = function(B, L) {
  this._prepareBlock(B, L);
  var V = this.W, J = this.h[0], re = this.h[1], ne = this.h[2], ie = this.h[3], oe = this.h[4], pe = this.h[5], ce = this.h[6], Oe = this.h[7], rt = this.h[8], ut = this.h[9], dt = this.h[10], ht = this.h[11], bt = this.h[12], Tt = this.h[13], wt = this.h[14], Et = this.h[15];
  assert$8(this.k.length === V.length);
  for (var Rt = 0; Rt < V.length; Rt += 2) {
    var Bt = wt, Pt = Et, Dt = s1_512_hi(rt, ut), Gt = s1_512_lo(rt, ut), at = ch64_hi(rt, ut, dt, ht, bt), lt = ch64_lo(rt, ut, dt, ht, bt, Tt), Ce = this.k[Rt], st = this.k[Rt + 1], it = V[Rt], nt = V[Rt + 1], ot = sum64_5_hi(Bt, Pt, Dt, Gt, at, lt, Ce, st, it, nt), ke = sum64_5_lo(Bt, Pt, Dt, Gt, at, lt, Ce, st, it, nt);
    Bt = s0_512_hi(J, re), Pt = s0_512_lo(J, re), Dt = maj64_hi(J, re, ne, ie, oe), Gt = maj64_lo(J, re, ne, ie, oe, pe);
    var ct = sum64_hi(Bt, Pt, Dt, Gt), yt = sum64_lo(Bt, Pt, Dt, Gt);
    wt = bt, Et = Tt, bt = dt, Tt = ht, dt = rt, ht = ut, rt = sum64_hi(ce, Oe, ot, ke), ut = sum64_lo(Oe, Oe, ot, ke), ce = oe, Oe = pe, oe = ne, pe = ie, ne = J, ie = re, J = sum64_hi(ot, ke, ct, yt), re = sum64_lo(ot, ke, ct, yt);
  }
  sum64(this.h, 0, J, re), sum64(this.h, 2, ne, ie), sum64(this.h, 4, oe, pe), sum64(this.h, 6, ce, Oe), sum64(this.h, 8, rt, ut), sum64(this.h, 10, dt, ht), sum64(this.h, 12, bt, Tt), sum64(this.h, 14, wt, Et);
}, SHA512$1.prototype._digest = function(B) {
  return B === "hex" ? utils$9.toHex32(this.h, "big") : utils$9.split32(this.h, "big");
};
var utils$8 = utils$f, SHA512 = _512;
function SHA384() {
  if (!(this instanceof SHA384)) return new SHA384();
  SHA512.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
}
utils$8.inherits(SHA384, SHA512);
var _384 = SHA384;
SHA384.blockSize = 1024, SHA384.outSize = 384, SHA384.hmacStrength = 192, SHA384.padLength = 128, SHA384.prototype._digest = function(B) {
  return B === "hex" ? utils$8.toHex32(this.h.slice(0, 12), "big") : utils$8.split32(this.h.slice(0, 12), "big");
}, sha.sha1 = _1, sha.sha224 = _224, sha.sha256 = _256, sha.sha384 = _384, sha.sha512 = _512;
var ripemd = {}, utils$7 = utils$f, common = common$5, rotl32 = utils$7.rotl32, sum32 = utils$7.sum32, sum32_3 = utils$7.sum32_3, sum32_4 = utils$7.sum32_4, BlockHash = common.BlockHash;
function RIPEMD160() {
  if (!(this instanceof RIPEMD160)) return new RIPEMD160();
  BlockHash.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
function f(B, L, V, J) {
  return B <= 15 ? L ^ V ^ J : B <= 31 ? L & V | ~L & J : B <= 47 ? (L | ~V) ^ J : B <= 63 ? L & J | V & ~J : L ^ (V | ~J);
}
function K(B) {
  return B <= 15 ? 0 : B <= 31 ? 1518500249 : B <= 47 ? 1859775393 : B <= 63 ? 2400959708 : 2840853838;
}
function Kh(B) {
  return B <= 15 ? 1352829926 : B <= 31 ? 1548603684 : B <= 47 ? 1836072691 : B <= 63 ? 2053994217 : 0;
}
utils$7.inherits(RIPEMD160, BlockHash), ripemd.ripemd160 = RIPEMD160, RIPEMD160.blockSize = 512, RIPEMD160.outSize = 160, RIPEMD160.hmacStrength = 192, RIPEMD160.padLength = 64, RIPEMD160.prototype._update = function(B, L) {
  for (var V = this.h[0], J = this.h[1], re = this.h[2], ne = this.h[3], ie = this.h[4], oe = V, pe = J, ce = re, Oe = ne, rt = ie, ut = 0; ut < 80; ut++) {
    var dt = sum32(rotl32(sum32_4(V, f(ut, J, re, ne), B[r[ut] + L], K(ut)), s[ut]), ie);
    V = ie, ie = ne, ne = rotl32(re, 10), re = J, J = dt, dt = sum32(rotl32(sum32_4(oe, f(79 - ut, pe, ce, Oe), B[rh[ut] + L], Kh(ut)), sh[ut]), rt), oe = rt, rt = Oe, Oe = rotl32(ce, 10), ce = pe, pe = dt;
  }
  dt = sum32_3(this.h[1], re, Oe), this.h[1] = sum32_3(this.h[2], ne, rt), this.h[2] = sum32_3(this.h[3], ie, oe), this.h[3] = sum32_3(this.h[4], V, pe), this.h[4] = sum32_3(this.h[0], J, ce), this.h[0] = dt;
}, RIPEMD160.prototype._digest = function(B) {
  return B === "hex" ? utils$7.toHex32(this.h, "little") : utils$7.split32(this.h, "little");
};
var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], utils$6 = utils$f, assert$7 = minimalisticAssert;
function Hmac(B, L, V) {
  if (!(this instanceof Hmac)) return new Hmac(B, L, V);
  this.Hash = B, this.blockSize = B.blockSize / 8, this.outSize = B.outSize / 8, this.inner = null, this.outer = null, this._init(utils$6.toArray(L, V));
}
var hmac$1 = Hmac, secp256k1$1, hasRequiredSecp256k1;
function requireSecp256k1() {
  return hasRequiredSecp256k1 ? secp256k1$1 : (hasRequiredSecp256k1 = 1, secp256k1$1 = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } });
}
Hmac.prototype._init = function(B) {
  B.length > this.blockSize && (B = new this.Hash().update(B).digest()), assert$7(B.length <= this.blockSize);
  for (var L = B.length; L < this.blockSize; L++) B.push(0);
  for (L = 0; L < B.length; L++) B[L] ^= 54;
  for (this.inner = new this.Hash().update(B), L = 0; L < B.length; L++) B[L] ^= 106;
  this.outer = new this.Hash().update(B);
}, Hmac.prototype.update = function(B, L) {
  return this.inner.update(B, L), this;
}, Hmac.prototype.digest = function(B) {
  return this.outer.update(this.inner.digest()), this.outer.digest(B);
}, function(B) {
  var L = hash$2;
  L.utils = utils$f, L.common = common$5, L.sha = sha, L.ripemd = ripemd, L.hmac = hmac$1, L.sha1 = L.sha.sha1, L.sha256 = L.sha.sha256, L.sha224 = L.sha.sha224, L.sha384 = L.sha.sha384, L.sha512 = L.sha.sha512, L.ripemd160 = L.ripemd.ripemd160;
}(), function(B) {
  var L, V = curves$1, J = hash$2, re = curve, ne = utils$l.assert;
  function ie(pe) {
    pe.type === "short" ? this.curve = new re.short(pe) : pe.type === "edwards" ? this.curve = new re.edwards(pe) : this.curve = new re.mont(pe), this.g = this.curve.g, this.n = this.curve.n, this.hash = pe.hash, ne(this.g.validate(), "Invalid curve"), ne(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  function oe(pe, ce) {
    Object.defineProperty(V, pe, { configurable: !0, enumerable: !0, get: function() {
      var Oe = new ie(ce);
      return Object.defineProperty(V, pe, { configurable: !0, enumerable: !0, value: Oe }), Oe;
    } });
  }
  V.PresetCurve = ie, oe("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: J.sha256, gRed: !1, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), oe("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: J.sha256, gRed: !1, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), oe("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: J.sha256, gRed: !1, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), oe("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: J.sha384, gRed: !1, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), oe("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: J.sha512, gRed: !1, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), oe("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: J.sha256, gRed: !1, g: ["9"] }), oe("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: J.sha256, gRed: !1, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
  try {
    L = requireSecp256k1();
  } catch {
    L = void 0;
  }
  oe("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: J.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: !1, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", L] });
}();
var hash$1 = hash$2, utils$5 = utils$k, assert$6 = minimalisticAssert;
function HmacDRBG(B) {
  if (!(this instanceof HmacDRBG)) return new HmacDRBG(B);
  this.hash = B.hash, this.predResist = !!B.predResist, this.outLen = this.hash.outSize, this.minEntropy = B.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var L = utils$5.toArray(B.entropy, B.entropyEnc || "hex"), V = utils$5.toArray(B.nonce, B.nonceEnc || "hex"), J = utils$5.toArray(B.pers, B.persEnc || "hex");
  assert$6(L.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(L, V, J);
}
var hmacDrbg = HmacDRBG;
HmacDRBG.prototype._init = function(B, L, V) {
  var J = B.concat(L).concat(V);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var re = 0; re < this.V.length; re++) this.K[re] = 0, this.V[re] = 1;
  this._update(J), this._reseed = 1, this.reseedInterval = 281474976710656;
}, HmacDRBG.prototype._hmac = function() {
  return new hash$1.hmac(this.hash, this.K);
}, HmacDRBG.prototype._update = function(B) {
  var L = this._hmac().update(this.V).update([0]);
  B && (L = L.update(B)), this.K = L.digest(), this.V = this._hmac().update(this.V).digest(), B && (this.K = this._hmac().update(this.V).update([1]).update(B).digest(), this.V = this._hmac().update(this.V).digest());
}, HmacDRBG.prototype.reseed = function(B, L, V, J) {
  typeof L != "string" && (J = V, V = L, L = null), B = utils$5.toArray(B, L), V = utils$5.toArray(V, J), assert$6(B.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(B.concat(V || [])), this._reseed = 1;
}, HmacDRBG.prototype.generate = function(B, L, V, J) {
  if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
  typeof L != "string" && (J = V, V = L, L = null), V && (V = utils$5.toArray(V, J || "hex"), this._update(V));
  for (var re = []; re.length < B; ) this.V = this._hmac().update(this.V).digest(), re = re.concat(this.V);
  var ne = re.slice(0, B);
  return this._update(V), this._reseed++, utils$5.encode(ne, L);
};
var BN$5 = bnExports$1, utils$4 = utils$l, assert$5 = utils$4.assert;
function KeyPair$2(B, L) {
  this.ec = B, this.priv = null, this.pub = null, L.priv && this._importPrivate(L.priv, L.privEnc), L.pub && this._importPublic(L.pub, L.pubEnc);
}
var key$1 = KeyPair$2;
KeyPair$2.fromPublic = function(B, L, V) {
  return L instanceof KeyPair$2 ? L : new KeyPair$2(B, { pub: L, pubEnc: V });
}, KeyPair$2.fromPrivate = function(B, L, V) {
  return L instanceof KeyPair$2 ? L : new KeyPair$2(B, { priv: L, privEnc: V });
}, KeyPair$2.prototype.validate = function() {
  var B = this.getPublic();
  return B.isInfinity() ? { result: !1, reason: "Invalid public key" } : B.validate() ? B.mul(this.ec.curve.n).isInfinity() ? { result: !0, reason: null } : { result: !1, reason: "Public key * N != O" } : { result: !1, reason: "Public key is not a point" };
}, KeyPair$2.prototype.getPublic = function(B, L) {
  return typeof B == "string" && (L = B, B = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), L ? this.pub.encode(L, B) : this.pub;
}, KeyPair$2.prototype.getPrivate = function(B) {
  return B === "hex" ? this.priv.toString(16, 2) : this.priv;
}, KeyPair$2.prototype._importPrivate = function(B, L) {
  this.priv = new BN$5(B, L || 16), this.priv = this.priv.umod(this.ec.curve.n);
}, KeyPair$2.prototype._importPublic = function(B, L) {
  if (B.x || B.y) return this.ec.curve.type === "mont" ? assert$5(B.x, "Need x coordinate") : this.ec.curve.type !== "short" && this.ec.curve.type !== "edwards" || assert$5(B.x && B.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(B.x, B.y));
  this.pub = this.ec.curve.decodePoint(B, L);
}, KeyPair$2.prototype.derive = function(B) {
  return B.validate() || assert$5(B.validate(), "public point not validated"), B.mul(this.priv).getX();
}, KeyPair$2.prototype.sign = function(B, L, V) {
  return this.ec.sign(B, this, L, V);
}, KeyPair$2.prototype.verify = function(B, L) {
  return this.ec.verify(B, L, this);
}, KeyPair$2.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var BN$4 = bnExports$1, utils$3 = utils$l, assert$4 = utils$3.assert;
function Signature$2(B, L) {
  if (B instanceof Signature$2) return B;
  this._importDER(B, L) || (assert$4(B.r && B.s, "Signature without r or s"), this.r = new BN$4(B.r, 16), this.s = new BN$4(B.s, 16), B.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = B.recoveryParam);
}
var signature$1 = Signature$2, ec, hasRequiredEc;
function Position() {
  this.place = 0;
}
function getLength(B, L) {
  var V = B[L.place++];
  if (!(128 & V)) return V;
  var J = 15 & V;
  if (J === 0 || J > 4 || B[L.place] === 0) return !1;
  for (var re = 0, ne = 0, ie = L.place; ne < J; ne++, ie++) re <<= 8, re |= B[ie], re >>>= 0;
  return !(re <= 127) && (L.place = ie, re);
}
function rmPadding(B) {
  for (var L = 0, V = B.length - 1; !B[L] && !(128 & B[L + 1]) && L < V; ) L++;
  return L === 0 ? B : B.slice(L);
}
function constructLength(B, L) {
  if (L < 128) B.push(L);
  else {
    var V = 1 + (Math.log(L) / Math.LN2 >>> 3);
    for (B.push(128 | V); --V; ) B.push(L >>> (V << 3) & 255);
    B.push(L);
  }
}
function requireEc() {
  if (hasRequiredEc) return ec;
  hasRequiredEc = 1;
  var B = bnExports$1, L = hmacDrbg, V = utils$l, J = curves$1, re = requireBrorand(), ne = V.assert, ie = key$1, oe = signature$1;
  function pe(ce) {
    if (!(this instanceof pe)) return new pe(ce);
    typeof ce == "string" && (ne(Object.prototype.hasOwnProperty.call(J, ce), "Unknown curve " + ce), ce = J[ce]), ce instanceof J.PresetCurve && (ce = { curve: ce }), this.curve = ce.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = ce.curve.g, this.g.precompute(ce.curve.n.bitLength() + 1), this.hash = ce.hash || ce.curve.hash;
  }
  return ec = pe, pe.prototype.keyPair = function(ce) {
    return new ie(this, ce);
  }, pe.prototype.keyFromPrivate = function(ce, Oe) {
    return ie.fromPrivate(this, ce, Oe);
  }, pe.prototype.keyFromPublic = function(ce, Oe) {
    return ie.fromPublic(this, ce, Oe);
  }, pe.prototype.genKeyPair = function(ce) {
    ce || (ce = {});
    for (var Oe = new L({ hash: this.hash, pers: ce.pers, persEnc: ce.persEnc || "utf8", entropy: ce.entropy || re(this.hash.hmacStrength), entropyEnc: ce.entropy && ce.entropyEnc || "utf8", nonce: this.n.toArray() }), rt = this.n.byteLength(), ut = this.n.sub(new B(2)); ; ) {
      var dt = new B(Oe.generate(rt));
      if (!(dt.cmp(ut) > 0)) return dt.iaddn(1), this.keyFromPrivate(dt);
    }
  }, pe.prototype._truncateToN = function(ce, Oe) {
    var rt = 8 * ce.byteLength() - this.n.bitLength();
    return rt > 0 && (ce = ce.ushrn(rt)), !Oe && ce.cmp(this.n) >= 0 ? ce.sub(this.n) : ce;
  }, pe.prototype.sign = function(ce, Oe, rt, ut) {
    typeof rt == "object" && (ut = rt, rt = null), ut || (ut = {}), Oe = this.keyFromPrivate(Oe, rt), ce = this._truncateToN(new B(ce, 16));
    for (var dt = this.n.byteLength(), ht = Oe.getPrivate().toArray("be", dt), bt = ce.toArray("be", dt), Tt = new L({ hash: this.hash, entropy: ht, nonce: bt, pers: ut.pers, persEnc: ut.persEnc || "utf8" }), wt = this.n.sub(new B(1)), Et = 0; ; Et++) {
      var Rt = ut.k ? ut.k(Et) : new B(Tt.generate(this.n.byteLength()));
      if (!((Rt = this._truncateToN(Rt, !0)).cmpn(1) <= 0 || Rt.cmp(wt) >= 0)) {
        var Bt = this.g.mul(Rt);
        if (!Bt.isInfinity()) {
          var Pt = Bt.getX(), Dt = Pt.umod(this.n);
          if (Dt.cmpn(0) !== 0) {
            var Gt = Rt.invm(this.n).mul(Dt.mul(Oe.getPrivate()).iadd(ce));
            if ((Gt = Gt.umod(this.n)).cmpn(0) !== 0) {
              var at = (Bt.getY().isOdd() ? 1 : 0) | (Pt.cmp(Dt) !== 0 ? 2 : 0);
              return ut.canonical && Gt.cmp(this.nh) > 0 && (Gt = this.n.sub(Gt), at ^= 1), new oe({ r: Dt, s: Gt, recoveryParam: at });
            }
          }
        }
      }
    }
  }, pe.prototype.verify = function(ce, Oe, rt, ut) {
    ce = this._truncateToN(new B(ce, 16)), rt = this.keyFromPublic(rt, ut);
    var dt = (Oe = new oe(Oe, "hex")).r, ht = Oe.s;
    if (dt.cmpn(1) < 0 || dt.cmp(this.n) >= 0 || ht.cmpn(1) < 0 || ht.cmp(this.n) >= 0) return !1;
    var bt, Tt = ht.invm(this.n), wt = Tt.mul(ce).umod(this.n), Et = Tt.mul(dt).umod(this.n);
    return this.curve._maxwellTrick ? !(bt = this.g.jmulAdd(wt, rt.getPublic(), Et)).isInfinity() && bt.eqXToP(dt) : !(bt = this.g.mulAdd(wt, rt.getPublic(), Et)).isInfinity() && bt.getX().umod(this.n).cmp(dt) === 0;
  }, pe.prototype.recoverPubKey = function(ce, Oe, rt, ut) {
    ne((3 & rt) === rt, "The recovery param is more than two bits"), Oe = new oe(Oe, ut);
    var dt = this.n, ht = new B(ce), bt = Oe.r, Tt = Oe.s, wt = 1 & rt, Et = rt >> 1;
    if (bt.cmp(this.curve.p.umod(this.curve.n)) >= 0 && Et) throw new Error("Unable to find sencond key candinate");
    bt = Et ? this.curve.pointFromX(bt.add(this.curve.n), wt) : this.curve.pointFromX(bt, wt);
    var Rt = Oe.r.invm(dt), Bt = dt.sub(ht).mul(Rt).umod(dt), Pt = Tt.mul(Rt).umod(dt);
    return this.g.mulAdd(Bt, bt, Pt);
  }, pe.prototype.getKeyRecoveryParam = function(ce, Oe, rt, ut) {
    if ((Oe = new oe(Oe, ut)).recoveryParam !== null) return Oe.recoveryParam;
    for (var dt = 0; dt < 4; dt++) {
      var ht;
      try {
        ht = this.recoverPubKey(ce, Oe, dt);
      } catch {
        continue;
      }
      if (ht.eq(rt)) return dt;
    }
    throw new Error("Unable to find valid recovery factor");
  }, ec;
}
Signature$2.prototype._importDER = function(B, L) {
  B = utils$3.toArray(B, L);
  var V = new Position();
  if (B[V.place++] !== 48) return !1;
  var J = getLength(B, V);
  if (J === !1 || J + V.place !== B.length || B[V.place++] !== 2) return !1;
  var re = getLength(B, V);
  if (re === !1 || 128 & B[V.place]) return !1;
  var ne = B.slice(V.place, re + V.place);
  if (V.place += re, B[V.place++] !== 2) return !1;
  var ie = getLength(B, V);
  if (ie === !1 || B.length !== ie + V.place || 128 & B[V.place]) return !1;
  var oe = B.slice(V.place, ie + V.place);
  if (ne[0] === 0) {
    if (!(128 & ne[1])) return !1;
    ne = ne.slice(1);
  }
  if (oe[0] === 0) {
    if (!(128 & oe[1])) return !1;
    oe = oe.slice(1);
  }
  return this.r = new BN$4(ne), this.s = new BN$4(oe), this.recoveryParam = null, !0;
}, Signature$2.prototype.toDER = function(B) {
  var L = this.r.toArray(), V = this.s.toArray();
  for (128 & L[0] && (L = [0].concat(L)), 128 & V[0] && (V = [0].concat(V)), L = rmPadding(L), V = rmPadding(V); !(V[0] || 128 & V[1]); ) V = V.slice(1);
  var J = [2];
  constructLength(J, L.length), (J = J.concat(L)).push(2), constructLength(J, V.length);
  var re = J.concat(V), ne = [48];
  return constructLength(ne, re.length), ne = ne.concat(re), utils$3.encode(ne, B);
};
var utils$2 = utils$l, assert$3 = utils$2.assert, parseBytes$2 = utils$2.parseBytes, cachedProperty$1 = utils$2.cachedProperty;
function KeyPair$1(B, L) {
  this.eddsa = B, this._secret = parseBytes$2(L.secret), B.isPoint(L.pub) ? this._pub = L.pub : this._pubBytes = parseBytes$2(L.pub);
}
KeyPair$1.fromPublic = function(B, L) {
  return L instanceof KeyPair$1 ? L : new KeyPair$1(B, { pub: L });
}, KeyPair$1.fromSecret = function(B, L) {
  return L instanceof KeyPair$1 ? L : new KeyPair$1(B, { secret: L });
}, KeyPair$1.prototype.secret = function() {
  return this._secret;
}, cachedProperty$1(KeyPair$1, "pubBytes", function() {
  return this.eddsa.encodePoint(this.pub());
}), cachedProperty$1(KeyPair$1, "pub", function() {
  return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
}), cachedProperty$1(KeyPair$1, "privBytes", function() {
  var B = this.eddsa, L = this.hash(), V = B.encodingLength - 1, J = L.slice(0, B.encodingLength);
  return J[0] &= 248, J[V] &= 127, J[V] |= 64, J;
}), cachedProperty$1(KeyPair$1, "priv", function() {
  return this.eddsa.decodeInt(this.privBytes());
}), cachedProperty$1(KeyPair$1, "hash", function() {
  return this.eddsa.hash().update(this.secret()).digest();
}), cachedProperty$1(KeyPair$1, "messagePrefix", function() {
  return this.hash().slice(this.eddsa.encodingLength);
}), KeyPair$1.prototype.sign = function(B) {
  return assert$3(this._secret, "KeyPair can only verify"), this.eddsa.sign(B, this);
}, KeyPair$1.prototype.verify = function(B, L) {
  return this.eddsa.verify(B, L, this);
}, KeyPair$1.prototype.getSecret = function(B) {
  return assert$3(this._secret, "KeyPair is public only"), utils$2.encode(this.secret(), B);
}, KeyPair$1.prototype.getPublic = function(B) {
  return utils$2.encode(this.pubBytes(), B);
};
var key = KeyPair$1, BN$3 = bnExports$1, utils$1 = utils$l, assert$2 = utils$1.assert, cachedProperty = utils$1.cachedProperty, parseBytes$1 = utils$1.parseBytes;
function Signature$1(B, L) {
  this.eddsa = B, typeof L != "object" && (L = parseBytes$1(L)), Array.isArray(L) && (assert$2(L.length === 2 * B.encodingLength, "Signature has invalid size"), L = { R: L.slice(0, B.encodingLength), S: L.slice(B.encodingLength) }), assert$2(L.R && L.S, "Signature without R or S"), B.isPoint(L.R) && (this._R = L.R), L.S instanceof BN$3 && (this._S = L.S), this._Rencoded = Array.isArray(L.R) ? L.R : L.Rencoded, this._Sencoded = Array.isArray(L.S) ? L.S : L.Sencoded;
}
cachedProperty(Signature$1, "S", function() {
  return this.eddsa.decodeInt(this.Sencoded());
}), cachedProperty(Signature$1, "R", function() {
  return this.eddsa.decodePoint(this.Rencoded());
}), cachedProperty(Signature$1, "Rencoded", function() {
  return this.eddsa.encodePoint(this.R());
}), cachedProperty(Signature$1, "Sencoded", function() {
  return this.eddsa.encodeInt(this.S());
}), Signature$1.prototype.toBytes = function() {
  return this.Rencoded().concat(this.Sencoded());
}, Signature$1.prototype.toHex = function() {
  return utils$1.encode(this.toBytes(), "hex").toUpperCase();
};
var signature = Signature$1, hash = hash$2, curves = curves$1, utils = utils$l, assert$1 = utils.assert, parseBytes = utils.parseBytes, KeyPair = key, Signature = signature;
function EDDSA(B) {
  if (assert$1(B === "ed25519", "only tested with ed25519 so far"), !(this instanceof EDDSA)) return new EDDSA(B);
  B = curves[B].curve, this.curve = B, this.g = B.g, this.g.precompute(B.n.bitLength() + 1), this.pointClass = B.point().constructor, this.encodingLength = Math.ceil(B.n.bitLength() / 8), this.hash = hash.sha512;
}
var eddsa = EDDSA, hasRequiredElliptic;
function requireElliptic() {
  return hasRequiredElliptic || (hasRequiredElliptic = 1, function(B) {
    var L = B;
    L.version = require$$0.version, L.utils = utils$l, L.rand = requireBrorand(), L.curve = curve, L.curves = curves$1, L.ec = requireEc(), L.eddsa = eddsa;
  }(elliptic)), elliptic;
}
EDDSA.prototype.sign = function(B, L) {
  B = parseBytes(B);
  var V = this.keyFromSecret(L), J = this.hashInt(V.messagePrefix(), B), re = this.g.mul(J), ne = this.encodePoint(re), ie = this.hashInt(ne, V.pubBytes(), B).mul(V.priv()), oe = J.add(ie).umod(this.curve.n);
  return this.makeSignature({ R: re, S: oe, Rencoded: ne });
}, EDDSA.prototype.verify = function(B, L, V) {
  if (B = parseBytes(B), (L = this.makeSignature(L)).S().gte(L.eddsa.curve.n) || L.S().isNeg()) return !1;
  var J = this.keyFromPublic(V), re = this.hashInt(L.Rencoded(), J.pubBytes(), B), ne = this.g.mul(L.S());
  return L.R().add(J.pub().mul(re)).eq(ne);
}, EDDSA.prototype.hashInt = function() {
  for (var B = this.hash(), L = 0; L < arguments.length; L++) B.update(arguments[L]);
  return utils.intFromLE(B.digest()).umod(this.curve.n);
}, EDDSA.prototype.keyFromPublic = function(B) {
  return KeyPair.fromPublic(this, B);
}, EDDSA.prototype.keyFromSecret = function(B) {
  return KeyPair.fromSecret(this, B);
}, EDDSA.prototype.makeSignature = function(B) {
  return B instanceof Signature ? B : new Signature(this, B);
}, EDDSA.prototype.encodePoint = function(B) {
  var L = B.getY().toArray("le", this.encodingLength);
  return L[this.encodingLength - 1] |= B.getX().isOdd() ? 128 : 0, L;
}, EDDSA.prototype.decodePoint = function(B) {
  var L = (B = utils.parseBytes(B)).length - 1, V = B.slice(0, L).concat(-129 & B[L]), J = !!(128 & B[L]), re = utils.intFromLE(V);
  return this.curve.pointFromY(re, J);
}, EDDSA.prototype.encodeInt = function(B) {
  return B.toArray("le", this.encodingLength);
}, EDDSA.prototype.decodeInt = function(B) {
  return utils.intFromLE(B);
}, EDDSA.prototype.isPoint = function(B) {
  return B instanceof this.pointClass;
};
var asn1$3 = {}, asn1$2 = {}, api = {}, vmBrowserify = {}, hasRequiredVmBrowserify, hasRequiredApi;
function requireVmBrowserify() {
  return hasRequiredVmBrowserify || (hasRequiredVmBrowserify = 1, function(exports) {
    var indexOf = function(B, L) {
      if (B.indexOf) return B.indexOf(L);
      for (var V = 0; V < B.length; V++) if (B[V] === L) return V;
      return -1;
    }, Object_keys = function(B) {
      if (Object.keys) return Object.keys(B);
      var L = [];
      for (var V in B) L.push(V);
      return L;
    }, forEach = function(B, L) {
      if (B.forEach) return B.forEach(L);
      for (var V = 0; V < B.length; V++) L(B[V], V, B);
    }, defineProp = function() {
      try {
        return Object.defineProperty({}, "_", {}), function(B, L, V) {
          Object.defineProperty(B, L, { writable: !0, enumerable: !1, configurable: !0, value: V });
        };
      } catch {
        return function(L, V, J) {
          L[V] = J;
        };
      }
    }(), globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"];
    function Context() {
    }
    Context.prototype = {};
    var Script = exports.Script = function(B) {
      if (!(this instanceof Script)) return new Script(B);
      this.code = B;
    };
    Script.prototype.runInContext = function(B) {
      if (!(B instanceof Context)) throw new TypeError("needs a 'context' argument.");
      var L = document.createElement("iframe");
      L.style || (L.style = {}), L.style.display = "none", document.body.appendChild(L);
      var V = L.contentWindow, J = V.eval, re = V.execScript;
      !J && re && (re.call(V, "null"), J = V.eval), forEach(Object_keys(B), function(oe) {
        V[oe] = B[oe];
      }), forEach(globals, function(oe) {
        B[oe] && (V[oe] = B[oe]);
      });
      var ne = Object_keys(V), ie = J.call(V, this.code);
      return forEach(Object_keys(V), function(oe) {
        (oe in B || indexOf(ne, oe) === -1) && (B[oe] = V[oe]);
      }), forEach(globals, function(oe) {
        oe in B || defineProp(B, oe, V[oe]);
      }), document.body.removeChild(L), ie;
    }, Script.prototype.runInThisContext = function() {
      return eval(this.code);
    }, Script.prototype.runInNewContext = function(B) {
      var L = Script.createContext(B), V = this.runInContext(L);
      return B && forEach(Object_keys(L), function(J) {
        B[J] = L[J];
      }), V;
    }, forEach(Object_keys(Script.prototype), function(B) {
      exports[B] = Script[B] = function(L) {
        var V = Script(L);
        return V[B].apply(V, [].slice.call(arguments, 1));
      };
    }), exports.isContext = function(B) {
      return B instanceof Context;
    }, exports.createScript = function(B) {
      return exports.Script(B);
    }, exports.createContext = Script.createContext = function(B) {
      var L = new Context();
      return typeof B == "object" && forEach(Object_keys(B), function(V) {
        L[V] = B[V];
      }), L;
    };
  }(vmBrowserify)), vmBrowserify;
}
function requireApi() {
  return hasRequiredApi || (hasRequiredApi = 1, function(B) {
    var L = requireAsn1(), V = inherits_browserExports;
    function J(re, ne) {
      this.name = re, this.body = ne, this.decoders = {}, this.encoders = {};
    }
    B.define = function(re, ne) {
      return new J(re, ne);
    }, J.prototype._createNamed = function(re) {
      var ne;
      try {
        ne = requireVmBrowserify().runInThisContext("(function " + this.name + `(entity) {
  this._initNamed(entity);
})`);
      } catch {
        ne = function(oe) {
          this._initNamed(oe);
        };
      }
      return V(ne, re), ne.prototype._initNamed = function(ie) {
        re.call(this, ie);
      }, new ne(this);
    }, J.prototype._getDecoder = function(re) {
      return re = re || "der", this.decoders.hasOwnProperty(re) || (this.decoders[re] = this._createNamed(L.decoders[re])), this.decoders[re];
    }, J.prototype.decode = function(re, ne, ie) {
      return this._getDecoder(ne).decode(re, ie);
    }, J.prototype._getEncoder = function(re) {
      return re = re || "der", this.encoders.hasOwnProperty(re) || (this.encoders[re] = this._createNamed(L.encoders[re])), this.encoders[re];
    }, J.prototype.encode = function(re, ne, ie) {
      return this._getEncoder(ne).encode(re, ie);
    };
  }(api)), api;
}
var base = {}, reporter = {}, inherits = inherits_browserExports;
function Reporter(B) {
  this._reporterState = { obj: null, path: [], options: B || {}, errors: [] };
}
function ReporterError(B, L) {
  this.path = B, this.rethrow(L);
}
reporter.Reporter = Reporter, Reporter.prototype.isError = function(B) {
  return B instanceof ReporterError;
}, Reporter.prototype.save = function() {
  var B = this._reporterState;
  return { obj: B.obj, pathLen: B.path.length };
}, Reporter.prototype.restore = function(B) {
  var L = this._reporterState;
  L.obj = B.obj, L.path = L.path.slice(0, B.pathLen);
}, Reporter.prototype.enterKey = function(B) {
  return this._reporterState.path.push(B);
}, Reporter.prototype.exitKey = function(B) {
  var L = this._reporterState;
  L.path = L.path.slice(0, B - 1);
}, Reporter.prototype.leaveKey = function(B, L, V) {
  var J = this._reporterState;
  this.exitKey(B), J.obj !== null && (J.obj[L] = V);
}, Reporter.prototype.path = function() {
  return this._reporterState.path.join("/");
}, Reporter.prototype.enterObject = function() {
  var B = this._reporterState, L = B.obj;
  return B.obj = {}, L;
}, Reporter.prototype.leaveObject = function(B) {
  var L = this._reporterState, V = L.obj;
  return L.obj = B, V;
}, Reporter.prototype.error = function(B) {
  var L, V = this._reporterState, J = B instanceof ReporterError;
  if (L = J ? B : new ReporterError(V.path.map(function(re) {
    return "[" + JSON.stringify(re) + "]";
  }).join(""), B.message || B, B.stack), !V.options.partial) throw L;
  return J || V.errors.push(L), L;
}, Reporter.prototype.wrapResult = function(B) {
  var L = this._reporterState;
  return L.options.partial ? { result: this.isError(B) ? null : B, errors: L.errors } : B;
}, inherits(ReporterError, Error), ReporterError.prototype.rethrow = function(B) {
  if (this.message = B + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, ReporterError), !this.stack) try {
    throw new Error(this.message);
  } catch (L) {
    this.stack = L.stack;
  }
  return this;
};
var buffer = {}, hasRequiredBuffer, node, hasRequiredNode, hasRequiredBase;
function requireBuffer() {
  if (hasRequiredBuffer) return buffer;
  hasRequiredBuffer = 1;
  var B = inherits_browserExports, L = requireBase().Reporter, V = require$$1$2.Buffer;
  function J(ne, ie) {
    L.call(this, ie), V.isBuffer(ne) ? (this.base = ne, this.offset = 0, this.length = ne.length) : this.error("Input not Buffer");
  }
  function re(ne, ie) {
    if (Array.isArray(ne)) this.length = 0, this.value = ne.map(function(oe) {
      return oe instanceof re || (oe = new re(oe, ie)), this.length += oe.length, oe;
    }, this);
    else if (typeof ne == "number") {
      if (!(0 <= ne && ne <= 255)) return ie.error("non-byte EncoderBuffer value");
      this.value = ne, this.length = 1;
    } else if (typeof ne == "string") this.value = ne, this.length = V.byteLength(ne);
    else {
      if (!V.isBuffer(ne)) return ie.error("Unsupported type: " + typeof ne);
      this.value = ne, this.length = ne.length;
    }
  }
  return B(J, L), buffer.DecoderBuffer = J, J.prototype.save = function() {
    return { offset: this.offset, reporter: L.prototype.save.call(this) };
  }, J.prototype.restore = function(ne) {
    var ie = new J(this.base);
    return ie.offset = ne.offset, ie.length = this.offset, this.offset = ne.offset, L.prototype.restore.call(this, ne.reporter), ie;
  }, J.prototype.isEmpty = function() {
    return this.offset === this.length;
  }, J.prototype.readUInt8 = function(ne) {
    return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(ne || "DecoderBuffer overrun");
  }, J.prototype.skip = function(ne, ie) {
    if (!(this.offset + ne <= this.length)) return this.error(ie || "DecoderBuffer overrun");
    var oe = new J(this.base);
    return oe._reporterState = this._reporterState, oe.offset = this.offset, oe.length = this.offset + ne, this.offset += ne, oe;
  }, J.prototype.raw = function(ne) {
    return this.base.slice(ne ? ne.offset : this.offset, this.length);
  }, buffer.EncoderBuffer = re, re.prototype.join = function(ne, ie) {
    return ne || (ne = new V(this.length)), ie || (ie = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(oe) {
      oe.join(ne, ie), ie += oe.length;
    }) : (typeof this.value == "number" ? ne[ie] = this.value : typeof this.value == "string" ? ne.write(this.value, ie) : V.isBuffer(this.value) && this.value.copy(ne, ie), ie += this.length)), ne;
  }, buffer;
}
function requireNode() {
  if (hasRequiredNode) return node;
  hasRequiredNode = 1;
  var B = requireBase().Reporter, L = requireBase().EncoderBuffer, V = requireBase().DecoderBuffer, J = minimalisticAssert, re = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], ne = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(re);
  function ie(pe, ce) {
    var Oe = {};
    this._baseState = Oe, Oe.enc = pe, Oe.parent = ce || null, Oe.children = null, Oe.tag = null, Oe.args = null, Oe.reverseArgs = null, Oe.choice = null, Oe.optional = !1, Oe.any = !1, Oe.obj = !1, Oe.use = null, Oe.useDecoder = null, Oe.key = null, Oe.default = null, Oe.explicit = null, Oe.implicit = null, Oe.contains = null, Oe.parent || (Oe.children = [], this._wrap());
  }
  node = ie;
  var oe = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
  return ie.prototype.clone = function() {
    var pe = this._baseState, ce = {};
    oe.forEach(function(rt) {
      ce[rt] = pe[rt];
    });
    var Oe = new this.constructor(ce.parent);
    return Oe._baseState = ce, Oe;
  }, ie.prototype._wrap = function() {
    var pe = this._baseState;
    ne.forEach(function(ce) {
      this[ce] = function() {
        var Oe = new this.constructor(this);
        return pe.children.push(Oe), Oe[ce].apply(Oe, arguments);
      };
    }, this);
  }, ie.prototype._init = function(pe) {
    var ce = this._baseState;
    J(ce.parent === null), pe.call(this), ce.children = ce.children.filter(function(Oe) {
      return Oe._baseState.parent === this;
    }, this), J.equal(ce.children.length, 1, "Root node can have only one child");
  }, ie.prototype._useArgs = function(pe) {
    var ce = this._baseState, Oe = pe.filter(function(rt) {
      return rt instanceof this.constructor;
    }, this);
    pe = pe.filter(function(rt) {
      return !(rt instanceof this.constructor);
    }, this), Oe.length !== 0 && (J(ce.children === null), ce.children = Oe, Oe.forEach(function(rt) {
      rt._baseState.parent = this;
    }, this)), pe.length !== 0 && (J(ce.args === null), ce.args = pe, ce.reverseArgs = pe.map(function(rt) {
      if (typeof rt != "object" || rt.constructor !== Object) return rt;
      var ut = {};
      return Object.keys(rt).forEach(function(dt) {
        dt == (0 | dt) && (dt |= 0);
        var ht = rt[dt];
        ut[ht] = dt;
      }), ut;
    }));
  }, ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach(function(pe) {
    ie.prototype[pe] = function() {
      var ce = this._baseState;
      throw new Error(pe + " not implemented for encoding: " + ce.enc);
    };
  }), re.forEach(function(pe) {
    ie.prototype[pe] = function() {
      var ce = this._baseState, Oe = Array.prototype.slice.call(arguments);
      return J(ce.tag === null), ce.tag = pe, this._useArgs(Oe), this;
    };
  }), ie.prototype.use = function(pe) {
    J(pe);
    var ce = this._baseState;
    return J(ce.use === null), ce.use = pe, this;
  }, ie.prototype.optional = function() {
    return this._baseState.optional = !0, this;
  }, ie.prototype.def = function(pe) {
    var ce = this._baseState;
    return J(ce.default === null), ce.default = pe, ce.optional = !0, this;
  }, ie.prototype.explicit = function(pe) {
    var ce = this._baseState;
    return J(ce.explicit === null && ce.implicit === null), ce.explicit = pe, this;
  }, ie.prototype.implicit = function(pe) {
    var ce = this._baseState;
    return J(ce.explicit === null && ce.implicit === null), ce.implicit = pe, this;
  }, ie.prototype.obj = function() {
    var pe = this._baseState, ce = Array.prototype.slice.call(arguments);
    return pe.obj = !0, ce.length !== 0 && this._useArgs(ce), this;
  }, ie.prototype.key = function(pe) {
    var ce = this._baseState;
    return J(ce.key === null), ce.key = pe, this;
  }, ie.prototype.any = function() {
    return this._baseState.any = !0, this;
  }, ie.prototype.choice = function(pe) {
    var ce = this._baseState;
    return J(ce.choice === null), ce.choice = pe, this._useArgs(Object.keys(pe).map(function(Oe) {
      return pe[Oe];
    })), this;
  }, ie.prototype.contains = function(pe) {
    var ce = this._baseState;
    return J(ce.use === null), ce.contains = pe, this;
  }, ie.prototype._decode = function(pe, ce) {
    var Oe = this._baseState;
    if (Oe.parent === null) return pe.wrapResult(Oe.children[0]._decode(pe, ce));
    var rt, ut = Oe.default, dt = !0, ht = null;
    if (Oe.key !== null && (ht = pe.enterKey(Oe.key)), Oe.optional) {
      var bt = null;
      if (Oe.explicit !== null ? bt = Oe.explicit : Oe.implicit !== null ? bt = Oe.implicit : Oe.tag !== null && (bt = Oe.tag), bt !== null || Oe.any) {
        if (dt = this._peekTag(pe, bt, Oe.any), pe.isError(dt)) return dt;
      } else {
        var Tt = pe.save();
        try {
          Oe.choice === null ? this._decodeGeneric(Oe.tag, pe, ce) : this._decodeChoice(pe, ce), dt = !0;
        } catch {
          dt = !1;
        }
        pe.restore(Tt);
      }
    }
    if (Oe.obj && dt && (rt = pe.enterObject()), dt) {
      if (Oe.explicit !== null) {
        var wt = this._decodeTag(pe, Oe.explicit);
        if (pe.isError(wt)) return wt;
        pe = wt;
      }
      var Et = pe.offset;
      if (Oe.use === null && Oe.choice === null) {
        Oe.any && (Tt = pe.save());
        var Rt = this._decodeTag(pe, Oe.implicit !== null ? Oe.implicit : Oe.tag, Oe.any);
        if (pe.isError(Rt)) return Rt;
        Oe.any ? ut = pe.raw(Tt) : pe = Rt;
      }
      if (ce && ce.track && Oe.tag !== null && ce.track(pe.path(), Et, pe.length, "tagged"), ce && ce.track && Oe.tag !== null && ce.track(pe.path(), pe.offset, pe.length, "content"), Oe.any || (ut = Oe.choice === null ? this._decodeGeneric(Oe.tag, pe, ce) : this._decodeChoice(pe, ce)), pe.isError(ut)) return ut;
      if (Oe.any || Oe.choice !== null || Oe.children === null || Oe.children.forEach(function(Pt) {
        Pt._decode(pe, ce);
      }), Oe.contains && (Oe.tag === "octstr" || Oe.tag === "bitstr")) {
        var Bt = new V(ut);
        ut = this._getUse(Oe.contains, pe._reporterState.obj)._decode(Bt, ce);
      }
    }
    return Oe.obj && dt && (ut = pe.leaveObject(rt)), Oe.key === null || ut === null && dt !== !0 ? ht !== null && pe.exitKey(ht) : pe.leaveKey(ht, Oe.key, ut), ut;
  }, ie.prototype._decodeGeneric = function(pe, ce, Oe) {
    var rt = this._baseState;
    return pe === "seq" || pe === "set" ? null : pe === "seqof" || pe === "setof" ? this._decodeList(ce, pe, rt.args[0], Oe) : /str$/.test(pe) ? this._decodeStr(ce, pe, Oe) : pe === "objid" && rt.args ? this._decodeObjid(ce, rt.args[0], rt.args[1], Oe) : pe === "objid" ? this._decodeObjid(ce, null, null, Oe) : pe === "gentime" || pe === "utctime" ? this._decodeTime(ce, pe, Oe) : pe === "null_" ? this._decodeNull(ce, Oe) : pe === "bool" ? this._decodeBool(ce, Oe) : pe === "objDesc" ? this._decodeStr(ce, pe, Oe) : pe === "int" || pe === "enum" ? this._decodeInt(ce, rt.args && rt.args[0], Oe) : rt.use !== null ? this._getUse(rt.use, ce._reporterState.obj)._decode(ce, Oe) : ce.error("unknown tag: " + pe);
  }, ie.prototype._getUse = function(pe, ce) {
    var Oe = this._baseState;
    return Oe.useDecoder = this._use(pe, ce), J(Oe.useDecoder._baseState.parent === null), Oe.useDecoder = Oe.useDecoder._baseState.children[0], Oe.implicit !== Oe.useDecoder._baseState.implicit && (Oe.useDecoder = Oe.useDecoder.clone(), Oe.useDecoder._baseState.implicit = Oe.implicit), Oe.useDecoder;
  }, ie.prototype._decodeChoice = function(pe, ce) {
    var Oe = this._baseState, rt = null, ut = !1;
    return Object.keys(Oe.choice).some(function(dt) {
      var ht = pe.save(), bt = Oe.choice[dt];
      try {
        var Tt = bt._decode(pe, ce);
        if (pe.isError(Tt)) return !1;
        rt = { type: dt, value: Tt }, ut = !0;
      } catch {
        return pe.restore(ht), !1;
      }
      return !0;
    }, this), ut ? rt : pe.error("Choice not matched");
  }, ie.prototype._createEncoderBuffer = function(pe) {
    return new L(pe, this.reporter);
  }, ie.prototype._encode = function(pe, ce, Oe) {
    var rt = this._baseState;
    if (rt.default === null || rt.default !== pe) {
      var ut = this._encodeValue(pe, ce, Oe);
      if (ut !== void 0 && !this._skipDefault(ut, ce, Oe)) return ut;
    }
  }, ie.prototype._encodeValue = function(pe, ce, Oe) {
    var rt = this._baseState;
    if (rt.parent === null) return rt.children[0]._encode(pe, ce || new B());
    var ut = null;
    if (this.reporter = ce, rt.optional && pe === void 0) {
      if (rt.default === null) return;
      pe = rt.default;
    }
    var dt = null, ht = !1;
    if (rt.any) ut = this._createEncoderBuffer(pe);
    else if (rt.choice) ut = this._encodeChoice(pe, ce);
    else if (rt.contains) dt = this._getUse(rt.contains, Oe)._encode(pe, ce), ht = !0;
    else if (rt.children) dt = rt.children.map(function(Et) {
      if (Et._baseState.tag === "null_") return Et._encode(null, ce, pe);
      if (Et._baseState.key === null) return ce.error("Child should have a key");
      var Rt = ce.enterKey(Et._baseState.key);
      if (typeof pe != "object") return ce.error("Child expected, but input is not object");
      var Bt = Et._encode(pe[Et._baseState.key], ce, pe);
      return ce.leaveKey(Rt), Bt;
    }, this).filter(function(Et) {
      return Et;
    }), dt = this._createEncoderBuffer(dt);
    else if (rt.tag === "seqof" || rt.tag === "setof") {
      if (!rt.args || rt.args.length !== 1) return ce.error("Too many args for : " + rt.tag);
      if (!Array.isArray(pe)) return ce.error("seqof/setof, but data is not Array");
      var bt = this.clone();
      bt._baseState.implicit = null, dt = this._createEncoderBuffer(pe.map(function(Et) {
        var Rt = this._baseState;
        return this._getUse(Rt.args[0], pe)._encode(Et, ce);
      }, bt));
    } else rt.use !== null ? ut = this._getUse(rt.use, Oe)._encode(pe, ce) : (dt = this._encodePrimitive(rt.tag, pe), ht = !0);
    if (!rt.any && rt.choice === null) {
      var Tt = rt.implicit !== null ? rt.implicit : rt.tag, wt = rt.implicit === null ? "universal" : "context";
      Tt === null ? rt.use === null && ce.error("Tag could be omitted only for .use()") : rt.use === null && (ut = this._encodeComposite(Tt, ht, wt, dt));
    }
    return rt.explicit !== null && (ut = this._encodeComposite(rt.explicit, !1, "context", ut)), ut;
  }, ie.prototype._encodeChoice = function(pe, ce) {
    var Oe = this._baseState, rt = Oe.choice[pe.type];
    return rt || J(!1, pe.type + " not found in " + JSON.stringify(Object.keys(Oe.choice))), rt._encode(pe.value, ce);
  }, ie.prototype._encodePrimitive = function(pe, ce) {
    var Oe = this._baseState;
    if (/str$/.test(pe)) return this._encodeStr(ce, pe);
    if (pe === "objid" && Oe.args) return this._encodeObjid(ce, Oe.reverseArgs[0], Oe.args[1]);
    if (pe === "objid") return this._encodeObjid(ce, null, null);
    if (pe === "gentime" || pe === "utctime") return this._encodeTime(ce, pe);
    if (pe === "null_") return this._encodeNull();
    if (pe === "int" || pe === "enum") return this._encodeInt(ce, Oe.args && Oe.reverseArgs[0]);
    if (pe === "bool") return this._encodeBool(ce);
    if (pe === "objDesc") return this._encodeStr(ce, pe);
    throw new Error("Unsupported tag: " + pe);
  }, ie.prototype._isNumstr = function(pe) {
    return /^[0-9 ]*$/.test(pe);
  }, ie.prototype._isPrintstr = function(pe) {
    return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(pe);
  }, node;
}
function requireBase() {
  return hasRequiredBase || (hasRequiredBase = 1, function(B) {
    var L = B;
    L.Reporter = reporter.Reporter, L.DecoderBuffer = requireBuffer().DecoderBuffer, L.EncoderBuffer = requireBuffer().EncoderBuffer, L.Node = requireNode();
  }(base)), base;
}
var constants = {}, der = {}, hasRequiredDer$2, hasRequiredConstants;
function requireDer$2() {
  return hasRequiredDer$2 || (hasRequiredDer$2 = 1, function(B) {
    var L = requireConstants();
    B.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" }, B.tagClassByName = L._reverse(B.tagClass), B.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" }, B.tagByName = L._reverse(B.tag);
  }(der)), der;
}
function requireConstants() {
  return hasRequiredConstants || (hasRequiredConstants = 1, function(B) {
    var L = B;
    L._reverse = function(V) {
      var J = {};
      return Object.keys(V).forEach(function(re) {
        (0 | re) == re && (re |= 0);
        var ne = V[re];
        J[ne] = re;
      }), J;
    }, L.der = requireDer$2();
  }(constants)), constants;
}
var decoders = {}, der_1$1, hasRequiredDer$1, pem$1, hasRequiredPem$1, hasRequiredDecoders;
function requireDer$1() {
  if (hasRequiredDer$1) return der_1$1;
  hasRequiredDer$1 = 1;
  var B = inherits_browserExports, L = requireAsn1(), V = L.base, J = L.bignum, re = L.constants.der;
  function ne(ce) {
    this.enc = "der", this.name = ce.name, this.entity = ce, this.tree = new ie(), this.tree._init(ce.body);
  }
  function ie(ce) {
    V.Node.call(this, "der", ce);
  }
  function oe(ce, Oe) {
    var rt = ce.readUInt8(Oe);
    if (ce.isError(rt)) return rt;
    var ut = re.tagClass[rt >> 6], dt = !(32 & rt);
    if (31 & ~rt) rt &= 31;
    else {
      var ht = rt;
      for (rt = 0; !(128 & ~ht); ) {
        if (ht = ce.readUInt8(Oe), ce.isError(ht)) return ht;
        rt <<= 7, rt |= 127 & ht;
      }
    }
    return { cls: ut, primitive: dt, tag: rt, tagStr: re.tag[rt] };
  }
  function pe(ce, Oe, rt) {
    var ut = ce.readUInt8(rt);
    if (ce.isError(ut)) return ut;
    if (!Oe && ut === 128) return null;
    if (!(128 & ut)) return ut;
    var dt = 127 & ut;
    if (dt > 4) return ce.error("length octect is too long");
    ut = 0;
    for (var ht = 0; ht < dt; ht++) {
      ut <<= 8;
      var bt = ce.readUInt8(rt);
      if (ce.isError(bt)) return bt;
      ut |= bt;
    }
    return ut;
  }
  return der_1$1 = ne, ne.prototype.decode = function(ce, Oe) {
    return ce instanceof V.DecoderBuffer || (ce = new V.DecoderBuffer(ce, Oe)), this.tree._decode(ce, Oe);
  }, B(ie, V.Node), ie.prototype._peekTag = function(ce, Oe, rt) {
    if (ce.isEmpty()) return !1;
    var ut = ce.save(), dt = oe(ce, 'Failed to peek tag: "' + Oe + '"');
    return ce.isError(dt) ? dt : (ce.restore(ut), dt.tag === Oe || dt.tagStr === Oe || dt.tagStr + "of" === Oe || rt);
  }, ie.prototype._decodeTag = function(ce, Oe, rt) {
    var ut = oe(ce, 'Failed to decode tag of "' + Oe + '"');
    if (ce.isError(ut)) return ut;
    var dt = pe(ce, ut.primitive, 'Failed to get length of "' + Oe + '"');
    if (ce.isError(dt)) return dt;
    if (!rt && ut.tag !== Oe && ut.tagStr !== Oe && ut.tagStr + "of" !== Oe) return ce.error('Failed to match tag: "' + Oe + '"');
    if (ut.primitive || dt !== null) return ce.skip(dt, 'Failed to match body of: "' + Oe + '"');
    var ht = ce.save(), bt = this._skipUntilEnd(ce, 'Failed to skip indefinite length body: "' + this.tag + '"');
    return ce.isError(bt) ? bt : (dt = ce.offset - ht.offset, ce.restore(ht), ce.skip(dt, 'Failed to match body of: "' + Oe + '"'));
  }, ie.prototype._skipUntilEnd = function(ce, Oe) {
    for (; ; ) {
      var rt = oe(ce, Oe);
      if (ce.isError(rt)) return rt;
      var ut, dt = pe(ce, rt.primitive, Oe);
      if (ce.isError(dt)) return dt;
      if (ut = rt.primitive || dt !== null ? ce.skip(dt) : this._skipUntilEnd(ce, Oe), ce.isError(ut)) return ut;
      if (rt.tagStr === "end") break;
    }
  }, ie.prototype._decodeList = function(ce, Oe, rt, ut) {
    for (var dt = []; !ce.isEmpty(); ) {
      var ht = this._peekTag(ce, "end");
      if (ce.isError(ht)) return ht;
      var bt = rt.decode(ce, "der", ut);
      if (ce.isError(bt) && ht) break;
      dt.push(bt);
    }
    return dt;
  }, ie.prototype._decodeStr = function(ce, Oe) {
    if (Oe === "bitstr") {
      var rt = ce.readUInt8();
      return ce.isError(rt) ? rt : { unused: rt, data: ce.raw() };
    }
    if (Oe === "bmpstr") {
      var ut = ce.raw();
      if (ut.length % 2 == 1) return ce.error("Decoding of string type: bmpstr length mismatch");
      for (var dt = "", ht = 0; ht < ut.length / 2; ht++) dt += String.fromCharCode(ut.readUInt16BE(2 * ht));
      return dt;
    }
    if (Oe === "numstr") {
      var bt = ce.raw().toString("ascii");
      return this._isNumstr(bt) ? bt : ce.error("Decoding of string type: numstr unsupported characters");
    }
    if (Oe === "octstr" || Oe === "objDesc") return ce.raw();
    if (Oe === "printstr") {
      var Tt = ce.raw().toString("ascii");
      return this._isPrintstr(Tt) ? Tt : ce.error("Decoding of string type: printstr unsupported characters");
    }
    return /str$/.test(Oe) ? ce.raw().toString() : ce.error("Decoding of string type: " + Oe + " unsupported");
  }, ie.prototype._decodeObjid = function(ce, Oe, rt) {
    for (var ut, dt = [], ht = 0; !ce.isEmpty(); ) {
      var bt = ce.readUInt8();
      ht <<= 7, ht |= 127 & bt, 128 & bt || (dt.push(ht), ht = 0);
    }
    128 & bt && dt.push(ht);
    var Tt = dt[0] / 40 | 0, wt = dt[0] % 40;
    if (ut = rt ? dt : [Tt, wt].concat(dt.slice(1)), Oe) {
      var Et = Oe[ut.join(" ")];
      Et === void 0 && (Et = Oe[ut.join(".")]), Et !== void 0 && (ut = Et);
    }
    return ut;
  }, ie.prototype._decodeTime = function(ce, Oe) {
    var rt = ce.raw().toString();
    if (Oe === "gentime") var ut = 0 | rt.slice(0, 4), dt = 0 | rt.slice(4, 6), ht = 0 | rt.slice(6, 8), bt = 0 | rt.slice(8, 10), Tt = 0 | rt.slice(10, 12), wt = 0 | rt.slice(12, 14);
    else {
      if (Oe !== "utctime") return ce.error("Decoding " + Oe + " time is not supported yet");
      ut = 0 | rt.slice(0, 2), dt = 0 | rt.slice(2, 4), ht = 0 | rt.slice(4, 6), bt = 0 | rt.slice(6, 8), Tt = 0 | rt.slice(8, 10), wt = 0 | rt.slice(10, 12), ut = ut < 70 ? 2e3 + ut : 1900 + ut;
    }
    return Date.UTC(ut, dt - 1, ht, bt, Tt, wt, 0);
  }, ie.prototype._decodeNull = function(ce) {
    return null;
  }, ie.prototype._decodeBool = function(ce) {
    var Oe = ce.readUInt8();
    return ce.isError(Oe) ? Oe : Oe !== 0;
  }, ie.prototype._decodeInt = function(ce, Oe) {
    var rt = ce.raw(), ut = new J(rt);
    return Oe && (ut = Oe[ut.toString(10)] || ut), ut;
  }, ie.prototype._use = function(ce, Oe) {
    return typeof ce == "function" && (ce = ce(Oe)), ce._getDecoder("der").tree;
  }, der_1$1;
}
function requirePem$1() {
  if (hasRequiredPem$1) return pem$1;
  hasRequiredPem$1 = 1;
  var B = inherits_browserExports, L = require$$1$2.Buffer, V = requireDer$1();
  function J(re) {
    V.call(this, re), this.enc = "pem";
  }
  return B(J, V), pem$1 = J, J.prototype.decode = function(re, ne) {
    for (var ie = re.toString().split(/[\r\n]+/g), oe = ne.label.toUpperCase(), pe = /^-----(BEGIN|END) ([^-]+)-----$/, ce = -1, Oe = -1, rt = 0; rt < ie.length; rt++) {
      var ut = ie[rt].match(pe);
      if (ut !== null && ut[2] === oe) {
        if (ce !== -1) {
          if (ut[1] !== "END") break;
          Oe = rt;
          break;
        }
        if (ut[1] !== "BEGIN") break;
        ce = rt;
      }
    }
    if (ce === -1 || Oe === -1) throw new Error("PEM section not found for: " + oe);
    var dt = ie.slice(ce + 1, Oe).join("");
    dt.replace(/[^a-z0-9\+\/=]+/gi, "");
    var ht = new L(dt, "base64");
    return V.prototype.decode.call(this, ht, ne);
  }, pem$1;
}
function requireDecoders() {
  return hasRequiredDecoders || (hasRequiredDecoders = 1, function(B) {
    var L = B;
    L.der = requireDer$1(), L.pem = requirePem$1();
  }(decoders)), decoders;
}
var encoders = {}, der_1, hasRequiredDer, pem, hasRequiredPem, hasRequiredEncoders, hasRequiredAsn1;
function requireDer() {
  if (hasRequiredDer) return der_1;
  hasRequiredDer = 1;
  var B = inherits_browserExports, L = require$$1$2.Buffer, V = requireAsn1(), J = V.base, re = V.constants.der;
  function ne(pe) {
    this.enc = "der", this.name = pe.name, this.entity = pe, this.tree = new ie(), this.tree._init(pe.body);
  }
  function ie(pe) {
    J.Node.call(this, "der", pe);
  }
  function oe(pe) {
    return pe < 10 ? "0" + pe : pe;
  }
  return der_1 = ne, ne.prototype.encode = function(pe, ce) {
    return this.tree._encode(pe, ce).join();
  }, B(ie, J.Node), ie.prototype._encodeComposite = function(pe, ce, Oe, rt) {
    var ut, dt = function(wt, Et, Rt, Bt) {
      var Pt;
      if (wt === "seqof" ? wt = "seq" : wt === "setof" && (wt = "set"), re.tagByName.hasOwnProperty(wt)) Pt = re.tagByName[wt];
      else {
        if (typeof wt != "number" || (0 | wt) !== wt) return Bt.error("Unknown tag: " + wt);
        Pt = wt;
      }
      return Pt >= 31 ? Bt.error("Multi-octet tag encoding unsupported") : (Et || (Pt |= 32), Pt |= re.tagClassByName[Rt || "universal"] << 6, Pt);
    }(pe, ce, Oe, this.reporter);
    if (rt.length < 128) return (ut = new L(2))[0] = dt, ut[1] = rt.length, this._createEncoderBuffer([ut, rt]);
    for (var ht = 1, bt = rt.length; bt >= 256; bt >>= 8) ht++;
    (ut = new L(2 + ht))[0] = dt, ut[1] = 128 | ht, bt = 1 + ht;
    for (var Tt = rt.length; Tt > 0; bt--, Tt >>= 8) ut[bt] = 255 & Tt;
    return this._createEncoderBuffer([ut, rt]);
  }, ie.prototype._encodeStr = function(pe, ce) {
    if (ce === "bitstr") return this._createEncoderBuffer([0 | pe.unused, pe.data]);
    if (ce === "bmpstr") {
      for (var Oe = new L(2 * pe.length), rt = 0; rt < pe.length; rt++) Oe.writeUInt16BE(pe.charCodeAt(rt), 2 * rt);
      return this._createEncoderBuffer(Oe);
    }
    return ce === "numstr" ? this._isNumstr(pe) ? this._createEncoderBuffer(pe) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : ce === "printstr" ? this._isPrintstr(pe) ? this._createEncoderBuffer(pe) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(ce) || ce === "objDesc" ? this._createEncoderBuffer(pe) : this.reporter.error("Encoding of string type: " + ce + " unsupported");
  }, ie.prototype._encodeObjid = function(pe, ce, Oe) {
    if (typeof pe == "string") {
      if (!ce) return this.reporter.error("string objid given, but no values map found");
      if (!ce.hasOwnProperty(pe)) return this.reporter.error("objid not found in values map");
      pe = ce[pe].split(/[\s\.]+/g);
      for (var rt = 0; rt < pe.length; rt++) pe[rt] |= 0;
    } else if (Array.isArray(pe))
      for (pe = pe.slice(), rt = 0; rt < pe.length; rt++) pe[rt] |= 0;
    if (!Array.isArray(pe)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(pe));
    if (!Oe) {
      if (pe[1] >= 40) return this.reporter.error("Second objid identifier OOB");
      pe.splice(0, 2, 40 * pe[0] + pe[1]);
    }
    var ut = 0;
    for (rt = 0; rt < pe.length; rt++) {
      var dt = pe[rt];
      for (ut++; dt >= 128; dt >>= 7) ut++;
    }
    var ht = new L(ut), bt = ht.length - 1;
    for (rt = pe.length - 1; rt >= 0; rt--)
      for (dt = pe[rt], ht[bt--] = 127 & dt; (dt >>= 7) > 0; ) ht[bt--] = 128 | 127 & dt;
    return this._createEncoderBuffer(ht);
  }, ie.prototype._encodeTime = function(pe, ce) {
    var Oe, rt = new Date(pe);
    return ce === "gentime" ? Oe = [oe(rt.getFullYear()), oe(rt.getUTCMonth() + 1), oe(rt.getUTCDate()), oe(rt.getUTCHours()), oe(rt.getUTCMinutes()), oe(rt.getUTCSeconds()), "Z"].join("") : ce === "utctime" ? Oe = [oe(rt.getFullYear() % 100), oe(rt.getUTCMonth() + 1), oe(rt.getUTCDate()), oe(rt.getUTCHours()), oe(rt.getUTCMinutes()), oe(rt.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + ce + " time is not supported yet"), this._encodeStr(Oe, "octstr");
  }, ie.prototype._encodeNull = function() {
    return this._createEncoderBuffer("");
  }, ie.prototype._encodeInt = function(pe, ce) {
    if (typeof pe == "string") {
      if (!ce) return this.reporter.error("String int or enum given, but no values map");
      if (!ce.hasOwnProperty(pe)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(pe));
      pe = ce[pe];
    }
    if (typeof pe != "number" && !L.isBuffer(pe)) {
      var Oe = pe.toArray();
      !pe.sign && 128 & Oe[0] && Oe.unshift(0), pe = new L(Oe);
    }
    if (L.isBuffer(pe)) {
      var rt = pe.length;
      pe.length === 0 && rt++;
      var ut = new L(rt);
      return pe.copy(ut), pe.length === 0 && (ut[0] = 0), this._createEncoderBuffer(ut);
    }
    if (pe < 128) return this._createEncoderBuffer(pe);
    if (pe < 256) return this._createEncoderBuffer([0, pe]);
    rt = 1;
    for (var dt = pe; dt >= 256; dt >>= 8) rt++;
    for (dt = (ut = new Array(rt)).length - 1; dt >= 0; dt--) ut[dt] = 255 & pe, pe >>= 8;
    return 128 & ut[0] && ut.unshift(0), this._createEncoderBuffer(new L(ut));
  }, ie.prototype._encodeBool = function(pe) {
    return this._createEncoderBuffer(pe ? 255 : 0);
  }, ie.prototype._use = function(pe, ce) {
    return typeof pe == "function" && (pe = pe(ce)), pe._getEncoder("der").tree;
  }, ie.prototype._skipDefault = function(pe, ce, Oe) {
    var rt, ut = this._baseState;
    if (ut.default === null) return !1;
    var dt = pe.join();
    if (ut.defaultBuffer === void 0 && (ut.defaultBuffer = this._encodeValue(ut.default, ce, Oe).join()), dt.length !== ut.defaultBuffer.length) return !1;
    for (rt = 0; rt < dt.length; rt++) if (dt[rt] !== ut.defaultBuffer[rt]) return !1;
    return !0;
  }, der_1;
}
function requirePem() {
  if (hasRequiredPem) return pem;
  hasRequiredPem = 1;
  var B = inherits_browserExports, L = requireDer();
  function V(J) {
    L.call(this, J), this.enc = "pem";
  }
  return B(V, L), pem = V, V.prototype.encode = function(J, re) {
    for (var ne = L.prototype.encode.call(this, J).toString("base64"), ie = ["-----BEGIN " + re.label + "-----"], oe = 0; oe < ne.length; oe += 64) ie.push(ne.slice(oe, oe + 64));
    return ie.push("-----END " + re.label + "-----"), ie.join(`
`);
  }, pem;
}
function requireEncoders() {
  return hasRequiredEncoders || (hasRequiredEncoders = 1, function(B) {
    var L = B;
    L.der = requireDer(), L.pem = requirePem();
  }(encoders)), encoders;
}
function requireAsn1() {
  return hasRequiredAsn1 || (hasRequiredAsn1 = 1, function() {
    var B = asn1$2;
    B.bignum = bnExports$1, B.define = requireApi().define, B.base = requireBase(), B.constants = requireConstants(), B.decoders = requireDecoders(), B.encoders = requireEncoders();
  }()), asn1$2;
}
var asn = requireAsn1(), Time = asn.define("Time", function() {
  this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
}), AttributeTypeValue = asn.define("AttributeTypeValue", function() {
  this.seq().obj(this.key("type").objid(), this.key("value").any());
}), AlgorithmIdentifier$1 = asn.define("AlgorithmIdentifier", function() {
  this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
}), SubjectPublicKeyInfo = asn.define("SubjectPublicKeyInfo", function() {
  this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier$1), this.key("subjectPublicKey").bitstr());
}), RelativeDistinguishedName = asn.define("RelativeDistinguishedName", function() {
  this.setof(AttributeTypeValue);
}), RDNSequence = asn.define("RDNSequence", function() {
  this.seqof(RelativeDistinguishedName);
}), Name = asn.define("Name", function() {
  this.choice({ rdnSequence: this.use(RDNSequence) });
}), Validity = asn.define("Validity", function() {
  this.seq().obj(this.key("notBefore").use(Time), this.key("notAfter").use(Time));
}), Extension = asn.define("Extension", function() {
  this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
}), TBSCertificate = asn.define("TBSCertificate", function() {
  this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(AlgorithmIdentifier$1), this.key("issuer").use(Name), this.key("validity").use(Validity), this.key("subject").use(Name), this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(Extension).optional());
}), X509Certificate = asn.define("X509Certificate", function() {
  this.seq().obj(this.key("tbsCertificate").use(TBSCertificate), this.key("signatureAlgorithm").use(AlgorithmIdentifier$1), this.key("signatureValue").bitstr());
}), certificate = X509Certificate, asn1$1 = requireAsn1();
asn1$3.certificate = certificate;
var RSAPrivateKey = asn1$1.define("RSAPrivateKey", function() {
  this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
});
asn1$3.RSAPrivateKey = RSAPrivateKey;
var RSAPublicKey = asn1$1.define("RSAPublicKey", function() {
  this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
});
asn1$3.RSAPublicKey = RSAPublicKey;
var AlgorithmIdentifier = asn1$1.define("AlgorithmIdentifier", function() {
  this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
}), PublicKey = asn1$1.define("SubjectPublicKeyInfo", function() {
  this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
});
asn1$3.PublicKey = PublicKey;
var PrivateKeyInfo = asn1$1.define("PrivateKeyInfo", function() {
  this.seq().obj(this.key("version").int(), this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPrivateKey").octstr());
});
asn1$3.PrivateKey = PrivateKeyInfo;
var EncryptedPrivateKeyInfo = asn1$1.define("EncryptedPrivateKeyInfo", function() {
  this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
});
asn1$3.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
var DSAPrivateKey = asn1$1.define("DSAPrivateKey", function() {
  this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
});
asn1$3.DSAPrivateKey = DSAPrivateKey, asn1$3.DSAparam = asn1$1.define("DSAparam", function() {
  this.int();
});
var ECParameters = asn1$1.define("ECParameters", function() {
  this.choice({ namedCurve: this.objid() });
}), ECPrivateKey = asn1$1.define("ECPrivateKey", function() {
  this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(ECParameters), this.key("publicKey").optional().explicit(1).bitstr());
});
asn1$3.ECPrivateKey = ECPrivateKey, asn1$3.signature = asn1$1.define("signature", function() {
  this.seq().obj(this.key("r").int(), this.key("s").int());
});
const require$$1 = { "2.16.840.1.101.3.4.1.1": "aes-128-ecb", "2.16.840.1.101.3.4.1.2": "aes-128-cbc", "2.16.840.1.101.3.4.1.3": "aes-128-ofb", "2.16.840.1.101.3.4.1.4": "aes-128-cfb", "2.16.840.1.101.3.4.1.21": "aes-192-ecb", "2.16.840.1.101.3.4.1.22": "aes-192-cbc", "2.16.840.1.101.3.4.1.23": "aes-192-ofb", "2.16.840.1.101.3.4.1.24": "aes-192-cfb", "2.16.840.1.101.3.4.1.41": "aes-256-ecb", "2.16.840.1.101.3.4.1.42": "aes-256-cbc", "2.16.840.1.101.3.4.1.43": "aes-256-ofb", "2.16.840.1.101.3.4.1.44": "aes-256-cfb" };
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, evp = evp_bytestokey, ciphers$1 = browser$5, Buffer$6 = safeBufferExports$1.Buffer, fixProc$1 = function(B, L) {
  var V, J = B.toString(), re = J.match(findProc);
  if (re) {
    var ne = "aes" + re[1], ie = Buffer$6.from(re[2], "hex"), oe = Buffer$6.from(re[3].replace(/[\r\n]/g, ""), "base64"), pe = evp(L, ie.slice(0, 8), parseInt(re[1], 10)).key, ce = [], Oe = ciphers$1.createDecipheriv(ne, pe, ie);
    ce.push(Oe.update(oe)), ce.push(Oe.final()), V = Buffer$6.concat(ce);
  } else {
    var rt = J.match(fullRegex);
    V = Buffer$6.from(rt[2].replace(/[\r\n]/g, ""), "base64");
  }
  return { tag: J.match(startRegex)[1], data: V };
}, asn1 = asn1$3, aesid = require$$1, fixProc = fixProc$1, ciphers = browser$5, compat = browser$7, Buffer$5 = safeBufferExports$1.Buffer;
function decrypt(B, L) {
  var V = B.algorithm.decrypt.kde.kdeparams.salt, J = parseInt(B.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), re = aesid[B.algorithm.decrypt.cipher.algo.join(".")], ne = B.algorithm.decrypt.cipher.iv, ie = B.subjectPrivateKey, oe = parseInt(re.split("-")[1], 10) / 8, pe = compat.pbkdf2Sync(L, V, J, oe, "sha1"), ce = ciphers.createDecipheriv(re, pe, ne), Oe = [];
  return Oe.push(ce.update(ie)), Oe.push(ce.final()), Buffer$5.concat(Oe);
}
function parseKeys$2(B) {
  var L;
  typeof B != "object" || Buffer$5.isBuffer(B) || (L = B.passphrase, B = B.key), typeof B == "string" && (B = Buffer$5.from(B));
  var V, J, re = fixProc(B, L), ne = re.tag, ie = re.data;
  switch (ne) {
    case "CERTIFICATE":
      J = asn1.certificate.decode(ie, "der").tbsCertificate.subjectPublicKeyInfo;
    case "PUBLIC KEY":
      switch (J || (J = asn1.PublicKey.decode(ie, "der")), V = J.algorithm.algorithm.join(".")) {
        case "1.2.840.113549.1.1.1":
          return asn1.RSAPublicKey.decode(J.subjectPublicKey.data, "der");
        case "1.2.840.10045.2.1":
          return J.subjectPrivateKey = J.subjectPublicKey, { type: "ec", data: J };
        case "1.2.840.10040.4.1":
          return J.algorithm.params.pub_key = asn1.DSAparam.decode(J.subjectPublicKey.data, "der"), { type: "dsa", data: J.algorithm.params };
        default:
          throw new Error("unknown key id " + V);
      }
    case "ENCRYPTED PRIVATE KEY":
      ie = decrypt(ie = asn1.EncryptedPrivateKey.decode(ie, "der"), L);
    case "PRIVATE KEY":
      switch (V = (J = asn1.PrivateKey.decode(ie, "der")).algorithm.algorithm.join(".")) {
        case "1.2.840.113549.1.1.1":
          return asn1.RSAPrivateKey.decode(J.subjectPrivateKey, "der");
        case "1.2.840.10045.2.1":
          return { curve: J.algorithm.curve, privateKey: asn1.ECPrivateKey.decode(J.subjectPrivateKey, "der").privateKey };
        case "1.2.840.10040.4.1":
          return J.algorithm.params.priv_key = asn1.DSAparam.decode(J.subjectPrivateKey, "der"), { type: "dsa", params: J.algorithm.params };
        default:
          throw new Error("unknown key id " + V);
      }
    case "RSA PUBLIC KEY":
      return asn1.RSAPublicKey.decode(ie, "der");
    case "RSA PRIVATE KEY":
      return asn1.RSAPrivateKey.decode(ie, "der");
    case "DSA PRIVATE KEY":
      return { type: "dsa", params: asn1.DSAPrivateKey.decode(ie, "der") };
    case "EC PRIVATE KEY":
      return { curve: (ie = asn1.ECPrivateKey.decode(ie, "der")).parameters.value, privateKey: ie.privateKey };
    default:
      throw new Error("unknown key type " + ne);
  }
}
parseKeys$2.signature = asn1.signature;
var parseAsn1 = parseKeys$2;
const require$$4 = { "1.3.132.0.10": "secp256k1", "1.3.132.0.33": "p224", "1.2.840.10045.3.1.1": "p192", "1.2.840.10045.3.1.7": "p256", "1.3.132.0.34": "p384", "1.3.132.0.35": "p521" };
var hasRequiredSign, verify_1$1, hasRequiredVerify, browser$3, hasRequiredBrowser$1, browser$2, hasRequiredBrowser;
function requireSign() {
  if (hasRequiredSign) return sign$1.exports;
  hasRequiredSign = 1;
  var B = safeBufferExports$1.Buffer, L = browser$8, V = browserifyRsa, J = requireElliptic().ec, re = bnExports, ne = parseAsn1, ie = require$$4;
  function oe(rt, ut, dt, ht) {
    if ((rt = B.from(rt.toArray())).length < ut.byteLength()) {
      var bt = B.alloc(ut.byteLength() - rt.length);
      rt = B.concat([bt, rt]);
    }
    var Tt = dt.length, wt = function(Bt, Pt) {
      Bt = pe(Bt, Pt), Bt = Bt.mod(Pt);
      var Dt = B.from(Bt.toArray());
      if (Dt.length < Pt.byteLength()) {
        var Gt = B.alloc(Pt.byteLength() - Dt.length);
        Dt = B.concat([Gt, Dt]);
      }
      return Dt;
    }(dt, ut), Et = B.alloc(Tt);
    Et.fill(1);
    var Rt = B.alloc(Tt);
    return Rt = L(ht, Rt).update(Et).update(B.from([0])).update(rt).update(wt).digest(), Et = L(ht, Rt).update(Et).digest(), { k: Rt = L(ht, Rt).update(Et).update(B.from([1])).update(rt).update(wt).digest(), v: Et = L(ht, Rt).update(Et).digest() };
  }
  function pe(rt, ut) {
    var dt = new re(rt), ht = (rt.length << 3) - ut.bitLength();
    return ht > 0 && dt.ishrn(ht), dt;
  }
  function ce(rt, ut, dt) {
    var ht, bt;
    do {
      for (ht = B.alloc(0); 8 * ht.length < rt.bitLength(); ) ut.v = L(dt, ut.k).update(ut.v).digest(), ht = B.concat([ht, ut.v]);
      bt = pe(ht, rt), ut.k = L(dt, ut.k).update(ut.v).update(B.from([0])).digest(), ut.v = L(dt, ut.k).update(ut.v).digest();
    } while (bt.cmp(rt) !== -1);
    return bt;
  }
  function Oe(rt, ut, dt, ht) {
    return rt.toRed(re.mont(dt)).redPow(ut).fromRed().mod(ht);
  }
  return sign$1.exports = function(rt, ut, dt, ht, bt) {
    var Tt = ne(ut);
    if (Tt.curve) {
      if (ht !== "ecdsa" && ht !== "ecdsa/rsa") throw new Error("wrong private key type");
      return function(Bt, Pt) {
        var Dt = ie[Pt.curve.join(".")];
        if (!Dt) throw new Error("unknown curve " + Pt.curve.join("."));
        var Gt = new J(Dt), at = Gt.keyFromPrivate(Pt.privateKey), lt = at.sign(Bt);
        return B.from(lt.toDER());
      }(rt, Tt);
    }
    if (Tt.type === "dsa") {
      if (ht !== "dsa") throw new Error("wrong private key type");
      return function(Bt, Pt, Dt) {
        for (var Gt, at = Pt.params.priv_key, lt = Pt.params.p, Ce = Pt.params.q, st = Pt.params.g, it = new re(0), nt = pe(Bt, Ce).mod(Ce), ot = !1, ke = oe(at, Ce, Bt, Dt); ot === !1; ) it = Oe(st, Gt = ce(Ce, ke, Dt), lt, Ce), (ot = Gt.invm(Ce).imul(nt.add(at.mul(it))).mod(Ce)).cmpn(0) === 0 && (ot = !1, it = new re(0));
        return function(ct, yt) {
          ct = ct.toArray(), yt = yt.toArray(), 128 & ct[0] && (ct = [0].concat(ct)), 128 & yt[0] && (yt = [0].concat(yt));
          var $t = ct.length + yt.length + 4, gt = [48, $t, 2, ct.length];
          return gt = gt.concat(ct, [2, yt.length], yt), B.from(gt);
        }(it, ot);
      }(rt, Tt, dt);
    }
    if (ht !== "rsa" && ht !== "ecdsa/rsa") throw new Error("wrong private key type");
    if (ut.padding !== void 0 && ut.padding !== 1) throw new Error("illegal or unsupported padding mode");
    rt = B.concat([bt, rt]);
    for (var wt = Tt.modulus.byteLength(), Et = [0, 1]; rt.length + Et.length + 1 < wt; ) Et.push(255);
    Et.push(0);
    for (var Rt = -1; ++Rt < rt.length; ) Et.push(rt[Rt]);
    return V(Et, Tt);
  }, sign$1.exports.getKey = oe, sign$1.exports.makeKey = ce, sign$1.exports;
}
function requireVerify() {
  if (hasRequiredVerify) return verify_1$1;
  hasRequiredVerify = 1;
  var B = safeBufferExports$1.Buffer, L = bnExports, V = requireElliptic().ec, J = parseAsn1, re = require$$4;
  function ne(ie, oe) {
    if (ie.cmpn(0) <= 0) throw new Error("invalid sig");
    if (ie.cmp(oe) >= 0) throw new Error("invalid sig");
  }
  return verify_1$1 = function(ie, oe, pe, ce, Oe) {
    var rt = J(pe);
    if (rt.type === "ec") {
      if (ce !== "ecdsa" && ce !== "ecdsa/rsa") throw new Error("wrong public key type");
      return function(Et, Rt, Bt) {
        var Pt = re[Bt.data.algorithm.curve.join(".")];
        if (!Pt) throw new Error("unknown curve " + Bt.data.algorithm.curve.join("."));
        var Dt = new V(Pt), Gt = Bt.data.subjectPrivateKey.data;
        return Dt.verify(Rt, Et, Gt);
      }(ie, oe, rt);
    }
    if (rt.type === "dsa") {
      if (ce !== "dsa") throw new Error("wrong public key type");
      return function(Et, Rt, Bt) {
        var Pt = Bt.data.p, Dt = Bt.data.q, Gt = Bt.data.g, at = Bt.data.pub_key, lt = J.signature.decode(Et, "der"), Ce = lt.s, st = lt.r;
        ne(Ce, Dt), ne(st, Dt);
        var it = L.mont(Pt), nt = Ce.invm(Dt), ot = Gt.toRed(it).redPow(new L(Rt).mul(nt).mod(Dt)).fromRed().mul(at.toRed(it).redPow(st.mul(nt).mod(Dt)).fromRed()).mod(Pt).mod(Dt);
        return ot.cmp(st) === 0;
      }(ie, oe, rt);
    }
    if (ce !== "rsa" && ce !== "ecdsa/rsa") throw new Error("wrong public key type");
    oe = B.concat([Oe, oe]);
    for (var ut = rt.modulus.byteLength(), dt = [1], ht = 0; oe.length + dt.length + 2 < ut; ) dt.push(255), ht += 1;
    dt.push(0);
    for (var bt = -1; ++bt < oe.length; ) dt.push(oe[bt]);
    dt = B.from(dt);
    var Tt = L.mont(rt.modulus);
    ie = (ie = new L(ie).toRed(Tt)).redPow(new L(rt.publicExponent)), ie = B.from(ie.fromRed().toArray());
    var wt = ht < 8 ? 1 : 0;
    for (ut = Math.min(ie.length, dt.length), ie.length !== dt.length && (wt = 1), bt = -1; ++bt < ut; ) wt |= ie[bt] ^ dt[bt];
    return wt === 0;
  }, verify_1$1;
}
function requireBrowser$1() {
  if (hasRequiredBrowser$1) return browser$3;
  hasRequiredBrowser$1 = 1;
  var B = safeBufferExports$1.Buffer, L = browser$a, V = readableBrowserExports, J = inherits_browserExports, re = requireSign(), ne = requireVerify(), ie = require$$6;
  function oe(rt) {
    V.Writable.call(this);
    var ut = ie[rt];
    if (!ut) throw new Error("Unknown message digest");
    this._hashType = ut.hash, this._hash = L(ut.hash), this._tag = ut.id, this._signType = ut.sign;
  }
  function pe(rt) {
    V.Writable.call(this);
    var ut = ie[rt];
    if (!ut) throw new Error("Unknown message digest");
    this._hash = L(ut.hash), this._tag = ut.id, this._signType = ut.sign;
  }
  function ce(rt) {
    return new oe(rt);
  }
  function Oe(rt) {
    return new pe(rt);
  }
  return Object.keys(ie).forEach(function(rt) {
    ie[rt].id = B.from(ie[rt].id, "hex"), ie[rt.toLowerCase()] = ie[rt];
  }), J(oe, V.Writable), oe.prototype._write = function(rt, ut, dt) {
    this._hash.update(rt), dt();
  }, oe.prototype.update = function(rt, ut) {
    return this._hash.update(typeof rt == "string" ? B.from(rt, ut) : rt), this;
  }, oe.prototype.sign = function(rt, ut) {
    this.end();
    var dt = this._hash.digest(), ht = re(dt, rt, this._hashType, this._signType, this._tag);
    return ut ? ht.toString(ut) : ht;
  }, J(pe, V.Writable), pe.prototype._write = function(rt, ut, dt) {
    this._hash.update(rt), dt();
  }, pe.prototype.update = function(rt, ut) {
    return this._hash.update(typeof rt == "string" ? B.from(rt, ut) : rt), this;
  }, pe.prototype.verify = function(rt, ut, dt) {
    var ht = typeof ut == "string" ? B.from(ut, dt) : ut;
    this.end();
    var bt = this._hash.digest();
    return ne(ht, bt, rt, this._signType, this._tag);
  }, browser$3 = { Sign: ce, Verify: Oe, createSign: ce, createVerify: Oe };
}
function requireBrowser() {
  if (hasRequiredBrowser) return browser$2;
  hasRequiredBrowser = 1;
  var B = requireElliptic(), L = bnExports$1;
  browser$2 = function(ne) {
    return new J(ne);
  };
  var V = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 }, secp384r1: { name: "p384", byteLength: 48 }, secp521r1: { name: "p521", byteLength: 66 } };
  function J(ne) {
    this.curveType = V[ne], this.curveType || (this.curveType = { name: ne }), this.curve = new B.ec(this.curveType.name), this.keys = void 0;
  }
  function re(ne, ie, oe) {
    Array.isArray(ne) || (ne = ne.toArray());
    var pe = new Buffer$D(ne);
    if (oe && pe.length < oe) {
      var ce = new Buffer$D(oe - pe.length);
      ce.fill(0), pe = Buffer$D.concat([ce, pe]);
    }
    return ie ? pe.toString(ie) : pe;
  }
  return V.p224 = V.secp224r1, V.p256 = V.secp256r1 = V.prime256v1, V.p192 = V.secp192r1 = V.prime192v1, V.p384 = V.secp384r1, V.p521 = V.secp521r1, J.prototype.generateKeys = function(ne, ie) {
    return this.keys = this.curve.genKeyPair(), this.getPublicKey(ne, ie);
  }, J.prototype.computeSecret = function(ne, ie, oe) {
    return ie = ie || "utf8", Buffer$D.isBuffer(ne) || (ne = new Buffer$D(ne, ie)), re(this.curve.keyFromPublic(ne).getPublic().mul(this.keys.getPrivate()).getX(), oe, this.curveType.byteLength);
  }, J.prototype.getPublicKey = function(ne, ie) {
    var oe = this.keys.getPublic(ie === "compressed", !0);
    return ie === "hybrid" && (oe[oe.length - 1] % 2 ? oe[0] = 7 : oe[0] = 6), re(oe, ne);
  }, J.prototype.getPrivateKey = function(ne) {
    return re(this.keys.getPrivate(), ne);
  }, J.prototype.setPublicKey = function(ne, ie) {
    return ie = ie || "utf8", Buffer$D.isBuffer(ne) || (ne = new Buffer$D(ne, ie)), this.keys._importPublic(ne), this;
  }, J.prototype.setPrivateKey = function(ne, ie) {
    ie = ie || "utf8", Buffer$D.isBuffer(ne) || (ne = new Buffer$D(ne, ie));
    var oe = new L(ne);
    return oe = oe.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(oe), this;
  }, browser$2;
}
var browser$1 = {}, createHash$2 = browser$a, Buffer$4 = safeBufferExports$1.Buffer, mgf$2 = function(B, L) {
  for (var V, J = Buffer$4.alloc(0), re = 0; J.length < L; ) V = i2ops(re++), J = Buffer$4.concat([J, createHash$2("sha1").update(B).update(V).digest()]);
  return J.slice(0, L);
};
function i2ops(B) {
  var L = Buffer$4.allocUnsafe(4);
  return L.writeUInt32BE(B, 0), L;
}
var xor$2 = function(B, L) {
  for (var V = B.length, J = -1; ++J < V; ) B[J] ^= L[J];
  return B;
}, BN$2 = bnExports$1, Buffer$3 = safeBufferExports$1.Buffer;
function withPublic$2(B, L) {
  return Buffer$3.from(B.toRed(BN$2.mont(L.modulus)).redPow(new BN$2(L.publicExponent)).fromRed().toArray());
}
var withPublic_1 = withPublic$2, parseKeys$1 = parseAsn1, randomBytes$1 = browserExports, createHash$1 = browser$a, mgf$1 = mgf$2, xor$1 = xor$2, BN$1 = bnExports$1, withPublic$1 = withPublic_1, crt$1 = browserifyRsa, Buffer$2 = safeBufferExports$1.Buffer, publicEncrypt = function(B, L, V) {
  var J;
  J = B.padding ? B.padding : V ? 1 : 4;
  var re, ne = parseKeys$1(B);
  if (J === 4) re = oaep$1(ne, L);
  else if (J === 1) re = pkcs1$1(ne, L, V);
  else {
    if (J !== 3) throw new Error("unknown padding");
    if ((re = new BN$1(L)).cmp(ne.modulus) >= 0) throw new Error("data too long for modulus");
  }
  return V ? crt$1(re, ne) : withPublic$1(re, ne);
};
function oaep$1(B, L) {
  var V = B.modulus.byteLength(), J = L.length, re = createHash$1("sha1").update(Buffer$2.alloc(0)).digest(), ne = re.length, ie = 2 * ne;
  if (J > V - ie - 2) throw new Error("message too long");
  var oe = Buffer$2.alloc(V - J - ie - 2), pe = V - ne - 1, ce = randomBytes$1(ne), Oe = xor$1(Buffer$2.concat([re, oe, Buffer$2.alloc(1, 1), L], pe), mgf$1(ce, pe)), rt = xor$1(ce, mgf$1(Oe, ne));
  return new BN$1(Buffer$2.concat([Buffer$2.alloc(1), rt, Oe], V));
}
function pkcs1$1(B, L, V) {
  var J, re = L.length, ne = B.modulus.byteLength();
  if (re > ne - 11) throw new Error("message too long");
  return J = V ? Buffer$2.alloc(ne - re - 3, 255) : nonZero(ne - re - 3), new BN$1(Buffer$2.concat([Buffer$2.from([0, V ? 1 : 2]), J, Buffer$2.alloc(1), L], ne));
}
function nonZero(B) {
  for (var L, V = Buffer$2.allocUnsafe(B), J = 0, re = randomBytes$1(2 * B), ne = 0; J < B; ) ne === re.length && (re = randomBytes$1(2 * B), ne = 0), (L = re[ne++]) && (V[J++] = L);
  return V;
}
var parseKeys = parseAsn1, mgf = mgf$2, xor = xor$2, BN = bnExports$1, crt = browserifyRsa, createHash = browser$a, withPublic = withPublic_1, Buffer$1 = safeBufferExports$1.Buffer, privateDecrypt = function(B, L, V) {
  var J;
  J = B.padding ? B.padding : V ? 1 : 4;
  var re, ne = parseKeys(B), ie = ne.modulus.byteLength();
  if (L.length > ie || new BN(L).cmp(ne.modulus) >= 0) throw new Error("decryption error");
  re = V ? withPublic(new BN(L), ne) : crt(L, ne);
  var oe = Buffer$1.alloc(ie - re.length);
  if (re = Buffer$1.concat([oe, re], ie), J === 4) return oaep(ne, re);
  if (J === 1) return pkcs1(ne, re, V);
  if (J === 3) return re;
  throw new Error("unknown padding");
};
function oaep(B, L) {
  var V = B.modulus.byteLength(), J = createHash("sha1").update(Buffer$1.alloc(0)).digest(), re = J.length;
  if (L[0] !== 0) throw new Error("decryption error");
  var ne = L.slice(1, re + 1), ie = L.slice(re + 1), oe = xor(ne, mgf(ie, re)), pe = xor(ie, mgf(oe, V - re - 1));
  if (compare$1(J, pe.slice(0, re))) throw new Error("decryption error");
  for (var ce = re; pe[ce] === 0; ) ce++;
  if (pe[ce++] !== 1) throw new Error("decryption error");
  return pe.slice(ce);
}
function pkcs1(B, L, V) {
  for (var J = L.slice(0, 2), re = 2, ne = 0; L[re++] !== 0; ) if (re >= L.length) {
    ne++;
    break;
  }
  var ie = L.slice(2, re - 1);
  if ((J.toString("hex") !== "0002" && !V || J.toString("hex") !== "0001" && V) && ne++, ie.length < 8 && ne++, ne) throw new Error("decryption error");
  return L.slice(re);
}
function compare$1(B, L) {
  B = Buffer$1.from(B), L = Buffer$1.from(L);
  var V = 0, J = B.length;
  B.length !== L.length && (V++, J = Math.min(B.length, L.length));
  for (var re = -1; ++re < J; ) V += B[re] ^ L[re];
  return V;
}
(function(B) {
  B.publicEncrypt = publicEncrypt, B.privateDecrypt = privateDecrypt, B.privateEncrypt = function(L, V) {
    return B.publicEncrypt(L, V, !0);
  }, B.publicDecrypt = function(L, V) {
    return B.privateDecrypt(L, V, !0);
  };
})(browser$1);
var browser = {};
function oldBrowser() {
  throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`);
}
var safeBuffer = safeBufferExports$1, randombytes = browserExports, Buffer = safeBuffer.Buffer, kBufferMaxLength = safeBuffer.kMaxLength, crypto$1 = commonjsGlobal.crypto || commonjsGlobal.msCrypto, kMaxUint32 = Math.pow(2, 32) - 1, hasRequiredCryptoBrowserify;
function assertOffset(B, L) {
  if (typeof B != "number" || B != B) throw new TypeError("offset must be a number");
  if (B > kMaxUint32 || B < 0) throw new TypeError("offset must be a uint32");
  if (B > kBufferMaxLength || B > L) throw new RangeError("offset out of range");
}
function assertSize(B, L, V) {
  if (typeof B != "number" || B != B) throw new TypeError("size must be a number");
  if (B > kMaxUint32 || B < 0) throw new TypeError("size must be a uint32");
  if (B + L > V || B > kBufferMaxLength) throw new RangeError("buffer too small");
}
function randomFill(B, L, V, J) {
  if (!(Buffer.isBuffer(B) || B instanceof commonjsGlobal.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
  if (typeof L == "function") J = L, L = 0, V = B.length;
  else if (typeof V == "function") J = V, V = B.length - L;
  else if (typeof J != "function") throw new TypeError('"cb" argument must be a function');
  return assertOffset(L, B.length), assertSize(V, L, B.length), actualFill(B, L, V, J);
}
function actualFill(B, L, V, J) {
  if (process$1.browser) {
    var re = B.buffer, ne = new Uint8Array(re, L, V);
    return crypto$1.getRandomValues(ne), J ? void process$1.nextTick(function() {
      J(null, B);
    }) : B;
  }
  if (!J) return randombytes(V).copy(B, L), B;
  randombytes(V, function(ie, oe) {
    if (ie) return J(ie);
    oe.copy(B, L), J(null, B);
  });
}
function randomFillSync(B, L, V) {
  if (L === void 0 && (L = 0), !(Buffer.isBuffer(B) || B instanceof commonjsGlobal.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
  return assertOffset(L, B.length), V === void 0 && (V = B.length - L), assertSize(V, L, B.length), actualFill(B, L, V);
}
function requireCryptoBrowserify() {
  if (hasRequiredCryptoBrowserify) return cryptoBrowserify;
  hasRequiredCryptoBrowserify = 1, cryptoBrowserify.randomBytes = cryptoBrowserify.rng = cryptoBrowserify.pseudoRandomBytes = cryptoBrowserify.prng = browserExports, cryptoBrowserify.createHash = cryptoBrowserify.Hash = browser$a, cryptoBrowserify.createHmac = cryptoBrowserify.Hmac = browser$8;
  var B = algos, L = Object.keys(B), V = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(L);
  cryptoBrowserify.getHashes = function() {
    return V;
  };
  var J = browser$7;
  cryptoBrowserify.pbkdf2 = J.pbkdf2, cryptoBrowserify.pbkdf2Sync = J.pbkdf2Sync;
  var re = browser$6;
  cryptoBrowserify.Cipher = re.Cipher, cryptoBrowserify.createCipher = re.createCipher, cryptoBrowserify.Cipheriv = re.Cipheriv, cryptoBrowserify.createCipheriv = re.createCipheriv, cryptoBrowserify.Decipher = re.Decipher, cryptoBrowserify.createDecipher = re.createDecipher, cryptoBrowserify.Decipheriv = re.Decipheriv, cryptoBrowserify.createDecipheriv = re.createDecipheriv, cryptoBrowserify.getCiphers = re.getCiphers, cryptoBrowserify.listCiphers = re.listCiphers;
  var ne = requireBrowser$2();
  cryptoBrowserify.DiffieHellmanGroup = ne.DiffieHellmanGroup, cryptoBrowserify.createDiffieHellmanGroup = ne.createDiffieHellmanGroup, cryptoBrowserify.getDiffieHellman = ne.getDiffieHellman, cryptoBrowserify.createDiffieHellman = ne.createDiffieHellman, cryptoBrowserify.DiffieHellman = ne.DiffieHellman;
  var ie = requireBrowser$1();
  cryptoBrowserify.createSign = ie.createSign, cryptoBrowserify.Sign = ie.Sign, cryptoBrowserify.createVerify = ie.createVerify, cryptoBrowserify.Verify = ie.Verify, cryptoBrowserify.createECDH = requireBrowser();
  var oe = browser$1;
  cryptoBrowserify.publicEncrypt = oe.publicEncrypt, cryptoBrowserify.privateEncrypt = oe.privateEncrypt, cryptoBrowserify.publicDecrypt = oe.publicDecrypt, cryptoBrowserify.privateDecrypt = oe.privateDecrypt;
  var pe = browser;
  return cryptoBrowserify.randomFill = pe.randomFill, cryptoBrowserify.randomFillSync = pe.randomFillSync, cryptoBrowserify.createCredentials = function() {
    throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join(`
`));
  }, cryptoBrowserify.constants = { DH_CHECK_P_NOT_SAFE_PRIME: 2, DH_CHECK_P_NOT_PRIME: 1, DH_UNABLE_TO_CHECK_GENERATOR: 4, DH_NOT_SUITABLE_GENERATOR: 8, NPN_ENABLED: 1, ALPN_ENABLED: 1, RSA_PKCS1_PADDING: 1, RSA_SSLV23_PADDING: 2, RSA_NO_PADDING: 3, RSA_PKCS1_OAEP_PADDING: 4, RSA_X931_PADDING: 5, RSA_PKCS1_PSS_PADDING: 6, POINT_CONVERSION_COMPRESSED: 2, POINT_CONVERSION_UNCOMPRESSED: 4, POINT_CONVERSION_HYBRID: 6 }, cryptoBrowserify;
}
crypto$1 && crypto$1.getRandomValues || !process$1.browser ? (browser.randomFill = randomFill, browser.randomFillSync = randomFillSync) : (browser.randomFill = oldBrowser, browser.randomFillSync = oldBrowser), function(B) {
  /*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */
  Object.defineProperty(B, "__esModule", { value: !0 }), B.utils = B.schnorr = B.verify = B.signSync = B.sign = B.getSharedSecret = B.recoverPublicKey = B.getPublicKey = B.Signature = B.Point = B.CURVE = void 0;
  const L = requireCryptoBrowserify(), V = BigInt(0), J = BigInt(1), re = BigInt(2), ne = BigInt(3), ie = BigInt(8), oe = Object.freeze({ a: V, b: BigInt(7), P: BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"), n: BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), h: J, Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"), Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"), beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee") });
  B.CURVE = oe;
  const pe = (Lt, Ot) => (Lt + Ot / re) / Ot, ce = { beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"), splitScalar(Lt) {
    const { n: Ot } = oe, Nt = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), Ut = -J * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), Wt = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), Zt = Nt, jt = BigInt("0x100000000000000000000000000000000"), zt = pe(Zt * Lt, Ot), Xt = pe(-Ut * Lt, Ot);
    let rr = At(Lt - zt * Nt - Xt * Wt, Ot), Qt = At(-zt * Ut - Xt * Zt, Ot);
    const ar = rr > jt, or = Qt > jt;
    if (ar && (rr = Ot - rr), or && (Qt = Ot - Qt), rr > jt || Qt > jt) throw new Error("splitScalarEndo: Endomorphism failed, k=" + Lt);
    return { k1neg: ar, k1: rr, k2neg: or, k2: Qt };
  } }, Oe = 32, rt = 32, ut = Oe + 1, dt = 2 * Oe + 1;
  function ht(Lt) {
    const { a: Ot, b: Nt } = oe, Ut = At(Lt * Lt), Wt = At(Ut * Lt);
    return At(Wt + Ot * Lt + Nt);
  }
  const bt = oe.a === V;
  class Tt extends Error {
    constructor(Ot) {
      super(Ot);
    }
  }
  function wt(Lt) {
    if (!(Lt instanceof Et)) throw new TypeError("JacobianPoint expected");
  }
  class Et {
    constructor(Ot, Nt, Ut) {
      this.x = Ot, this.y = Nt, this.z = Ut;
    }
    static fromAffine(Ot) {
      if (!(Ot instanceof Pt)) throw new TypeError("JacobianPoint#fromAffine: expected Point");
      return Ot.equals(Pt.ZERO) ? Et.ZERO : new Et(Ot.x, Ot.y, J);
    }
    static toAffineBatch(Ot) {
      const Nt = function(Ut, Wt = oe.P) {
        const Zt = new Array(Ut.length), jt = Ut.reduce((Xt, rr, Qt) => rr === V ? Xt : (Zt[Qt] = Xt, At(Xt * rr, Wt)), J), zt = St(jt, Wt);
        return Ut.reduceRight((Xt, rr, Qt) => rr === V ? Xt : (Zt[Qt] = At(Xt * Zt[Qt], Wt), At(Xt * rr, Wt)), zt), Zt;
      }(Ot.map((Ut) => Ut.z));
      return Ot.map((Ut, Wt) => Ut.toAffine(Nt[Wt]));
    }
    static normalizeZ(Ot) {
      return Et.toAffineBatch(Ot).map(Et.fromAffine);
    }
    equals(Ot) {
      wt(Ot);
      const { x: Nt, y: Ut, z: Wt } = this, { x: Zt, y: jt, z: zt } = Ot, Xt = At(Wt * Wt), rr = At(zt * zt), Qt = At(Nt * rr), ar = At(Zt * Xt), or = At(At(Ut * zt) * rr), nr = At(At(jt * Wt) * Xt);
      return Qt === ar && or === nr;
    }
    negate() {
      return new Et(this.x, At(-this.y), this.z);
    }
    double() {
      const { x: Ot, y: Nt, z: Ut } = this, Wt = At(Ot * Ot), Zt = At(Nt * Nt), jt = At(Zt * Zt), zt = Ot + Zt, Xt = At(re * (At(zt * zt) - Wt - jt)), rr = At(ne * Wt), Qt = At(rr * rr), ar = At(Qt - re * Xt), or = At(rr * (Xt - ar) - ie * jt), nr = At(re * Nt * Ut);
      return new Et(ar, or, nr);
    }
    add(Ot) {
      wt(Ot);
      const { x: Nt, y: Ut, z: Wt } = this, { x: Zt, y: jt, z: zt } = Ot;
      if (Zt === V || jt === V) return this;
      if (Nt === V || Ut === V) return Ot;
      const Xt = At(Wt * Wt), rr = At(zt * zt), Qt = At(Nt * rr), ar = At(Zt * Xt), or = At(At(Ut * zt) * rr), nr = At(At(jt * Wt) * Xt), yr = At(ar - Qt), vr = At(nr - or);
      if (yr === V) return vr === V ? this.double() : Et.ZERO;
      const fr = At(yr * yr), gr = At(yr * fr), Er = At(Qt * fr), br = At(vr * vr - gr - re * Er), $r = At(vr * (Er - br) - or * gr), Ar = At(Wt * zt * yr);
      return new Et(br, $r, Ar);
    }
    subtract(Ot) {
      return this.add(Ot.negate());
    }
    multiplyUnsafe(Ot) {
      const Nt = Et.ZERO;
      if (typeof Ot == "bigint" && Ot === V) return Nt;
      let Ut = xt(Ot);
      if (Ut === J) return this;
      if (!bt) {
        let ar = Nt, or = this;
        for (; Ut > V; ) Ut & J && (ar = ar.add(or)), or = or.double(), Ut >>= J;
        return ar;
      }
      let { k1neg: Wt, k1: Zt, k2neg: jt, k2: zt } = ce.splitScalar(Ut), Xt = Nt, rr = Nt, Qt = this;
      for (; Zt > V || zt > V; ) Zt & J && (Xt = Xt.add(Qt)), zt & J && (rr = rr.add(Qt)), Qt = Qt.double(), Zt >>= J, zt >>= J;
      return Wt && (Xt = Xt.negate()), jt && (rr = rr.negate()), rr = new Et(At(rr.x * ce.beta), rr.y, rr.z), Xt.add(rr);
    }
    precomputeWindow(Ot) {
      const Nt = bt ? 128 / Ot + 1 : 256 / Ot + 1, Ut = [];
      let Wt = this, Zt = Wt;
      for (let jt = 0; jt < Nt; jt++) {
        Zt = Wt, Ut.push(Zt);
        for (let zt = 1; zt < 2 ** (Ot - 1); zt++) Zt = Zt.add(Wt), Ut.push(Zt);
        Wt = Zt.double();
      }
      return Ut;
    }
    wNAF(Ot, Nt) {
      !Nt && this.equals(Et.BASE) && (Nt = Pt.BASE);
      const Ut = Nt && Nt._WINDOW_SIZE || 1;
      if (256 % Ut) throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");
      let Wt = Nt && Bt.get(Nt);
      Wt || (Wt = this.precomputeWindow(Ut), Nt && Ut !== 1 && (Wt = Et.normalizeZ(Wt), Bt.set(Nt, Wt)));
      let Zt = Et.ZERO, jt = Et.BASE;
      const zt = 1 + (bt ? 128 / Ut : 256 / Ut), Xt = 2 ** (Ut - 1), rr = BigInt(2 ** Ut - 1), Qt = 2 ** Ut, ar = BigInt(Ut);
      for (let or = 0; or < zt; or++) {
        const nr = or * Xt;
        let yr = Number(Ot & rr);
        Ot >>= ar, yr > Xt && (yr -= Qt, Ot += J);
        const vr = nr, fr = nr + Math.abs(yr) - 1, gr = or % 2 != 0, Er = yr < 0;
        yr === 0 ? jt = jt.add(Rt(gr, Wt[vr])) : Zt = Zt.add(Rt(Er, Wt[fr]));
      }
      return { p: Zt, f: jt };
    }
    multiply(Ot, Nt) {
      let Ut, Wt, Zt = xt(Ot);
      if (bt) {
        const { k1neg: jt, k1: zt, k2neg: Xt, k2: rr } = ce.splitScalar(Zt);
        let { p: Qt, f: ar } = this.wNAF(zt, Nt), { p: or, f: nr } = this.wNAF(rr, Nt);
        Qt = Rt(jt, Qt), or = Rt(Xt, or), or = new Et(At(or.x * ce.beta), or.y, or.z), Ut = Qt.add(or), Wt = ar.add(nr);
      } else {
        const { p: jt, f: zt } = this.wNAF(Zt, Nt);
        Ut = jt, Wt = zt;
      }
      return Et.normalizeZ([Ut, Wt])[0];
    }
    toAffine(Ot) {
      const { x: Nt, y: Ut, z: Wt } = this, Zt = this.equals(Et.ZERO);
      Ot == null && (Ot = Zt ? ie : St(Wt));
      const jt = Ot, zt = At(jt * jt), Xt = At(zt * jt), rr = At(Nt * zt), Qt = At(Ut * Xt), ar = At(Wt * jt);
      if (Zt) return Pt.ZERO;
      if (ar !== J) throw new Error("invZ was invalid");
      return new Pt(rr, Qt);
    }
  }
  function Rt(Lt, Ot) {
    const Nt = Ot.negate();
    return Lt ? Nt : Ot;
  }
  Et.BASE = new Et(oe.Gx, oe.Gy, J), Et.ZERO = new Et(V, J, V);
  const Bt = /* @__PURE__ */ new WeakMap();
  class Pt {
    constructor(Ot, Nt) {
      this.x = Ot, this.y = Nt;
    }
    _setWindowSize(Ot) {
      this._WINDOW_SIZE = Ot, Bt.delete(this);
    }
    hasEvenY() {
      return this.y % re === V;
    }
    static fromCompressedHex(Ot) {
      const Nt = Ot.length === 32, Ut = $t(Nt ? Ot : Ot.subarray(1));
      if (!er(Ut)) throw new Error("Point is not on curve");
      let Wt = function(zt) {
        const { P: Xt } = oe, rr = BigInt(6), Qt = BigInt(11), ar = BigInt(22), or = BigInt(23), nr = BigInt(44), yr = BigInt(88), vr = zt * zt * zt % Xt, fr = vr * vr * zt % Xt, gr = mt(fr, ne) * fr % Xt, Er = mt(gr, ne) * fr % Xt, br = mt(Er, re) * vr % Xt, $r = mt(br, Qt) * br % Xt, Ar = mt($r, ar) * $r % Xt, Br = mt(Ar, nr) * Ar % Xt, Mr = mt(Br, yr) * Br % Xt, Or = mt(Mr, nr) * Ar % Xt, xr = mt(Or, ne) * fr % Xt, Nr = mt(xr, or) * $r % Xt, Cr = mt(Nr, rr) * vr % Xt, Rr = mt(Cr, re);
        if (Rr * Rr % Xt !== zt) throw new Error("Cannot find square root");
        return Rr;
      }(ht(Ut));
      const Zt = (Wt & J) === J;
      Nt ? Zt && (Wt = At(-Wt)) : !(1 & ~Ot[0]) !== Zt && (Wt = At(-Wt));
      const jt = new Pt(Ut, Wt);
      return jt.assertValidity(), jt;
    }
    static fromUncompressedHex(Ot) {
      const Nt = $t(Ot.subarray(1, Oe + 1)), Ut = $t(Ot.subarray(Oe + 1, 2 * Oe + 1)), Wt = new Pt(Nt, Ut);
      return Wt.assertValidity(), Wt;
    }
    static fromHex(Ot) {
      const Nt = gt(Ot), Ut = Nt.length, Wt = Nt[0];
      if (Ut === Oe) return this.fromCompressedHex(Nt);
      if (Ut === ut && (Wt === 2 || Wt === 3)) return this.fromCompressedHex(Nt);
      if (Ut === dt && Wt === 4) return this.fromUncompressedHex(Nt);
      throw new Error(`Point.fromHex: received invalid point. Expected 32-${ut} compressed bytes or ${dt} uncompressed bytes, not ${Ut}`);
    }
    static fromPrivateKey(Ot) {
      return Pt.BASE.multiply(Jt(Ot));
    }
    static fromSignature(Ot, Nt, Ut) {
      const { r: Wt, s: Zt } = pr(Nt);
      if (![0, 1, 2, 3].includes(Ut)) throw new Error("Cannot recover: invalid recovery bit");
      const jt = Mt(gt(Ot)), { n: zt } = oe, Xt = Ut === 2 || Ut === 3 ? Wt + zt : Wt, rr = St(Xt, zt), Qt = At(-jt * rr, zt), ar = At(Zt * rr, zt), or = 1 & Ut ? "03" : "02", nr = Pt.fromHex(or + nt(Xt)), yr = Pt.BASE.multiplyAndAddUnsafe(nr, Qt, ar);
      if (!yr) throw new Error("Cannot recover signature: point at infinify");
      return yr.assertValidity(), yr;
    }
    toRawBytes(Ot = !1) {
      return yt(this.toHex(Ot));
    }
    toHex(Ot = !1) {
      const Nt = nt(this.x);
      return Ot ? `${this.hasEvenY() ? "02" : "03"}${Nt}` : `04${Nt}${nt(this.y)}`;
    }
    toHexX() {
      return this.toHex(!0).slice(2);
    }
    toRawX() {
      return this.toRawBytes(!0).slice(1);
    }
    assertValidity() {
      const Ot = "Point is not on elliptic curve", { x: Nt, y: Ut } = this;
      if (!er(Nt) || !er(Ut)) throw new Error(Ot);
      const Wt = At(Ut * Ut);
      if (At(Wt - ht(Nt)) !== V) throw new Error(Ot);
    }
    equals(Ot) {
      return this.x === Ot.x && this.y === Ot.y;
    }
    negate() {
      return new Pt(this.x, At(-this.y));
    }
    double() {
      return Et.fromAffine(this).double().toAffine();
    }
    add(Ot) {
      return Et.fromAffine(this).add(Et.fromAffine(Ot)).toAffine();
    }
    subtract(Ot) {
      return this.add(Ot.negate());
    }
    multiply(Ot) {
      return Et.fromAffine(this).multiply(Ot, this).toAffine();
    }
    multiplyAndAddUnsafe(Ot, Nt, Ut) {
      const Wt = Et.fromAffine(this), Zt = Nt === V || Nt === J || this !== Pt.BASE ? Wt.multiplyUnsafe(Nt) : Wt.multiply(Nt), jt = Et.fromAffine(Ot).multiplyUnsafe(Ut), zt = Zt.add(jt);
      return zt.equals(Et.ZERO) ? void 0 : zt.toAffine();
    }
  }
  function Dt(Lt) {
    return Number.parseInt(Lt[0], 16) >= 8 ? "00" + Lt : Lt;
  }
  function Gt(Lt) {
    if (Lt.length < 2 || Lt[0] !== 2) throw new Error(`Invalid signature integer tag: ${st(Lt)}`);
    const Ot = Lt[1], Nt = Lt.subarray(2, Ot + 2);
    if (!Ot || Nt.length !== Ot) throw new Error("Invalid signature integer: wrong length");
    if (Nt[0] === 0 && Nt[1] <= 127) throw new Error("Invalid signature integer: trailing length");
    return { data: $t(Nt), left: Lt.subarray(Ot + 2) };
  }
  B.Point = Pt, Pt.BASE = new Pt(oe.Gx, oe.Gy), Pt.ZERO = new Pt(V, V);
  class at {
    constructor(Ot, Nt) {
      this.r = Ot, this.s = Nt, this.assertValidity();
    }
    static fromCompact(Ot) {
      const Nt = Ot instanceof Uint8Array, Ut = "Signature.fromCompact";
      if (typeof Ot != "string" && !Nt) throw new TypeError(`${Ut}: Expected string or Uint8Array`);
      const Wt = Nt ? st(Ot) : Ot;
      if (Wt.length !== 128) throw new Error(`${Ut}: Expected 64-byte hex`);
      return new at(ct(Wt.slice(0, 64)), ct(Wt.slice(64, 128)));
    }
    static fromDER(Ot) {
      const Nt = Ot instanceof Uint8Array;
      if (typeof Ot != "string" && !Nt) throw new TypeError("Signature.fromDER: Expected string or Uint8Array");
      const { r: Ut, s: Wt } = function(Zt) {
        if (Zt.length < 2 || Zt[0] != 48) throw new Error(`Invalid signature tag: ${st(Zt)}`);
        if (Zt[1] !== Zt.length - 2) throw new Error("Invalid signature: incorrect length");
        const { data: jt, left: zt } = Gt(Zt.subarray(2)), { data: Xt, left: rr } = Gt(zt);
        if (rr.length) throw new Error(`Invalid signature: left bytes after parsing: ${st(rr)}`);
        return { r: jt, s: Xt };
      }(Nt ? Ot : yt(Ot));
      return new at(Ut, Wt);
    }
    static fromHex(Ot) {
      return this.fromDER(Ot);
    }
    assertValidity() {
      const { r: Ot, s: Nt } = this;
      if (!qt(Ot)) throw new Error("Invalid Signature: r must be 0 < r < n");
      if (!qt(Nt)) throw new Error("Invalid Signature: s must be 0 < s < n");
    }
    hasHighS() {
      const Ot = oe.n >> J;
      return this.s > Ot;
    }
    normalizeS() {
      return this.hasHighS() ? new at(this.r, At(-this.s, oe.n)) : this;
    }
    toDERRawBytes() {
      return yt(this.toDERHex());
    }
    toDERHex() {
      const Ot = Dt(ke(this.s)), Nt = Dt(ke(this.r)), Ut = Ot.length / 2, Wt = Nt.length / 2, Zt = ke(Ut), jt = ke(Wt);
      return `30${ke(Wt + Ut + 4)}02${jt}${Nt}02${Zt}${Ot}`;
    }
    toRawBytes() {
      return this.toDERRawBytes();
    }
    toHex() {
      return this.toDERHex();
    }
    toCompactRawBytes() {
      return yt(this.toCompactHex());
    }
    toCompactHex() {
      return nt(this.r) + nt(this.s);
    }
  }
  function lt(...Lt) {
    if (!Lt.every((Ut) => Ut instanceof Uint8Array)) throw new Error("Uint8Array list expected");
    if (Lt.length === 1) return Lt[0];
    const Ot = Lt.reduce((Ut, Wt) => Ut + Wt.length, 0), Nt = new Uint8Array(Ot);
    for (let Ut = 0, Wt = 0; Ut < Lt.length; Ut++) {
      const Zt = Lt[Ut];
      Nt.set(Zt, Wt), Wt += Zt.length;
    }
    return Nt;
  }
  B.Signature = at;
  const Ce = Array.from({ length: 256 }, (Lt, Ot) => Ot.toString(16).padStart(2, "0"));
  function st(Lt) {
    if (!(Lt instanceof Uint8Array)) throw new Error("Expected Uint8Array");
    let Ot = "";
    for (let Nt = 0; Nt < Lt.length; Nt++) Ot += Ce[Lt[Nt]];
    return Ot;
  }
  const it = BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");
  function nt(Lt) {
    if (typeof Lt != "bigint") throw new Error("Expected bigint");
    if (!(V <= Lt && Lt < it)) throw new Error("Expected number 0 <= n < 2^256");
    return Lt.toString(16).padStart(64, "0");
  }
  function ot(Lt) {
    const Ot = yt(nt(Lt));
    if (Ot.length !== 32) throw new Error("Error: expected 32 bytes");
    return Ot;
  }
  function ke(Lt) {
    const Ot = Lt.toString(16);
    return 1 & Ot.length ? `0${Ot}` : Ot;
  }
  function ct(Lt) {
    if (typeof Lt != "string") throw new TypeError("hexToNumber: expected string, got " + typeof Lt);
    return BigInt(`0x${Lt}`);
  }
  function yt(Lt) {
    if (typeof Lt != "string") throw new TypeError("hexToBytes: expected string, got " + typeof Lt);
    if (Lt.length % 2) throw new Error("hexToBytes: received invalid unpadded hex" + Lt.length);
    const Ot = new Uint8Array(Lt.length / 2);
    for (let Nt = 0; Nt < Ot.length; Nt++) {
      const Ut = 2 * Nt, Wt = Lt.slice(Ut, Ut + 2), Zt = Number.parseInt(Wt, 16);
      if (Number.isNaN(Zt) || Zt < 0) throw new Error("Invalid byte sequence");
      Ot[Nt] = Zt;
    }
    return Ot;
  }
  function $t(Lt) {
    return ct(st(Lt));
  }
  function gt(Lt) {
    return Lt instanceof Uint8Array ? Uint8Array.from(Lt) : yt(Lt);
  }
  function xt(Lt) {
    if (typeof Lt == "number" && Number.isSafeInteger(Lt) && Lt > 0) return BigInt(Lt);
    if (typeof Lt == "bigint" && qt(Lt)) return Lt;
    throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n");
  }
  function At(Lt, Ot = oe.P) {
    const Nt = Lt % Ot;
    return Nt >= V ? Nt : Ot + Nt;
  }
  function mt(Lt, Ot) {
    const { P: Nt } = oe;
    let Ut = Lt;
    for (; Ot-- > V; ) Ut *= Ut, Ut %= Nt;
    return Ut;
  }
  function St(Lt, Ot = oe.P) {
    if (Lt === V || Ot <= V) throw new Error(`invert: expected positive integers, got n=${Lt} mod=${Ot}`);
    let Nt = At(Lt, Ot), Ut = Ot, Wt = V, Zt = J;
    for (; Nt !== V; ) {
      const jt = Ut % Nt, zt = Wt - Zt * (Ut / Nt);
      Ut = Nt, Nt = jt, Wt = Zt, Zt = zt;
    }
    if (Ut !== J) throw new Error("invert: does not exist");
    return At(Wt, Ot);
  }
  function Mt(Lt, Ot = !1) {
    const Nt = function(Wt) {
      const Zt = 8 * Wt.length - 8 * rt, jt = $t(Wt);
      return Zt > 0 ? jt >> BigInt(Zt) : jt;
    }(Lt);
    if (Ot) return Nt;
    const { n: Ut } = oe;
    return Nt >= Ut ? Nt - Ut : Nt;
  }
  let It, Ft;
  class Vt {
    constructor(Ot, Nt) {
      if (this.hashLen = Ot, this.qByteLen = Nt, typeof Ot != "number" || Ot < 2) throw new Error("hashLen must be a number");
      if (typeof Nt != "number" || Nt < 2) throw new Error("qByteLen must be a number");
      this.v = new Uint8Array(Ot).fill(1), this.k = new Uint8Array(Ot).fill(0), this.counter = 0;
    }
    hmac(...Ot) {
      return B.utils.hmacSha256(this.k, ...Ot);
    }
    hmacSync(...Ot) {
      return Ft(this.k, ...Ot);
    }
    checkSync() {
      if (typeof Ft != "function") throw new Tt("hmacSha256Sync needs to be set");
    }
    incr() {
      if (this.counter >= 1e3) throw new Error("Tried 1,000 k values for sign(), all were invalid");
      this.counter += 1;
    }
    async reseed(Ot = new Uint8Array()) {
      this.k = await this.hmac(this.v, Uint8Array.from([0]), Ot), this.v = await this.hmac(this.v), Ot.length !== 0 && (this.k = await this.hmac(this.v, Uint8Array.from([1]), Ot), this.v = await this.hmac(this.v));
    }
    reseedSync(Ot = new Uint8Array()) {
      this.checkSync(), this.k = this.hmacSync(this.v, Uint8Array.from([0]), Ot), this.v = this.hmacSync(this.v), Ot.length !== 0 && (this.k = this.hmacSync(this.v, Uint8Array.from([1]), Ot), this.v = this.hmacSync(this.v));
    }
    async generate() {
      this.incr();
      let Ot = 0;
      const Nt = [];
      for (; Ot < this.qByteLen; ) {
        this.v = await this.hmac(this.v);
        const Ut = this.v.slice();
        Nt.push(Ut), Ot += this.v.length;
      }
      return lt(...Nt);
    }
    generateSync() {
      this.checkSync(), this.incr();
      let Ot = 0;
      const Nt = [];
      for (; Ot < this.qByteLen; ) {
        this.v = this.hmacSync(this.v);
        const Ut = this.v.slice();
        Nt.push(Ut), Ot += this.v.length;
      }
      return lt(...Nt);
    }
  }
  function qt(Lt) {
    return V < Lt && Lt < oe.n;
  }
  function er(Lt) {
    return V < Lt && Lt < oe.P;
  }
  function tr(Lt, Ot, Nt, Ut = !0) {
    const { n: Wt } = oe, Zt = Mt(Lt, !0);
    if (!qt(Zt)) return;
    const jt = St(Zt, Wt), zt = Pt.BASE.multiply(Zt), Xt = At(zt.x, Wt);
    if (Xt === V) return;
    const rr = At(jt * At(Ot + Nt * Xt, Wt), Wt);
    if (rr === V) return;
    let Qt = new at(Xt, rr), ar = (zt.x === Qt.r ? 0 : 2) | Number(zt.y & J);
    return Ut && Qt.hasHighS() && (Qt = Qt.normalizeS(), ar ^= 1), { sig: Qt, recovery: ar };
  }
  function Jt(Lt) {
    let Ot;
    if (typeof Lt == "bigint") Ot = Lt;
    else if (typeof Lt == "number" && Number.isSafeInteger(Lt) && Lt > 0) Ot = BigInt(Lt);
    else if (typeof Lt == "string") {
      if (Lt.length !== 2 * rt) throw new Error("Expected 32 bytes of private key");
      Ot = ct(Lt);
    } else {
      if (!(Lt instanceof Uint8Array)) throw new TypeError("Expected valid private key");
      if (Lt.length !== rt) throw new Error("Expected 32 bytes of private key");
      Ot = $t(Lt);
    }
    if (!qt(Ot)) throw new Error("Expected private key: 0 < key < n");
    return Ot;
  }
  function ur(Lt) {
    return Lt instanceof Pt ? (Lt.assertValidity(), Lt) : Pt.fromHex(Lt);
  }
  function pr(Lt) {
    if (Lt instanceof at) return Lt.assertValidity(), Lt;
    try {
      return at.fromDER(Lt);
    } catch {
      return at.fromCompact(Lt);
    }
  }
  function dr(Lt) {
    const Ot = Lt instanceof Uint8Array, Nt = typeof Lt == "string", Ut = (Ot || Nt) && Lt.length;
    return Ot ? Ut === ut || Ut === dt : Nt ? Ut === 2 * ut || Ut === 2 * dt : Lt instanceof Pt;
  }
  function Pr(Lt) {
    return $t(Lt.length > Oe ? Lt.slice(0, Oe) : Lt);
  }
  function Sr(Lt) {
    const Ot = Pr(Lt), Nt = At(Ot, oe.n);
    return lr(Nt < V ? Ot : Nt);
  }
  function lr(Lt) {
    return ot(Lt);
  }
  function kr(Lt, Ot, Nt) {
    if (Lt == null) throw new Error(`sign: expected valid message hash, not "${Lt}"`);
    const Ut = gt(Lt), Wt = Jt(Ot), Zt = [lr(Wt), Sr(Ut)];
    if (Nt != null) {
      Nt === !0 && (Nt = B.utils.randomBytes(Oe));
      const jt = gt(Nt);
      if (jt.length !== Oe) throw new Error(`sign: Expected ${Oe} bytes of extra data`);
      Zt.push(jt);
    }
    return { seed: lt(...Zt), m: Pr(Ut), d: Wt };
  }
  function pt(Lt, Ot) {
    const { sig: Nt, recovery: Ut } = Lt, { der: Wt, recovered: Zt } = Object.assign({ canonical: !0, der: !0 }, Ot), jt = Wt ? Nt.toDERRawBytes() : Nt.toCompactRawBytes();
    return Zt ? [jt, Ut] : jt;
  }
  B.getPublicKey = function(Lt, Ot = !1) {
    return Pt.fromPrivateKey(Lt).toRawBytes(Ot);
  }, B.recoverPublicKey = function(Lt, Ot, Nt, Ut = !1) {
    return Pt.fromSignature(Lt, Ot, Nt).toRawBytes(Ut);
  }, B.getSharedSecret = function(Lt, Ot, Nt = !1) {
    if (dr(Lt)) throw new TypeError("getSharedSecret: first arg must be private key");
    if (!dr(Ot)) throw new TypeError("getSharedSecret: second arg must be public key");
    const Ut = ur(Ot);
    return Ut.assertValidity(), Ut.multiply(Jt(Lt)).toRawBytes(Nt);
  }, B.sign = async function(Lt, Ot, Nt = {}) {
    const { seed: Ut, m: Wt, d: Zt } = kr(Lt, Ot, Nt.extraEntropy), jt = new Vt(32, rt);
    let zt;
    for (await jt.reseed(Ut); !(zt = tr(await jt.generate(), Wt, Zt, Nt.canonical)); ) await jt.reseed();
    return pt(zt, Nt);
  }, B.signSync = function(Lt, Ot, Nt = {}) {
    const { seed: Ut, m: Wt, d: Zt } = kr(Lt, Ot, Nt.extraEntropy), jt = new Vt(32, rt);
    let zt;
    for (jt.reseedSync(Ut); !(zt = tr(jt.generateSync(), Wt, Zt, Nt.canonical)); ) jt.reseedSync();
    return pt(zt, Nt);
  };
  const vt = { strict: !0 };
  function kt(Lt) {
    return At($t(Lt), oe.n);
  }
  B.verify = function(Lt, Ot, Nt, Ut = vt) {
    let Wt;
    try {
      Wt = pr(Lt), Ot = gt(Ot);
    } catch {
      return !1;
    }
    const { r: Zt, s: jt } = Wt;
    if (Ut.strict && Wt.hasHighS()) return !1;
    const zt = Mt(Ot);
    let Xt;
    try {
      Xt = ur(Nt);
    } catch {
      return !1;
    }
    const { n: rr } = oe, Qt = St(jt, rr), ar = At(zt * Qt, rr), or = At(Zt * Qt, rr), nr = Pt.BASE.multiplyAndAddUnsafe(Xt, ar, or);
    return !!nr && At(nr.x, rr) === Zt;
  };
  class Ct {
    constructor(Ot, Nt) {
      this.r = Ot, this.s = Nt, this.assertValidity();
    }
    static fromHex(Ot) {
      const Nt = gt(Ot);
      if (Nt.length !== 64) throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${Nt.length}`);
      const Ut = $t(Nt.subarray(0, 32)), Wt = $t(Nt.subarray(32, 64));
      return new Ct(Ut, Wt);
    }
    assertValidity() {
      const { r: Ot, s: Nt } = this;
      if (!er(Ot) || !qt(Nt)) throw new Error("Invalid signature");
    }
    toHex() {
      return nt(this.r) + nt(this.s);
    }
    toRawBytes() {
      return yt(this.toHex());
    }
  }
  class Ht {
    constructor(Ot, Nt, Ut = B.utils.randomBytes()) {
      if (Ot == null) throw new TypeError(`sign: Expected valid message, not "${Ot}"`);
      this.m = gt(Ot);
      const { x: Wt, scalar: Zt } = this.getScalar(Jt(Nt));
      if (this.px = Wt, this.d = Zt, this.rand = gt(Ut), this.rand.length !== 32) throw new TypeError("sign: Expected 32 bytes of aux randomness");
    }
    getScalar(Ot) {
      const Nt = Pt.fromPrivateKey(Ot), Ut = Nt.hasEvenY() ? Ot : oe.n - Ot;
      return { point: Nt, scalar: Ut, x: Nt.toRawX() };
    }
    initNonce(Ot, Nt) {
      return ot(Ot ^ $t(Nt));
    }
    finalizeNonce(Ot) {
      const Nt = At($t(Ot), oe.n);
      if (Nt === V) throw new Error("sign: Creation of signature failed. k is zero");
      const { point: Ut, x: Wt, scalar: Zt } = this.getScalar(Nt);
      return { R: Ut, rx: Wt, k: Zt };
    }
    finalizeSig(Ot, Nt, Ut, Wt) {
      return new Ct(Ot.x, At(Nt + Ut * Wt, oe.n)).toRawBytes();
    }
    error() {
      throw new Error("sign: Invalid signature produced");
    }
    async calc() {
      const { m: Ot, d: Nt, px: Ut, rand: Wt } = this, Zt = B.utils.taggedHash, jt = this.initNonce(Nt, await Zt(cr.aux, Wt)), { R: zt, rx: Xt, k: rr } = this.finalizeNonce(await Zt(cr.nonce, jt, Ut, Ot)), Qt = kt(await Zt(cr.challenge, Xt, Ut, Ot)), ar = this.finalizeSig(zt, rr, Qt, Nt);
      return await ir(ar, Ot, Ut) || this.error(), ar;
    }
    calcSync() {
      const { m: Ot, d: Nt, px: Ut, rand: Wt } = this, Zt = B.utils.taggedHashSync, jt = this.initNonce(Nt, Zt(cr.aux, Wt)), { R: zt, rx: Xt, k: rr } = this.finalizeNonce(Zt(cr.nonce, jt, Ut, Ot)), Qt = kt(Zt(cr.challenge, Xt, Ut, Ot)), ar = this.finalizeSig(zt, rr, Qt, Nt);
      return wr(ar, Ot, Ut) || this.error(), ar;
    }
  }
  function Kt(Lt, Ot, Nt) {
    const Ut = Lt instanceof Ct, Wt = Ut ? Lt : Ct.fromHex(Lt);
    return Ut && Wt.assertValidity(), { ...Wt, m: gt(Ot), P: ur(Nt) };
  }
  function Yt(Lt, Ot, Nt, Ut) {
    const Wt = Pt.BASE.multiplyAndAddUnsafe(Ot, Jt(Nt), At(-Ut, oe.n));
    return !(!Wt || !Wt.hasEvenY() || Wt.x !== Lt);
  }
  async function ir(Lt, Ot, Nt) {
    try {
      const { r: Ut, s: Wt, m: Zt, P: jt } = Kt(Lt, Ot, Nt), zt = kt(await B.utils.taggedHash(cr.challenge, ot(Ut), jt.toRawX(), Zt));
      return Yt(Ut, jt, Wt, zt);
    } catch {
      return !1;
    }
  }
  function wr(Lt, Ot, Nt) {
    try {
      const { r: Ut, s: Wt, m: Zt, P: jt } = Kt(Lt, Ot, Nt), zt = kt(B.utils.taggedHashSync(cr.challenge, ot(Ut), jt.toRawX(), Zt));
      return Yt(Ut, jt, Wt, zt);
    } catch (Ut) {
      if (Ut instanceof Tt) throw Ut;
      return !1;
    }
  }
  B.schnorr = { Signature: Ct, getPublicKey: function(Lt) {
    return Pt.fromPrivateKey(Lt).toRawX();
  }, sign: async function(Lt, Ot, Nt) {
    return new Ht(Lt, Ot, Nt).calc();
  }, verify: ir, signSync: function(Lt, Ot, Nt) {
    return new Ht(Lt, Ot, Nt).calcSync();
  }, verifySync: wr }, Pt.BASE._setWindowSize(8);
  const _r = { node: L, web: typeof self == "object" && "crypto" in self ? self.crypto : void 0 }, cr = { challenge: "BIP0340/challenge", aux: "BIP0340/aux", nonce: "BIP0340/nonce" }, Tr = {};
  B.utils = { bytesToHex: st, hexToBytes: yt, concatBytes: lt, mod: At, invert: St, isValidPrivateKey(Lt) {
    try {
      return Jt(Lt), !0;
    } catch {
      return !1;
    }
  }, _bigintTo32Bytes: ot, _normalizePrivateKey: Jt, hashToPrivateKey: (Lt) => {
    Lt = gt(Lt);
    const Ot = rt + 8;
    if (Lt.length < Ot || Lt.length > 1024) throw new Error("Expected valid bytes of private key as per FIPS 186");
    return ot(At($t(Lt), oe.n - J) + J);
  }, randomBytes: (Lt = 32) => {
    if (_r.web) return _r.web.getRandomValues(new Uint8Array(Lt));
    if (_r.node) {
      const { randomBytes: Ot } = _r.node;
      return Uint8Array.from(Ot(Lt));
    }
    throw new Error("The environment doesn't have randomBytes function");
  }, randomPrivateKey: () => B.utils.hashToPrivateKey(B.utils.randomBytes(rt + 8)), precompute(Lt = 8, Ot = Pt.BASE) {
    const Nt = Ot === Pt.BASE ? Ot : new Pt(Ot.x, Ot.y);
    return Nt._setWindowSize(Lt), Nt.multiply(ne), Nt;
  }, sha256: async (...Lt) => {
    if (_r.web) {
      const Ot = await _r.web.subtle.digest("SHA-256", lt(...Lt));
      return new Uint8Array(Ot);
    }
    if (_r.node) {
      const { createHash: Ot } = _r.node, Nt = Ot("sha256");
      return Lt.forEach((Ut) => Nt.update(Ut)), Uint8Array.from(Nt.digest());
    }
    throw new Error("The environment doesn't have sha256 function");
  }, hmacSha256: async (Lt, ...Ot) => {
    if (_r.web) {
      const Nt = await _r.web.subtle.importKey("raw", Lt, { name: "HMAC", hash: { name: "SHA-256" } }, !1, ["sign"]), Ut = lt(...Ot), Wt = await _r.web.subtle.sign("HMAC", Nt, Ut);
      return new Uint8Array(Wt);
    }
    if (_r.node) {
      const { createHmac: Nt } = _r.node, Ut = Nt("sha256", Lt);
      return Ot.forEach((Wt) => Ut.update(Wt)), Uint8Array.from(Ut.digest());
    }
    throw new Error("The environment doesn't have hmac-sha256 function");
  }, sha256Sync: void 0, hmacSha256Sync: void 0, taggedHash: async (Lt, ...Ot) => {
    let Nt = Tr[Lt];
    if (Nt === void 0) {
      const Ut = await B.utils.sha256(Uint8Array.from(Lt, (Wt) => Wt.charCodeAt(0)));
      Nt = lt(Ut, Ut), Tr[Lt] = Nt;
    }
    return B.utils.sha256(Nt, ...Ot);
  }, taggedHashSync: (Lt, ...Ot) => {
    if (typeof It != "function") throw new Tt("sha256Sync is undefined, you need to set it");
    let Nt = Tr[Lt];
    if (Nt === void 0) {
      const Ut = It(Uint8Array.from(Lt, (Wt) => Wt.charCodeAt(0)));
      Nt = lt(Ut, Ut), Tr[Lt] = Nt;
    }
    return It(Nt, ...Ot);
  }, _JacobianPoint: Et }, Object.defineProperties(B.utils, { sha256Sync: { configurable: !1, get: () => It, set(Lt) {
    It || (It = Lt);
  } }, hmacSha256Sync: { configurable: !1, get: () => Ft, set(Lt) {
    Ft || (Ft = Lt);
  } } });
}(lib$1);
var necc = lib$1, hmac = hmac$2, sha256$1 = sha256$5;
function _interopNamespaceDefault(B) {
  var L = /* @__PURE__ */ Object.create(null);
  return B && Object.keys(B).forEach(function(V) {
    if (V !== "default") {
      var J = Object.getOwnPropertyDescriptor(B, V);
      Object.defineProperty(L, V, J.get ? J : { enumerable: !0, get: function() {
        return B[V];
      } });
    }
  }), L.default = B, Object.freeze(L);
}
var necc__namespace = _interopNamespaceDefault(necc);
const THROW_BAD_PRIVATE = "Expected Private", THROW_BAD_POINT = "Expected Point", THROW_BAD_TWEAK = "Expected Tweak", THROW_BAD_HASH = "Expected Hash", THROW_BAD_SIGNATURE = "Expected Signature", THROW_BAD_EXTRA_DATA = "Expected Extra Data (32 bytes)", THROW_BAD_SCALAR = "Expected Scalar", THROW_BAD_RECOVERY_ID = "Bad Recovery Id";
necc__namespace.utils.hmacSha256Sync = (B, ...L) => hmac.hmac(sha256$1.sha256, B, necc__namespace.utils.concatBytes(...L)), necc__namespace.utils.sha256Sync = (...B) => sha256$1.sha256(necc__namespace.utils.concatBytes(...B));
const normalizePrivateKey = necc__namespace.utils._normalizePrivateKey, HASH_SIZE = 32, TWEAK_SIZE = 32, BN32_N = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 65]), EXTRA_DATA_SIZE = 32, BN32_ZERO = new Uint8Array(32), BN32_P_MINUS_N = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 69, 81, 35, 25, 80, 183, 95, 196, 64, 45, 161, 114, 47, 201, 186, 238]);
function isUint8Array(B) {
  return B instanceof Uint8Array;
}
function cmpBN32(B, L) {
  for (let V = 0; V < 32; ++V) if (B[V] !== L[V]) return B[V] < L[V] ? -1 : 1;
  return 0;
}
function isZero(B) {
  return cmpBN32(B, BN32_ZERO) === 0;
}
function isTweak(B) {
  return B instanceof Uint8Array && B.length === TWEAK_SIZE && !(cmpBN32(B, BN32_N) >= 0);
}
function isSignature(B) {
  return B instanceof Uint8Array && B.length === 64 && cmpBN32(B.subarray(0, 32), BN32_N) < 0 && cmpBN32(B.subarray(32, 64), BN32_N) < 0;
}
function isSigrLessThanPMinusN(B) {
  return isUint8Array(B) && B.length === 64 && cmpBN32(B.subarray(0, 32), BN32_P_MINUS_N) < 0;
}
function isSignatureNonzeroRS(B) {
  return !(isZero(B.subarray(0, 32)) || isZero(B.subarray(32, 64)));
}
function isHash(B) {
  return B instanceof Uint8Array && B.length === HASH_SIZE;
}
function isExtraData(B) {
  return B === void 0 || B instanceof Uint8Array && B.length === EXTRA_DATA_SIZE;
}
function hexToNumber(B) {
  if (typeof B != "string") throw new TypeError("hexToNumber: expected string, got " + typeof B);
  return BigInt(`0x${B}`);
}
function bytesToNumber(B) {
  return hexToNumber(necc__namespace.utils.bytesToHex(B));
}
function normalizeScalar(B) {
  let L;
  if (typeof B == "bigint") L = B;
  else if (typeof B == "number" && Number.isSafeInteger(B) && B >= 0) L = BigInt(B);
  else if (typeof B == "string") {
    if (B.length !== 64) throw new Error("Expected 32 bytes of private scalar");
    L = hexToNumber(B);
  } else {
    if (!(B instanceof Uint8Array)) throw new TypeError("Expected valid private scalar");
    if (B.length !== 32) throw new Error("Expected 32 bytes of private scalar");
    L = bytesToNumber(B);
  }
  if (L < 0) throw new Error("Expected private scalar >= 0");
  return L;
}
const _privateAdd = (B, L) => {
  const V = normalizePrivateKey(B), J = normalizeScalar(L), re = necc__namespace.utils._bigintTo32Bytes(necc__namespace.utils.mod(V + J, necc__namespace.CURVE.n));
  return necc__namespace.utils.isValidPrivateKey(re) ? re : null;
}, _privateSub = (B, L) => {
  const V = normalizePrivateKey(B), J = normalizeScalar(L), re = necc__namespace.utils._bigintTo32Bytes(necc__namespace.utils.mod(V - J, necc__namespace.CURVE.n));
  return necc__namespace.utils.isValidPrivateKey(re) ? re : null;
}, _privateNegate = (B) => {
  const L = normalizePrivateKey(B), V = necc__namespace.utils._bigintTo32Bytes(necc__namespace.CURVE.n - L);
  return necc__namespace.utils.isValidPrivateKey(V) ? V : null;
}, _pointAddScalar = (B, L, V) => {
  const J = necc__namespace.Point.fromHex(B), re = normalizeScalar(L), ne = necc__namespace.Point.BASE.multiplyAndAddUnsafe(J, re, BigInt(1));
  if (!ne) throw new Error("Tweaked point at infinity");
  return ne.toRawBytes(V);
}, _pointMultiply = (B, L, V) => {
  const J = necc__namespace.Point.fromHex(B), re = typeof L == "string" ? L : necc__namespace.utils.bytesToHex(L), ne = BigInt(`0x${re}`);
  return J.multiply(ne).toRawBytes(V);
};
function assumeCompression(B, L) {
  return B === void 0 ? L === void 0 || isPointCompressed(L) : !!B;
}
function throwToNull(B) {
  try {
    return B();
  } catch {
    return null;
  }
}
function _isPoint(B, L) {
  if (B.length === 32 !== L) return !1;
  try {
    return !!necc__namespace.Point.fromHex(B);
  } catch {
    return !1;
  }
}
function isPoint(B) {
  return _isPoint(B, !1);
}
function isPointCompressed(B) {
  return _isPoint(B, !1) && B.length === 33;
}
function isPrivate(B) {
  return necc__namespace.utils.isValidPrivateKey(B);
}
function isXOnlyPoint(B) {
  return _isPoint(B, !0);
}
function xOnlyPointAddTweak(B, L) {
  if (!isXOnlyPoint(B)) throw new Error(THROW_BAD_POINT);
  if (!isTweak(L)) throw new Error(THROW_BAD_TWEAK);
  return throwToNull(() => {
    const V = _pointAddScalar(B, L, !0);
    return { parity: V[0] % 2 == 1 ? 1 : 0, xOnlyPubkey: V.slice(1) };
  });
}
function xOnlyPointFromPoint(B) {
  if (!isPoint(B)) throw new Error(THROW_BAD_POINT);
  return B.slice(1, 33);
}
function pointFromScalar(B, L) {
  if (!isPrivate(B)) throw new Error(THROW_BAD_PRIVATE);
  return throwToNull(() => necc__namespace.getPublicKey(B, assumeCompression(L)));
}
function xOnlyPointFromScalar(B) {
  if (!isPrivate(B)) throw new Error(THROW_BAD_PRIVATE);
  return xOnlyPointFromPoint(pointFromScalar(B));
}
function pointCompress(B, L) {
  if (!isPoint(B)) throw new Error(THROW_BAD_POINT);
  return necc__namespace.Point.fromHex(B).toRawBytes(assumeCompression(L, B));
}
function pointMultiply(B, L, V) {
  if (!isPoint(B)) throw new Error(THROW_BAD_POINT);
  if (!isTweak(L)) throw new Error(THROW_BAD_TWEAK);
  return throwToNull(() => _pointMultiply(B, L, assumeCompression(V, B)));
}
function pointAdd(B, L, V) {
  if (!isPoint(B) || !isPoint(L)) throw new Error(THROW_BAD_POINT);
  return throwToNull(() => {
    const J = necc__namespace.Point.fromHex(B), re = necc__namespace.Point.fromHex(L);
    return J.equals(re.negate()) ? null : J.add(re).toRawBytes(assumeCompression(V, B));
  });
}
function pointAddScalar(B, L, V) {
  if (!isPoint(B)) throw new Error(THROW_BAD_POINT);
  if (!isTweak(L)) throw new Error(THROW_BAD_TWEAK);
  return throwToNull(() => _pointAddScalar(B, L, assumeCompression(V, B)));
}
function privateAdd(B, L) {
  if (isPrivate(B) === !1) throw new Error(THROW_BAD_PRIVATE);
  if (isTweak(L) === !1) throw new Error(THROW_BAD_TWEAK);
  return throwToNull(() => _privateAdd(B, L));
}
function privateSub(B, L) {
  if (isPrivate(B) === !1) throw new Error(THROW_BAD_PRIVATE);
  if (isTweak(L) === !1) throw new Error(THROW_BAD_TWEAK);
  return throwToNull(() => _privateSub(B, L));
}
function privateNegate(B) {
  if (isPrivate(B) === !1) throw new Error(THROW_BAD_PRIVATE);
  return _privateNegate(B);
}
function sign(B, L, V) {
  if (!isPrivate(L)) throw new Error(THROW_BAD_PRIVATE);
  if (!isHash(B)) throw new Error(THROW_BAD_SCALAR);
  if (!isExtraData(V)) throw new Error(THROW_BAD_EXTRA_DATA);
  return necc__namespace.signSync(B, L, { der: !1, extraEntropy: V });
}
function signRecoverable(B, L, V) {
  if (!isPrivate(L)) throw new Error(THROW_BAD_PRIVATE);
  if (!isHash(B)) throw new Error(THROW_BAD_SCALAR);
  if (!isExtraData(V)) throw new Error(THROW_BAD_EXTRA_DATA);
  const [J, re] = necc__namespace.signSync(B, L, { der: !1, extraEntropy: V, recovered: !0 });
  return { signature: J, recoveryId: re };
}
function signSchnorr(B, L, V = Buffer$D.alloc(32, 0)) {
  if (!isPrivate(L)) throw new Error(THROW_BAD_PRIVATE);
  if (!isHash(B)) throw new Error(THROW_BAD_SCALAR);
  if (!isExtraData(V)) throw new Error(THROW_BAD_EXTRA_DATA);
  return necc__namespace.schnorr.signSync(B, L, V);
}
function recover(B, L, V, J) {
  if (!isHash(B)) throw new Error(THROW_BAD_HASH);
  if (!isSignature(L) || !isSignatureNonzeroRS(L)) throw new Error(THROW_BAD_SIGNATURE);
  if (2 & V && !isSigrLessThanPMinusN(L)) throw new Error(THROW_BAD_RECOVERY_ID);
  if (!isXOnlyPoint(L.subarray(0, 32))) throw new Error(THROW_BAD_SIGNATURE);
  return necc__namespace.recoverPublicKey(B, L, V, assumeCompression(J));
}
function verify(B, L, V, J) {
  if (!isPoint(L)) throw new Error(THROW_BAD_POINT);
  if (!isSignature(V)) throw new Error(THROW_BAD_SIGNATURE);
  if (!isHash(B)) throw new Error(THROW_BAD_SCALAR);
  return necc__namespace.verify(V, B, L, { strict: J });
}
function verifySchnorr(B, L, V) {
  if (!isXOnlyPoint(L)) throw new Error(THROW_BAD_POINT);
  if (!isSignature(V)) throw new Error(THROW_BAD_SIGNATURE);
  if (!isHash(B)) throw new Error(THROW_BAD_SCALAR);
  return necc__namespace.schnorr.verifySync(V, B, L);
}
var isPoint_1 = dist.isPoint = isPoint, isPointCompressed_1 = dist.isPointCompressed = isPointCompressed, isPrivate_1 = dist.isPrivate = isPrivate, isXOnlyPoint_1 = dist.isXOnlyPoint = isXOnlyPoint, pointAdd_1 = dist.pointAdd = pointAdd, pointAddScalar_1 = dist.pointAddScalar = pointAddScalar, pointCompress_1 = dist.pointCompress = pointCompress, pointFromScalar_1 = dist.pointFromScalar = pointFromScalar, pointMultiply_1 = dist.pointMultiply = pointMultiply, privateAdd_1 = dist.privateAdd = privateAdd, privateNegate_1 = dist.privateNegate = privateNegate, privateSub_1 = dist.privateSub = privateSub, recover_1 = dist.recover = recover, sign_1 = dist.sign = sign, signRecoverable_1 = dist.signRecoverable = signRecoverable, signSchnorr_1 = dist.signSchnorr = signSchnorr, verify_1 = dist.verify = verify, verifySchnorr_1 = dist.verifySchnorr = verifySchnorr, xOnlyPointAddTweak_1 = dist.xOnlyPointAddTweak = xOnlyPointAddTweak, xOnlyPointFromPoint_1 = dist.xOnlyPointFromPoint = xOnlyPointFromPoint, xOnlyPointFromScalar_1 = dist.xOnlyPointFromScalar = xOnlyPointFromScalar;
const ecc = _mergeNamespaces({ __proto__: null, default: dist, isPoint: isPoint_1, isPointCompressed: isPointCompressed_1, isPrivate: isPrivate_1, isXOnlyPoint: isXOnlyPoint_1, pointAdd: pointAdd_1, pointAddScalar: pointAddScalar_1, pointCompress: pointCompress_1, pointFromScalar: pointFromScalar_1, pointMultiply: pointMultiply_1, privateAdd: privateAdd_1, privateNegate: privateNegate_1, privateSub: privateSub_1, recover: recover_1, sign: sign_1, signRecoverable: signRecoverable_1, signSchnorr: signSchnorr_1, verify: verify_1, verifySchnorr: verifySchnorr_1, xOnlyPointAddTweak: xOnlyPointAddTweak_1, xOnlyPointFromPoint: xOnlyPointFromPoint_1, xOnlyPointFromScalar: xOnlyPointFromScalar_1 }, [dist]), MINIMUM_AMOUNT_IN_SATS = 600, MAXIMUM_FEE = 5e6, INSTANT_BUY_SELLER_INPUT_INDEX = 2, BIP32 = src$2.BIP32Factory(ecc), CHAIN_CODE = Buffer$D.alloc(32, 1);
class BrowserWalletExtractTxFromNonFinalizedPsbtError extends Error {
  constructor(L = "Cannot extract transaction from non-finalized psbt.") {
    super(L), this.name = "BrowserWalletExtractTxFromNonFinalizedPsbtError";
  }
}
class BrowserWalletNetworkMismatchError extends Error {
  constructor(L) {
    super(L), this.name = "BrowserWalletNetworkMismatchError";
  }
}
class BrowserWalletNotInstalledError extends Error {
  constructor(L) {
    super(L), this.name = "BrowserWalletNotInstalledError";
  }
}
class BrowserWalletRequestCancelledByUserError extends Error {
  constructor(L = "Request canceled by user.") {
    super(L), this.name = "BrowserWalletRequestCancelledByUserError";
  }
}
class BrowserWalletSigningError extends Error {
  constructor(L) {
    super(L), this.name = "BrowserWalletSigningError";
  }
}
class OrditSDKError extends Error {
  constructor(L) {
    super(L), this.name = "OrditSDKError";
  }
}
var src = {}, ecpair = {}, networks$1 = {};
Object.defineProperty(networks$1, "__esModule", { value: !0 }), networks$1.testnet = networks$1.bitcoin = void 0, networks$1.bitcoin = { messagePrefix: `Bitcoin Signed Message:
`, bech32: "bc", bip32: { public: 76067358, private: 76066276 }, pubKeyHash: 0, scriptHash: 5, wif: 128 }, networks$1.testnet = { messagePrefix: `Bitcoin Signed Message:
`, bech32: "tb", bip32: { public: 70617039, private: 70615956 }, pubKeyHash: 111, scriptHash: 196, wif: 239 };
var types$1 = {};
(function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.maybe = B.Boolean = B.Array = B.Buffer256bit = B.Network = B.typeforce = void 0, B.typeforce = typeforce_1, B.Network = B.typeforce.compile({ messagePrefix: B.typeforce.oneOf(B.typeforce.Buffer, B.typeforce.String), bip32: { public: B.typeforce.UInt32, private: B.typeforce.UInt32 }, pubKeyHash: B.typeforce.UInt8, scriptHash: B.typeforce.UInt8, wif: B.typeforce.UInt8 }), B.Buffer256bit = B.typeforce.BufferN(32), B.Array = B.typeforce.Array, B.Boolean = B.typeforce.Boolean, B.maybe = B.typeforce.maybe;
})(types$1);
var testecc = {};
Object.defineProperty(testecc, "__esModule", { value: !0 }), testecc.testEcc = void 0;
const h = (B) => Buffer$D.from(B, "hex");
function testEcc(B) {
  assert(B.isPoint(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert(!B.isPoint(h("030000000000000000000000000000000000000000000000000000000000000005"))), assert(B.isPrivate(h("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert(B.isPrivate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))), assert(!B.isPrivate(h("0000000000000000000000000000000000000000000000000000000000000000"))), assert(!B.isPrivate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"))), assert(!B.isPrivate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364142"))), assert(Buffer$D.from(B.privateAdd(h("0000000000000000000000000000000000000000000000000000000000000001"), h("0000000000000000000000000000000000000000000000000000000000000000"))).equals(h("0000000000000000000000000000000000000000000000000000000000000001"))), assert(B.privateAdd(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e"), h("0000000000000000000000000000000000000000000000000000000000000003")) === null), assert(Buffer$D.from(B.privateAdd(h("e211078564db65c3ce7704f08262b1f38f1ef412ad15b5ac2d76657a63b2c500"), h("b51fbb69051255d1becbd683de5848242a89c229348dd72896a87ada94ae8665"))).equals(h("9730c2ee69edbb958d42db7460bafa18fef9d955325aec99044c81c8282b0a24"))), assert(Buffer$D.from(B.privateNegate(h("0000000000000000000000000000000000000000000000000000000000000001"))).equals(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))), assert(Buffer$D.from(B.privateNegate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e"))).equals(h("0000000000000000000000000000000000000000000000000000000000000003"))), assert(Buffer$D.from(B.privateNegate(h("b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af"))).equals(h("4eede1bf775995d70a494f0a7bb6bc11e0b8cccd41cce8009ab1132c8b0a3792"))), assert(Buffer$D.from(B.pointCompress(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"), !0)).equals(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert(Buffer$D.from(B.pointCompress(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"), !1)).equals(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"))), assert(Buffer$D.from(B.pointCompress(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), !0)).equals(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))), assert(Buffer$D.from(B.pointCompress(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), !1)).equals(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"))), assert(Buffer$D.from(B.pointFromScalar(h("b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af"))).equals(h("02b07ba9dca9523b7ef4bd97703d43d20399eb698e194704791a25ce77a400df99"))), assert(B.xOnlyPointAddTweak(h("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140")) === null);
  let L = B.xOnlyPointAddTweak(h("1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b"), h("a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac"));
  assert(Buffer$D.from(L.xOnlyPubkey).equals(h("e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf")) && L.parity === 1), L = B.xOnlyPointAddTweak(h("2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991"), h("823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47")), assert(Buffer$D.from(L.xOnlyPubkey).equals(h("9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c")) && L.parity === 0), assert(Buffer$D.from(B.sign(h("5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed"), h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))).equals(h("54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5"))), assert(B.verify(h("5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed"), h("0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"), h("54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5"))), B.signSchnorr && assert(Buffer$D.from(B.signSchnorr(h("7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c"), h("c90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b14e5c9"), h("c87aa53824b4d7ae2eb035a2b5bbbccc080e76cdc6d1692c4b0b62d798e6d906"))).equals(h("5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7"))), B.verifySchnorr && assert(B.verifySchnorr(h("7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c"), h("dd308afec5777e13121fa72b9cc1b7cc0139715309b086c960e18fd969774eb8"), h("5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7")));
}
function assert(B) {
  if (!B) throw new Error("ecc library invalid");
}
testecc.testEcc = testEcc, Object.defineProperty(ecpair, "__esModule", { value: !0 }), ecpair.ECPairFactory = ecpair.networks = void 0;
const networks = networks$1;
ecpair.networks = networks;
const types = types$1, randomBytes = browserExports, wif = wif$2, testecc_1 = testecc, isOptions = types.typeforce.maybe(types.typeforce.compile({ compressed: types.maybe(types.Boolean), network: types.maybe(types.Network) })), toXOnly$1 = (B) => B.length === 32 ? B : B.slice(1, 33);
function ECPairFactory(B) {
  function L(re, ne) {
    if (types.typeforce(types.Buffer256bit, re), !B.isPrivate(re)) throw new TypeError("Private key not in range [1, n)");
    return types.typeforce(isOptions, ne), new J(re, void 0, ne);
  }
  function V(re, ne) {
    return types.typeforce(B.isPoint, re), types.typeforce(isOptions, ne), new J(void 0, re, ne);
  }
  (0, testecc_1.testEcc)(B);
  class J {
    constructor(ne, ie, oe) {
      Ir(this, "__D");
      Ir(this, "__Q");
      Ir(this, "compressed");
      Ir(this, "network");
      Ir(this, "lowR");
      this.__D = ne, this.__Q = ie, this.lowR = !1, oe === void 0 && (oe = {}), this.compressed = oe.compressed === void 0 || oe.compressed, this.network = oe.network || networks.bitcoin, ie !== void 0 && (this.__Q = Buffer$D.from(B.pointCompress(ie, this.compressed)));
    }
    get privateKey() {
      return this.__D;
    }
    get publicKey() {
      if (!this.__Q) {
        const ne = B.pointFromScalar(this.__D, this.compressed);
        this.__Q = Buffer$D.from(ne);
      }
      return this.__Q;
    }
    toWIF() {
      if (!this.__D) throw new Error("Missing private key");
      return wif.encode(this.network.wif, this.__D, this.compressed);
    }
    tweak(ne) {
      return this.privateKey ? this.tweakFromPrivateKey(ne) : this.tweakFromPublicKey(ne);
    }
    sign(ne, ie) {
      if (!this.__D) throw new Error("Missing private key");
      if (ie === void 0 && (ie = this.lowR), ie === !1) return Buffer$D.from(B.sign(ne, this.__D));
      {
        let oe = B.sign(ne, this.__D);
        const pe = Buffer$D.alloc(32, 0);
        let ce = 0;
        for (; oe[0] > 127; ) ce++, pe.writeUIntLE(ce, 0, 6), oe = B.sign(ne, this.__D, pe);
        return Buffer$D.from(oe);
      }
    }
    signSchnorr(ne) {
      if (!this.privateKey) throw new Error("Missing private key");
      if (!B.signSchnorr) throw new Error("signSchnorr not supported by ecc library");
      return Buffer$D.from(B.signSchnorr(ne, this.privateKey));
    }
    verify(ne, ie) {
      return B.verify(ne, this.publicKey, ie);
    }
    verifySchnorr(ne, ie) {
      if (!B.verifySchnorr) throw new Error("verifySchnorr not supported by ecc library");
      return B.verifySchnorr(ne, this.publicKey.subarray(1, 33), ie);
    }
    tweakFromPublicKey(ne) {
      const ie = toXOnly$1(this.publicKey), oe = B.xOnlyPointAddTweak(ie, ne);
      if (!oe || oe.xOnlyPubkey === null) throw new Error("Cannot tweak public key!");
      const pe = Buffer$D.from([oe.parity === 0 ? 2 : 3]);
      return V(Buffer$D.concat([pe, oe.xOnlyPubkey]), { network: this.network, compressed: this.compressed });
    }
    tweakFromPrivateKey(ne) {
      const ie = this.publicKey[0] === 3 || this.publicKey[0] === 4 && !(1 & ~this.publicKey[64]) ? B.privateNegate(this.privateKey) : this.privateKey, oe = B.privateAdd(ie, ne);
      if (!oe) throw new Error("Invalid tweaked private key!");
      return L(Buffer$D.from(oe), { network: this.network, compressed: this.compressed });
    }
  }
  return { isPoint: function(re) {
    return B.isPoint(re);
  }, fromPrivateKey: L, fromPublicKey: V, fromWIF: function(re, ne) {
    const ie = wif.decode(re), oe = ie.version;
    if (types.Array(ne)) {
      if (ne = ne.filter((pe) => oe === pe.wif).pop(), !ne) throw new Error("Unknown network version");
    } else if (ne = ne || networks.bitcoin, oe !== ne.wif) throw new Error("Invalid network version");
    return L(ie.privateKey, { compressed: ie.compressed, network: ne });
  }, makeRandom: function(re) {
    types.typeforce(isOptions, re), re === void 0 && (re = {});
    const ne = re.rng || randomBytes;
    let ie;
    do
      ie = ne(32), types.typeforce(types.Buffer256bit, ie);
    while (!B.isPrivate(ie));
    return L(ie, re);
  } };
}
function invert(B) {
  return Object.fromEntries(Object.entries(B).map(([L, V]) => [V, L]));
}
ecpair.ECPairFactory = ECPairFactory, function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.networks = B.ECPairFactory = B.default = void 0;
  var L = ecpair;
  Object.defineProperty(B, "default", { enumerable: !0, get: function() {
    return L.ECPairFactory;
  } }), Object.defineProperty(B, "ECPairFactory", { enumerable: !0, get: function() {
    return L.ECPairFactory;
  } }), Object.defineProperty(B, "networks", { enumerable: !0, get: function() {
    return L.networks;
  } });
}(src);
const ADDRESS_TYPE_TO_FORMAT = { p2pkh: "legacy", p2sh: "p2sh-p2wpkh", p2wsh: "p2wsh", p2wpkh: "segwit", p2tr: "taproot" }, ADDRESS_FORMAT_TO_TYPE = invert(ADDRESS_TYPE_TO_FORMAT);
function getNetwork(B) {
  return B === "mainnet" ? src$4.networks.bitcoin : B === "signet" ? src$4.networks.testnet : src$4.networks[B];
}
function createPayment(B, L, V, J) {
  src$4.initEccLib(ecc);
  const re = typeof V == "string" ? getNetwork(V) : V;
  return L === "p2tr" ? src$4.payments.p2tr({ internalPubkey: B, network: re, ...J }) : L === "p2sh" ? src$4.payments.p2sh({ redeem: src$4.payments.p2wpkh({ pubkey: B, network: re }), network: re }) : src$4.payments[L]({ pubkey: B, network: re });
}
function toXOnly(B) {
  return B.subarray(1, 33);
}
const isObject$1 = (B) => (B == null ? void 0 : B.constructor) === Object, isString$1 = (B) => B instanceof String || typeof B == "string";
function encodeDecodeObject(B, { encode: L, depth: V = 0 }) {
  if (V > 5) throw new OrditSDKError("Object too deep");
  for (const J in B) {
    if (!B.hasOwnProperty(J)) continue;
    const re = B[J];
    isObject$1(re) ? B[J] = encodeDecodeObject(re, { encode: L, depth: V + 1 }) : isString$1(re) && (B[J] = L ? encodeURIComponent(re) : decodeURIComponent(re));
  }
  return B;
}
function UNSTABLE_decodeObject(B) {
  return encodeDecodeObject(B, { encode: !1 });
}
function convertSatoshisToBTC(B) {
  return B / 10 ** 8;
}
function generateTxUniqueIdentifier(B, L) {
  return `${B}:${L}`;
}
function outpointToIdFormat(B) {
  return B.includes(":") ? B.replace(":", "i") : B.includes("i") ? B : `${B}i0`;
}
function isPaymentFactory(B, L) {
  return (V) => {
    try {
      return B({ output: V, network: getNetwork(L) });
    } catch {
      return !1;
    }
  };
}
const isP2PKH = (B, L) => ({ type: "p2pkh", payload: isPaymentFactory(src$4.payments.p2pkh, L)(B) }), isP2WPKH = (B, L) => ({ type: "p2wpkh", payload: isPaymentFactory(src$4.payments.p2wpkh, L)(B) }), isP2SHScript = (B, L) => ({ type: "p2sh", payload: isPaymentFactory(src$4.payments.p2sh, L)(B) }), isP2TR = (B, L) => ({ type: "p2tr", payload: isPaymentFactory(src$4.payments.p2tr, L)(B) });
function getScriptType(B, L) {
  const V = isP2PKH(B, L);
  if (V.payload) return { format: ADDRESS_TYPE_TO_FORMAT.p2pkh, ...V };
  const J = isP2WPKH(B, L);
  if (J.payload) return { format: ADDRESS_TYPE_TO_FORMAT.p2wpkh, ...J };
  const re = isP2SHScript(B, L);
  if (re.payload) return { format: ADDRESS_TYPE_TO_FORMAT.p2sh, ...re };
  const ne = isP2TR(B, L);
  if (ne.payload) return { format: ADDRESS_TYPE_TO_FORMAT.p2tr, ...ne };
  throw new OrditSDKError("Unsupported input");
}
function getAddressFormatForRegTest(B) {
  try {
    const { type: L, network: V, bech32: J } = z(B);
    if (!J && V !== "testnet" || J && V !== "regtest") throw new Error("Invalid address");
    return ADDRESS_TYPE_TO_FORMAT[L];
  } catch {
    throw new OrditSDKError("Invalid address");
  }
}
function getAddressFormat(B, L) {
  if (L === "regtest") return getAddressFormatForRegTest(B);
  if (!O(B, L === "signet" ? "testnet" : L)) throw new OrditSDKError("Invalid address");
  const { type: V } = z(B);
  return ADDRESS_TYPE_TO_FORMAT[V];
}
function getTaprootAddressFromBip32PublicKey(B, L) {
  const V = B.subarray(1, 33), { address: J } = createPayment(V, "p2tr", L);
  return { address: J, format: ADDRESS_TYPE_TO_FORMAT.p2tr, publicKey: B.toString("hex"), xKey: V.toString("hex") };
}
function getAddressFromBip32PublicKey(B, L, V) {
  if (V === "p2tr") return getTaprootAddressFromBip32PublicKey(B, L);
  const { address: J } = createPayment(B, V, L);
  return { address: J, format: ADDRESS_TYPE_TO_FORMAT[V], publicKey: B.toString("hex") };
}
function getAddressesFromPublicKey(B, L = "mainnet", V = "all") {
  const J = Buffer$D.isBuffer(B) ? B : Buffer$D.from(B, "hex"), { publicKey: re } = BIP32.fromPublicKey(J, CHAIN_CODE, getNetwork(L));
  return V === "all" ? Object.keys(ADDRESS_TYPE_TO_FORMAT).filter((ne) => ne !== "p2wsh").map((ne) => getAddressFromBip32PublicKey(re, L, ne)) : [getAddressFromBip32PublicKey(re, L, V)];
}
function getNetworkByAddress(B) {
  try {
    const { network: L } = z(B);
    return L;
  } catch {
    throw new OrditSDKError("Invalid address");
  }
}
var LeatherAddressType = ((B) => (B.P2WPKH = "p2wpkh", B.P2TR = "p2tr", B))(LeatherAddressType || {});
async function leatherRequest$1(B, L) {
  try {
    return (await window.LeatherProvider.request(B, L)).result;
  } catch (V) {
    const J = V, { message: re } = J.error;
    throw J.error.code === 4001 ? new BrowserWalletRequestCancelledByUserError(re) : new OrditSDKError(`Leather error: ${re}`);
  }
}
function isInstalled$4() {
  if (typeof window > "u") throw new OrditSDKError("Cannot call this function outside a browser");
  return window.LeatherProvider !== void 0;
}
async function getAddresses$3(B = "mainnet") {
  if (!isInstalled$4()) throw new BrowserWalletNotInstalledError("Leather not installed");
  const L = (await leatherRequest$1("getAddresses", { network: B })).addresses.filter((J) => J.type === LeatherAddressType.P2TR || J.type === LeatherAddressType.P2WPKH), V = getNetworkByAddress(L[0].address);
  if (B !== "signet" && V !== B || B === "signet" && V !== "testnet") throw new BrowserWalletNetworkMismatchError("Leather network mismatch, please switch it manually");
  return L.map((J) => ({ publicKey: J.publicKey, address: J.address, format: ADDRESS_TYPE_TO_FORMAT[J.type] }));
}
async function signMessage$6(B, { network: L = "mainnet", paymentType: V }) {
  if (!isInstalled$4()) throw new BrowserWalletNotInstalledError("Leather not installed");
  const { signature: J } = await leatherRequest$1("signMessage", { message: B, paymentType: V, network: L });
  return { base64: J, hex: Buffer$D.from(J, "base64").toString("hex") };
}
async function signPsbt$5(B, { finalize: L = !0, extractTx: V = !0, allowedSighash: J, accountNumber: re, network: ne = "mainnet", signAtIndexes: ie = [] } = {}) {
  if (!isInstalled$4()) throw new BrowserWalletNotInstalledError("Leather not installed");
  if (V && !L) throw new BrowserWalletExtractTxFromNonFinalizedPsbtError();
  const oe = B.toHex(), pe = await leatherRequest$1("signPsbt", { hex: oe, allowedSighash: J, account: re, network: ne, signAtIndex: ie, broadcast: !1 }), ce = src$4.Psbt.fromHex(pe.hex);
  if (L && ie.forEach((Oe) => {
    try {
      ce.finalizeInput(Oe);
    } catch (rt) {
      throw console.error("Sign psbt error", rt), new OrditSDKError("Failed to finalize input");
    }
  }), V) try {
    return { base64: null, hex: ce.extractTransaction().toHex() };
  } catch (Oe) {
    throw Oe instanceof Error && Oe.message === "Not finalized" ? new BrowserWalletExtractTxFromNonFinalizedPsbtError() : new OrditSDKError("Failed to extract transaction from PSBT");
  }
  return { base64: ce.toBase64(), hex: ce.toHex() };
}
var __classPrivateFieldGet = function(B, L, V, J) {
  if (V === "a" && !J) throw new TypeError("Private accessor was defined without a getter");
  if (typeof L == "function" ? B !== L || !J : !L.has(B)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return V === "m" ? J : V === "a" ? J.call(B) : J ? J.value : L.get(B);
}, __classPrivateFieldSet = function(B, L, V, J, re) {
  if (J === "m") throw new TypeError("Private method is not writable");
  if (J === "a" && !re) throw new TypeError("Private accessor was defined without a setter");
  if (typeof L == "function" ? B !== L || !re : !L.has(B)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return J === "a" ? re.call(B, V) : re ? re.value = V : L.set(B, V), V;
}, _AppReadyEvent_detail;
let wallets;
const registeredWalletsSet = /* @__PURE__ */ new Set();
function addRegisteredWallet(B) {
  cachedWalletsArray = void 0, registeredWalletsSet.add(B);
}
function removeRegisteredWallet(B) {
  cachedWalletsArray = void 0, registeredWalletsSet.delete(B);
}
const listeners = {};
function getWallets() {
  if (wallets || (wallets = Object.freeze({ register, get, on }), typeof window > "u")) return wallets;
  const B = Object.freeze({ register });
  try {
    window.addEventListener("wallet-standard:register-wallet", ({ detail: L }) => L(B));
  } catch (L) {
    console.error(`wallet-standard:register-wallet event listener could not be added
`, L);
  }
  try {
    window.dispatchEvent(new AppReadyEvent(B));
  } catch (L) {
    console.error(`wallet-standard:app-ready event could not be dispatched
`, L);
  }
  return wallets;
}
function register(...B) {
  var L;
  return (B = B.filter((V) => !registeredWalletsSet.has(V))).length ? (B.forEach((V) => addRegisteredWallet(V)), (L = listeners.register) == null || L.forEach((V) => guard(() => V(...B))), function() {
    var V;
    B.forEach((J) => removeRegisteredWallet(J)), (V = listeners.unregister) == null || V.forEach((J) => guard(() => J(...B)));
  }) : () => {
  };
}
let cachedWalletsArray;
function get() {
  return cachedWalletsArray || (cachedWalletsArray = [...registeredWalletsSet]), cachedWalletsArray;
}
function on(B, L) {
  var V;
  return (V = listeners[B]) != null && V.push(L) || (listeners[B] = [L]), function() {
    var J;
    listeners[B] = (J = listeners[B]) == null ? void 0 : J.filter((re) => L !== re);
  };
}
function guard(B) {
  try {
    B();
  } catch (L) {
    console.error(L);
  }
}
class AppReadyEvent extends Event {
  get detail() {
    return __classPrivateFieldGet(this, _AppReadyEvent_detail, "f");
  }
  get type() {
    return "wallet-standard:app-ready";
  }
  constructor(L) {
    super("wallet-standard:app-ready", { bubbles: !1, cancelable: !1, composed: !1 }), _AppReadyEvent_detail.set(this, void 0), __classPrivateFieldSet(this, _AppReadyEvent_detail, L, "f");
  }
  preventDefault() {
    throw new Error("preventDefault cannot be called");
  }
  stopImmediatePropagation() {
    throw new Error("stopImmediatePropagation cannot be called");
  }
  stopPropagation() {
    throw new Error("stopPropagation cannot be called");
  }
}
_AppReadyEvent_detail = /* @__PURE__ */ new WeakMap();
var funcTag = "[object Function]", genTag = "[object GeneratorFunction]", reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reIsHostCtor = /^\[object .+?Constructor\]$/, freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal, freeSelf = typeof self == "object" && self && self.Object === Object && self, root = freeGlobal || freeSelf || Function("return this")();
function getValue(B, L) {
  return B == null ? void 0 : B[L];
}
function isHostObject(B) {
  var L = !1;
  if (B != null && typeof B.toString != "function") try {
    L = !!(B + "");
  } catch {
  }
  return L;
}
var funcProto = Function.prototype, objectProto = Object.prototype, coreJsData = root["__core-js_shared__"], maskSrcKey = (uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || ""), uid ? "Symbol(src)_1." + uid : ""), uid, funcToString = funcProto.toString, hasOwnProperty = objectProto.hasOwnProperty, objectToString = objectProto.toString, reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Symbol$1 = root.Symbol, store2, store3, store4;
function baseIsNative(B) {
  return !(!isObject(B) || isMasked(B)) && (isFunction(B) || isHostObject(B) ? reIsNative : reIsHostCtor).test(toSource(B));
}
function getNative(B, L) {
  var V = getValue(B, L);
  return baseIsNative(V) ? V : void 0;
}
function isMasked(B) {
  return !!maskSrcKey && maskSrcKey in B;
}
function toSource(B) {
  if (B != null) {
    try {
      return funcToString.call(B);
    } catch {
    }
    try {
      return B + "";
    } catch {
    }
  }
  return "";
}
function isFunction(B) {
  var L = isObject(B) ? objectToString.call(B) : "";
  return L == funcTag || L == genTag;
}
function isObject(B) {
  var L = typeof B;
  return !!B && (L == "object" || L == "function");
}
function getGlobalMessage(B) {
  return store2 == null ? void 0 : store2.get(B);
}
function getSchemaMessage(B) {
  return store3 == null ? void 0 : store3.get(B);
}
function getSpecificMessage(B, L) {
  var V;
  return (V = store4 == null ? void 0 : store4.get(B)) == null ? void 0 : V.get(L);
}
function _stringify(B) {
  var V, J;
  let L = typeof B;
  return L === "object" && (L = (B && ((J = (V = Object.getPrototypeOf(B)) == null ? void 0 : V.constructor) == null ? void 0 : J.name)) ?? "null"), L === "string" ? `"${B}"` : L === "number" || L === "bigint" || L === "boolean" ? `${B}` : L;
}
function _addIssue(B, L, V, J, re) {
  const ne = re && "input" in re ? re.input : V.value, ie = (re == null ? void 0 : re.expected) ?? B.expects ?? null, oe = (re == null ? void 0 : re.received) ?? _stringify(ne), pe = { kind: B.kind, type: B.type, input: ne, expected: ie, received: oe, message: `Invalid ${L}: ${ie ? `Expected ${ie} but r` : "R"}eceived ${oe}`, requirement: B.requirement, path: re == null ? void 0 : re.path, issues: re == null ? void 0 : re.issues, lang: J.lang, abortEarly: J.abortEarly, abortPipeEarly: J.abortPipeEarly }, ce = B.kind === "schema", Oe = (re == null ? void 0 : re.message) ?? B.message ?? getSpecificMessage(B.reference, pe.lang) ?? (ce ? getSchemaMessage(pe.lang) : null) ?? J.message ?? getGlobalMessage(pe.lang);
  Oe && (pe.message = typeof Oe == "function" ? Oe(pe) : Oe), ce && (V.typed = !1), V.issues ? V.issues.push(pe) : V.issues = [pe];
}
function _isValidObjectKey(B, L) {
  return Object.hasOwn(B, L) && L !== "__proto__" && L !== "prototype" && L !== "constructor";
}
function getDefault(B, L, V) {
  return typeof B.default == "function" ? B.default(L, V) : B.default;
}
function array(B, L) {
  return { kind: "schema", type: "array", reference: array, expects: "Array", async: !1, item: B, message: L, _run(V, J) {
    var ne;
    const re = V.value;
    if (Array.isArray(re)) {
      V.typed = !0, V.value = [];
      for (let ie = 0; ie < re.length; ie++) {
        const oe = re[ie], pe = this.item._run({ typed: !1, value: oe }, J);
        if (pe.issues) {
          const ce = { type: "array", origin: "value", input: re, key: ie, value: oe };
          for (const Oe of pe.issues) Oe.path ? Oe.path.unshift(ce) : Oe.path = [ce], (ne = V.issues) == null || ne.push(Oe);
          if (V.issues || (V.issues = pe.issues), J.abortEarly) {
            V.typed = !1;
            break;
          }
        }
        pe.typed || (V.typed = !1), V.value.push(pe.value);
      }
    } else _addIssue(this, "type", V, J);
    return V;
  } };
}
function boolean(B) {
  return { kind: "schema", type: "boolean", reference: boolean, expects: "boolean", async: !1, message: B, _run(L, V) {
    return typeof L.value == "boolean" ? L.typed = !0 : _addIssue(this, "type", L, V), L;
  } };
}
function enum_(B, L) {
  const V = Object.entries(B).filter(([J]) => isNaN(+J)).map(([, J]) => J);
  return { kind: "schema", type: "enum", reference: enum_, expects: V.map(_stringify).join(" | ") || "never", async: !1, enum: B, options: V, message: L, _run(J, re) {
    return this.options.includes(J.value) ? J.typed = !0 : _addIssue(this, "type", J, re), J;
  } };
}
function literal(B, L) {
  return { kind: "schema", type: "literal", reference: literal, expects: _stringify(B), async: !1, literal: B, message: L, _run(V, J) {
    return V.value === this.literal ? V.typed = !0 : _addIssue(this, "type", V, J), V;
  } };
}
function looseObject(B, L) {
  return { kind: "schema", type: "loose_object", reference: looseObject, expects: "Object", async: !1, entries: B, message: L, _run(V, J) {
    var ne;
    const re = V.value;
    if (re && typeof re == "object") {
      V.typed = !0, V.value = {};
      for (const ie in this.entries) {
        const oe = re[ie], pe = this.entries[ie]._run({ typed: !1, value: oe }, J);
        if (pe.issues) {
          const ce = { type: "object", origin: "value", input: re, key: ie, value: oe };
          for (const Oe of pe.issues) Oe.path ? Oe.path.unshift(ce) : Oe.path = [ce], (ne = V.issues) == null || ne.push(Oe);
          if (V.issues || (V.issues = pe.issues), J.abortEarly) {
            V.typed = !1;
            break;
          }
        }
        pe.typed || (V.typed = !1), (pe.value !== void 0 || ie in re) && (V.value[ie] = pe.value);
      }
      if (!V.issues || !J.abortEarly) for (const ie in re) _isValidObjectKey(re, ie) && !(ie in this.entries) && (V.value[ie] = re[ie]);
    } else _addIssue(this, "type", V, J);
    return V;
  } };
}
function nonOptional(B, L) {
  return { kind: "schema", type: "non_optional", reference: nonOptional, expects: "!undefined", async: !1, wrapped: B, message: L, _run(V, J) {
    return V.value === void 0 ? (_addIssue(this, "type", V, J), V) : this.wrapped._run(V, J);
  } };
}
function null_(B) {
  return { kind: "schema", type: "null", reference: null_, expects: "null", async: !1, message: B, _run(L, V) {
    return L.value === null ? L.typed = !0 : _addIssue(this, "type", L, V), L;
  } };
}
function nullish(B, ...L) {
  const V = { kind: "schema", type: "nullish", reference: nullish, expects: `${B.expects} | null | undefined`, async: !1, wrapped: B, _run(J, re) {
    return J.value !== null && J.value !== void 0 || ("default" in this && (J.value = getDefault(this, J, re)), J.value !== null && J.value !== void 0) ? this.wrapped._run(J, re) : (J.typed = !0, J);
  } };
  return 0 in L && (V.default = L[0]), V;
}
function number(B) {
  return { kind: "schema", type: "number", reference: number, expects: "number", async: !1, message: B, _run(L, V) {
    return typeof L.value != "number" || isNaN(L.value) ? _addIssue(this, "type", L, V) : L.typed = !0, L;
  } };
}
function object(B, L) {
  return { kind: "schema", type: "object", reference: object, expects: "Object", async: !1, entries: B, message: L, _run(V, J) {
    var ne;
    const re = V.value;
    if (re && typeof re == "object") {
      V.typed = !0, V.value = {};
      for (const ie in this.entries) {
        const oe = re[ie], pe = this.entries[ie]._run({ typed: !1, value: oe }, J);
        if (pe.issues) {
          const ce = { type: "object", origin: "value", input: re, key: ie, value: oe };
          for (const Oe of pe.issues) Oe.path ? Oe.path.unshift(ce) : Oe.path = [ce], (ne = V.issues) == null || ne.push(Oe);
          if (V.issues || (V.issues = pe.issues), J.abortEarly) {
            V.typed = !1;
            break;
          }
        }
        pe.typed || (V.typed = !1), (pe.value !== void 0 || ie in re) && (V.value[ie] = pe.value);
      }
    } else _addIssue(this, "type", V, J);
    return V;
  } };
}
function optional(B, ...L) {
  const V = { kind: "schema", type: "optional", reference: optional, expects: `${B.expects} | undefined`, async: !1, wrapped: B, _run(J, re) {
    return J.value === void 0 && ("default" in this && (J.value = getDefault(this, J, re)), J.value === void 0) ? (J.typed = !0, J) : this.wrapped._run(J, re);
  } };
  return 0 in L && (V.default = L[0]), V;
}
function picklist(B, L) {
  return { kind: "schema", type: "picklist", reference: picklist, expects: B.map(_stringify).join(" | ") || "never", async: !1, options: B, message: L, _run(V, J) {
    return this.options.includes(V.value) ? V.typed = !0 : _addIssue(this, "type", V, J), V;
  } };
}
function string(B) {
  return { kind: "schema", type: "string", reference: string, expects: "string", async: !1, message: B, _run(L, V) {
    return typeof L.value == "string" ? L.typed = !0 : _addIssue(this, "type", L, V), L;
  } };
}
function undefined_(B) {
  return { kind: "schema", type: "undefined", reference: undefined_, expects: "undefined", async: !1, message: B, _run(L, V) {
    return L.value === void 0 ? L.typed = !0 : _addIssue(this, "type", L, V), L;
  } };
}
function _subIssues(B) {
  let L;
  if (B) for (const V of B) L ? L.push(...V.issues) : L = V.issues;
  return L;
}
function union(B, L) {
  return { kind: "schema", type: "union", reference: union, expects: [...new Set(B.map((V) => V.expects))].join(" | ") || "never", async: !1, options: B, message: L, _run(V, J) {
    let re, ne, ie;
    for (const oe of this.options) {
      const pe = oe._run({ typed: !1, value: V.value }, J);
      if (pe.typed) {
        if (!pe.issues) {
          re = pe;
          break;
        }
        ne ? ne.push(pe) : ne = [pe];
      } else ie ? ie.push(pe) : ie = [pe];
    }
    if (re) return re;
    if (ne) {
      if (ne.length === 1) return ne[0];
      _addIssue(this, "type", V, J, { issues: _subIssues(ne) }), V.typed = !0;
    } else {
      if ((ie == null ? void 0 : ie.length) === 1) return ie[0];
      _addIssue(this, "type", V, J, { issues: _subIssues(ie) });
    }
    return V;
  } };
}
function unknown() {
  return { kind: "schema", type: "unknown", reference: unknown, expects: "unknown", async: !1, _run: (B) => (B.typed = !0, B) };
}
Symbol$1 && Symbol$1.isConcatSpreadable, getNative(root, "Map"), getNative(Object, "create");
var lib = {}, signer = {}, base64Url = {}, base64Js = {};
base64Js.byteLength = byteLength, base64Js.toByteArray = toByteArray, base64Js.fromByteArray = fromByteArray;
for (var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, len = code.length; i < len; ++i) lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
function getLens(B) {
  var L = B.length;
  if (L % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
  var V = B.indexOf("=");
  return V === -1 && (V = L), [V, V === L ? 0 : 4 - V % 4];
}
function byteLength(B) {
  var L = getLens(B), V = L[0], J = L[1];
  return 3 * (V + J) / 4 - J;
}
function _byteLength(B, L, V) {
  return 3 * (L + V) / 4 - V;
}
function toByteArray(B) {
  var L, V, J = getLens(B), re = J[0], ne = J[1], ie = new Arr(_byteLength(B, re, ne)), oe = 0, pe = ne > 0 ? re - 4 : re;
  for (V = 0; V < pe; V += 4) L = revLookup[B.charCodeAt(V)] << 18 | revLookup[B.charCodeAt(V + 1)] << 12 | revLookup[B.charCodeAt(V + 2)] << 6 | revLookup[B.charCodeAt(V + 3)], ie[oe++] = L >> 16 & 255, ie[oe++] = L >> 8 & 255, ie[oe++] = 255 & L;
  return ne === 2 && (L = revLookup[B.charCodeAt(V)] << 2 | revLookup[B.charCodeAt(V + 1)] >> 4, ie[oe++] = 255 & L), ne === 1 && (L = revLookup[B.charCodeAt(V)] << 10 | revLookup[B.charCodeAt(V + 1)] << 4 | revLookup[B.charCodeAt(V + 2)] >> 2, ie[oe++] = L >> 8 & 255, ie[oe++] = 255 & L), ie;
}
function tripletToBase64(B) {
  return lookup[B >> 18 & 63] + lookup[B >> 12 & 63] + lookup[B >> 6 & 63] + lookup[63 & B];
}
function encodeChunk(B, L, V) {
  for (var J, re = [], ne = L; ne < V; ne += 3) J = (B[ne] << 16 & 16711680) + (B[ne + 1] << 8 & 65280) + (255 & B[ne + 2]), re.push(tripletToBase64(J));
  return re.join("");
}
function fromByteArray(B) {
  for (var L, V = B.length, J = V % 3, re = [], ne = 16383, ie = 0, oe = V - J; ie < oe; ie += ne) re.push(encodeChunk(B, ie, ie + ne > oe ? oe : ie + ne));
  return J === 1 ? (L = B[V - 1], re.push(lookup[L >> 2] + lookup[L << 4 & 63] + "==")) : J === 2 && (L = (B[V - 2] << 8) + B[V - 1], re.push(lookup[L >> 10] + lookup[L >> 4 & 63] + lookup[L << 2 & 63] + "=")), re.join("");
}
revLookup[45] = 62, revLookup[95] = 63, Object.defineProperty(base64Url, "__esModule", { value: !0 }), base64Url.decode = base64Url.encode = base64Url.unescape = base64Url.escape = base64Url.pad = void 0;
const base64_js_1$1 = base64Js;
function pad(B) {
  return `${B}${"=".repeat(4 - (B.length % 4 || 4))}`;
}
function escape(B) {
  return B.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
}
function unescape(B) {
  return pad(B).replace(/-/g, "+").replace(/_/g, "/");
}
function encode(B) {
  return escape((0, base64_js_1$1.fromByteArray)(new TextEncoder().encode(B)));
}
function decode$1(B) {
  return new TextDecoder().decode((0, base64_js_1$1.toByteArray)(pad(unescape(B))));
}
base64Url.pad = pad, base64Url.escape = escape, base64Url.unescape = unescape, base64Url.encode = encode, base64Url.decode = decode$1;
var cryptoClients = {}, secp256k1 = {}, ecdsaSigFormatter = {};
Object.defineProperty(ecdsaSigFormatter, "__esModule", { value: !0 }), ecdsaSigFormatter.joseToDer = ecdsaSigFormatter.derToJose = void 0;
const base64_js_1 = base64Js, base64Url_1 = base64Url;
function getParamSize(B) {
  return (B / 8 | 0) + (B % 8 == 0 ? 0 : 1);
}
const paramBytesForAlg = { ES256: getParamSize(256), ES384: getParamSize(384), ES512: getParamSize(521) };
function getParamBytesForAlg(B) {
  const L = paramBytesForAlg[B];
  if (L) return L;
  throw new Error(`Unknown algorithm "${B}"`);
}
const MAX_OCTET = 128, CLASS_UNIVERSAL = 0, PRIMITIVE_BIT = 32, TAG_SEQ = 16, TAG_INT = 2, ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | CLASS_UNIVERSAL << 6, ENCODED_TAG_INT = TAG_INT | CLASS_UNIVERSAL << 6;
function signatureAsBytes(B) {
  if (B instanceof Uint8Array) return B;
  if (typeof B == "string") return (0, base64_js_1.toByteArray)((0, base64Url_1.pad)(B));
  throw new TypeError("ECDSA signature must be a Base64 string or a Uint8Array");
}
function derToJose(B, L) {
  const V = signatureAsBytes(B), J = getParamBytesForAlg(L), re = J + 1, ne = V.length;
  let ie = 0;
  if (V[ie++] !== ENCODED_TAG_SEQ) throw new Error('Could not find expected "seq"');
  let oe = V[ie++];
  if (oe === (1 | MAX_OCTET) && (oe = V[ie++]), ne - ie < oe) throw new Error(`"seq" specified length of "${oe}", only "${ne - ie}" remaining`);
  if (V[ie++] !== ENCODED_TAG_INT) throw new Error('Could not find expected "int" for "r"');
  const pe = V[ie++];
  if (ne - ie - 2 < pe) throw new Error(`"r" specified length of "${pe}", only "${ne - ie - 2}" available`);
  if (re < pe) throw new Error(`"r" specified length of "${pe}", max of "${re}" is acceptable`);
  const ce = ie;
  if (ie += pe, V[ie++] !== ENCODED_TAG_INT) throw new Error('Could not find expected "int" for "s"');
  const Oe = V[ie++];
  if (ne - ie !== Oe) throw new Error(`"s" specified length of "${Oe}", expected "${ne - ie}"`);
  if (re < Oe) throw new Error(`"s" specified length of "${Oe}", max of "${re}" is acceptable`);
  const rt = ie;
  if (ie += Oe, ie !== ne) throw new Error(`Expected to consume entire array, but "${ne - ie}" bytes remain`);
  const ut = J - pe, dt = J - Oe, ht = new Uint8Array(ut + pe + dt + Oe);
  for (ie = 0; ie < ut; ++ie) ht[ie] = 0;
  ht.set(V.subarray(ce + Math.max(-ut, 0), ce + pe), ie), ie = J;
  for (const bt = ie; ie < bt + dt; ++ie) ht[ie] = 0;
  return ht.set(V.subarray(rt + Math.max(-dt, 0), rt + Oe), ie), (0, base64Url_1.escape)((0, base64_js_1.fromByteArray)(ht));
}
function countPadding(B, L, V) {
  let J = 0;
  for (; L + J < V && B[L + J] === 0; ) ++J;
  return B[L + J] >= MAX_OCTET && --J, J;
}
function joseToDer(B, L) {
  B = signatureAsBytes(B);
  const V = getParamBytesForAlg(L), J = B.length;
  if (J !== 2 * V) throw new TypeError(`"${L}" signatures must be "${2 * V}" bytes, saw "${J}"`);
  const re = countPadding(B, 0, V), ne = countPadding(B, V, B.length), ie = V - re, oe = V - ne, pe = 2 + ie + 1 + 1 + oe, ce = pe < MAX_OCTET, Oe = new Uint8Array((ce ? 2 : 3) + pe);
  let rt = 0;
  return Oe[rt++] = ENCODED_TAG_SEQ, ce ? Oe[rt++] = pe : (Oe[rt++] = 1 | MAX_OCTET, Oe[rt++] = 255 & pe), Oe[rt++] = ENCODED_TAG_INT, Oe[rt++] = ie, re < 0 ? (Oe[rt++] = 0, Oe.set(B.subarray(0, V), rt), rt += V) : (Oe.set(B.subarray(re, V), rt), rt += V - re), Oe[rt++] = ENCODED_TAG_INT, Oe[rt++] = oe, ne < 0 ? (Oe[rt++] = 0, Oe.set(B.subarray(V), rt)) : Oe.set(B.subarray(V + ne), rt), Oe;
}
ecdsaSigFormatter.derToJose = derToJose, ecdsaSigFormatter.joseToDer = joseToDer;
var errors = {};
Object.defineProperty(errors, "__esModule", { value: !0 }), errors.InvalidTokenError = errors.MissingParametersError = void 0;
class MissingParametersError extends Error {
  constructor(L) {
    super(), this.name = "MissingParametersError", this.message = L || "";
  }
}
errors.MissingParametersError = MissingParametersError;
class InvalidTokenError extends Error {
  constructor(L) {
    super(), this.name = "InvalidTokenError", this.message = L || "";
  }
}
errors.InvalidTokenError = InvalidTokenError, Object.defineProperty(secp256k1, "__esModule", { value: !0 }), secp256k1.SECP256K1Client = void 0;
const hmac_1 = hmac$2, sha256_1$3 = sha256$5, secp = lib$1, ecdsaSigFormatter_1 = ecdsaSigFormatter, errors_1$2 = errors, utils_1 = utils$p;
secp.utils.hmacSha256Sync = (B, ...L) => {
  const V = hmac_1.hmac.create(sha256_1$3.sha256, B);
  return L.forEach((J) => V.update(J)), V.digest();
};
class SECP256K1Client {
  static derivePublicKey(L, V = !0) {
    return L.length === 66 && (L = L.slice(0, 64)), L.length < 64 && (L = L.padStart(64, "0")), (0, utils_1.bytesToHex)(secp.getPublicKey(L, V));
  }
  static signHash(L, V, J = "jose") {
    if (!L || !V) throw new errors_1$2.MissingParametersError("a signing input hash and private key are all required");
    const re = secp.signSync(L, V.slice(0, 64), { der: !0, canonical: !1 });
    if (J === "der") return (0, utils_1.bytesToHex)(re);
    if (J === "jose") return (0, ecdsaSigFormatter_1.derToJose)(re, "ES256");
    throw Error("Invalid signature format");
  }
  static loadSignature(L) {
    return (0, ecdsaSigFormatter_1.joseToDer)(L, "ES256");
  }
  static verifyHash(L, V, J) {
    if (!L || !V || !J) throw new errors_1$2.MissingParametersError("a signing input hash, der signature, and public key are all required");
    return secp.verify(V, L, J, { strict: !1 });
  }
}
secp256k1.SECP256K1Client = SECP256K1Client, SECP256K1Client.algorithmName = "ES256K", function(B) {
  Object.defineProperty(B, "__esModule", { value: !0 }), B.cryptoClients = B.SECP256K1Client = void 0;
  const L = secp256k1;
  Object.defineProperty(B, "SECP256K1Client", { enumerable: !0, get: function() {
    return L.SECP256K1Client;
  } });
  const V = { ES256K: L.SECP256K1Client };
  B.cryptoClients = V;
}(cryptoClients);
var sha256 = {}, __awaiter$1 = commonjsGlobal && commonjsGlobal.__awaiter || function(B, L, V, J) {
  return new (V || (V = Promise))(function(re, ne) {
    function ie(ce) {
      try {
        pe(J.next(ce));
      } catch (Oe) {
        ne(Oe);
      }
    }
    function oe(ce) {
      try {
        pe(J.throw(ce));
      } catch (Oe) {
        ne(Oe);
      }
    }
    function pe(ce) {
      ce.done ? re(ce.value) : function(Oe) {
        return Oe instanceof V ? Oe : new V(function(rt) {
          rt(Oe);
        });
      }(ce.value).then(ie, oe);
    }
    pe((J = J.apply(B, L || [])).next());
  });
};
Object.defineProperty(sha256, "__esModule", { value: !0 }), sha256.hashSha256Async = sha256.hashSha256 = void 0;
const sha256_1$2 = sha256$5;
function hashSha256(B) {
  return (0, sha256_1$2.sha256)(B);
}
function hashSha256Async(B) {
  return __awaiter$1(this, void 0, void 0, function* () {
    try {
      if (typeof crypto < "u" && crypto.subtle !== void 0) {
        const L = typeof B == "string" ? new TextEncoder().encode(B) : B, V = yield crypto.subtle.digest("SHA-256", L);
        return new Uint8Array(V);
      }
      {
        const L = requireCryptoBrowserify();
        if (!L.createHash) throw new Error("`crypto` module does not contain `createHash`");
        return Promise.resolve(L.createHash("sha256").update(B).digest());
      }
    } catch (L) {
      return console.log(L), console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, nor the or the Node.js `require("crypto").createHash` module is available. Falling back to JS implementation.'), Promise.resolve(hashSha256(B));
    }
  });
}
sha256.hashSha256 = hashSha256, sha256.hashSha256Async = hashSha256Async;
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(B, L, V, J) {
  return new (V || (V = Promise))(function(re, ne) {
    function ie(ce) {
      try {
        pe(J.next(ce));
      } catch (Oe) {
        ne(Oe);
      }
    }
    function oe(ce) {
      try {
        pe(J.throw(ce));
      } catch (Oe) {
        ne(Oe);
      }
    }
    function pe(ce) {
      ce.done ? re(ce.value) : function(Oe) {
        return Oe instanceof V ? Oe : new V(function(rt) {
          rt(Oe);
        });
      }(ce.value).then(ie, oe);
    }
    pe((J = J.apply(B, L || [])).next());
  });
};
Object.defineProperty(signer, "__esModule", { value: !0 }), signer.TokenSigner = signer.createUnsecuredToken = void 0;
const base64url$2 = base64Url, cryptoClients_1$1 = cryptoClients, errors_1$1 = errors, sha256_1$1 = sha256;
function createSigningInput(B, L) {
  const V = [], J = base64url$2.encode(JSON.stringify(L));
  V.push(J);
  const re = base64url$2.encode(JSON.stringify(B));
  return V.push(re), V.join(".");
}
function createUnsecuredToken(B) {
  return createSigningInput(B, { typ: "JWT", alg: "none" }) + ".";
}
signer.createUnsecuredToken = createUnsecuredToken;
class TokenSigner {
  constructor(L, V) {
    if (!L || !V) throw new errors_1$1.MissingParametersError("a signing algorithm and private key are required");
    if (typeof L != "string") throw new Error("signing algorithm parameter must be a string");
    if (L = L.toUpperCase(), !cryptoClients_1$1.cryptoClients.hasOwnProperty(L)) throw new Error("invalid signing algorithm");
    this.tokenType = "JWT", this.cryptoClient = cryptoClients_1$1.cryptoClients[L], this.rawPrivateKey = V;
  }
  header(L = {}) {
    const V = { typ: this.tokenType, alg: this.cryptoClient.algorithmName };
    return Object.assign({}, V, L);
  }
  sign(L, V = !1, J = {}) {
    const re = this.header(J), ne = createSigningInput(L, re), ie = (0, sha256_1$1.hashSha256)(ne);
    return this.createWithSignedHash(L, V, re, ne, ie);
  }
  signAsync(L, V = !1, J = {}) {
    return __awaiter(this, void 0, void 0, function* () {
      const re = this.header(J), ne = createSigningInput(L, re), ie = yield (0, sha256_1$1.hashSha256Async)(ne);
      return this.createWithSignedHash(L, V, re, ne, ie);
    });
  }
  createWithSignedHash(L, V, J, re, ne) {
    const ie = this.cryptoClient.signHash(ne, this.rawPrivateKey);
    return V ? { header: [base64url$2.encode(JSON.stringify(J))], payload: JSON.stringify(L), signature: [ie] } : [re, ie].join(".");
  }
}
signer.TokenSigner = TokenSigner;
var verifier = {};
Object.defineProperty(verifier, "__esModule", { value: !0 }), verifier.TokenVerifier = void 0;
const base64url$1 = base64Url, cryptoClients_1 = cryptoClients, errors_1 = errors, sha256_1 = sha256;
class TokenVerifier {
  constructor(L, V) {
    if (!L || !V) throw new errors_1.MissingParametersError("a signing algorithm and public key are required");
    if (typeof L != "string") throw "signing algorithm parameter must be a string";
    if (L = L.toUpperCase(), !cryptoClients_1.cryptoClients.hasOwnProperty(L)) throw "invalid signing algorithm";
    this.tokenType = "JWT", this.cryptoClient = cryptoClients_1.cryptoClients[L], this.rawPublicKey = V;
  }
  verify(L) {
    return typeof L == "string" ? this.verifyCompact(L, !1) : typeof L == "object" && this.verifyExpanded(L, !1);
  }
  verifyAsync(L) {
    return typeof L == "string" ? this.verifyCompact(L, !0) : typeof L == "object" ? this.verifyExpanded(L, !0) : Promise.resolve(!1);
  }
  verifyCompact(L, V) {
    const J = L.split("."), re = J[0] + "." + J[1], ne = (ie) => {
      const oe = this.cryptoClient.loadSignature(J[2]);
      return this.cryptoClient.verifyHash(ie, oe, this.rawPublicKey);
    };
    if (V) return (0, sha256_1.hashSha256Async)(re).then((ie) => ne(ie));
    {
      const ie = (0, sha256_1.hashSha256)(re);
      return ne(ie);
    }
  }
  verifyExpanded(L, V) {
    const J = [L.header.join("."), base64url$1.encode(L.payload)].join(".");
    let re = !0;
    const ne = (ie) => (L.signature.map((oe) => {
      const pe = this.cryptoClient.loadSignature(oe);
      this.cryptoClient.verifyHash(ie, pe, this.rawPublicKey) || (re = !1);
    }), re);
    if (V) return (0, sha256_1.hashSha256Async)(J).then((ie) => ne(ie));
    {
      const ie = (0, sha256_1.hashSha256)(J);
      return ne(ie);
    }
  }
}
verifier.TokenVerifier = TokenVerifier;
var decode = {};
Object.defineProperty(decode, "__esModule", { value: !0 }), decode.decodeToken = void 0;
const base64url = base64Url;
function decodeToken(B) {
  if (typeof B == "string") {
    const L = B.split(".");
    return { header: JSON.parse(base64url.decode(L[0])), payload: JSON.parse(base64url.decode(L[1])), signature: L[2] };
  }
  if (typeof B == "object") {
    if (typeof B.payload != "string") throw new Error("Expected token payload to be a base64 or json string");
    let L = B.payload;
    B.payload[0] !== "{" && (L = base64url.decode(L));
    const V = [];
    return B.header.map((J) => {
      const re = JSON.parse(base64url.decode(J));
      V.push(re);
    }), { header: V, payload: JSON.parse(L), signature: B.signature };
  }
}
decode.decodeToken = decodeToken, function(B) {
  var L = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(J, re, ne, ie) {
    ie === void 0 && (ie = ne);
    var oe = Object.getOwnPropertyDescriptor(re, ne);
    oe && !("get" in oe ? !re.__esModule : oe.writable || oe.configurable) || (oe = { enumerable: !0, get: function() {
      return re[ne];
    } }), Object.defineProperty(J, ie, oe);
  } : function(J, re, ne, ie) {
    ie === void 0 && (ie = ne), J[ie] = re[ne];
  }), V = commonjsGlobal && commonjsGlobal.__exportStar || function(J, re) {
    for (var ne in J) ne === "default" || Object.prototype.hasOwnProperty.call(re, ne) || L(re, J, ne);
  };
  Object.defineProperty(B, "__esModule", { value: !0 }), V(signer, B), V(verifier, B), V(decode, B), V(errors, B), V(cryptoClients, B);
}(lib);
var accountChangeEventName = "accountChange";
object({ type: literal(accountChangeEventName) });
var networkChangeEventName = "networkChange";
async function getProviderOrThrow(B) {
  var V;
  const L = await (B == null ? void 0 : B()) || ((V = window.XverseProviders) == null ? void 0 : V.BitcoinProvider) || window.BitcoinProvider;
  if (!L) throw new Error("No Bitcoin wallet installed");
  return L;
}
object({ type: literal(networkChangeEventName) });
var BitcoinNetworkType = ((B) => (B.Mainnet = "Mainnet", B.Testnet = "Testnet", B.Signet = "Signet", B))(BitcoinNetworkType || {}), RpcIdSchema = optional(union([string(), number(), null_()])), rpcRequestMessageSchema = object({ jsonrpc: literal("2.0"), method: string(), params: optional(union([array(unknown()), looseObject({}), null_()])), id: RpcIdSchema }), rpcSuccessResponseMessageSchema = object({ jsonrpc: literal("2.0"), result: nonOptional(unknown()), id: RpcIdSchema }), rpcErrorResponseMessageSchema = object({ jsonrpc: literal("2.0"), error: nonOptional(unknown()), id: RpcIdSchema });
union([rpcSuccessResponseMessageSchema, rpcErrorResponseMessageSchema]);
var AddressPurpose = ((B) => (B.Ordinals = "ordinals", B.Payment = "payment", B.Stacks = "stacks", B))(AddressPurpose || {}), AddressType = ((B) => (B.p2pkh = "p2pkh", B.p2sh = "p2sh", B.p2wpkh = "p2wpkh", B.p2wsh = "p2wsh", B.p2tr = "p2tr", B.stacks = "stacks", B))(AddressType || {}), addressSchema = object({ address: string(), publicKey: string(), purpose: enum_(AddressPurpose), addressType: enum_(AddressType) }), getAddress = async (B) => {
  var J, re;
  const L = await getProviderOrThrow(B.getProvider), { purposes: V } = B.payload;
  if (!V) throw new Error("Address purposes are required");
  try {
    const ne = lib.createUnsecuredToken(B.payload), ie = await L.connect(ne);
    (J = B.onFinish) == null || J.call(B, ie);
  } catch (ne) {
    console.error("[Connect] Error during address request", ne), (re = B.onCancel) == null || re.call(B);
  }
}, stxGetAddressesMethodName = "stx_getAddresses", stxGetAddressesParamsSchema = nullish(object({ message: optional(string()) }));
object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(stxGetAddressesMethodName), params: stxGetAddressesParamsSchema, id: string() }).entries });
var stxSignTransactionMethodName = "stx_signTransaction", stxSignTransactionParamsSchema = object({ transaction: string(), pubkey: optional(string()), broadcast: optional(boolean()) });
object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(stxSignTransactionMethodName), params: stxSignTransactionParamsSchema, id: string() }).entries });
var walletTypes = ["software", "ledger"], walletTypeSchema = picklist(walletTypes), getInfoMethodName = "getInfo", getInfoParamsSchema = nullish(null_());
object({ version: string(), methods: optional(array(string())), supports: array(string()) }), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getInfoMethodName), params: getInfoParamsSchema, id: string() }).entries });
var getAddressesMethodName = "getAddresses", getAddressesParamsSchema = object({ purposes: array(enum_(AddressPurpose)), message: optional(string()) });
object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getAddressesMethodName), params: getAddressesParamsSchema, id: string() }).entries });
var signMessageMethodName = "signMessage", MessageSigningProtocols = ((B) => (B.ECDSA = "ECDSA", B.BIP322 = "BIP322", B))(MessageSigningProtocols || {}), signMessageParamsSchema = object({ address: string(), message: string(), protocol: optional(enum_(MessageSigningProtocols)) });
object({ signature: string(), messageHash: string(), address: string(), protocol: enum_(MessageSigningProtocols) }), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(signMessageMethodName), params: signMessageParamsSchema, id: string() }).entries });
var getAccountsMethodName = "getAccounts", getAccountsParamsSchema = object({ purposes: array(enum_(AddressPurpose)), message: optional(string()) });
array(object({ ...addressSchema.entries, ...object({ walletType: walletTypeSchema }).entries })), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getAccountsMethodName), params: getAccountsParamsSchema, id: string() }).entries });
var getBalanceMethodName = "getBalance";
nullish(null_()), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getBalanceMethodName), id: string() }).entries });
var requestPermissionsMethodName = "wallet_requestPermissions", requestPermissionsParamsSchema = undefined_();
literal(!0), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(requestPermissionsMethodName), params: requestPermissionsParamsSchema, id: string() }).entries });
var renouncePermissionsMethodName = "wallet_renouncePermissions", renouncePermissionsParamsSchema = undefined_();
literal(!0), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(renouncePermissionsMethodName), params: renouncePermissionsParamsSchema, id: string() }).entries });
var getWalletTypeMethodName = "wallet_getWalletType";
nullish(null_()), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getWalletTypeMethodName), id: string() }).entries });
var getRunesBalanceMethodName = "runes_getBalance", getRunesBalanceParamsSchema = nullish(null_());
object({ balances: array(object({ runeName: string(), amount: string(), divisibility: number(), symbol: string(), inscriptionId: nullish(string()) })) }), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getRunesBalanceMethodName), params: getRunesBalanceParamsSchema, id: string() }).entries });
var transferRunesMethodName = "runes_transfer", transferRunesParamsSchema = object({ recipients: array(object({ runeName: string(), amount: string(), address: string() })) });
object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(transferRunesMethodName), params: transferRunesParamsSchema, id: string() }).entries });
var getInscriptionsMethodName = "ord_getInscriptions", getInscriptionsParamsSchema = object({ offset: number(), limit: number() });
object({ total: number(), limit: number(), offset: number(), inscriptions: array(object({ inscriptionId: string(), inscriptionNumber: string(), address: string(), collectionName: optional(string()), postage: string(), contentLength: string(), contentType: string(), timestamp: number(), offset: number(), genesisTransaction: string(), output: string() })) }), object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(getInscriptionsMethodName), params: getInscriptionsParamsSchema, id: string() }).entries });
var sendInscriptionsMethodName = "ord_sendInscriptions", sendInscriptionsParamsSchema = object({ transfers: array(object({ address: string(), inscriptionId: string() })) });
object({ ...rpcRequestMessageSchema.entries, ...object({ method: literal(sendInscriptionsMethodName), params: sendInscriptionsParamsSchema, id: string() }).entries });
var signMessage$5 = async (B) => {
  var re, ne;
  const L = await getProviderOrThrow(B.getProvider), { address: V, message: J } = B.payload;
  if (!V) throw new Error("An address is required to sign a message");
  if (!J) throw new Error("A message to be signed is required");
  try {
    const ie = lib.createUnsecuredToken(B.payload), oe = await L.signMessage(ie);
    (re = B.onFinish) == null || re.call(B, oe);
  } catch (ie) {
    console.error("[Connect] Error during sign message request", ie), (ne = B.onCancel) == null || ne.call(B);
  }
}, serializer = (B) => B.map((L) => {
  const { address: V, amountSats: J } = L;
  return { address: V, amountSats: J.toString() };
}), sendBtcTransaction = async (B) => {
  var ie, oe;
  const L = await getProviderOrThrow(B.getProvider), { recipients: V, senderAddress: J, network: re, message: ne } = B.payload;
  if (!V || V.length === 0) throw new Error("At least one recipient is required");
  if (V.some((pe) => typeof pe.address != "string" || typeof pe.amountSats != "bigint")) throw new Error("Incorrect recipient format");
  if (!J) throw new Error("The sender address is required");
  try {
    const pe = { network: re, senderAddress: J, message: ne, recipients: serializer(V) }, ce = lib.createUnsecuredToken(pe), Oe = await L.sendBtcTransaction(ce);
    (ie = B.onFinish) == null || ie.call(B, Oe);
  } catch (pe) {
    console.error("[Connect] Error during send BTC transaction request", pe), (oe = B.onCancel) == null || oe.call(B);
  }
}, signTransaction = async (B) => {
  var re, ne;
  const L = await getProviderOrThrow(B.getProvider), { psbtBase64: V, inputsToSign: J } = B.payload;
  if (!V) throw new Error("A value for psbtBase64 representing the tx hash is required");
  if (!J) throw new Error("An array specifying the inputs to be signed by the wallet is required");
  try {
    const ie = lib.createUnsecuredToken(B.payload), oe = await L.signTransaction(ie);
    (re = B.onFinish) == null || re.call(B, oe);
  } catch (ie) {
    console.error("[Connect] Error during sign transaction request", ie), (ne = B.onCancel) == null || ne.call(B);
  }
};
const NETWORK_TO_BITCOIN_NETWORK_TYPE = { mainnet: BitcoinNetworkType.Mainnet, testnet: BitcoinNetworkType.Testnet };
function fromXOnlyToFullPubkey(B) {
  return Buffer$D.from(B, "hex").length === 33 ? B : `02${B}`;
}
async function satsConnectWalletGetAddresses(B, L = "mainnet") {
  if (L === "signet") throw new OrditSDKError("signet network is not supported");
  const V = [], J = { payload: { purposes: ["ordinals", "payment"], message: "Provide access to Payment address and Ordinals address", network: { type: NETWORK_TO_BITCOIN_NETWORK_TYPE[L] } }, getProvider: B, onFinish: (re) => ((ne) => {
    if (!ne || !ne.addresses || ne.addresses.length !== 2) throw new BrowserWalletSigningError("Failed to retrieve addresses using selected wallet");
    ne.addresses.forEach((ie) => {
      const oe = getAddressFormat(ie.address, L);
      let pe = ie.publicKey;
      oe === "taproot" && (pe = fromXOnlyToFullPubkey(ie.publicKey)), V.push({ publicKey: pe, address: ie.address, format: oe });
    });
  })(re), onCancel: () => {
    throw new BrowserWalletRequestCancelledByUserError();
  } };
  return await getAddress(J), V;
}
async function satsConnectWalletSignPsbt(B, L, { finalize: V = !0, extractTx: J = !0, network: re, inputsToSign: ne } = { network: "mainnet", inputsToSign: [] }) {
  if (re === "signet") throw new OrditSDKError("signet network is not supported");
  if (!V && J) throw new BrowserWalletExtractTxFromNonFinalizedPsbtError();
  if (!L || !re || !ne.length) throw new OrditSDKError("Invalid options provided");
  let ie, oe = null;
  const pe = { payload: { network: { type: NETWORK_TO_BITCOIN_NETWORK_TYPE[re] }, message: "Sign PSBT", psbtBase64: L.toBase64(), broadcast: !1, inputsToSign: ne }, onFinish: (ce) => {
    const { psbtBase64: Oe } = ce;
    if (!Oe) throw new BrowserWalletSigningError("Failed to sign psbt using selected wallet");
    const rt = src$4.Psbt.fromBase64(Oe);
    if (V && ne.forEach((ut) => {
      ut.signingIndexes.forEach((dt) => {
        try {
          rt.finalizeInput(dt);
        } catch (ht) {
          throw console.error("Sign psbt error", ht), new OrditSDKError("Failed to finalize input");
        }
      });
    }), J) {
      try {
        ie = rt.extractTransaction().toHex();
      } catch (ut) {
        throw ut instanceof Error && ut.message === "Not finalized" ? new BrowserWalletExtractTxFromNonFinalizedPsbtError() : new OrditSDKError("Failed to extract transaction from PSBT");
      }
      oe = null;
    } else ie = rt.toHex(), oe = rt.toBase64();
  }, onCancel: () => {
    throw new BrowserWalletRequestCancelledByUserError();
  }, getProvider: B };
  return await signTransaction(pe), { hex: ie, base64: oe };
}
async function satsConnectWalletSignMessage(B, L, V, J = "mainnet") {
  if (J === "signet") throw new OrditSDKError("signet network is not supported");
  if (!L || !J || !V) throw new OrditSDKError("Invalid options provided");
  let re, ne = null;
  const ie = { payload: { network: { type: NETWORK_TO_BITCOIN_NETWORK_TYPE[J] }, message: L, address: V }, getProvider: B, onFinish: (oe) => {
    if (!oe) throw new BrowserWalletSigningError("Failed to sign message using selected wallet");
    re = Buffer$D.from(oe, "base64").toString("hex"), ne = oe;
  }, onCancel: () => {
    throw new BrowserWalletRequestCancelledByUserError();
  } };
  return await signMessage$5(ie), { hex: re, base64: ne };
}
async function getMagicEdenWalletProvider() {
  const { get: B } = getWallets(), L = B().find((V) => {
    var J, re;
    return V.name === "Magic Eden" && ((re = (J = V.features["sats-connect:"]) == null ? void 0 : J.provider) == null ? void 0 : re.isMagicEden) === !0;
  });
  if (!L) throw new BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");
  return L.features["sats-connect:"].provider;
}
async function isInstalled$3() {
  if (typeof window > "u") throw new OrditSDKError("Cannot call this function outside a browser");
  try {
    const B = await getMagicEdenWalletProvider();
    return B.isMagicEden !== void 0 && B.isMagicEden === !0;
  } catch (B) {
    if (B instanceof BrowserWalletNotInstalledError) return !1;
    throw B;
  }
}
async function getAddresses$2(B = "mainnet") {
  if (!isInstalled$3()) throw new BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");
  if (B !== "mainnet") throw new BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");
  return satsConnectWalletGetAddresses(getMagicEdenWalletProvider, B);
}
async function signPsbt$4(B, { finalize: L = !0, extractTx: V = !0, network: J, inputsToSign: re } = { network: "mainnet", inputsToSign: [] }) {
  if (!isInstalled$3()) throw new BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");
  if (J !== "mainnet") throw new BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");
  return satsConnectWalletSignPsbt(getMagicEdenWalletProvider, B, { finalize: L, extractTx: V, network: J, inputsToSign: re });
}
async function signMessage$4(B, L, V = "mainnet") {
  if (!isInstalled$3()) throw new BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");
  if (V !== "mainnet") throw new BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");
  return satsConnectWalletSignMessage(getMagicEdenWalletProvider, B, L, V);
}
src$4.initEccLib(ecc);
const NETWORK_TO_UNISAT_NETWORK = { mainnet: "livenet", testnet: "testnet" };
function isInstalled$2() {
  if (typeof window > "u") throw new OrditSDKError("Cannot call this function outside a browser");
  return window.unisat !== void 0;
}
async function getAddresses$1(B = "mainnet", L) {
  if (B === "signet") throw new OrditSDKError("signet network is not supported");
  if (!isInstalled$2()) throw new BrowserWalletNotInstalledError("Unisat not installed");
  try {
    const V = await window.unisat.getNetwork(), J = NETWORK_TO_UNISAT_NETWORK[B];
    V !== J && await window.unisat.switchNetwork(J);
    const re = L ? await window.unisat.getAccounts() : await window.unisat.requestAccounts(), ne = await window.unisat.getPublicKey(), ie = re[0];
    return ie ? [{ publicKey: ne, address: ie, format: getAddressFormat(ie, B) }] : [];
  } catch (V) {
    if (V instanceof OrditSDKError) throw V;
    const J = V;
    throw (J == null ? void 0 : J.code) === 4001 ? new BrowserWalletRequestCancelledByUserError() : new OrditSDKError(J.message);
  }
}
async function signPsbt$3(B, { finalize: L = !0, extractTx: V = !0 } = {}) {
  if (!isInstalled$2()) throw new BrowserWalletNotInstalledError("Unisat not installed");
  if (V && !L) throw new BrowserWalletExtractTxFromNonFinalizedPsbtError();
  const J = B.toHex();
  let re = "";
  try {
    re = await window.unisat.signPsbt(J, { autoFinalized: L });
  } catch (ie) {
    const oe = ie;
    if ((oe == null ? void 0 : oe.code) === 4001) throw new BrowserWalletRequestCancelledByUserError();
  }
  if (!re) throw new BrowserWalletSigningError("Failed to sign psbt hex using Unisat");
  const ne = src$4.Psbt.fromHex(re);
  if (!V) return { base64: ne.toBase64(), hex: ne.toHex() };
  try {
    return { base64: null, hex: ne.extractTransaction().toHex() };
  } catch (ie) {
    throw ie instanceof Error && ie.message === "Not finalized" ? new BrowserWalletExtractTxFromNonFinalizedPsbtError() : new OrditSDKError("Failed to extract transaction from PSBT");
  }
}
async function signMessage$3(B, L = "ecdsa") {
  if (!isInstalled$2()) throw new BrowserWalletNotInstalledError("Unisat not installed");
  let V = "";
  try {
    V = await window.unisat.signMessage(B, L);
  } catch (J) {
    const re = J;
    if ((re == null ? void 0 : re.code) === 4001) throw new BrowserWalletRequestCancelledByUserError();
  }
  if (!V) throw new BrowserWalletSigningError("Failed to sign message using Unisat");
  return { base64: V, hex: Buffer$D.from(V, "base64").toString("hex") };
}
function isInstalled$1() {
  var B;
  if (typeof window > "u") throw new OrditSDKError("Cannot call this function outside a browser");
  return ((B = window.XverseProviders) == null ? void 0 : B.BitcoinProvider) !== void 0;
}
async function getXverseWalletProvider() {
  if (!isInstalled$1()) throw new BrowserWalletNotInstalledError("Selected wallet not installed");
  return window.XverseProviders.BitcoinProvider;
}
async function getAddresses(B = "mainnet") {
  if (!isInstalled$1()) throw new BrowserWalletNotInstalledError("Selected wallet not installed");
  return satsConnectWalletGetAddresses(getXverseWalletProvider, B);
}
async function signPsbt$2(B, { finalize: L = !0, extractTx: V = !0, network: J, inputsToSign: re } = { network: "mainnet", inputsToSign: [] }) {
  if (!isInstalled$1()) throw new BrowserWalletNotInstalledError("Selected wallet not installed");
  return satsConnectWalletSignPsbt(getXverseWalletProvider, B, { finalize: L, extractTx: V, network: J, inputsToSign: re });
}
async function signMessage$2(B, L, V = "mainnet") {
  if (!isInstalled$1()) throw new BrowserWalletNotInstalledError("Selected wallet not installed");
  return satsConnectWalletSignMessage(getXverseWalletProvider, B, L, V);
}
function isMobileUserAgent() {
  return typeof window < "u" && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent);
}
async function waitForUnisatExtensionReady() {
  let B = 0;
  for (; B < 20; ) {
    if (typeof window < "u" && window.unisat) try {
      const L = await window.unisat.getAccounts();
      if (L && L.length > 0) return !0;
    } catch {
      break;
    }
    B += 1, await new Promise((L) => {
      setTimeout(L, 100);
    });
  }
  return !1;
}
const LoadingIcon = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20200%20200'%3e%3cradialGradient%20id='a12'%20cx='.66'%20fx='.66'%20cy='.3125'%20fy='.3125'%20gradientTransform='scale(1.5)'%3e%3cstop%20offset='0'%20stop-color='%23D9D5D2'%3e%3c/stop%3e%3cstop%20offset='.3'%20stop-color='%23D9D5D2'%20stop-opacity='.9'%3e%3c/stop%3e%3cstop%20offset='.6'%20stop-color='%23D9D5D2'%20stop-opacity='.6'%3e%3c/stop%3e%3cstop%20offset='.8'%20stop-color='%23D9D5D2'%20stop-opacity='.3'%3e%3c/stop%3e%3cstop%20offset='1'%20stop-color='%23D9D5D2'%20stop-opacity='0'%3e%3c/stop%3e%3c/radialGradient%3e%3ccircle%20transform-origin='center'%20fill='none'%20stroke='url(%23a12)'%20stroke-width='15'%20stroke-linecap='round'%20stroke-dasharray='200%201000'%20stroke-dashoffset='0'%20cx='100'%20cy='100'%20r='70'%3e%3canimateTransform%20type='rotate'%20attributeName='transform'%20calcMode='spline'%20dur='2'%20values='360;0'%20keyTimes='0;1'%20keySplines='0%200%201%201'%20repeatCount='indefinite'%3e%3c/animateTransform%3e%3c/circle%3e%3ccircle%20transform-origin='center'%20fill='none'%20opacity='.2'%20stroke='%23D9D5D2'%20stroke-width='15'%20stroke-linecap='round'%20cx='100'%20cy='100'%20r='70'%3e%3c/circle%3e%3c/svg%3e", WALLET_TO_NAME = { [Wallet.MAGICEDEN]: "Magic Eden", [Wallet.UNISAT]: "UniSat", [Wallet.XVERSE]: "Xverse", [Wallet.LEATHER]: "Leather", [Wallet.OKX]: "OKX" };
function WalletButton({ wallet: B, subtitle: L, onConnect: V, icon: J, setErrorMessage: re, isDisabled: ne, isMobileDevice: ie }) {
  const { wallet: oe, address: pe } = useWallie(), [{ connectedWallet: ce, connectedAddress: Oe }] = useState({ connectedWallet: oe, connectedAddress: pe }), [rt, ut] = useState(!1), dt = WALLET_TO_NAME[B], ht = useCallback(async () => {
    ut(!0), await Promise.race([V().then(() => ut(!1)).catch(() => ut(!1)), new Promise((bt) => {
      setTimeout(() => bt("timeout"), 5e3);
    })]) === "timeout" ? re("No wallet pop-up? The extension is not responding. Try reloading your browser.") : ut(!1);
  }, [V, re]);
  return jsxRuntimeExports.jsxs("button", { type: "button", className: "wallie-w-full wallie-flex wallie-flex-row wallie-justify-between wallie-items-center wallie-text-ord-light-gray wallie-bg-ord-light-blue wallie-hover:bg-ord-light-blue-250 wallie-p-2 wallie-rounded-lg md:wallie-text-xl wallie-space-x-4 md:space-x-6 wallie-ease-in wallie-transition-all wallie-duration-100 wallie-ease-in-outscale-120", onClick: ht, disabled: ne, children: [jsxRuntimeExports.jsxs("div", { className: "wallie-flex wallie-flex-row wallie-space-x-2", children: [jsxRuntimeExports.jsx("img", { className: "wallie-w-5 md:wallie-w-8", src: J, alt: "" }), jsxRuntimeExports.jsx("span", { className: "wallie-text-lg wallie-block wallie-font-medium", children: dt }), jsxRuntimeExports.jsx("span", { className: "wallie-text-sm wallie-font-medium", style: { display: ie ? "block" : "none" }, children: L })] }), ce === B && Oe.ordinals ? jsxRuntimeExports.jsx("div", { className: "wallie-flex wallie-flex-row wallie-ml-auto", children: jsxRuntimeExports.jsx("span", { className: "wallie-text-sm wallie-font-medium wallie-pr-3", children: truncateMiddle(Oe.ordinals) }) }) : null, rt && jsxRuntimeExports.jsx("img", { src: LoadingIcon, width: 24, alt: `${dt} extension is loading` })] });
}
const WALLET_CHROME_EXTENSION_URL = { [Wallet.OKX]: "https://www.okx.com/web3", [Wallet.XVERSE]: "https://www.xverse.app/download", [Wallet.LEATHER]: "https://leather.io/install-extension", [Wallet.MAGICEDEN]: "https://wallet.magiceden.io/", [Wallet.UNISAT]: "https://unisat.io/download" };
function SelectWalletModal({ isOpen: B, closeModal: L }) {
  const { updateAddress: V, network: J, updateWallet: re, updatePublicKey: ne, updateFormat: ie, wallet: oe, format: pe, address: ce, publicKey: Oe, disconnectWallet: rt } = useWallie(), [ut, dt] = useState(""), ht = isMobileUserAgent(), bt = useCallback((Bt, Pt) => {
    Pt instanceof BrowserWalletNotInstalledError && window.open(WALLET_CHROME_EXTENSION_URL[Bt], "_blank", "noopener,noreferrer"), dt(Pt.message ?? Pt.toString()), rt();
  }, [rt]), Tt = useCallback(async () => {
    if (J === "testnet") {
      const Bt = new Error("Magic Eden wallet is not supported on testnet");
      return bt(Wallet.MAGICEDEN, Bt), !1;
    }
    try {
      dt("");
      const Bt = await getAddresses$2(J);
      if (!Bt || Bt.length < 1) throw rt(), new Error("Magic Eden via Ordit returned no addresses.");
      const Pt = Bt.find((Gt) => Gt.format === "segwit" || Gt.format === "p2sh-p2wpkh");
      if (!Pt) throw new Error("Magic Eden via Ordit did not return a P2SH or Segwit address.");
      const Dt = Bt.find((Gt) => Gt.format === "taproot");
      if (!Dt) throw new Error("Magic Eden via Ordit did not return a Taproot address.");
      return V({ ordinals: Dt.address, payments: Pt.address }), ne({ ordinals: Dt.publicKey, payments: Pt.publicKey }), re(Wallet.MAGICEDEN), ie({ ordinals: Dt.format, payments: Pt.format }), L(), !0;
    } catch (Bt) {
      return bt(Wallet.MAGICEDEN, Bt), !1;
    }
  }, [L, rt, J, bt, V, ie, ne, re]), wt = useCallback(async ({ readOnly: Bt } = {}) => {
    try {
      dt("");
      const Pt = await getAddresses$1(J, Bt);
      if (!Pt || Pt.length < 1) throw rt(), new Error("Unisat via Ordit returned no addresses.");
      const Dt = Pt[0];
      return V({ ordinals: Dt.address, payments: Dt.address }), ne({ ordinals: Dt.publicKey, payments: Dt.publicKey }), re(Wallet.UNISAT), ie({ ordinals: Dt.format, payments: Dt.format }), L(), !0;
    } catch (Pt) {
      return bt(Wallet.UNISAT, Pt), !1;
    }
  }, [L, rt, J, bt, V, ie, ne, re]), Et = useCallback(async () => {
    try {
      dt("");
      const Bt = await getAddresses(J);
      if (!Bt || Bt.length < 1) throw rt(), new Error("Xverse via Ordit returned no addresses.");
      const Pt = Bt.find((Gt) => Gt.format === "p2sh-p2wpkh" || Gt.format === "segwit");
      if (!Pt) throw new Error("Xverse via Ordit did not return a P2SH or Segwit address.");
      const Dt = Bt.find((Gt) => Gt.format === "taproot");
      if (!Dt) throw new Error("Xverse via Ordit did not return a Taproot address.");
      return V({ ordinals: Dt.address, payments: Pt.address }), ne({ ordinals: Dt.publicKey, payments: Pt.publicKey }), re(Wallet.XVERSE), ie({ ordinals: Dt.format, payments: Pt.format }), L(), !0;
    } catch (Bt) {
      return bt(Wallet.XVERSE, Bt), !1;
    }
  }, [L, rt, J, bt, V, ie, ne, re]), Rt = useCallback(async () => {
    try {
      dt("");
      const Bt = await getAddresses$3(J);
      if (!Bt || Bt.length < 1) throw rt(), new Error("Leather via Ordit returned no addresses.");
      const Pt = Bt.find((Gt) => Gt.format === "segwit");
      if (!Pt) throw new Error("Leather via Ordit did not return a Segwit address.");
      const Dt = Bt.find((Gt) => Gt.format === "taproot");
      if (!Dt) throw new Error("Leather via Ordit did not return a Taproot address.");
      return V({ ordinals: Dt.address, payments: Pt.address }), ne({ ordinals: Dt.publicKey, payments: Pt.publicKey }), re(Wallet.LEATHER), ie({ ordinals: Dt.format, payments: Pt.format }), L(), !0;
    } catch (Bt) {
      return bt(Wallet.LEATHER, Bt), !1;
    }
  }, [L, rt, J, bt, V, ie, ne, re]);
  return useEffect(() => {
    if (oe !== Wallet.UNISAT) return;
    let Bt = !0, Pt = !1;
    const Dt = () => wt();
    return ce && Oe && pe && (async () => {
      const Gt = await waitForUnisatExtensionReady();
      Bt && (Gt ? (Pt = await wt({ readOnly: !0 }), Bt && Pt && window.unisat.addListener("accountsChanged", Dt)) : rt());
    })(), () => {
      Bt = !1, Pt && window.unisat.removeListener("accountsChanged", Dt);
    };
  }, [oe, wt, rt, ce, Oe, pe]), jsxRuntimeExports.jsx(qe, { appear: !0, show: B, as: Fragment, children: jsxRuntimeExports.jsxs(_t, { as: "div", className: "wallie-z-50 wallie-fixed wallie-inset-0 wallie-overflow-y-auto", onClose: L, children: [jsxRuntimeExports.jsx(qe.Child, { as: Fragment, enter: "wallie-ease-out wallie-duration-300", enterFrom: "wallie-opacity-0", enterTo: "wallie-opacity-100", leave: "wallie-ease-in wallie-duration-200", leaveFrom: "wallie-opacity-100", leaveTo: "wallie-opacity-0", children: jsxRuntimeExports.jsx("div", { className: "wallie-fixed wallie-inset-0 wallie-bg-black wallie-bg-opacity-90 md:wallie-bg-opacity-75 wallie-transition-opacity" }) }), jsxRuntimeExports.jsx("section", { className: "wallie-fixed wallie-inset-0 wallie-z-10 wallie-overflow-y-auto", children: jsxRuntimeExports.jsx("div", { className: "wallie-flex wallie-min-h-full wallie-w-full md:wallie-w-96 wallie-mx-auto wallie-items-end wallie-justify-center wallie-p-4 wallie-text-left sm:wallie-items-center sm:wallie-p-0", children: jsxRuntimeExports.jsx(qe.Child, { as: Fragment, enter: "wallie-ease-out wallie-duration-300", enterFrom: "wallie-opacity-0 wallie-scale-95", enterTo: "wallie-opacity-100 wallie-scale-100", leave: "wallie-ease-in wallie-duration-200", leaveFrom: "wallie-opacity-100 wallie-scale-100", leaveTo: "wallie-opacity-0 wallie-scale-95", children: jsxRuntimeExports.jsxs(_t.Panel, { className: "wallie-relative wallie-bg-ord-blue-600 wallie-transform wallie-overflow-hidden wallie-rounded-lg wallie-p-8 wallie-transition-all wallie-w-full", children: [jsxRuntimeExports.jsxs("section", { className: "wallie-flex wallie-flex-row", children: [jsxRuntimeExports.jsx(_t.Title, { as: "h3", className: "wallie-text-[21px] wallie-font-medium wallie-leading-8 wallie--mt-1  wallie-text-ord-gray", children: "Connect a wallet to continue" }), jsxRuntimeExports.jsx("button", { type: "button", onClick: L, className: "wallie-ml-auto", children: jsxRuntimeExports.jsx("img", { src: CloseModalIcon, alt: "close modal", className: "wallie-w-[19px] wallie-h-[19px]" }) })] }), jsxRuntimeExports.jsx("p", { className: "wallie-text-ord-light-blue-400 wallie-font-medium wallie-py-3", children: "Choose a wallet below to connect and continue" }), ut && jsxRuntimeExports.jsx("p", { className: "wallie-text-ord-alert wallie-pb-4", children: ut }), jsxRuntimeExports.jsx("section", { className: "wallie-w-full", children: jsxRuntimeExports.jsxs("section", { className: "wallie-w-full wallie-space-y-4", children: [jsxRuntimeExports.jsx(WalletButton, { wallet: Wallet.LEATHER, subtitle: "Coming soon on mobile browsing", onConnect: Rt, icon: LeatherWalletIcon, setErrorMessage: dt, isDisabled: ht, isMobileDevice: ht }), jsxRuntimeExports.jsx(WalletButton, { wallet: Wallet.XVERSE, subtitle: "", onConnect: Et, icon: XverseWalletIcon, setErrorMessage: dt, isMobileDevice: ht }), !ht && jsxRuntimeExports.jsx(WalletButton, { wallet: Wallet.UNISAT, subtitle: "Coming soon on mobile browsing", onConnect: wt, icon: UnisatWalletIcon, setErrorMessage: dt, isDisabled: ht, isMobileDevice: ht }), jsxRuntimeExports.jsx(WalletButton, { wallet: Wallet.MAGICEDEN, subtitle: "", onConnect: Tt, icon: MagicEdenWalletIcon, setErrorMessage: dt, isMobileDevice: ht })] }) })] }) }) }) })] }) });
}
function OrdConnectKit({ connectButton: B, connectButtonComponent: L, hideConnectButton: V, onViewProfile: J, onChangeWalletClick: re, onDisconnectWalletClick: ne }) {
  const { address: ie, disconnectWallet: oe, network: pe, isModalOpen: ce, openModal: Oe, closeModal: rt } = useWallie(), ut = useHasMounted();
  return jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [V ? null : ie != null && ie.ordinals ? jsxRuntimeExports.jsx(PostConnectButton, { address: ie.ordinals, network: pe, onViewProfile: J, onChangeWallet: () => {
    Oe(), re == null || re();
  }, onDisconnectWallet: () => {
    oe(), ne == null || ne();
  } }) : jsxRuntimeExports.jsx(PreConnectButton, { disabled: !ut, connectButton: B, connectButtonComponent: L, openModal: Oe }), ut ? jsxRuntimeExports.jsx(SelectWalletModal, { isOpen: ce, closeModal: rt }) : null] });
}
var isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, mathceil = Math.ceil, mathfloor = Math.floor, bignumberError = "[BigNumber Error] ", tooManyDigits = bignumberError + "Number primitive has more than 15 significant digits: ", BASE = 1e14, LOG_BASE = 14, MAX_SAFE_INTEGER = 9007199254740991, POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], SQRT_BASE = 1e7, MAX = 1e9;
function clone(B) {
  var L, V, J, re, ne, ie, oe, pe, ce, Oe, rt = lt.prototype = { constructor: lt, toString: null, valueOf: null }, ut = new lt(1), dt = 20, ht = 4, bt = -7, Tt = 21, wt = -1e7, Et = 1e7, Rt = !1, Bt = 1, Pt = 0, Dt = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: " ", suffix: "" }, Gt = "0123456789abcdefghijklmnopqrstuvwxyz", at = !0;
  function lt(ke, ct) {
    var yt, $t, gt, xt, At, mt, St, Mt, It = this;
    if (!(It instanceof lt)) return new lt(ke, ct);
    if (ct == null) {
      if (ke && ke._isBigNumber === !0) return It.s = ke.s, void (!ke.c || ke.e > Et ? It.c = It.e = null : ke.e < wt ? It.c = [It.e = 0] : (It.e = ke.e, It.c = ke.c.slice()));
      if ((mt = typeof ke == "number") && 0 * ke == 0) {
        if (It.s = 1 / ke < 0 ? (ke = -ke, -1) : 1, ke === ~~ke) {
          for (xt = 0, At = ke; At >= 10; At /= 10, xt++) ;
          return void (xt > Et ? It.c = It.e = null : (It.e = xt, It.c = [ke]));
        }
        Mt = String(ke);
      } else {
        if (!isNumeric.test(Mt = String(ke))) return J(It, Mt, mt);
        It.s = Mt.charCodeAt(0) == 45 ? (Mt = Mt.slice(1), -1) : 1;
      }
      (xt = Mt.indexOf(".")) > -1 && (Mt = Mt.replace(".", "")), (At = Mt.search(/e/i)) > 0 ? (xt < 0 && (xt = At), xt += +Mt.slice(At + 1), Mt = Mt.substring(0, At)) : xt < 0 && (xt = Mt.length);
    } else {
      if (intCheck(ct, 2, Gt.length, "Base"), ct == 10 && at) return nt(It = new lt(ke), dt + It.e + 1, ht);
      if (Mt = String(ke), mt = typeof ke == "number") {
        if (0 * ke != 0) return J(It, Mt, mt, ct);
        if (It.s = 1 / ke < 0 ? (Mt = Mt.slice(1), -1) : 1, lt.DEBUG && Mt.replace(/^0\.0*|\./, "").length > 15) throw Error(tooManyDigits + ke);
      } else It.s = Mt.charCodeAt(0) === 45 ? (Mt = Mt.slice(1), -1) : 1;
      for (yt = Gt.slice(0, ct), xt = At = 0, St = Mt.length; At < St; At++) if (yt.indexOf($t = Mt.charAt(At)) < 0) {
        if ($t == ".") {
          if (At > xt) {
            xt = St;
            continue;
          }
        } else if (!gt && (Mt == Mt.toUpperCase() && (Mt = Mt.toLowerCase()) || Mt == Mt.toLowerCase() && (Mt = Mt.toUpperCase()))) {
          gt = !0, At = -1, xt = 0;
          continue;
        }
        return J(It, String(ke), mt, ct);
      }
      mt = !1, (xt = (Mt = V(Mt, ct, 10, It.s)).indexOf(".")) > -1 ? Mt = Mt.replace(".", "") : xt = Mt.length;
    }
    for (At = 0; Mt.charCodeAt(At) === 48; At++) ;
    for (St = Mt.length; Mt.charCodeAt(--St) === 48; ) ;
    if (Mt = Mt.slice(At, ++St)) {
      if (St -= At, mt && lt.DEBUG && St > 15 && (ke > MAX_SAFE_INTEGER || ke !== mathfloor(ke))) throw Error(tooManyDigits + It.s * ke);
      if ((xt = xt - At - 1) > Et) It.c = It.e = null;
      else if (xt < wt) It.c = [It.e = 0];
      else {
        if (It.e = xt, It.c = [], At = (xt + 1) % LOG_BASE, xt < 0 && (At += LOG_BASE), At < St) {
          for (At && It.c.push(+Mt.slice(0, At)), St -= LOG_BASE; At < St; ) It.c.push(+Mt.slice(At, At += LOG_BASE));
          At = LOG_BASE - (Mt = Mt.slice(At)).length;
        } else At -= St;
        for (; At--; Mt += "0") ;
        It.c.push(+Mt);
      }
    } else It.c = [It.e = 0];
  }
  function Ce(ke, ct, yt, $t) {
    var gt, xt, At, mt, St;
    if (yt == null ? yt = ht : intCheck(yt, 0, 8), !ke.c) return ke.toString();
    if (gt = ke.c[0], At = ke.e, ct == null) St = coeffToString(ke.c), St = $t == 1 || $t == 2 && (At <= bt || At >= Tt) ? toExponential(St, At) : toFixedPoint(St, At, "0");
    else if (xt = (ke = nt(new lt(ke), ct, yt)).e, mt = (St = coeffToString(ke.c)).length, $t == 1 || $t == 2 && (ct <= xt || xt <= bt)) {
      for (; mt < ct; St += "0", mt++) ;
      St = toExponential(St, xt);
    } else if (ct -= At, St = toFixedPoint(St, xt, "0"), xt + 1 > mt) {
      if (--ct > 0) for (St += "."; ct--; St += "0") ;
    } else if ((ct += xt - mt) > 0) for (xt + 1 == mt && (St += "."); ct--; St += "0") ;
    return ke.s < 0 && gt ? "-" + St : St;
  }
  function st(ke, ct) {
    for (var yt, $t, gt = 1, xt = new lt(ke[0]); gt < ke.length; gt++) (!($t = new lt(ke[gt])).s || (yt = compare(xt, $t)) === ct || yt === 0 && xt.s === ct) && (xt = $t);
    return xt;
  }
  function it(ke, ct, yt) {
    for (var $t = 1, gt = ct.length; !ct[--gt]; ct.pop()) ;
    for (gt = ct[0]; gt >= 10; gt /= 10, $t++) ;
    return (yt = $t + yt * LOG_BASE - 1) > Et ? ke.c = ke.e = null : yt < wt ? ke.c = [ke.e = 0] : (ke.e = yt, ke.c = ct), ke;
  }
  function nt(ke, ct, yt, $t) {
    var gt, xt, At, mt, St, Mt, It, Ft = ke.c, Vt = POWS_TEN;
    if (Ft) {
      e: {
        for (gt = 1, mt = Ft[0]; mt >= 10; mt /= 10, gt++) ;
        if ((xt = ct - gt) < 0) xt += LOG_BASE, At = ct, St = Ft[Mt = 0], It = mathfloor(St / Vt[gt - At - 1] % 10);
        else if ((Mt = mathceil((xt + 1) / LOG_BASE)) >= Ft.length) {
          if (!$t) break e;
          for (; Ft.length <= Mt; Ft.push(0)) ;
          St = It = 0, gt = 1, At = (xt %= LOG_BASE) - LOG_BASE + 1;
        } else {
          for (St = mt = Ft[Mt], gt = 1; mt >= 10; mt /= 10, gt++) ;
          It = (At = (xt %= LOG_BASE) - LOG_BASE + gt) < 0 ? 0 : mathfloor(St / Vt[gt - At - 1] % 10);
        }
        if ($t = $t || ct < 0 || Ft[Mt + 1] != null || (At < 0 ? St : St % Vt[gt - At - 1]), $t = yt < 4 ? (It || $t) && (yt == 0 || yt == (ke.s < 0 ? 3 : 2)) : It > 5 || It == 5 && (yt == 4 || $t || yt == 6 && (xt > 0 ? At > 0 ? St / Vt[gt - At] : 0 : Ft[Mt - 1]) % 10 & 1 || yt == (ke.s < 0 ? 8 : 7)), ct < 1 || !Ft[0]) return Ft.length = 0, $t ? (ct -= ke.e + 1, Ft[0] = Vt[(LOG_BASE - ct % LOG_BASE) % LOG_BASE], ke.e = -ct || 0) : Ft[0] = ke.e = 0, ke;
        if (xt == 0 ? (Ft.length = Mt, mt = 1, Mt--) : (Ft.length = Mt + 1, mt = Vt[LOG_BASE - xt], Ft[Mt] = At > 0 ? mathfloor(St / Vt[gt - At] % Vt[At]) * mt : 0), $t) for (; ; ) {
          if (Mt == 0) {
            for (xt = 1, At = Ft[0]; At >= 10; At /= 10, xt++) ;
            for (At = Ft[0] += mt, mt = 1; At >= 10; At /= 10, mt++) ;
            xt != mt && (ke.e++, Ft[0] == BASE && (Ft[0] = 1));
            break;
          }
          if (Ft[Mt] += mt, Ft[Mt] != BASE) break;
          Ft[Mt--] = 0, mt = 1;
        }
        for (xt = Ft.length; Ft[--xt] === 0; Ft.pop()) ;
      }
      ke.e > Et ? ke.c = ke.e = null : ke.e < wt && (ke.c = [ke.e = 0]);
    }
    return ke;
  }
  function ot(ke) {
    var ct, yt = ke.e;
    return yt === null ? ke.toString() : (ct = coeffToString(ke.c), ct = yt <= bt || yt >= Tt ? toExponential(ct, yt) : toFixedPoint(ct, yt, "0"), ke.s < 0 ? "-" + ct : ct);
  }
  return lt.clone = clone, lt.ROUND_UP = 0, lt.ROUND_DOWN = 1, lt.ROUND_CEIL = 2, lt.ROUND_FLOOR = 3, lt.ROUND_HALF_UP = 4, lt.ROUND_HALF_DOWN = 5, lt.ROUND_HALF_EVEN = 6, lt.ROUND_HALF_CEIL = 7, lt.ROUND_HALF_FLOOR = 8, lt.EUCLID = 9, lt.config = lt.set = function(ke) {
    var ct, yt;
    if (ke != null) {
      if (typeof ke != "object") throw Error(bignumberError + "Object expected: " + ke);
      if (ke.hasOwnProperty(ct = "DECIMAL_PLACES") && (intCheck(yt = ke[ct], 0, MAX, ct), dt = yt), ke.hasOwnProperty(ct = "ROUNDING_MODE") && (intCheck(yt = ke[ct], 0, 8, ct), ht = yt), ke.hasOwnProperty(ct = "EXPONENTIAL_AT") && ((yt = ke[ct]) && yt.pop ? (intCheck(yt[0], -MAX, 0, ct), intCheck(yt[1], 0, MAX, ct), bt = yt[0], Tt = yt[1]) : (intCheck(yt, -MAX, MAX, ct), bt = -(Tt = yt < 0 ? -yt : yt))), ke.hasOwnProperty(ct = "RANGE")) if ((yt = ke[ct]) && yt.pop) intCheck(yt[0], -MAX, -1, ct), intCheck(yt[1], 1, MAX, ct), wt = yt[0], Et = yt[1];
      else {
        if (intCheck(yt, -MAX, MAX, ct), !yt) throw Error(bignumberError + ct + " cannot be zero: " + yt);
        wt = -(Et = yt < 0 ? -yt : yt);
      }
      if (ke.hasOwnProperty(ct = "CRYPTO")) {
        if ((yt = ke[ct]) !== !!yt) throw Error(bignumberError + ct + " not true or false: " + yt);
        if (yt) {
          if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw Rt = !yt, Error(bignumberError + "crypto unavailable");
          Rt = yt;
        } else Rt = yt;
      }
      if (ke.hasOwnProperty(ct = "MODULO_MODE") && (intCheck(yt = ke[ct], 0, 9, ct), Bt = yt), ke.hasOwnProperty(ct = "POW_PRECISION") && (intCheck(yt = ke[ct], 0, MAX, ct), Pt = yt), ke.hasOwnProperty(ct = "FORMAT")) {
        if (typeof (yt = ke[ct]) != "object") throw Error(bignumberError + ct + " not an object: " + yt);
        Dt = yt;
      }
      if (ke.hasOwnProperty(ct = "ALPHABET")) {
        if (typeof (yt = ke[ct]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(yt)) throw Error(bignumberError + ct + " invalid: " + yt);
        at = yt.slice(0, 10) == "0123456789", Gt = yt;
      }
    }
    return { DECIMAL_PLACES: dt, ROUNDING_MODE: ht, EXPONENTIAL_AT: [bt, Tt], RANGE: [wt, Et], CRYPTO: Rt, MODULO_MODE: Bt, POW_PRECISION: Pt, FORMAT: Dt, ALPHABET: Gt };
  }, lt.isBigNumber = function(ke) {
    if (!ke || ke._isBigNumber !== !0) return !1;
    if (!lt.DEBUG) return !0;
    var ct, yt, $t = ke.c, gt = ke.e, xt = ke.s;
    e: if ({}.toString.call($t) == "[object Array]") {
      if ((xt === 1 || xt === -1) && gt >= -MAX && gt <= MAX && gt === mathfloor(gt)) {
        if ($t[0] === 0) {
          if (gt === 0 && $t.length === 1) return !0;
          break e;
        }
        if ((ct = (gt + 1) % LOG_BASE) < 1 && (ct += LOG_BASE), String($t[0]).length == ct) {
          for (ct = 0; ct < $t.length; ct++) if ((yt = $t[ct]) < 0 || yt >= BASE || yt !== mathfloor(yt)) break e;
          if (yt !== 0) return !0;
        }
      }
    } else if ($t === null && gt === null && (xt === null || xt === 1 || xt === -1)) return !0;
    throw Error(bignumberError + "Invalid BigNumber: " + ke);
  }, lt.maximum = lt.max = function() {
    return st(arguments, -1);
  }, lt.minimum = lt.min = function() {
    return st(arguments, 1);
  }, lt.random = (re = 9007199254740992, ne = Math.random() * re & 2097151 ? function() {
    return mathfloor(Math.random() * re);
  } : function() {
    return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
  }, function(ke) {
    var ct, yt, $t, gt, xt, At = 0, mt = [], St = new lt(ut);
    if (ke == null ? ke = dt : intCheck(ke, 0, MAX), gt = mathceil(ke / LOG_BASE), Rt) if (crypto.getRandomValues) {
      for (ct = crypto.getRandomValues(new Uint32Array(gt *= 2)); At < gt; ) (xt = 131072 * ct[At] + (ct[At + 1] >>> 11)) >= 9e15 ? (yt = crypto.getRandomValues(new Uint32Array(2)), ct[At] = yt[0], ct[At + 1] = yt[1]) : (mt.push(xt % 1e14), At += 2);
      At = gt / 2;
    } else {
      if (!crypto.randomBytes) throw Rt = !1, Error(bignumberError + "crypto unavailable");
      for (ct = crypto.randomBytes(gt *= 7); At < gt; ) (xt = 281474976710656 * (31 & ct[At]) + 1099511627776 * ct[At + 1] + 4294967296 * ct[At + 2] + 16777216 * ct[At + 3] + (ct[At + 4] << 16) + (ct[At + 5] << 8) + ct[At + 6]) >= 9e15 ? crypto.randomBytes(7).copy(ct, At) : (mt.push(xt % 1e14), At += 7);
      At = gt / 7;
    }
    if (!Rt) for (; At < gt; ) (xt = ne()) < 9e15 && (mt[At++] = xt % 1e14);
    for (gt = mt[--At], ke %= LOG_BASE, gt && ke && (xt = POWS_TEN[LOG_BASE - ke], mt[At] = mathfloor(gt / xt) * xt); mt[At] === 0; mt.pop(), At--) ;
    if (At < 0) mt = [$t = 0];
    else {
      for ($t = -1; mt[0] === 0; mt.splice(0, 1), $t -= LOG_BASE) ;
      for (At = 1, xt = mt[0]; xt >= 10; xt /= 10, At++) ;
      At < LOG_BASE && ($t -= LOG_BASE - At);
    }
    return St.e = $t, St.c = mt, St;
  }), lt.sum = function() {
    for (var ke = 1, ct = arguments, yt = new lt(ct[0]); ke < ct.length; ) yt = yt.plus(ct[ke++]);
    return yt;
  }, V = /* @__PURE__ */ function() {
    var ke = "0123456789";
    function ct(yt, $t, gt, xt) {
      for (var At, mt, St = [0], Mt = 0, It = yt.length; Mt < It; ) {
        for (mt = St.length; mt--; St[mt] *= $t) ;
        for (St[0] += xt.indexOf(yt.charAt(Mt++)), At = 0; At < St.length; At++) St[At] > gt - 1 && (St[At + 1] == null && (St[At + 1] = 0), St[At + 1] += St[At] / gt | 0, St[At] %= gt);
      }
      return St.reverse();
    }
    return function(yt, $t, gt, xt, At) {
      var mt, St, Mt, It, Ft, Vt, qt, er, tr = yt.indexOf("."), Jt = dt, ur = ht;
      for (tr >= 0 && (It = Pt, Pt = 0, yt = yt.replace(".", ""), Vt = (er = new lt($t)).pow(yt.length - tr), Pt = It, er.c = ct(toFixedPoint(coeffToString(Vt.c), Vt.e, "0"), 10, gt, ke), er.e = er.c.length), Mt = It = (qt = ct(yt, $t, gt, At ? (mt = Gt, ke) : (mt = ke, Gt))).length; qt[--It] == 0; qt.pop()) ;
      if (!qt[0]) return mt.charAt(0);
      if (tr < 0 ? --Mt : (Vt.c = qt, Vt.e = Mt, Vt.s = xt, qt = (Vt = L(Vt, er, Jt, ur, gt)).c, Ft = Vt.r, Mt = Vt.e), tr = qt[St = Mt + Jt + 1], It = gt / 2, Ft = Ft || St < 0 || qt[St + 1] != null, Ft = ur < 4 ? (tr != null || Ft) && (ur == 0 || ur == (Vt.s < 0 ? 3 : 2)) : tr > It || tr == It && (ur == 4 || Ft || ur == 6 && 1 & qt[St - 1] || ur == (Vt.s < 0 ? 8 : 7)), St < 1 || !qt[0]) yt = Ft ? toFixedPoint(mt.charAt(1), -Jt, mt.charAt(0)) : mt.charAt(0);
      else {
        if (qt.length = St, Ft) for (--gt; ++qt[--St] > gt; ) qt[St] = 0, St || (++Mt, qt = [1].concat(qt));
        for (It = qt.length; !qt[--It]; ) ;
        for (tr = 0, yt = ""; tr <= It; yt += mt.charAt(qt[tr++])) ;
        yt = toFixedPoint(yt, Mt, mt.charAt(0));
      }
      return yt;
    };
  }(), L = /* @__PURE__ */ function() {
    function ke($t, gt, xt) {
      var At, mt, St, Mt, It = 0, Ft = $t.length, Vt = gt % SQRT_BASE, qt = gt / SQRT_BASE | 0;
      for ($t = $t.slice(); Ft--; ) It = ((mt = Vt * (St = $t[Ft] % SQRT_BASE) + (At = qt * St + (Mt = $t[Ft] / SQRT_BASE | 0) * Vt) % SQRT_BASE * SQRT_BASE + It) / xt | 0) + (At / SQRT_BASE | 0) + qt * Mt, $t[Ft] = mt % xt;
      return It && ($t = [It].concat($t)), $t;
    }
    function ct($t, gt, xt, At) {
      var mt, St;
      if (xt != At) St = xt > At ? 1 : -1;
      else for (mt = St = 0; mt < xt; mt++) if ($t[mt] != gt[mt]) {
        St = $t[mt] > gt[mt] ? 1 : -1;
        break;
      }
      return St;
    }
    function yt($t, gt, xt, At) {
      for (var mt = 0; xt--; ) $t[xt] -= mt, mt = $t[xt] < gt[xt] ? 1 : 0, $t[xt] = mt * At + $t[xt] - gt[xt];
      for (; !$t[0] && $t.length > 1; $t.splice(0, 1)) ;
    }
    return function($t, gt, xt, At, mt) {
      var St, Mt, It, Ft, Vt, qt, er, tr, Jt, ur, pr, dr, Pr, Sr, lr, kr, pt, vt = $t.s == gt.s ? 1 : -1, kt = $t.c, Ct = gt.c;
      if (!(kt && kt[0] && Ct && Ct[0])) return new lt($t.s && gt.s && (kt ? !Ct || kt[0] != Ct[0] : Ct) ? kt && kt[0] == 0 || !Ct ? 0 * vt : vt / 0 : NaN);
      for (Jt = (tr = new lt(vt)).c = [], vt = xt + (Mt = $t.e - gt.e) + 1, mt || (mt = BASE, Mt = bitFloor($t.e / LOG_BASE) - bitFloor(gt.e / LOG_BASE), vt = vt / LOG_BASE | 0), It = 0; Ct[It] == (kt[It] || 0); It++) ;
      if (Ct[It] > (kt[It] || 0) && Mt--, vt < 0) Jt.push(1), Ft = !0;
      else {
        for (Sr = kt.length, kr = Ct.length, It = 0, vt += 2, (Vt = mathfloor(mt / (Ct[0] + 1))) > 1 && (Ct = ke(Ct, Vt, mt), kt = ke(kt, Vt, mt), kr = Ct.length, Sr = kt.length), Pr = kr, pr = (ur = kt.slice(0, kr)).length; pr < kr; ur[pr++] = 0) ;
        pt = Ct.slice(), pt = [0].concat(pt), lr = Ct[0], Ct[1] >= mt / 2 && lr++;
        do {
          if (Vt = 0, (St = ct(Ct, ur, kr, pr)) < 0) {
            if (dr = ur[0], kr != pr && (dr = dr * mt + (ur[1] || 0)), (Vt = mathfloor(dr / lr)) > 1) for (Vt >= mt && (Vt = mt - 1), er = (qt = ke(Ct, Vt, mt)).length, pr = ur.length; ct(qt, ur, er, pr) == 1; ) Vt--, yt(qt, kr < er ? pt : Ct, er, mt), er = qt.length, St = 1;
            else Vt == 0 && (St = Vt = 1), er = (qt = Ct.slice()).length;
            if (er < pr && (qt = [0].concat(qt)), yt(ur, qt, pr, mt), pr = ur.length, St == -1) for (; ct(Ct, ur, kr, pr) < 1; ) Vt++, yt(ur, kr < pr ? pt : Ct, pr, mt), pr = ur.length;
          } else St === 0 && (Vt++, ur = [0]);
          Jt[It++] = Vt, ur[0] ? ur[pr++] = kt[Pr] || 0 : (ur = [kt[Pr]], pr = 1);
        } while ((Pr++ < Sr || ur[0] != null) && vt--);
        Ft = ur[0] != null, Jt[0] || Jt.splice(0, 1);
      }
      if (mt == BASE) {
        for (It = 1, vt = Jt[0]; vt >= 10; vt /= 10, It++) ;
        nt(tr, xt + (tr.e = It + Mt * LOG_BASE - 1) + 1, At, Ft);
      } else tr.e = Mt, tr.r = +Ft;
      return tr;
    };
  }(), ie = /^(-?)0([xbo])(?=\w[\w.]*$)/i, oe = /^([^.]+)\.$/, pe = /^\.([^.]+)$/, ce = /^-?(Infinity|NaN)$/, Oe = /^\s*\+(?=[\w.])|^\s+|\s+$/g, J = function(ke, ct, yt, $t) {
    var gt, xt = yt ? ct : ct.replace(Oe, "");
    if (ce.test(xt)) ke.s = isNaN(xt) ? null : xt < 0 ? -1 : 1;
    else {
      if (!yt && (xt = xt.replace(ie, function(At, mt, St) {
        return gt = (St = St.toLowerCase()) == "x" ? 16 : St == "b" ? 2 : 8, $t && $t != gt ? At : mt;
      }), $t && (gt = $t, xt = xt.replace(oe, "$1").replace(pe, "0.$1")), ct != xt)) return new lt(xt, gt);
      if (lt.DEBUG) throw Error(bignumberError + "Not a" + ($t ? " base " + $t : "") + " number: " + ct);
      ke.s = null;
    }
    ke.c = ke.e = null;
  }, rt.absoluteValue = rt.abs = function() {
    var ke = new lt(this);
    return ke.s < 0 && (ke.s = 1), ke;
  }, rt.comparedTo = function(ke, ct) {
    return compare(this, new lt(ke, ct));
  }, rt.decimalPlaces = rt.dp = function(ke, ct) {
    var yt, $t, gt, xt = this;
    if (ke != null) return intCheck(ke, 0, MAX), ct == null ? ct = ht : intCheck(ct, 0, 8), nt(new lt(xt), ke + xt.e + 1, ct);
    if (!(yt = xt.c)) return null;
    if ($t = ((gt = yt.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE, gt = yt[gt]) for (; gt % 10 == 0; gt /= 10, $t--) ;
    return $t < 0 && ($t = 0), $t;
  }, rt.dividedBy = rt.div = function(ke, ct) {
    return L(this, new lt(ke, ct), dt, ht);
  }, rt.dividedToIntegerBy = rt.idiv = function(ke, ct) {
    return L(this, new lt(ke, ct), 0, 1);
  }, rt.exponentiatedBy = rt.pow = function(ke, ct) {
    var yt, $t, gt, xt, At, mt, St, Mt, It = this;
    if ((ke = new lt(ke)).c && !ke.isInteger()) throw Error(bignumberError + "Exponent not an integer: " + ot(ke));
    if (ct != null && (ct = new lt(ct)), At = ke.e > 14, !It.c || !It.c[0] || It.c[0] == 1 && !It.e && It.c.length == 1 || !ke.c || !ke.c[0]) return Mt = new lt(Math.pow(+ot(It), At ? ke.s * (2 - isOdd(ke)) : +ot(ke))), ct ? Mt.mod(ct) : Mt;
    if (mt = ke.s < 0, ct) {
      if (ct.c ? !ct.c[0] : !ct.s) return new lt(NaN);
      ($t = !mt && It.isInteger() && ct.isInteger()) && (It = It.mod(ct));
    } else {
      if (ke.e > 9 && (It.e > 0 || It.e < -1 || (It.e == 0 ? It.c[0] > 1 || At && It.c[1] >= 24e7 : It.c[0] < 8e13 || At && It.c[0] <= 9999975e7))) return xt = It.s < 0 && isOdd(ke) ? -0 : 0, It.e > -1 && (xt = 1 / xt), new lt(mt ? 1 / xt : xt);
      Pt && (xt = mathceil(Pt / LOG_BASE + 2));
    }
    for (At ? (yt = new lt(0.5), mt && (ke.s = 1), St = isOdd(ke)) : St = (gt = Math.abs(+ot(ke))) % 2, Mt = new lt(ut); ; ) {
      if (St) {
        if (!(Mt = Mt.times(It)).c) break;
        xt ? Mt.c.length > xt && (Mt.c.length = xt) : $t && (Mt = Mt.mod(ct));
      }
      if (gt) {
        if ((gt = mathfloor(gt / 2)) === 0) break;
        St = gt % 2;
      } else if (nt(ke = ke.times(yt), ke.e + 1, 1), ke.e > 14) St = isOdd(ke);
      else {
        if ((gt = +ot(ke)) == 0) break;
        St = gt % 2;
      }
      It = It.times(It), xt ? It.c && It.c.length > xt && (It.c.length = xt) : $t && (It = It.mod(ct));
    }
    return $t ? Mt : (mt && (Mt = ut.div(Mt)), ct ? Mt.mod(ct) : xt ? nt(Mt, Pt, ht, void 0) : Mt);
  }, rt.integerValue = function(ke) {
    var ct = new lt(this);
    return ke == null ? ke = ht : intCheck(ke, 0, 8), nt(ct, ct.e + 1, ke);
  }, rt.isEqualTo = rt.eq = function(ke, ct) {
    return compare(this, new lt(ke, ct)) === 0;
  }, rt.isFinite = function() {
    return !!this.c;
  }, rt.isGreaterThan = rt.gt = function(ke, ct) {
    return compare(this, new lt(ke, ct)) > 0;
  }, rt.isGreaterThanOrEqualTo = rt.gte = function(ke, ct) {
    return (ct = compare(this, new lt(ke, ct))) === 1 || ct === 0;
  }, rt.isInteger = function() {
    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
  }, rt.isLessThan = rt.lt = function(ke, ct) {
    return compare(this, new lt(ke, ct)) < 0;
  }, rt.isLessThanOrEqualTo = rt.lte = function(ke, ct) {
    return (ct = compare(this, new lt(ke, ct))) === -1 || ct === 0;
  }, rt.isNaN = function() {
    return !this.s;
  }, rt.isNegative = function() {
    return this.s < 0;
  }, rt.isPositive = function() {
    return this.s > 0;
  }, rt.isZero = function() {
    return !!this.c && this.c[0] == 0;
  }, rt.minus = function(ke, ct) {
    var yt, $t, gt, xt, At = this, mt = At.s;
    if (ct = (ke = new lt(ke, ct)).s, !mt || !ct) return new lt(NaN);
    if (mt != ct) return ke.s = -ct, At.plus(ke);
    var St = At.e / LOG_BASE, Mt = ke.e / LOG_BASE, It = At.c, Ft = ke.c;
    if (!St || !Mt) {
      if (!It || !Ft) return It ? (ke.s = -ct, ke) : new lt(Ft ? At : NaN);
      if (!It[0] || !Ft[0]) return Ft[0] ? (ke.s = -ct, ke) : new lt(It[0] ? At : ht == 3 ? -0 : 0);
    }
    if (St = bitFloor(St), Mt = bitFloor(Mt), It = It.slice(), mt = St - Mt) {
      for ((xt = mt < 0) ? (mt = -mt, gt = It) : (Mt = St, gt = Ft), gt.reverse(), ct = mt; ct--; gt.push(0)) ;
      gt.reverse();
    } else for ($t = (xt = (mt = It.length) < (ct = Ft.length)) ? mt : ct, mt = ct = 0; ct < $t; ct++) if (It[ct] != Ft[ct]) {
      xt = It[ct] < Ft[ct];
      break;
    }
    if (xt && (gt = It, It = Ft, Ft = gt, ke.s = -ke.s), (ct = ($t = Ft.length) - (yt = It.length)) > 0) for (; ct--; It[yt++] = 0) ;
    for (ct = BASE - 1; $t > mt; ) {
      if (It[--$t] < Ft[$t]) {
        for (yt = $t; yt && !It[--yt]; It[yt] = ct) ;
        --It[yt], It[$t] += BASE;
      }
      It[$t] -= Ft[$t];
    }
    for (; It[0] == 0; It.splice(0, 1), --Mt) ;
    return It[0] ? it(ke, It, Mt) : (ke.s = ht == 3 ? -1 : 1, ke.c = [ke.e = 0], ke);
  }, rt.modulo = rt.mod = function(ke, ct) {
    var yt, $t, gt = this;
    return ke = new lt(ke, ct), !gt.c || !ke.s || ke.c && !ke.c[0] ? new lt(NaN) : !ke.c || gt.c && !gt.c[0] ? new lt(gt) : (Bt == 9 ? ($t = ke.s, ke.s = 1, yt = L(gt, ke, 0, 3), ke.s = $t, yt.s *= $t) : yt = L(gt, ke, 0, Bt), (ke = gt.minus(yt.times(ke))).c[0] || Bt != 1 || (ke.s = gt.s), ke);
  }, rt.multipliedBy = rt.times = function(ke, ct) {
    var yt, $t, gt, xt, At, mt, St, Mt, It, Ft, Vt, qt, er, tr, Jt, ur = this, pr = ur.c, dr = (ke = new lt(ke, ct)).c;
    if (!(pr && dr && pr[0] && dr[0])) return !ur.s || !ke.s || pr && !pr[0] && !dr || dr && !dr[0] && !pr ? ke.c = ke.e = ke.s = null : (ke.s *= ur.s, pr && dr ? (ke.c = [0], ke.e = 0) : ke.c = ke.e = null), ke;
    for ($t = bitFloor(ur.e / LOG_BASE) + bitFloor(ke.e / LOG_BASE), ke.s *= ur.s, (St = pr.length) < (Ft = dr.length) && (er = pr, pr = dr, dr = er, gt = St, St = Ft, Ft = gt), gt = St + Ft, er = []; gt--; er.push(0)) ;
    for (tr = BASE, Jt = SQRT_BASE, gt = Ft; --gt >= 0; ) {
      for (yt = 0, Vt = dr[gt] % Jt, qt = dr[gt] / Jt | 0, xt = gt + (At = St); xt > gt; ) yt = ((Mt = Vt * (Mt = pr[--At] % Jt) + (mt = qt * Mt + (It = pr[At] / Jt | 0) * Vt) % Jt * Jt + er[xt] + yt) / tr | 0) + (mt / Jt | 0) + qt * It, er[xt--] = Mt % tr;
      er[xt] = yt;
    }
    return yt ? ++$t : er.splice(0, 1), it(ke, er, $t);
  }, rt.negated = function() {
    var ke = new lt(this);
    return ke.s = -ke.s || null, ke;
  }, rt.plus = function(ke, ct) {
    var yt, $t = this, gt = $t.s;
    if (ct = (ke = new lt(ke, ct)).s, !gt || !ct) return new lt(NaN);
    if (gt != ct) return ke.s = -ct, $t.minus(ke);
    var xt = $t.e / LOG_BASE, At = ke.e / LOG_BASE, mt = $t.c, St = ke.c;
    if (!xt || !At) {
      if (!mt || !St) return new lt(gt / 0);
      if (!mt[0] || !St[0]) return St[0] ? ke : new lt(mt[0] ? $t : 0 * gt);
    }
    if (xt = bitFloor(xt), At = bitFloor(At), mt = mt.slice(), gt = xt - At) {
      for (gt > 0 ? (At = xt, yt = St) : (gt = -gt, yt = mt), yt.reverse(); gt--; yt.push(0)) ;
      yt.reverse();
    }
    for ((gt = mt.length) - (ct = St.length) < 0 && (yt = St, St = mt, mt = yt, ct = gt), gt = 0; ct; ) gt = (mt[--ct] = mt[ct] + St[ct] + gt) / BASE | 0, mt[ct] = BASE === mt[ct] ? 0 : mt[ct] % BASE;
    return gt && (mt = [gt].concat(mt), ++At), it(ke, mt, At);
  }, rt.precision = rt.sd = function(ke, ct) {
    var yt, $t, gt, xt = this;
    if (ke != null && ke !== !!ke) return intCheck(ke, 1, MAX), ct == null ? ct = ht : intCheck(ct, 0, 8), nt(new lt(xt), ke, ct);
    if (!(yt = xt.c)) return null;
    if ($t = (gt = yt.length - 1) * LOG_BASE + 1, gt = yt[gt]) {
      for (; gt % 10 == 0; gt /= 10, $t--) ;
      for (gt = yt[0]; gt >= 10; gt /= 10, $t++) ;
    }
    return ke && xt.e + 1 > $t && ($t = xt.e + 1), $t;
  }, rt.shiftedBy = function(ke) {
    return intCheck(ke, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER), this.times("1e" + ke);
  }, rt.squareRoot = rt.sqrt = function() {
    var ke, ct, yt, $t, gt, xt = this, At = xt.c, mt = xt.s, St = xt.e, Mt = dt + 4, It = new lt("0.5");
    if (mt !== 1 || !At || !At[0]) return new lt(!mt || mt < 0 && (!At || At[0]) ? NaN : At ? xt : 1 / 0);
    if ((mt = Math.sqrt(+ot(xt))) == 0 || mt == 1 / 0 ? (((ct = coeffToString(At)).length + St) % 2 == 0 && (ct += "0"), mt = Math.sqrt(+ct), St = bitFloor((St + 1) / 2) - (St < 0 || St % 2), yt = new lt(ct = mt == 1 / 0 ? "5e" + St : (ct = mt.toExponential()).slice(0, ct.indexOf("e") + 1) + St)) : yt = new lt(mt + ""), yt.c[0]) {
      for ((mt = (St = yt.e) + Mt) < 3 && (mt = 0); ; ) if (gt = yt, yt = It.times(gt.plus(L(xt, gt, Mt, 1))), coeffToString(gt.c).slice(0, mt) === (ct = coeffToString(yt.c)).slice(0, mt)) {
        if (yt.e < St && --mt, (ct = ct.slice(mt - 3, mt + 1)) != "9999" && ($t || ct != "4999")) {
          +ct && (+ct.slice(1) || ct.charAt(0) != "5") || (nt(yt, yt.e + dt + 2, 1), ke = !yt.times(yt).eq(xt));
          break;
        }
        if (!$t && (nt(gt, gt.e + dt + 2, 0), gt.times(gt).eq(xt))) {
          yt = gt;
          break;
        }
        Mt += 4, mt += 4, $t = 1;
      }
    }
    return nt(yt, yt.e + dt + 1, ht, ke);
  }, rt.toExponential = function(ke, ct) {
    return ke != null && (intCheck(ke, 0, MAX), ke++), Ce(this, ke, ct, 1);
  }, rt.toFixed = function(ke, ct) {
    return ke != null && (intCheck(ke, 0, MAX), ke = ke + this.e + 1), Ce(this, ke, ct);
  }, rt.toFormat = function(ke, ct, yt) {
    var $t, gt = this;
    if (yt == null) ke != null && ct && typeof ct == "object" ? (yt = ct, ct = null) : ke && typeof ke == "object" ? (yt = ke, ke = ct = null) : yt = Dt;
    else if (typeof yt != "object") throw Error(bignumberError + "Argument not an object: " + yt);
    if ($t = gt.toFixed(ke, ct), gt.c) {
      var xt, At = $t.split("."), mt = +yt.groupSize, St = +yt.secondaryGroupSize, Mt = yt.groupSeparator || "", It = At[0], Ft = At[1], Vt = gt.s < 0, qt = Vt ? It.slice(1) : It, er = qt.length;
      if (St && (xt = mt, mt = St, St = xt, er -= xt), mt > 0 && er > 0) {
        for (xt = er % mt || mt, It = qt.substr(0, xt); xt < er; xt += mt) It += Mt + qt.substr(xt, mt);
        St > 0 && (It += Mt + qt.slice(xt)), Vt && (It = "-" + It);
      }
      $t = Ft ? It + (yt.decimalSeparator || "") + ((St = +yt.fractionGroupSize) ? Ft.replace(new RegExp("\\d{" + St + "}\\B", "g"), "$&" + (yt.fractionGroupSeparator || "")) : Ft) : It;
    }
    return (yt.prefix || "") + $t + (yt.suffix || "");
  }, rt.toFraction = function(ke) {
    var ct, yt, $t, gt, xt, At, mt, St, Mt, It, Ft, Vt, qt = this, er = qt.c;
    if (ke != null && (!(mt = new lt(ke)).isInteger() && (mt.c || mt.s !== 1) || mt.lt(ut))) throw Error(bignumberError + "Argument " + (mt.isInteger() ? "out of range: " : "not an integer: ") + ot(mt));
    if (!er) return new lt(qt);
    for (ct = new lt(ut), Mt = yt = new lt(ut), $t = St = new lt(ut), Vt = coeffToString(er), xt = ct.e = Vt.length - qt.e - 1, ct.c[0] = POWS_TEN[(At = xt % LOG_BASE) < 0 ? LOG_BASE + At : At], ke = !ke || mt.comparedTo(ct) > 0 ? xt > 0 ? ct : Mt : mt, At = Et, Et = 1 / 0, mt = new lt(Vt), St.c[0] = 0; It = L(mt, ct, 0, 1), (gt = yt.plus(It.times($t))).comparedTo(ke) != 1; ) yt = $t, $t = gt, Mt = St.plus(It.times(gt = Mt)), St = gt, ct = mt.minus(It.times(gt = ct)), mt = gt;
    return gt = L(ke.minus(yt), $t, 0, 1), St = St.plus(gt.times(Mt)), yt = yt.plus(gt.times($t)), St.s = Mt.s = qt.s, Ft = L(Mt, $t, xt *= 2, ht).minus(qt).abs().comparedTo(L(St, yt, xt, ht).minus(qt).abs()) < 1 ? [Mt, $t] : [St, yt], Et = At, Ft;
  }, rt.toNumber = function() {
    return +ot(this);
  }, rt.toPrecision = function(ke, ct) {
    return ke != null && intCheck(ke, 1, MAX), Ce(this, ke, ct, 2);
  }, rt.toString = function(ke) {
    var ct, yt = this, $t = yt.s, gt = yt.e;
    return gt === null ? $t ? (ct = "Infinity", $t < 0 && (ct = "-" + ct)) : ct = "NaN" : (ke == null ? ct = gt <= bt || gt >= Tt ? toExponential(coeffToString(yt.c), gt) : toFixedPoint(coeffToString(yt.c), gt, "0") : ke === 10 && at ? ct = toFixedPoint(coeffToString((yt = nt(new lt(yt), dt + gt + 1, ht)).c), yt.e, "0") : (intCheck(ke, 2, Gt.length, "Base"), ct = V(toFixedPoint(coeffToString(yt.c), gt, "0"), 10, ke, $t, !0)), $t < 0 && yt.c[0] && (ct = "-" + ct)), ct;
  }, rt.valueOf = rt.toJSON = function() {
    return ot(this);
  }, rt._isBigNumber = !0, rt[Symbol.toStringTag] = "BigNumber", rt[Symbol.for("nodejs.util.inspect.custom")] = rt.valueOf, B != null && lt.set(B), lt;
}
function bitFloor(B) {
  var L = 0 | B;
  return B > 0 || B === L ? L : L - 1;
}
function coeffToString(B) {
  for (var L, V, J = 1, re = B.length, ne = B[0] + ""; J < re; ) {
    for (L = B[J++] + "", V = LOG_BASE - L.length; V--; L = "0" + L) ;
    ne += L;
  }
  for (re = ne.length; ne.charCodeAt(--re) === 48; ) ;
  return ne.slice(0, re + 1 || 1);
}
function compare(B, L) {
  var V, J, re = B.c, ne = L.c, ie = B.s, oe = L.s, pe = B.e, ce = L.e;
  if (!ie || !oe) return null;
  if (V = re && !re[0], J = ne && !ne[0], V || J) return V ? J ? 0 : -oe : ie;
  if (ie != oe) return ie;
  if (V = ie < 0, J = pe == ce, !re || !ne) return J ? 0 : !re ^ V ? 1 : -1;
  if (!J) return pe > ce ^ V ? 1 : -1;
  for (oe = (pe = re.length) < (ce = ne.length) ? pe : ce, ie = 0; ie < oe; ie++) if (re[ie] != ne[ie]) return re[ie] > ne[ie] ^ V ? 1 : -1;
  return pe == ce ? 0 : pe > ce ^ V ? 1 : -1;
}
function intCheck(B, L, V, J) {
  if (B < L || B > V || B !== mathfloor(B)) throw Error(bignumberError + (J || "Argument") + (typeof B == "number" ? B < L || B > V ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(B));
}
function isOdd(B) {
  var L = B.c.length - 1;
  return bitFloor(B.e / LOG_BASE) == L && B.c[L] % 2 != 0;
}
function toExponential(B, L) {
  return (B.length > 1 ? B.charAt(0) + "." + B.slice(1) : B) + (L < 0 ? "e" : "e+") + L;
}
function toFixedPoint(B, L, V) {
  var J, re;
  if (L < 0) {
    for (re = V + "."; ++L; re += V) ;
    B = re + B;
  } else if (++L > (J = B.length)) {
    for (re = V, L -= J; --L; re += V) ;
    B += re;
  } else L < J && (B = B.slice(0, L) + "." + B.slice(L));
  return B;
}
var BigNumber = clone();
class BaseDatasource {
  constructor({ network: L }) {
    Ir(this, "network");
    this.network = L;
  }
}
class DatasourceUtility {
  static parseInscription(L, { decodeMetadata: V }) {
    return { ...L, meta: V && L.meta ? UNSTABLE_decodeObject(L.meta) : L.meta };
  }
  static parseInscriptions(L, { decodeMetadata: V }) {
    return L.map((J) => this.parseInscription(J, { decodeMetadata: V }));
  }
  static segregateUTXOsBySpendStatus({ utxos: L }) {
    const { spendableUTXOs: V, unspendableUTXOs: J } = L.reduce((re, ne) => (ne.safeToSpend ? re.spendableUTXOs.push(ne) : re.unspendableUTXOs.push(ne), re), { spendableUTXOs: [], unspendableUTXOs: [] });
    return { totalUTXOs: L.length, spendableUTXOs: V, unspendableUTXOs: J };
  }
}
var browserPonyfill = { exports: {} };
(function(B, L) {
  var V = typeof globalThis < "u" && globalThis || typeof self < "u" && self || commonjsGlobal !== void 0 && commonjsGlobal, J = function() {
    function ne() {
      this.fetch = !1, this.DOMException = V.DOMException;
    }
    return ne.prototype = V, new ne();
  }();
  (function(ne) {
    (function(ie) {
      var oe = ne !== void 0 && ne || typeof self < "u" && self || oe !== void 0 && oe, pe = "URLSearchParams" in oe, ce = "Symbol" in oe && "iterator" in Symbol, Oe = "FileReader" in oe && "Blob" in oe && function() {
        try {
          return new Blob(), !0;
        } catch {
          return !1;
        }
      }(), rt = "FormData" in oe, ut = "ArrayBuffer" in oe;
      if (ut) var dt = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], ht = ArrayBuffer.isView || function(ot) {
        return ot && dt.indexOf(Object.prototype.toString.call(ot)) > -1;
      };
      function bt(ot) {
        if (typeof ot != "string" && (ot = String(ot)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(ot) || ot === "") throw new TypeError('Invalid character in header field name: "' + ot + '"');
        return ot.toLowerCase();
      }
      function Tt(ot) {
        return typeof ot != "string" && (ot = String(ot)), ot;
      }
      function wt(ot) {
        var ke = { next: function() {
          var ct = ot.shift();
          return { done: ct === void 0, value: ct };
        } };
        return ce && (ke[Symbol.iterator] = function() {
          return ke;
        }), ke;
      }
      function Et(ot) {
        this.map = {}, ot instanceof Et ? ot.forEach(function(ke, ct) {
          this.append(ct, ke);
        }, this) : Array.isArray(ot) ? ot.forEach(function(ke) {
          this.append(ke[0], ke[1]);
        }, this) : ot && Object.getOwnPropertyNames(ot).forEach(function(ke) {
          this.append(ke, ot[ke]);
        }, this);
      }
      function Rt(ot) {
        if (ot.bodyUsed) return Promise.reject(new TypeError("Already read"));
        ot.bodyUsed = !0;
      }
      function Bt(ot) {
        return new Promise(function(ke, ct) {
          ot.onload = function() {
            ke(ot.result);
          }, ot.onerror = function() {
            ct(ot.error);
          };
        });
      }
      function Pt(ot) {
        var ke = new FileReader(), ct = Bt(ke);
        return ke.readAsArrayBuffer(ot), ct;
      }
      function Dt(ot) {
        if (ot.slice) return ot.slice(0);
        var ke = new Uint8Array(ot.byteLength);
        return ke.set(new Uint8Array(ot)), ke.buffer;
      }
      function Gt() {
        return this.bodyUsed = !1, this._initBody = function(ot) {
          var ke;
          this.bodyUsed = this.bodyUsed, this._bodyInit = ot, ot ? typeof ot == "string" ? this._bodyText = ot : Oe && Blob.prototype.isPrototypeOf(ot) ? this._bodyBlob = ot : rt && FormData.prototype.isPrototypeOf(ot) ? this._bodyFormData = ot : pe && URLSearchParams.prototype.isPrototypeOf(ot) ? this._bodyText = ot.toString() : ut && Oe && (ke = ot) && DataView.prototype.isPrototypeOf(ke) ? (this._bodyArrayBuffer = Dt(ot.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : ut && (ArrayBuffer.prototype.isPrototypeOf(ot) || ht(ot)) ? this._bodyArrayBuffer = Dt(ot) : this._bodyText = ot = Object.prototype.toString.call(ot) : this._bodyText = "", this.headers.get("content-type") || (typeof ot == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : pe && URLSearchParams.prototype.isPrototypeOf(ot) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
        }, Oe && (this.blob = function() {
          var ot = Rt(this);
          if (ot) return ot;
          if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData) throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }, this.arrayBuffer = function() {
          if (this._bodyArrayBuffer) {
            var ot = Rt(this);
            return ot || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer));
          }
          return this.blob().then(Pt);
        }), this.text = function() {
          var ot, ke, ct, yt = Rt(this);
          if (yt) return yt;
          if (this._bodyBlob) return ot = this._bodyBlob, ke = new FileReader(), ct = Bt(ke), ke.readAsText(ot), ct;
          if (this._bodyArrayBuffer) return Promise.resolve(function($t) {
            for (var gt = new Uint8Array($t), xt = new Array(gt.length), At = 0; At < gt.length; At++) xt[At] = String.fromCharCode(gt[At]);
            return xt.join("");
          }(this._bodyArrayBuffer));
          if (this._bodyFormData) throw new Error("could not read FormData body as text");
          return Promise.resolve(this._bodyText);
        }, rt && (this.formData = function() {
          return this.text().then(Ce);
        }), this.json = function() {
          return this.text().then(JSON.parse);
        }, this;
      }
      Et.prototype.append = function(ot, ke) {
        ot = bt(ot), ke = Tt(ke);
        var ct = this.map[ot];
        this.map[ot] = ct ? ct + ", " + ke : ke;
      }, Et.prototype.delete = function(ot) {
        delete this.map[bt(ot)];
      }, Et.prototype.get = function(ot) {
        return ot = bt(ot), this.has(ot) ? this.map[ot] : null;
      }, Et.prototype.has = function(ot) {
        return this.map.hasOwnProperty(bt(ot));
      }, Et.prototype.set = function(ot, ke) {
        this.map[bt(ot)] = Tt(ke);
      }, Et.prototype.forEach = function(ot, ke) {
        for (var ct in this.map) this.map.hasOwnProperty(ct) && ot.call(ke, this.map[ct], ct, this);
      }, Et.prototype.keys = function() {
        var ot = [];
        return this.forEach(function(ke, ct) {
          ot.push(ct);
        }), wt(ot);
      }, Et.prototype.values = function() {
        var ot = [];
        return this.forEach(function(ke) {
          ot.push(ke);
        }), wt(ot);
      }, Et.prototype.entries = function() {
        var ot = [];
        return this.forEach(function(ke, ct) {
          ot.push([ct, ke]);
        }), wt(ot);
      }, ce && (Et.prototype[Symbol.iterator] = Et.prototype.entries);
      var at = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function lt(ot, ke) {
        if (!(this instanceof lt)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
        var ct, yt, $t = (ke = ke || {}).body;
        if (ot instanceof lt) {
          if (ot.bodyUsed) throw new TypeError("Already read");
          this.url = ot.url, this.credentials = ot.credentials, ke.headers || (this.headers = new Et(ot.headers)), this.method = ot.method, this.mode = ot.mode, this.signal = ot.signal, $t || ot._bodyInit == null || ($t = ot._bodyInit, ot.bodyUsed = !0);
        } else this.url = String(ot);
        if (this.credentials = ke.credentials || this.credentials || "same-origin", !ke.headers && this.headers || (this.headers = new Et(ke.headers)), this.method = (ct = ke.method || this.method || "GET", yt = ct.toUpperCase(), at.indexOf(yt) > -1 ? yt : ct), this.mode = ke.mode || this.mode || null, this.signal = ke.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && $t) throw new TypeError("Body not allowed for GET or HEAD requests");
        if (this._initBody($t), !(this.method !== "GET" && this.method !== "HEAD" || ke.cache !== "no-store" && ke.cache !== "no-cache")) {
          var gt = /([?&])_=[^&]*/;
          gt.test(this.url) ? this.url = this.url.replace(gt, "$1_=" + (/* @__PURE__ */ new Date()).getTime()) : this.url += (/\?/.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
        }
      }
      function Ce(ot) {
        var ke = new FormData();
        return ot.trim().split("&").forEach(function(ct) {
          if (ct) {
            var yt = ct.split("="), $t = yt.shift().replace(/\+/g, " "), gt = yt.join("=").replace(/\+/g, " ");
            ke.append(decodeURIComponent($t), decodeURIComponent(gt));
          }
        }), ke;
      }
      function st(ot, ke) {
        if (!(this instanceof st)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
        ke || (ke = {}), this.type = "default", this.status = ke.status === void 0 ? 200 : ke.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = ke.statusText === void 0 ? "" : "" + ke.statusText, this.headers = new Et(ke.headers), this.url = ke.url || "", this._initBody(ot);
      }
      lt.prototype.clone = function() {
        return new lt(this, { body: this._bodyInit });
      }, Gt.call(lt.prototype), Gt.call(st.prototype), st.prototype.clone = function() {
        return new st(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new Et(this.headers), url: this.url });
      }, st.error = function() {
        var ot = new st(null, { status: 0, statusText: "" });
        return ot.type = "error", ot;
      };
      var it = [301, 302, 303, 307, 308];
      st.redirect = function(ot, ke) {
        if (it.indexOf(ke) === -1) throw new RangeError("Invalid status code");
        return new st(null, { status: ke, headers: { location: ot } });
      }, ie.DOMException = oe.DOMException;
      try {
        new ie.DOMException();
      } catch {
        ie.DOMException = function(ke, ct) {
          this.message = ke, this.name = ct;
          var yt = Error(ke);
          this.stack = yt.stack;
        }, ie.DOMException.prototype = Object.create(Error.prototype), ie.DOMException.prototype.constructor = ie.DOMException;
      }
      function nt(ot, ke) {
        return new Promise(function(ct, yt) {
          var $t = new lt(ot, ke);
          if ($t.signal && $t.signal.aborted) return yt(new ie.DOMException("Aborted", "AbortError"));
          var gt = new XMLHttpRequest();
          function xt() {
            gt.abort();
          }
          gt.onload = function() {
            var At, mt, St = { status: gt.status, statusText: gt.statusText, headers: (At = gt.getAllResponseHeaders() || "", mt = new Et(), At.replace(/\r?\n[\t ]+/g, " ").split("\r").map(function(It) {
              return It.indexOf(`
`) === 0 ? It.substr(1, It.length) : It;
            }).forEach(function(It) {
              var Ft = It.split(":"), Vt = Ft.shift().trim();
              if (Vt) {
                var qt = Ft.join(":").trim();
                mt.append(Vt, qt);
              }
            }), mt) };
            St.url = "responseURL" in gt ? gt.responseURL : St.headers.get("X-Request-URL");
            var Mt = "response" in gt ? gt.response : gt.responseText;
            setTimeout(function() {
              ct(new st(Mt, St));
            }, 0);
          }, gt.onerror = function() {
            setTimeout(function() {
              yt(new TypeError("Network request failed"));
            }, 0);
          }, gt.ontimeout = function() {
            setTimeout(function() {
              yt(new TypeError("Network request failed"));
            }, 0);
          }, gt.onabort = function() {
            setTimeout(function() {
              yt(new ie.DOMException("Aborted", "AbortError"));
            }, 0);
          }, gt.open($t.method, function(At) {
            try {
              return At === "" && oe.location.href ? oe.location.href : At;
            } catch {
              return At;
            }
          }($t.url), !0), $t.credentials === "include" ? gt.withCredentials = !0 : $t.credentials === "omit" && (gt.withCredentials = !1), "responseType" in gt && (Oe ? gt.responseType = "blob" : ut && $t.headers.get("Content-Type") && $t.headers.get("Content-Type").indexOf("application/octet-stream") !== -1 && (gt.responseType = "arraybuffer")), !ke || typeof ke.headers != "object" || ke.headers instanceof Et ? $t.headers.forEach(function(At, mt) {
            gt.setRequestHeader(mt, At);
          }) : Object.getOwnPropertyNames(ke.headers).forEach(function(At) {
            gt.setRequestHeader(At, Tt(ke.headers[At]));
          }), $t.signal && ($t.signal.addEventListener("abort", xt), gt.onreadystatechange = function() {
            gt.readyState === 4 && $t.signal.removeEventListener("abort", xt);
          }), gt.send($t._bodyInit === void 0 ? null : $t._bodyInit);
        });
      }
      nt.polyfill = !0, oe.fetch || (oe.fetch = nt, oe.Headers = Et, oe.Request = lt, oe.Response = st), ie.Headers = Et, ie.Request = lt, ie.Response = st, ie.fetch = nt;
    })({});
  })(J), J.fetch.ponyfill = !0, delete J.fetch.polyfill;
  var re = V.fetch ? V : J;
  (L = re.fetch).default = re.fetch, L.fetch = re.fetch, L.Headers = re.Headers, L.Request = re.Request, L.Response = re.Response, B.exports = L;
})(browserPonyfill, browserPonyfill.exports);
var browserPonyfillExports = browserPonyfill.exports;
const fetch = getDefaultExportFromCjs(browserPonyfillExports), API_CONFIG = { version: "0.0.0.10", apis: { mainnet: { batter: "https://mainnet.ordit.io/" }, regtest: { batter: "https://regtest.ordit.io/" }, testnet: { batter: "https://testnet.ordit.io/" }, signet: { batter: "https://signet.ordit.io/" } } };
function isNumber(B) {
  return typeof B == "number" && B > Number.NEGATIVE_INFINITY && B < Number.POSITIVE_INFINITY;
}
function isInteger(B) {
  return isNumber(B) && B % 1 == 0;
}
function isString(B) {
  return typeof B == "string";
}
function isJsonRpcId(B) {
  return isString(B) || isInteger(B) || B === null;
}
function getRpcUrl(B) {
  return B[B.length - 1] === "/" ? B.substring(0, B.length - 1) : B;
}
class JsonRpc {
  constructor(L) {
    this.url = L;
  }
  async notify(L, V) {
    await fetch(`${this.url}/rpc`, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ jsonrpc: "2.0", method: L, params: V }) });
  }
  async call(L, V, J) {
    let re = {}, ne = J;
    isJsonRpcId(V) ? ne = V : re = V;
    const ie = await fetch(`${this.url}/rpc`, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ jsonrpc: "2.0", method: L, params: re, id: ne }) });
    if (ie.status === 200) {
      const oe = await ie.json();
      if (oe.error) {
        const pe = typeof oe.error.data == "string" ? oe.error.data : oe.error.message;
        throw new OrditSDKError(pe);
      }
      return oe.result;
    }
    throw new OrditSDKError("Internal Server Error");
  }
}
const rpc = { get id() {
  return Math.floor(1e5 * Math.random());
}, mainnet: new JsonRpc(getRpcUrl(API_CONFIG.apis.mainnet.batter)), testnet: new JsonRpc(getRpcUrl(API_CONFIG.apis.testnet.batter)), signet: new JsonRpc(getRpcUrl(API_CONFIG.apis.signet.batter)), regtest: new JsonRpc(getRpcUrl(API_CONFIG.apis.regtest.batter)) };
class JsonRpcDatasource extends BaseDatasource {
  constructor({ network: L }) {
    super({ network: L });
  }
  async getBalance({ address: L }) {
    if (!L) throw new OrditSDKError("Invalid request");
    return rpc[this.network].call("Address.GetBalance", { address: L }, rpc.id);
  }
  async getInscription({ id: L, decodeMetadata: V = !1 }) {
    if (!L) throw new OrditSDKError("Invalid request");
    const J = outpointToIdFormat(L), re = await rpc[this.network].call("Ordinals.GetInscription", { id: J }, rpc.id);
    return DatasourceUtility.parseInscription(re, { decodeMetadata: V });
  }
  async getInscriptionUTXO({ id: L }) {
    if (!L) throw new OrditSDKError("Invalid request");
    const V = outpointToIdFormat(L);
    return rpc[this.network].call("Ordinals.GetInscriptionUtxo", { id: V }, rpc.id);
  }
  async getInscriptions({ creator: L, owner: V, mimeType: J, mimeSubType: re, outpoint: ne, decodeMetadata: ie = !1, sort: oe = "asc", limit: pe = 25, next: ce = null }) {
    let Oe = [], rt = ce;
    do {
      const { inscriptions: ut, pagination: dt } = await rpc[this.network].call("Ordinals.GetInscriptions", { filter: { creator: L, owner: V, mimeType: J, mimeSubType: re, outpoint: ne }, sort: { number: oe }, pagination: { limit: pe, next: rt } }, rpc.id);
      Oe = Oe.concat(ut), rt = dt.next;
    } while (rt !== null);
    return DatasourceUtility.parseInscriptions(Oe, { decodeMetadata: ie });
  }
  async getSpendables({ address: L, value: V, rarity: J = ["common"], filter: re = [], limit: ne = 200, type: ie = "spendable" }) {
    if (!L || Number.isNaN(V) || !V) throw new OrditSDKError("Invalid request");
    return rpc[this.network].call("Address.GetSpendables", { address: L, value: V, safetospend: ie === "spendable", allowedrarity: J, filter: re, limit: ne }, rpc.id);
  }
  async getTransaction({ txId: L, ordinals: V = !0, hex: J = !1, witness: re = !0, decodeMetadata: ne = !0 }) {
    if (!L) throw new OrditSDKError("Invalid request");
    const ie = await rpc[this.network].call("Transactions.GetTransaction", { txid: L, options: { ord: V, hex: J, witness: re } }, rpc.id);
    return ie.vout = ie.vout.map((oe) => ({ ...oe, inscriptions: DatasourceUtility.parseInscriptions(oe.inscriptions, { decodeMetadata: ne }) })), { tx: ie, rawTx: J && ie.hex ? src$4.Transaction.fromHex(ie.hex) : void 0 };
  }
  async getUnspents({ address: L, type: V = "spendable", rarity: J = ["common"], sort: re = "desc", limit: ne = 50, next: ie = null }) {
    if (!L) throw new OrditSDKError("Invalid request");
    let oe = [], pe = ie;
    do {
      const { unspents: ce, pagination: Oe } = await rpc[this.network].call("Address.GetUnspents", { address: L, options: { allowedrarity: J, safetospend: V === "spendable" }, pagination: { limit: ne, next: pe }, sort: { value: re } }, rpc.id);
      oe = oe.concat(ce), pe = Oe.next;
    } while (pe !== null);
    return DatasourceUtility.segregateUTXOsBySpendStatus({ utxos: oe });
  }
  async relay({ hex: L, maxFeeRate: V, validate: J = !0 }) {
    if (!L) throw new OrditSDKError("Invalid request");
    if (V && (V < 0 || Number.isNaN(V))) throw new OrditSDKError("Invalid max fee rate");
    return rpc[this.network].call("Transactions.Relay", { hex: L, maxFeeRate: V, validate: J }, rpc.id);
  }
}
function useBalance() {
  const { network: B, publicKey: L, format: V } = useWallie(), [J, re] = useState(null), [ne, ie] = useState(!1);
  return { getBalance: useCallback(async () => {
    ie(!0);
    try {
      if (re(null), !(V && V.payments && L && L.payments)) throw new Error("No wallet is connected");
      const { address: pe } = getAddressesFromPublicKey(L.payments, B, ADDRESS_FORMAT_TO_TYPE[V.payments])[0], ce = new JsonRpcDatasource({ network: B }), Oe = await ce.getBalance({ address: pe }), rt = Number(new BigNumber(Oe).multipliedBy(1e8).toFixed(0, BigNumber.ROUND_HALF_DOWN));
      return ie(!1), rt;
    } catch (pe) {
      throw re(pe.message), ie(!1), pe;
    }
  }, [V, B, L]), error: J, loading: ne };
}
function isInstalled() {
  if (typeof window > "u") throw new OrditSDKError("Cannot call this function outside a browser");
  return window.okxwallet !== void 0;
}
function getOKXWalletProvider(B = "mainnet") {
  if (!isInstalled()) throw new BrowserWalletNotInstalledError("OKX Wallet not installed");
  let L;
  switch (B) {
    case "mainnet":
      L = window.okxwallet.bitcoin;
      break;
    case "testnet":
      L = window.okxwallet.bitcoinTestnet;
      break;
    case "signet":
      L = window.okxwallet.bitcoinSignet;
      break;
    default:
      throw new OrditSDKError("Invalid network");
  }
  if (!L) throw new OrditSDKError("Failed to get OKX Wallet provider");
  return L;
}
async function signPsbt$1(B, { finalize: L = !0, extractTx: V = !0, network: J, inputsToSign: re } = { network: "mainnet", inputsToSign: [] }) {
  if (!isInstalled()) throw new BrowserWalletNotInstalledError("OKX Wallet not installed");
  if (V && !L) throw new BrowserWalletExtractTxFromNonFinalizedPsbtError();
  const ne = getOKXWalletProvider(J), ie = B.toHex();
  let oe = "";
  const pe = [];
  re.forEach((Oe) => {
    const { address: rt, signingIndexes: ut, sigHash: dt } = Oe;
    ut.forEach((ht) => {
      pe.push({ index: ht, address: rt, sighashTypes: dt ? [dt] : void 0 });
    });
  });
  try {
    oe = await ne.signPsbt(ie, { autoFinalized: L, toSignInputs: pe });
  } catch (Oe) {
    const rt = Oe;
    throw rt.code === 4001 ? new BrowserWalletRequestCancelledByUserError() : new OrditSDKError(rt.message);
  }
  if (!oe) throw new BrowserWalletSigningError("Failed to sign psbt hex using OKX Wallet");
  const ce = src$4.Psbt.fromHex(oe);
  if (!V) return { base64: ce.toBase64(), hex: ce.toHex() };
  try {
    return { base64: null, hex: ce.extractTransaction().toHex() };
  } catch (Oe) {
    throw Oe instanceof Error && Oe.message === "Not finalized" ? new BrowserWalletExtractTxFromNonFinalizedPsbtError() : new OrditSDKError("Failed to extract transaction from PSBT");
  }
}
async function signMessage$1(B, L = "ecdsa", V = "mainnet") {
  if (!isInstalled()) throw new BrowserWalletNotInstalledError("OKX Wallet not installed");
  const J = getOKXWalletProvider(V);
  let re = "";
  try {
    re = await J.signMessage(B, L);
  } catch (ne) {
    const ie = ne;
    throw ie.code === 4001 ? new BrowserWalletRequestCancelledByUserError() : new OrditSDKError(ie.message);
  }
  if (!re) throw new BrowserWalletSigningError("Failed to sign message using OKX Wallet");
  return { base64: re, hex: Buffer$D.from(re, "base64").toString("hex") };
}
async function signPsbt({ address: B, wallet: L, network: V, psbt: J, options: re }) {
  var pe, ce;
  if ((pe = re == null ? void 0 : re.signingIndexes) != null && pe.length && ((ce = re == null ? void 0 : re.inputsToSign) != null && ce.length)) throw new Error("Cannot have both indexes and inputs to sign together");
  const ne = (re == null ? void 0 : re.finalize) ?? !0, ie = (re == null ? void 0 : re.extractTx) ?? !0, oe = () => J.data.inputs.map((Oe, rt) => rt);
  if (L === Wallet.MAGICEDEN)
    return await signPsbt$4(J, { network: V, inputsToSign: (re == null ? void 0 : re.inputsToSign) ?? [{ address: B, signingIndexes: (re == null ? void 0 : re.signingIndexes) ?? oe(), sigHash: re == null ? void 0 : re.sigHash }], finalize: ne, extractTx: ie });
  if (L === Wallet.UNISAT)
    return await signPsbt$3(J, { finalize: ne, extractTx: ie });
  if (L === Wallet.XVERSE)
    return await signPsbt$2(J, { network: V, inputsToSign: (re == null ? void 0 : re.inputsToSign) ?? [{ address: B, signingIndexes: (re == null ? void 0 : re.signingIndexes) ?? oe(), sigHash: re == null ? void 0 : re.sigHash }], finalize: ne, extractTx: ie });
  if (L === Wallet.LEATHER)
    return await signPsbt$5(J, { network: V, finalize: ne, extractTx: ie, allowedSighash: re != null && re.sigHash ? [re == null ? void 0 : re.sigHash] : [], signAtIndexes: (re == null ? void 0 : re.signingIndexes) ?? oe() });
  if (L === Wallet.OKX)
    return await signPsbt$1(J, { finalize: ne, extractTx: ie, network: V, inputsToSign: (re == null ? void 0 : re.inputsToSign) ?? [{ address: B, signingIndexes: (re == null ? void 0 : re.signingIndexes) ?? oe(), sigHash: re == null ? void 0 : re.sigHash }] });
  throw new Error("Invalid wallet selected");
}
var bufferReverse = function(B) {
  for (var L = new Buffer$D(B.length), V = 0, J = B.length - 1; V <= J; ++V, --J) L[V] = B[J], L[J] = B[V];
  return L;
};
const reverseBuffer = getDefaultExportFromCjs(bufferReverse), TRANSACTION_HEADER_SIZE = 10.5;
function getBaseSizeByType(B) {
  switch (B) {
    case "taproot":
      return { input: 42, output: 43, witness: 66 };
    case "segwit":
      return { input: 41, output: 31, witness: 105 };
    case "p2sh-p2wpkh":
      return { input: 64, output: 32, witness: 105 };
    case "legacy":
      return { input: 148, output: 34, witness: 0 };
    default:
      throw new OrditSDKError("Invalid type");
  }
}
class FeeEstimator {
  constructor({ feeRate: L, network: V, psbt: J, witness: re }) {
    Ir(this, "fee", 0);
    Ir(this, "feeRate");
    Ir(this, "network");
    Ir(this, "psbt");
    Ir(this, "witness", []);
    Ir(this, "virtualSize", 0);
    Ir(this, "weight", 0);
    if (L < 0 || !Number.isSafeInteger(L)) throw new OrditSDKError("Invalid feeRate");
    this.feeRate = L, this.network = V, this.witness = re || [], this.psbt = J || new src$4.Psbt({ network: getNetwork(this.network) });
  }
  get data() {
    return { fee: this.fee, virtualSize: this.virtualSize, weight: this.weight };
  }
  calculateNetworkFee() {
    if (this.fee = this.calculateVirtualSize() * this.feeRate, this.fee > MAXIMUM_FEE) throw new OrditSDKError("Error while calculating fees");
    return this.fee;
  }
  getInputAndOutputScriptTypes() {
    const { inputs: L } = this.psbt.data, V = this.psbt.txOutputs;
    if (L.length === 0) throw new OrditSDKError("PSBT must have at least one input");
    if (V.length === 0) throw new OrditSDKError("PSBT must have at least one output");
    return { inputTypes: L.map((J) => {
      const re = J.witnessUtxo && J.witnessUtxo.script ? J.witnessUtxo.script : null;
      if (!re) throw new OrditSDKError("Invalid script");
      return getScriptType(re, this.network).format;
    }), outputTypes: V.map((J) => getScriptType(J.script, this.network).format) };
  }
  calculateScriptWitnessSize() {
    var V;
    const { inputTypes: L } = this.getInputAndOutputScriptTypes();
    return L.includes("taproot") && ((V = this.witness) != null && V.length) ? this.witness.reduce((J, re) => J + re.byteLength, 0) : 0;
  }
  getBaseSize() {
    var oe, pe;
    const { inputTypes: L, outputTypes: V } = this.getInputAndOutputScriptTypes(), J = L.reduce((ce, Oe) => {
      const { input: rt, witness: ut } = getBaseSizeByType(Oe);
      return ce.input += rt, ce.witness += ut, ce;
    }, { input: 0, witness: 0 }), re = V.reduce((ce, Oe) => {
      const { output: rt } = getBaseSizeByType(Oe);
      return ce + rt;
    }, 0), ne = J.witness + ((oe = this.witness) != null && oe.length ? this.calculateScriptWitnessSize() : 0);
    let ie = 0;
    return (pe = this.witness) != null && pe.length ? ie = ne : ne > 0 && (ie = 2 + ne), { baseSize: J.input + TRANSACTION_HEADER_SIZE + re, witnessSize: ie };
  }
  calculateVirtualSize() {
    const { baseSize: L, witnessSize: V } = this.getBaseSize();
    return this.weight = 3 * L + (L + V), this.virtualSize = Math.ceil(this.weight / 4), this.virtualSize;
  }
}
function generateTaprootInput({ utxo: B, pubKey: L, network: V, sighashType: J, witness: re }) {
  const ne = toXOnly(BIP32.fromPublicKey(Buffer$D.from(L, "hex"), CHAIN_CODE, getNetwork(V)).publicKey);
  if (!B.scriptPubKey.hex) throw new Error("Unable to process p2tr input");
  return { type: "taproot", hash: B.txid, index: B.n, tapInternalKey: ne, witnessUtxo: { script: Buffer$D.from(B.scriptPubKey.hex, "hex"), value: B.sats }, witness: re, ...J ? { sighashType: J } : void 0 };
}
function generateSegwitInput({ utxo: B, sighashType: L }) {
  if (!B.scriptPubKey.hex) throw new Error("Unable to process Segwit input");
  return { type: "segwit", hash: B.txid, index: B.n, witnessUtxo: { script: Buffer$D.from(B.scriptPubKey.hex, "hex"), value: B.sats }, ...L ? { sighashType: L } : void 0 };
}
function generateP2SHP2WPKHInput({ utxo: B, pubKey: L, network: V, sighashType: J }) {
  const re = createPayment(Buffer$D.from(L, "hex"), "p2sh", V);
  if (!re || !re.output || !re.redeem) throw new Error("Unable to process P2SH input");
  return { type: "p2sh-p2wpkh", hash: B.txid, index: B.n, redeemScript: re.redeem.output, witnessUtxo: { script: Buffer$D.from(B.scriptPubKey.hex, "hex"), value: B.sats }, ...J ? { sighashType: J } : void 0 };
}
async function generateLegacyInput({ utxo: B, sighashType: L, network: V, pubKey: J, datasource: re }) {
  const { rawTx: ne } = await re.getTransaction({ txId: B.txid, hex: !0 });
  if (!ne) throw new Error("Unable to process legacy input");
  const ie = createPayment(Buffer$D.from(J, "hex"), "p2pkh", V);
  return { type: "legacy", hash: B.txid, index: B.n, nonWitnessUtxo: ne == null ? void 0 : ne.toBuffer(), witnessUtxo: { script: ie.output, value: B.sats }, ...L ? { sighashType: L } : void 0 };
}
async function processInput({ utxo: B, pubKey: L, network: V, sighashType: J, witness: re, datasource: ne }) {
  const ie = ne || new JsonRpcDatasource({ network: V });
  switch (B.scriptPubKey.type) {
    case "witness_v1_taproot":
      return generateTaprootInput({ utxo: B, pubKey: L, network: V, sighashType: J, witness: re });
    case "witness_v0_scripthash":
    case "witness_v0_keyhash":
      return generateSegwitInput({ utxo: B, sighashType: J });
    case "scripthash":
      return generateP2SHP2WPKHInput({ utxo: B, pubKey: L, network: V, sighashType: J });
    case "pubkeyhash":
      return generateLegacyInput({ utxo: B, sighashType: J, network: V, pubKey: L, datasource: ie });
    default:
      throw new Error("invalid script pub type");
  }
}
class PSBTBuilder extends FeeEstimator {
  constructor({ address: V, changeAddress: J, datasource: re, feeRate: ne, network: ie = "mainnet", publicKey: oe, outputs: pe, autoAdjustment: ce = !0, instantTradeMode: Oe = !1 }) {
    super({ feeRate: ne, network: ie });
    Ir(this, "address");
    Ir(this, "changeAddress");
    Ir(this, "changeAmount", 0);
    Ir(this, "datasource");
    Ir(this, "injectableInputs", []);
    Ir(this, "injectableOutputs", []);
    Ir(this, "inputAmount", 0);
    Ir(this, "inputs", []);
    Ir(this, "outputAmount", 0);
    Ir(this, "outputs", []);
    Ir(this, "psbt");
    Ir(this, "publicKey");
    Ir(this, "rbf", !0);
    Ir(this, "utxos", []);
    Ir(this, "usedUTXOs", []);
    Ir(this, "autoAdjustment");
    Ir(this, "instantTradeMode");
    Ir(this, "noMoreUTXOS", !1);
    this.address = V, this.changeAddress = J, this.datasource = re || new JsonRpcDatasource({ network: this.network }), this.outputs = pe, this.publicKey = oe, this.autoAdjustment = ce, this.instantTradeMode = Oe, this.psbt = new src$4.Psbt({ network: getNetwork(ie) });
  }
  get data() {
    return { fee: this.fee, virtualSize: this.virtualSize, weight: this.weight, changeAmount: this.changeAmount, inputAmount: this.inputAmount, outputAmount: this.outputAmount };
  }
  toPSBT() {
    return this.psbt;
  }
  toHex() {
    return this.psbt.toHex();
  }
  toBase64() {
    return this.psbt.toBase64();
  }
  setRBF(V) {
    this.rbf = V, this.addInputs();
  }
  get xKey() {
    return toXOnly(Buffer$D.from(this.publicKey, "hex")).toString("hex");
  }
  get inputsToSign() {
    const V = this.instantTradeMode && !this.autoAdjustment;
    return this.psbt.txInputs.reduce((J, re, ne) => ((!this.instantTradeMode || this.instantTradeMode && ne !== INSTANT_BUY_SELLER_INPUT_INDEX) && (J.signingIndexes = J.signingIndexes.concat(ne)), V && (J.sigHash = src$4.Transaction.SIGHASH_SINGLE | src$4.Transaction.SIGHASH_ANYONECANPAY), J), { address: this.address, signingIndexes: [] });
  }
  initPSBT() {
    this.psbt = new src$4.Psbt({ network: getNetwork(this.network) }), this.psbt.setMaximumFeeRate(this.feeRate);
  }
  getInputSequence() {
    return this.rbf ? 4294967293 : 4294967295;
  }
  injectInput(V) {
    this.psbt.data.globalMap.unsignedTx.tx.ins[V.injectionIndex] = V.txInput, this.psbt.data.inputs[V.injectionIndex] = V.standardInput;
  }
  injectOutput(V) {
    let J = V.injectionIndex;
    do {
      if (!this.psbt.data.globalMap.unsignedTx.tx.outs[J]) {
        this.psbt.data.globalMap.unsignedTx.tx.outs[J] = V.txOutput, this.psbt.data.outputs[J] = V.standardOutput;
        break;
      }
      J += 1;
    } while (J);
  }
  addInputs() {
    const V = this.injectableInputs.map((re) => re.injectionIndex), J = [];
    this.inputs.forEach((re, ne) => {
      const ie = V.includes(ne);
      if (ie) {
        const oe = this.injectableInputs.find((pe) => pe.injectionIndex === ne);
        this.injectInput(oe), J.push(oe.injectionIndex);
      }
      this.psbt.txInputs.map((oe) => generateTxUniqueIdentifier(reverseBuffer(oe.hash).toString("hex"), oe.index)).includes(generateTxUniqueIdentifier(re.hash, re.index)) || (this.psbt.addInput(re), this.psbt.setInputSequence(ie ? ne + 1 : ne, this.getInputSequence()));
    }), this.injectableInputs.forEach((re) => {
      J.includes(re.injectionIndex) || (this.injectInput(re), J.push(re.injectionIndex));
    });
  }
  addOutputs() {
    const V = this.injectableOutputs.map((re) => re.injectionIndex), J = [];
    this.outputs.forEach((re, ne) => {
      if (V.includes(ne)) {
        const ie = this.injectableOutputs.find((oe) => oe.injectionIndex === ne);
        this.injectOutput(ie), J.push(ie.injectionIndex);
      }
      this.psbt.addOutput({ address: re.address, value: re.value });
    }), this.injectableOutputs.forEach((re) => {
      J.includes(re.injectionIndex) || (this.injectOutput(re), J.push(re.injectionIndex));
    }), this.changeAmount >= MINIMUM_AMOUNT_IN_SATS && this.psbt.addOutput({ address: this.changeAddress || this.address, value: this.changeAmount });
  }
  calculateOutputAmount() {
    if (this.outputAmount = Math.floor(this.outputs.reduce((V, J) => V + J.value, 0) + this.injectableOutputs.reduce((V, J) => V + J.sats, 0)), this.outputAmount < MINIMUM_AMOUNT_IN_SATS) throw new Error(`Output amount too low. Minimum output amount needs to be ${MINIMUM_AMOUNT_IN_SATS} sats`);
  }
  async recursivelyCalculateChangeAmount() {
    if (this.autoAdjustment && (this.changeAmount = Math.floor(this.inputAmount - this.outputAmount - this.fee), this.changeAmount < 0 && (await this.prepare(), this.noMoreUTXOS))) throw new Error(`Insufficient balance. Decrease the output amount by ${-1 * this.changeAmount} sats`);
  }
  getRetrievedUTXOsValue() {
    return this.utxos.reduce((V, J) => V + J.sats, 0);
  }
  getReservedUTXOs() {
    return this.utxos.map((V) => generateTxUniqueIdentifier(V.txid, V.n));
  }
  getUTXOAmountToRequestFromChangeAmount() {
    return this.changeAmount < 0 ? Math.abs(this.changeAmount) : this.outputAmount - this.getRetrievedUTXOsValue();
  }
  async retrieveUTXOs(V, J) {
    if (!this.autoAdjustment && !V) return;
    const re = J && J > 0 ? J : this.getUTXOAmountToRequestFromChangeAmount();
    if (J && this.getRetrievedUTXOsValue() >= J || re <= 0) return;
    const ne = await this.datasource.getSpendables({ address: V || this.address, value: convertSatoshisToBTC(re), filter: this.getReservedUTXOs() });
    this.noMoreUTXOS = ne.length === 0, this.utxos.push(...ne);
  }
  async retrieveSelectedUTXOs(V, J) {
    await this.retrieveUTXOs(V, J);
    const re = this.utxos.find((ne) => ne.sats >= J);
    return this.utxos = re ? [re] : [], this.utxos;
  }
  async prepareInputs() {
    if (!this.autoAdjustment) return;
    const V = [];
    this.utxos.forEach((re) => {
      if (this.usedUTXOs.includes(generateTxUniqueIdentifier(re.txid, re.n))) return;
      this.inputAmount += re.sats;
      const ne = processInput({ utxo: re, pubKey: this.publicKey, network: this.network, datasource: this.datasource });
      V.push(ne);
    });
    const J = await Promise.all(V);
    this.inputAmount += this.injectableInputs.reduce((re, ne) => re + ne.sats, 0), J.forEach((re) => {
      const ne = generateTxUniqueIdentifier(re.hash, re.index);
      this.usedUTXOs.includes(ne) || this.usedUTXOs.push(ne);
    }), this.inputs = this.inputs.concat(J);
  }
  async prepare() {
    this.calculateOutputAmount(), await this.retrieveUTXOs(), await this.prepareInputs(), await this.recursivelyCalculateChangeAmount(), this.process(), await this.recursivelyCalculateChangeAmount(), this.calculateOutputAmount(), this.process();
  }
  process() {
    return this.initPSBT(), this.addInputs(), this.addOutputs(), this.calculateNetworkFee(), this;
  }
}
function useSend() {
  const { wallet: B, network: L, address: V, publicKey: J } = useWallie(), [re, ne] = useState(null), [ie, oe] = useState(!1);
  return { send: useCallback(async (pe, ce, Oe, rt = !0) => {
    oe(!0);
    try {
      if (ne(null), !(V && V.payments && J && J.payments && B)) throw new Error("No wallet is connected");
      const ut = new PSBTBuilder({ address: V.payments, feeRate: Oe, network: L, publicKey: J.payments, outputs: [{ address: pe, value: ce }] });
      await ut.prepare();
      const dt = await signPsbt({ address: V.payments, wallet: B, network: L, psbt: ut.toPSBT() });
      if (rt) {
        const ht = new JsonRpcDatasource({ network: L }), bt = await ht.relay({ hex: dt.hex });
        return oe(!1), bt;
      }
      return oe(!1), dt.hex;
    } catch (ut) {
      return ne(ut.message), oe(!1), null;
    }
  }, [V, L, J, B]), error: re, loading: ie };
}
async function leatherRequest(B, L) {
  if (typeof window > "u" || !window.LeatherProvider) throw new Error("LeatherProvider not found");
  try {
    return (await window.LeatherProvider.request(B, L)).result;
  } catch (V) {
    const J = V, { message: re } = J.error;
    throw J.error.code === 4001 ? new Error(re) : new Error(`Leather error: ${re}`);
  }
}
async function walletProvider() {
  const { get: B } = getWallets(), L = B().find((V) => {
    var J, re;
    return V.name === "Magic Eden" && ((re = (J = V.features["sats-connect:"]) == null ? void 0 : J.provider) == null ? void 0 : re.isMagicEden) === !0;
  });
  if (!L) throw new Error("Magic Eden wallet not found");
  return L.features["sats-connect:"].provider;
}
function useSendBtc() {
  const { wallet: B, network: L, address: V, publicKey: J } = useWallie(), [re, ne] = useState(null), [ie, oe] = useState(!1);
  return { send: useCallback(async (pe, ce) => {
    oe(!0);
    try {
      if (ne(null), !(V && V.payments && J && J.payments && B)) throw new Error("No wallet is connected");
      if (B === "magiceden" || B === "xverse") {
        const Oe = B === "magiceden" ? await walletProvider() : void 0;
        let rt = null;
        return rt = await new Promise((ut, dt) => {
          sendBtcTransaction({ payload: { network: { type: L === "mainnet" ? BitcoinNetworkType.Mainnet : BitcoinNetworkType.Testnet }, message: "Sign Transaction", recipients: [{ address: pe, amountSats: BigInt(ce) }], senderAddress: V.payments }, getProvider: async () => Oe, onFinish: (ht) => {
            ut(ht);
          }, onCancel: () => {
            dt(new Error("Transaction canceled"));
          } });
        }), oe(!1), rt;
      }
      if (B === "unisat") {
        let Oe = "";
        return Oe = await window.unisat.sendBitcoin(pe, ce, {}), oe(!1), Oe;
      }
      if (B === "leather") {
        let Oe = "";
        return Oe = (await leatherRequest("sendTransfer", { recipients: [{ address: pe, amount: ce }], network: L })).txid, oe(!1), Oe;
      }
      if (B === "okx") {
        let Oe = "";
        if (L === "mainnet") return Oe = await window.okxwallet.bitcoin.sendBitcoin(pe, ce, {}), oe(!1), Oe;
        if (L === "testnet") return Oe = await window.okxwallet.bitcoinTestnet.sendBitcoin(pe, ce, {}), oe(!1), Oe;
      }
      return oe(!1), null;
    } catch (Oe) {
      return ne(Oe.message), oe(!1), null;
    }
  }, [V, L, J, B]), error: re, loading: ie };
}
function useSendV2() {
  const { wallet: B, network: L, address: V, publicKey: J } = useWallie(), [re, ne] = useState(!1);
  return { send: useCallback(async ({ toAddress: ie, satoshis: oe, feeRate: pe, relay: ce = !0, rbf: Oe = !1 }) => {
    ne(!0);
    try {
      if (!(V && V.payments && J && J.payments && B)) throw new Error("No wallet is connected");
      const rt = new PSBTBuilder({ address: V.payments, feeRate: pe, network: L, publicKey: J.payments, outputs: [{ address: ie, value: oe }] });
      rt.setRBF(Oe), await rt.prepare();
      const ut = await signPsbt({ address: V.payments, wallet: B, network: L, psbt: rt.toPSBT() });
      if (ce) {
        const dt = new JsonRpcDatasource({ network: L }), ht = await dt.relay({ hex: ut.hex });
        return ne(!1), { txId: ht };
      }
      return ne(!1), { signedPsbtHex: ut.hex };
    } catch (rt) {
      return ne(!1), { error: rt.message };
    }
  }, [V, L, J, B]), isLoading: re };
}
function useSign() {
  const { network: B, publicKey: L, format: V, wallet: J } = useWallie(), [re, ne] = useState(null), [ie, oe] = useState(!1);
  return { sign: useCallback(async (ce, Oe, rt) => {
    oe(!0);
    try {
      if (ne(null), !V || !L || !J) throw new Error("No wallet is connected");
      const ut = src$4.Psbt.fromBase64(Oe), dt = await signPsbt({ address: ce, wallet: J, network: B, psbt: ut, options: rt });
      return oe(!1), dt;
    } catch (ut) {
      throw ne(ut.message), oe(!1), ut;
    }
  }, [V, B, L, J]), error: re, loading: ie };
}
function leatherPaymentTypeFromFormat(B) {
  if (B === "segwit") return LeatherAddressType.P2WPKH;
  if (B === "taproot") return LeatherAddressType.P2TR;
  throw new Error("Leather payment address format is not supported");
}
async function signMessage({ message: B, wallet: L, address: V, network: J, format: re }) {
  if (L === Wallet.MAGICEDEN) {
    const { base64: ne } = await signMessage$4(B, V, J);
    return ne;
  }
  if (L === Wallet.UNISAT) {
    const { base64: ne } = await signMessage$3(B, "bip322-simple");
    return ne;
  }
  if (L === Wallet.XVERSE) {
    const { base64: ne } = await signMessage$2(B, V, J);
    return ne;
  }
  if (L === Wallet.LEATHER) {
    const ne = leatherPaymentTypeFromFormat(re), { base64: ie } = await signMessage$6(B, { paymentType: ne, network: J });
    return ie;
  }
  if (L === Wallet.OKX) {
    const { base64: ne } = await signMessage$1(B, "bip322-simple", J);
    return ne;
  }
  throw new Error("Invalid wallet selected");
}
function useSignMessage() {
  const { network: B, wallet: L, publicKey: V, format: J, address: re } = useWallie(), [ne, ie] = useState(null), [oe, pe] = useState(!1);
  return { signMsg: useCallback(async (Oe, rt) => {
    pe(!0);
    try {
      if (ie(null), !J || !V || !L) throw new Error("No wallet is connected");
      if (re.ordinals !== Oe && re.payments !== Oe) throw new Error("Address supplied is not connected address");
      const ut = await signMessage({ address: Oe, wallet: L, message: rt, network: B, format: re.ordinals === Oe ? J.ordinals : J.payments });
      return pe(!1), ut;
    } catch (ut) {
      throw ie(ut.message), pe(!1), ut;
    }
  }, [J, B, V, L, re]), error: ne, isLoading: oe };
}
export {
  Network,
  OrdConnectKit,
  SelectWalletModal,
  Wallet,
  WallieProvider,
  useBalance,
  useSend,
  useSendBtc,
  useSendV2,
  useSign,
  useSignMessage,
  useWallie
};
