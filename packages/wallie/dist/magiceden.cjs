"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const d=require("@wallet-standard/core"),l=require("./BrowserWalletNetworkMismatchError-CDpdIBHK.cjs"),r=require("./index-C0i2q9jJ.cjs"),c=require("./index-BlzoOC62.cjs");async function a(){const{get:e}=d.getWallets(),n=e().find(t=>{var s,i;return t.name==="Magic Eden"&&((i=(s=t.features["sats-connect:"])==null?void 0:s.provider)==null?void 0:i.isMagicEden)===!0});if(!n)throw new r.BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");return n.features["sats-connect:"].provider}async function o(){if(typeof window>"u")throw new r.OrditSDKError("Cannot call this function outside a browser");try{const e=await a();return e.isMagicEden!==void 0&&e.isMagicEden===!0}catch(e){if(e instanceof r.BrowserWalletNotInstalledError)return!1;throw e}}async function g(e="mainnet"){if(!o())throw new r.BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");if(e!=="mainnet")throw new l.BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");return c.satsConnectWalletGetAddresses(a,e)}async function u(e,{finalize:n=!0,extractTx:t=!0,network:s,inputsToSign:i}={network:"mainnet",inputsToSign:[]}){if(!o())throw new r.BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");if(s!=="mainnet")throw new l.BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");return c.satsConnectWalletSignPsbt(a,e,{finalize:n,extractTx:t,network:s,inputsToSign:i})}async function w(e,n,t="mainnet"){if(!o())throw new r.BrowserWalletNotInstalledError("Magic Eden Wallet not installed.");if(t!=="mainnet")throw new l.BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");return c.satsConnectWalletSignMessage(a,e,n,t)}exports.getAddresses=g;exports.getMagicEdenWalletProvider=a;exports.isInstalled=o;exports.signMessage=w;exports.signPsbt=u;
